$light: map-get($colors-scheme-light, "light");
$dark: map-get($colors-scheme-light, "dark");

.c-button {
	@include flex(row, wrap, center, center);

	width: fit-content;
	cursor: pointer;
	transition: $default-transition;
	line-height: 1;
	font-family: $font-family;
	word-break: break-word;
	font-size: inherit;

	&-group {
		@include flex(row, wrap, flex-start, center);

		gap: rem(8);
	}

	&__ico {
		> * {
			@include objectFit(contain);

			font-size: 150%;
		}
	}

	&.c-button--is-only-ico {
		padding: rem(5.6);
		font-size: rem(14);
		aspect-ratio: 1;
		width: rem(28);
		height: rem(28);

		.c-button {
			&__ico {
				@include flex(row, wrap, center, center);

				> * {
					font-size: 100%;
				}
			}
		}
	}

	&--style {
		&-default {
			@extend %fw-700;
			@extend %br--6;

			padding: rem(10) rem(16);
			gap: rem(8);
		}

		&-large {
			@extend .c-button--style-default;

			max-width: rem(250);
			width: 100%;
		}

		&-underline {
			@extend %fw-400;

			position: relative;
			gap: rem(6);
			padding-bottom: rem(3);
			height: min-content;

			.c-button__ico {
				> * {
					font-size: 100%;
				}
			}

			&:after {
				content: "";
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100%;
				height: 1px;
				transition: $default-transition;
			}

			&:hover {
				&:after {
					transform: scaleX(.5);
				}
			}
		}
	}

	@each $name, $color in $colors-scheme-light {
		$v-color: "light";
		$v-dark: "dark";

		@if type-of($color) == 'map' {
			@if map-has-key($color, 500) {
				$v-color: #{$name}-500;
				$c-color: map-get($color, 500);

				$contrast: contrast-color($c-color, $dark, $light);

				&--#{$name} {
					&.c-button {
						&--style {
							&-default {
								background-color: color($v-color);
								border: 1px solid color($v-color);

								@if #{$contrast} == "#000000" {
									color: color(dark);
								} @else {
									color: color(light);
								}

								&:hover {
									background: transparent;
									color: color(#{$v-color});
								}
							}

							&-underline {
								color: color($v-color);
								border: none;
								background-color: transparent;

								&:after {
									background-color: color($v-color);
								}
							}
						}
					}
				}

				&--outline-#{$name} {
					background-color: transparent;
					border: 1px solid color($v-color);
					color: color($v-color);

					&:hover {
						background: color($v-color);

						@if #{$contrast} == "#000000" {
							color: color(dark);
						} @else {
							color: color(light);
						}
					}
				}
			}
		} @else {
			&--#{$name} {
				&.c-button {
					&--style {
						&-underline {
							&:after {
								background-color: color($name);
							}
						}
					}
				}
			}
		}
	}
}

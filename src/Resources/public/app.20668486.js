/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$":
/*!****************************************************************************************************************!*\
  !*** ./assets/controllers/ sync ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \.[jt]sx?$ ***!
  \****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./alert_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/alert_controller.js",
	"./customfile_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/customfile_controller.js",
	"./filters_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/filters_controller.js",
	"./hello_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js",
	"./quill_controller.ts": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/quill_controller.ts",
	"./sortable_controller.js": "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/sortable_controller.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$";

/***/ }),

/***/ "./assets/react/controllers sync recursive \\.(j%7Ct)sx?$":
/*!******************************************************!*\
  !*** ./assets/react/controllers/ sync \.(j%7Ct)sx?$ ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./Hello.jsx": "./assets/react/controllers/Hello.jsx",
	"./Widget/Instance/Create.jsx": "./assets/react/controllers/Widget/Instance/Create.jsx"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./assets/react/controllers sync recursive \\.(j%7Ct)sx?$";

/***/ }),

/***/ "./node_modules/@formatjs/fast-memoize/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@formatjs/fast-memoize/lib/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   memoize: () => (/* binding */ memoize),
/* harmony export */   strategies: () => (/* binding */ strategies)
/* harmony export */ });
//
// Main
//
function memoize(fn, options) {
    var cache = options && options.cache ? options.cache : cacheDefault;
    var serializer = options && options.serializer ? options.serializer : serializerDefault;
    var strategy = options && options.strategy ? options.strategy : strategyDefault;
    return strategy(fn, {
        cache: cache,
        serializer: serializer,
    });
}
//
// Strategy
//
function isPrimitive(value) {
    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === "string" 'unsafe' primitive for our needs
}
function monadic(fn, cache, serializer, arg) {
    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.call(this, arg);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function variadic(fn, cache, serializer) {
    var args = Array.prototype.slice.call(arguments, 3);
    var cacheKey = serializer(args);
    var computedValue = cache.get(cacheKey);
    if (typeof computedValue === 'undefined') {
        computedValue = fn.apply(this, args);
        cache.set(cacheKey, computedValue);
    }
    return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
    return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
    var strategy = fn.length === 1 ? monadic : variadic;
    return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
    return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
    return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
//
// Serializer
//
var serializerDefault = function () {
    return JSON.stringify(arguments);
};
//
// Cache
//
function ObjectWithoutPrototypeCache() {
    this.cache = Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function (key) {
    return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function (key, value) {
    this.cache[key] = value;
};
var cacheDefault = {
    create: function create() {
        // @ts-ignore
        return new ObjectWithoutPrototypeCache();
    },
};
var strategies = {
    variadic: strategyVariadic,
    monadic: strategyMonadic,
};


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getBestPattern: () => (/* binding */ getBestPattern)
/* harmony export */ });
/* harmony import */ var _time_data_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time-data.generated */ "./node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js");

/**
 * Returns the best matching date time pattern if a date time skeleton
 * pattern is provided with a locale. Follows the Unicode specification:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#table-mapping-requested-time-skeletons-to-patterns
 * @param skeleton date time skeleton pattern that possibly includes j, J or C
 * @param locale
 */
function getBestPattern(skeleton, locale) {
    var skeletonCopy = '';
    for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
        var patternChar = skeleton.charAt(patternPos);
        if (patternChar === 'j') {
            var extraLength = 0;
            while (patternPos + 1 < skeleton.length &&
                skeleton.charAt(patternPos + 1) === patternChar) {
                extraLength++;
                patternPos++;
            }
            var hourLen = 1 + (extraLength & 1);
            var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
            var dayPeriodChar = 'a';
            var hourChar = getDefaultHourSymbolFromLocale(locale);
            if (hourChar == 'H' || hourChar == 'k') {
                dayPeriodLen = 0;
            }
            while (dayPeriodLen-- > 0) {
                skeletonCopy += dayPeriodChar;
            }
            while (hourLen-- > 0) {
                skeletonCopy = hourChar + skeletonCopy;
            }
        }
        else if (patternChar === 'J') {
            skeletonCopy += 'H';
        }
        else {
            skeletonCopy += patternChar;
        }
    }
    return skeletonCopy;
}
/**
 * Maps the [hour cycle type](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle)
 * of the given `locale` to the corresponding time pattern.
 * @param locale
 */
function getDefaultHourSymbolFromLocale(locale) {
    var hourCycle = locale.hourCycle;
    if (hourCycle === undefined &&
        // @ts-ignore hourCycle(s) is not identified yet
        locale.hourCycles &&
        // @ts-ignore
        locale.hourCycles.length) {
        // @ts-ignore
        hourCycle = locale.hourCycles[0];
    }
    if (hourCycle) {
        switch (hourCycle) {
            case 'h24':
                return 'k';
            case 'h23':
                return 'H';
            case 'h12':
                return 'h';
            case 'h11':
                return 'K';
            default:
                throw new Error('Invalid hourCycle');
        }
    }
    // TODO: Once hourCycle is fully supported remove the following with data generation
    var languageTag = locale.language;
    var regionTag;
    if (languageTag !== 'root') {
        regionTag = locale.maximize().region;
    }
    var hourCycles = _time_data_generated__WEBPACK_IMPORTED_MODULE_0__.timeData[regionTag || ''] ||
        _time_data_generated__WEBPACK_IMPORTED_MODULE_0__.timeData[languageTag || ''] ||
        _time_data_generated__WEBPACK_IMPORTED_MODULE_0__.timeData["".concat(languageTag, "-001")] ||
        _time_data_generated__WEBPACK_IMPORTED_MODULE_0__.timeData['001'];
    return hourCycles[0];
}


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/error.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorKind: () => (/* binding */ ErrorKind)
/* harmony export */ });
var ErrorKind;
(function (ErrorKind) {
    /** Argument is unclosed (e.g. `{0`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
    /** Argument is empty (e.g. `{}`). */
    ErrorKind[ErrorKind["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
    /** Argument is malformed (e.g. `{foo!}``) */
    ErrorKind[ErrorKind["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
    /** Expect an argument type (e.g. `{foo,}`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
    /** Unsupported argument type (e.g. `{foo,foo}`) */
    ErrorKind[ErrorKind["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
    /** Expect an argument style (e.g. `{foo, number, }`) */
    ErrorKind[ErrorKind["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
    /** The number skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
    /** The date time skeleton is invalid. */
    ErrorKind[ErrorKind["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */
    ErrorKind[ErrorKind["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */
    ErrorKind[ErrorKind["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */
    ErrorKind[ErrorKind["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
    /** Missing select argument options (e.g. `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */
    ErrorKind[ErrorKind["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
    /**
     * Expecting a message fragment after the `plural` or `selectordinal` selector
     * (e.g. `{foo, plural, one}`)
     */
    ErrorKind[ErrorKind["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */
    ErrorKind[ErrorKind["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
    /**
     * Duplicate selectors in `plural` or `selectordinal` argument.
     * (e.g. {foo, plural, one {#} one {#}})
     */
    ErrorKind[ErrorKind["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
    /** Duplicate selectors in `select` argument.
     * (e.g. {foo, select, apple {apple} apple {apple}})
     */
    ErrorKind[ErrorKind["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
    /** Plural or select argument option must have `other` clause. */
    ErrorKind[ErrorKind["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */
    ErrorKind[ErrorKind["INVALID_TAG"] = 23] = "INVALID_TAG";
    /** The tag name is invalid. (e.g. `<123>foo</123>`) */
    ErrorKind[ErrorKind["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */
    ErrorKind[ErrorKind["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */
    ErrorKind[ErrorKind["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SKELETON_TYPE: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.SKELETON_TYPE),
/* harmony export */   TYPE: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.TYPE),
/* harmony export */   _Parser: () => (/* binding */ _Parser),
/* harmony export */   createLiteralElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.createLiteralElement),
/* harmony export */   createNumberElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.createNumberElement),
/* harmony export */   isArgumentElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isArgumentElement),
/* harmony export */   isDateElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isDateElement),
/* harmony export */   isDateTimeSkeleton: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isDateTimeSkeleton),
/* harmony export */   isLiteralElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isLiteralElement),
/* harmony export */   isNumberElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isNumberElement),
/* harmony export */   isNumberSkeleton: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isNumberSkeleton),
/* harmony export */   isPluralElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isPluralElement),
/* harmony export */   isPoundElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isPoundElement),
/* harmony export */   isSelectElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isSelectElement),
/* harmony export */   isTagElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isTagElement),
/* harmony export */   isTimeElement: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_2__.isTimeElement),
/* harmony export */   parse: () => (/* binding */ parse)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "./node_modules/@formatjs/icu-messageformat-parser/lib/error.js");
/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parser */ "./node_modules/@formatjs/icu-messageformat-parser/lib/parser.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ "./node_modules/@formatjs/icu-messageformat-parser/lib/types.js");




function pruneLocation(els) {
    els.forEach(function (el) {
        delete el.location;
        if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isSelectElement)(el) || (0,_types__WEBPACK_IMPORTED_MODULE_2__.isPluralElement)(el)) {
            for (var k in el.options) {
                delete el.options[k].location;
                pruneLocation(el.options[k].value);
            }
        }
        else if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isNumberElement)(el) && (0,_types__WEBPACK_IMPORTED_MODULE_2__.isNumberSkeleton)(el.style)) {
            delete el.style.location;
        }
        else if (((0,_types__WEBPACK_IMPORTED_MODULE_2__.isDateElement)(el) || (0,_types__WEBPACK_IMPORTED_MODULE_2__.isTimeElement)(el)) &&
            (0,_types__WEBPACK_IMPORTED_MODULE_2__.isDateTimeSkeleton)(el.style)) {
            delete el.style.location;
        }
        else if ((0,_types__WEBPACK_IMPORTED_MODULE_2__.isTagElement)(el)) {
            pruneLocation(el.children);
        }
    });
}
function parse(message, opts) {
    if (opts === void 0) { opts = {}; }
    opts = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
    var result = new _parser__WEBPACK_IMPORTED_MODULE_1__.Parser(message, opts).parse();
    if (result.err) {
        var error = SyntaxError(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind[result.err.kind]);
        // @ts-expect-error Assign to error object
        error.location = result.err.location;
        // @ts-expect-error Assign to error object
        error.originalMessage = result.err.message;
        throw error;
    }
    if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
        pruneLocation(result.val);
    }
    return result.val;
}

// only for testing
var _Parser = _parser__WEBPACK_IMPORTED_MODULE_1__.Parser;


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/parser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/parser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Parser: () => (/* binding */ Parser)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ "./node_modules/@formatjs/icu-messageformat-parser/lib/error.js");
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types */ "./node_modules/@formatjs/icu-messageformat-parser/lib/types.js");
/* harmony import */ var _regex_generated__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./regex.generated */ "./node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js");
/* harmony import */ var _formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @formatjs/icu-skeleton-parser */ "./node_modules/@formatjs/icu-skeleton-parser/lib/index.js");
/* harmony import */ var _date_time_pattern_generator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date-time-pattern-generator */ "./node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js");
var _a;






var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(_regex_generated__WEBPACK_IMPORTED_MODULE_2__.SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(_regex_generated__WEBPACK_IMPORTED_MODULE_2__.SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
    return { start: start, end: end };
}
// #region Ponyfills
// Consolidate these variables up top for easier toggling during debugging
var hasNativeStartsWith = !!String.prototype.startsWith && '_a'.startsWith('a', 1);
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger
    ? Number.isSafeInteger
    : function (n) {
        return (typeof n === 'number' &&
            isFinite(n) &&
            Math.floor(n) === n &&
            Math.abs(n) <= 0x1fffffffffffff);
    };
// IE11 does not support y and u.
var REGEX_SUPPORTS_U_AND_Y = true;
try {
    var re = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    /**
     * legacy Edge or Xbox One browser
     * Unicode flag support: supported
     * Pattern_Syntax support: not supported
     * See https://github.com/formatjs/formatjs/issues/2822
     */
    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';
}
catch (_) {
    REGEX_SUPPORTS_U_AND_Y = false;
}
var startsWith = hasNativeStartsWith
    ? // Native
        function startsWith(s, search, position) {
            return s.startsWith(search, position);
        }
    : // For IE11
        function startsWith(s, search, position) {
            return s.slice(position, position + search.length) === search;
        };
var fromCodePoint = hasNativeFromCodePoint
    ? String.fromCodePoint
    : // IE11
        function fromCodePoint() {
            var codePoints = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                codePoints[_i] = arguments[_i];
            }
            var elements = '';
            var length = codePoints.length;
            var i = 0;
            var code;
            while (length > i) {
                code = codePoints[i++];
                if (code > 0x10ffff)
                    throw RangeError(code + ' is not a valid code point');
                elements +=
                    code < 0x10000
                        ? String.fromCharCode(code)
                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);
            }
            return elements;
        };
var fromEntries = 
// native
hasNativeFromEntries
    ? Object.fromEntries
    : // Ponyfill
        function fromEntries(entries) {
            var obj = {};
            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                var _a = entries_1[_i], k = _a[0], v = _a[1];
                obj[k] = v;
            }
            return obj;
        };
var codePointAt = hasNativeCodePointAt
    ? // Native
        function codePointAt(s, index) {
            return s.codePointAt(index);
        }
    : // IE 11
        function codePointAt(s, index) {
            var size = s.length;
            if (index < 0 || index >= size) {
                return undefined;
            }
            var first = s.charCodeAt(index);
            var second;
            return first < 0xd800 ||
                first > 0xdbff ||
                index + 1 === size ||
                (second = s.charCodeAt(index + 1)) < 0xdc00 ||
                second > 0xdfff
                ? first
                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;
        };
var trimStart = hasTrimStart
    ? // Native
        function trimStart(s) {
            return s.trimStart();
        }
    : // Ponyfill
        function trimStart(s) {
            return s.replace(SPACE_SEPARATOR_START_REGEX, '');
        };
var trimEnd = hasTrimEnd
    ? // Native
        function trimEnd(s) {
            return s.trimEnd();
        }
    : // Ponyfill
        function trimEnd(s) {
            return s.replace(SPACE_SEPARATOR_END_REGEX, '');
        };
// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.
function RE(s, flag) {
    return new RegExp(s, flag);
}
// #endregion
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
    // Native
    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\p{White_Space}\\p{Pattern_Syntax}]*)', 'yu');
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var _a;
        IDENTIFIER_PREFIX_RE_1.lastIndex = index;
        var match = IDENTIFIER_PREFIX_RE_1.exec(s);
        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';
    };
}
else {
    // IE11
    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {
        var match = [];
        while (true) {
            var c = codePointAt(s, index);
            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {
                break;
            }
            match.push(c);
            index += c >= 0x10000 ? 2 : 1;
        }
        return fromCodePoint.apply(void 0, match);
    };
}
var Parser = /** @class */ (function () {
    function Parser(message, options) {
        if (options === void 0) { options = {}; }
        this.message = message;
        this.position = { offset: 0, line: 1, column: 1 };
        this.ignoreTag = !!options.ignoreTag;
        this.locale = options.locale;
        this.requiresOtherClause = !!options.requiresOtherClause;
        this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser.prototype.parse = function () {
        if (this.offset() !== 0) {
            throw Error('parser can only be used once');
        }
        return this.parseMessage(0, '', false);
    };
    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {
        var elements = [];
        while (!this.isEOF()) {
            var char = this.char();
            if (char === 123 /* `{` */) {
                var result = this.parseArgument(nestingLevel, expectingCloseTag);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else if (char === 125 /* `}` */ && nestingLevel > 0) {
                break;
            }
            else if (char === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {
                var position = this.clonePosition();
                this.bump();
                elements.push({
                    type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.pound,
                    location: createLocation(position, this.clonePosition()),
                });
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                this.peek() === 47 // char code for '/'
            ) {
                if (expectingCloseTag) {
                    break;
                }
                else {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
                }
            }
            else if (char === 60 /* `<` */ &&
                !this.ignoreTag &&
                _isAlpha(this.peek() || 0)) {
                var result = this.parseTag(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
            else {
                var result = this.parseLiteral(nestingLevel, parentArgType);
                if (result.err) {
                    return result;
                }
                elements.push(result.val);
            }
        }
        return { val: elements, err: null };
    };
    /**
     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the
     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters
     * are accepted:
     *
     * ```
     * tag ::= "<" tagName (whitespace)* "/>" | "<" tagName (whitespace)* ">" message "</" tagName (whitespace)* ">"
     * tagName ::= [a-z] (PENChar)*
     * PENChar ::=
     *     "-" | "." | [0-9] | "_" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |
     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |
     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
     * ```
     *
     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name
     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do
     * since other tag-based engines like React allow it
     */
    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {
        var startPosition = this.clonePosition();
        this.bump(); // `<`
        var tagName = this.parseTagName();
        this.bumpSpace();
        if (this.bumpIf('/>')) {
            // Self closing tag
            return {
                val: {
                    type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.literal,
                    value: "<".concat(tagName, "/>"),
                    location: createLocation(startPosition, this.clonePosition()),
                },
                err: null,
            };
        }
        else if (this.bumpIf('>')) {
            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
            if (childrenResult.err) {
                return childrenResult;
            }
            var children = childrenResult.val;
            // Expecting a close tag
            var endTagStartPosition = this.clonePosition();
            if (this.bumpIf('</')) {
                if (this.isEOF() || !_isAlpha(this.char())) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                var closingTagNameStartPosition = this.clonePosition();
                var closingTagName = this.parseTagName();
                if (tagName !== closingTagName) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
                }
                this.bumpSpace();
                if (!this.bumpIf('>')) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
                }
                return {
                    val: {
                        type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.tag,
                        value: tagName,
                        children: children,
                        location: createLocation(startPosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            else {
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
            }
        }
        else {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
        }
    };
    /**
     * This method assumes that the caller has peeked ahead for the first tag character.
     */
    Parser.prototype.parseTagName = function () {
        var startOffset = this.offset();
        this.bump(); // the first tag name character
        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
            this.bump();
        }
        return this.message.slice(startOffset, this.offset());
    };
    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {
        var start = this.clonePosition();
        var value = '';
        while (true) {
            var parseQuoteResult = this.tryParseQuote(parentArgType);
            if (parseQuoteResult) {
                value += parseQuoteResult;
                continue;
            }
            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
            if (parseUnquotedResult) {
                value += parseUnquotedResult;
                continue;
            }
            var parseLeftAngleResult = this.tryParseLeftAngleBracket();
            if (parseLeftAngleResult) {
                value += parseLeftAngleResult;
                continue;
            }
            break;
        }
        var location = createLocation(start, this.clonePosition());
        return {
            val: { type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.literal, value: value, location: location },
            err: null,
        };
    };
    Parser.prototype.tryParseLeftAngleBracket = function () {
        if (!this.isEOF() &&
            this.char() === 60 /* `<` */ &&
            (this.ignoreTag ||
                // If at the opening tag or closing tag position, bail.
                !_isAlphaOrSlash(this.peek() || 0))) {
            this.bump(); // `<`
            return '<';
        }
        return null;
    };
    /**
     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes
     * a character that requires quoting (that is, "only where needed"), and works the same in
     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.
     */
    Parser.prototype.tryParseQuote = function (parentArgType) {
        if (this.isEOF() || this.char() !== 39 /* `'` */) {
            return null;
        }
        // Parse escaped char following the apostrophe, or early return if there is no escaped char.
        // Check if is valid escaped character
        switch (this.peek()) {
            case 39 /* `'` */:
                // double quote, should return as a single quote.
                this.bump();
                this.bump();
                return "'";
            // '{', '<', '>', '}'
            case 123:
            case 60:
            case 62:
            case 125:
                break;
            case 35: // '#'
                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {
                    break;
                }
                return null;
            default:
                return null;
        }
        this.bump(); // apostrophe
        var codePoints = [this.char()]; // escaped char
        this.bump();
        // read chars until the optional closing apostrophe is found
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch === 39 /* `'` */) {
                if (this.peek() === 39 /* `'` */) {
                    codePoints.push(39);
                    // Bump one more time because we need to skip 2 characters.
                    this.bump();
                }
                else {
                    // Optional closing apostrophe.
                    this.bump();
                    break;
                }
            }
            else {
                codePoints.push(ch);
            }
            this.bump();
        }
        return fromCodePoint.apply(void 0, codePoints);
    };
    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {
        if (this.isEOF()) {
            return null;
        }
        var ch = this.char();
        if (ch === 60 /* `<` */ ||
            ch === 123 /* `{` */ ||
            (ch === 35 /* `#` */ &&
                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||
            (ch === 125 /* `}` */ && nestingLevel > 0)) {
            return null;
        }
        else {
            this.bump();
            return fromCodePoint(ch);
        }
    };
    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {
        var openingBracePosition = this.clonePosition();
        this.bump(); // `{`
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        if (this.char() === 125 /* `}` */) {
            this.bump();
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        // argument name
        var value = this.parseIdentifierIfPossible().value;
        if (!value) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bumpSpace();
        if (this.isEOF()) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        switch (this.char()) {
            // Simple argument: `{name}`
            case 125 /* `}` */: {
                this.bump(); // `}`
                return {
                    val: {
                        type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.argument,
                        // value does not include the opening and closing braces.
                        value: value,
                        location: createLocation(openingBracePosition, this.clonePosition()),
                    },
                    err: null,
                };
            }
            // Argument with options: `{name, format, ...}`
            case 44 /* `,` */: {
                this.bump(); // `,`
                this.bumpSpace();
                if (this.isEOF()) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
                }
                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
            }
            default:
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
        }
    };
    /**
     * Advance the parser until the end of the identifier, if it is currently on
     * an identifier character. Return an empty string otherwise.
     */
    Parser.prototype.parseIdentifierIfPossible = function () {
        var startingPosition = this.clonePosition();
        var startOffset = this.offset();
        var value = matchIdentifierAtIndex(this.message, startOffset);
        var endOffset = startOffset + value.length;
        this.bumpTo(endOffset);
        var endPosition = this.clonePosition();
        var location = createLocation(startingPosition, endPosition);
        return { value: value, location: location };
    };
    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {
        var _a;
        // Parse this range:
        // {name, type, style}
        //        ^---^
        var typeStartPosition = this.clonePosition();
        var argType = this.parseIdentifierIfPossible().value;
        var typeEndPosition = this.clonePosition();
        switch (argType) {
            case '':
                // Expecting a style string number, date, time, plural, selectordinal, or select.
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
            case 'number':
            case 'date':
            case 'time': {
                // Parse this range:
                // {name, number, style}
                //              ^-------^
                this.bumpSpace();
                var styleAndLocation = null;
                if (this.bumpIf(',')) {
                    this.bumpSpace();
                    var styleStartPosition = this.clonePosition();
                    var result = this.parseSimpleArgStyleIfPossible();
                    if (result.err) {
                        return result;
                    }
                    var style = trimEnd(result.val);
                    if (style.length === 0) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());
                    styleAndLocation = { style: style, styleLocation: styleLocation };
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_1 = createLocation(openingBracePosition, this.clonePosition());
                // Extract style or skeleton
                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {
                    // Skeleton starts with `::`.
                    var skeleton = trimStart(styleAndLocation.style.slice(2));
                    if (argType === 'number') {
                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
                        if (result.err) {
                            return result;
                        }
                        return {
                            val: { type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.number, value: value, location: location_1, style: result.val },
                            err: null,
                        };
                    }
                    else {
                        if (skeleton.length === 0) {
                            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
                        }
                        var dateTimePattern = skeleton;
                        // Get "best match" pattern only if locale is passed, if not, let it
                        // pass as-is where `parseDateTimeSkeleton()` will throw an error
                        // for unsupported patterns.
                        if (this.locale) {
                            dateTimePattern = (0,_date_time_pattern_generator__WEBPACK_IMPORTED_MODULE_4__.getBestPattern)(skeleton, this.locale);
                        }
                        var style = {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.SKELETON_TYPE.dateTime,
                            pattern: dateTimePattern,
                            location: styleAndLocation.styleLocation,
                            parsedOptions: this.shouldParseSkeletons
                                ? (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseDateTimeSkeleton)(dateTimePattern)
                                : {},
                        };
                        var type = argType === 'date' ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.date : _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.time;
                        return {
                            val: { type: type, value: value, location: location_1, style: style },
                            err: null,
                        };
                    }
                }
                // Regular style or no style.
                return {
                    val: {
                        type: argType === 'number'
                            ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.number
                            : argType === 'date'
                                ? _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.date
                                : _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.time,
                        value: value,
                        location: location_1,
                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,
                    },
                    err: null,
                };
            }
            case 'plural':
            case 'selectordinal':
            case 'select': {
                // Parse this range:
                // {name, plural, options}
                //              ^---------^
                var typeEndPosition_1 = this.clonePosition();
                this.bumpSpace();
                if (!this.bumpIf(',')) {
                    return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__assign)({}, typeEndPosition_1)));
                }
                this.bumpSpace();
                // Parse offset:
                // {name, plural, offset:1, options}
                //                ^-----^
                //
                // or the first option:
                //
                // {name, plural, one {...} other {...}}
                //                ^--^
                var identifierAndLocation = this.parseIdentifierIfPossible();
                var pluralOffset = 0;
                if (argType !== 'select' && identifierAndLocation.value === 'offset') {
                    if (!this.bumpIf(':')) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
                    }
                    this.bumpSpace();
                    var result = this.tryParseDecimalInteger(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
                    if (result.err) {
                        return result;
                    }
                    // Parse another identifier for option parsing
                    this.bumpSpace();
                    identifierAndLocation = this.parseIdentifierIfPossible();
                    pluralOffset = result.val;
                }
                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
                if (optionsResult.err) {
                    return optionsResult;
                }
                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
                if (argCloseResult.err) {
                    return argCloseResult;
                }
                var location_2 = createLocation(openingBracePosition, this.clonePosition());
                if (argType === 'select') {
                    return {
                        val: {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.select,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            location: location_2,
                        },
                        err: null,
                    };
                }
                else {
                    return {
                        val: {
                            type: _types__WEBPACK_IMPORTED_MODULE_1__.TYPE.plural,
                            value: value,
                            options: fromEntries(optionsResult.val),
                            offset: pluralOffset,
                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',
                            location: location_2,
                        },
                        err: null,
                    };
                }
            }
            default:
                return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        }
    };
    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {
        // Parse: {value, number, ::currency/GBP }
        //
        if (this.isEOF() || this.char() !== 125 /* `}` */) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
        }
        this.bump(); // `}`
        return { val: true, err: null };
    };
    /**
     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659
     */
    Parser.prototype.parseSimpleArgStyleIfPossible = function () {
        var nestedBraces = 0;
        var startPosition = this.clonePosition();
        while (!this.isEOF()) {
            var ch = this.char();
            switch (ch) {
                case 39 /* `'` */: {
                    // Treat apostrophe as quoting but include it in the style part.
                    // Find the end of the quoted literal text.
                    this.bump();
                    var apostrophePosition = this.clonePosition();
                    if (!this.bumpUntil("'")) {
                        return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
                    }
                    this.bump();
                    break;
                }
                case 123 /* `{` */: {
                    nestedBraces += 1;
                    this.bump();
                    break;
                }
                case 125 /* `}` */: {
                    if (nestedBraces > 0) {
                        nestedBraces -= 1;
                    }
                    else {
                        return {
                            val: this.message.slice(startPosition.offset, this.offset()),
                            err: null,
                        };
                    }
                    break;
                }
                default:
                    this.bump();
                    break;
            }
        }
        return {
            val: this.message.slice(startPosition.offset, this.offset()),
            err: null,
        };
    };
    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {
        var tokens = [];
        try {
            tokens = (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseNumberSkeletonFromString)(skeleton);
        }
        catch (e) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_NUMBER_SKELETON, location);
        }
        return {
            val: {
                type: _types__WEBPACK_IMPORTED_MODULE_1__.SKELETON_TYPE.number,
                tokens: tokens,
                location: location,
                parsedOptions: this.shouldParseSkeletons
                    ? (0,_formatjs_icu_skeleton_parser__WEBPACK_IMPORTED_MODULE_3__.parseNumberSkeleton)(tokens)
                    : {},
            },
            err: null,
        };
    };
    /**
     * @param nesting_level The current nesting level of messages.
     *     This can be positive when parsing message fragment in select or plural argument options.
     * @param parent_arg_type The parent argument's type.
     * @param parsed_first_identifier If provided, this is the first identifier-like selector of
     *     the argument. It is a by-product of a previous parsing attempt.
     * @param expecting_close_tag If true, this message is directly or indirectly nested inside
     *     between a pair of opening and closing tags. The nested message will not parse beyond
     *     the closing tag boundary.
     */
    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
        var _a;
        var hasOtherClause = false;
        var options = [];
        var parsedSelectors = new Set();
        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
        // Parse:
        // one {one apple}
        // ^--^
        while (true) {
            if (selector.length === 0) {
                var startPosition = this.clonePosition();
                if (parentArgType !== 'select' && this.bumpIf('=')) {
                    // Try parse `={number}` selector
                    var result = this.tryParseDecimalInteger(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
                    if (result.err) {
                        return result;
                    }
                    selectorLocation = createLocation(startPosition, this.clonePosition());
                    selector = this.message.slice(startPosition.offset, this.offset());
                }
                else {
                    break;
                }
            }
            // Duplicate selector clauses
            if (parsedSelectors.has(selector)) {
                return this.error(parentArgType === 'select'
                    ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR
                    : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
            }
            if (selector === 'other') {
                hasOtherClause = true;
            }
            // Parse:
            // one {one apple}
            //     ^----------^
            this.bumpSpace();
            var openingBracePosition = this.clonePosition();
            if (!this.bumpIf('{')) {
                return this.error(parentArgType === 'select'
                    ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT
                    : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
            if (fragmentResult.err) {
                return fragmentResult;
            }
            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
            if (argCloseResult.err) {
                return argCloseResult;
            }
            options.push([
                selector,
                {
                    value: fragmentResult.val,
                    location: createLocation(openingBracePosition, this.clonePosition()),
                },
            ]);
            // Keep track of the existing selectors
            parsedSelectors.add(selector);
            // Prep next selector clause.
            this.bumpSpace();
            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);
        }
        if (options.length === 0) {
            return this.error(parentArgType === 'select'
                ? _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR
                : _error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
        }
        if (this.requiresOtherClause && !hasOtherClause) {
            return this.error(_error__WEBPACK_IMPORTED_MODULE_0__.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
        }
        return { val: options, err: null };
    };
    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {
        var sign = 1;
        var startingPosition = this.clonePosition();
        if (this.bumpIf('+')) {
        }
        else if (this.bumpIf('-')) {
            sign = -1;
        }
        var hasDigits = false;
        var decimal = 0;
        while (!this.isEOF()) {
            var ch = this.char();
            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {
                hasDigits = true;
                decimal = decimal * 10 + (ch - 48);
                this.bump();
            }
            else {
                break;
            }
        }
        var location = createLocation(startingPosition, this.clonePosition());
        if (!hasDigits) {
            return this.error(expectNumberError, location);
        }
        decimal *= sign;
        if (!isSafeInteger(decimal)) {
            return this.error(invalidNumberError, location);
        }
        return { val: decimal, err: null };
    };
    Parser.prototype.offset = function () {
        return this.position.offset;
    };
    Parser.prototype.isEOF = function () {
        return this.offset() === this.message.length;
    };
    Parser.prototype.clonePosition = function () {
        // This is much faster than `Object.assign` or spread.
        return {
            offset: this.position.offset,
            line: this.position.line,
            column: this.position.column,
        };
    };
    /**
     * Return the code point at the current position of the parser.
     * Throws if the index is out of bound.
     */
    Parser.prototype.char = function () {
        var offset = this.position.offset;
        if (offset >= this.message.length) {
            throw Error('out of bound');
        }
        var code = codePointAt(this.message, offset);
        if (code === undefined) {
            throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
        }
        return code;
    };
    Parser.prototype.error = function (kind, location) {
        return {
            val: null,
            err: {
                kind: kind,
                message: this.message,
                location: location,
            },
        };
    };
    /** Bump the parser to the next UTF-16 code unit. */
    Parser.prototype.bump = function () {
        if (this.isEOF()) {
            return;
        }
        var code = this.char();
        if (code === 10 /* '\n' */) {
            this.position.line += 1;
            this.position.column = 1;
            this.position.offset += 1;
        }
        else {
            this.position.column += 1;
            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.
            this.position.offset += code < 0x10000 ? 1 : 2;
        }
    };
    /**
     * If the substring starting at the current position of the parser has
     * the given prefix, then bump the parser to the character immediately
     * following the prefix and return true. Otherwise, don't bump the parser
     * and return false.
     */
    Parser.prototype.bumpIf = function (prefix) {
        if (startsWith(this.message, prefix, this.offset())) {
            for (var i = 0; i < prefix.length; i++) {
                this.bump();
            }
            return true;
        }
        return false;
    };
    /**
     * Bump the parser until the pattern character is found and return `true`.
     * Otherwise bump to the end of the file and return `false`.
     */
    Parser.prototype.bumpUntil = function (pattern) {
        var currentOffset = this.offset();
        var index = this.message.indexOf(pattern, currentOffset);
        if (index >= 0) {
            this.bumpTo(index);
            return true;
        }
        else {
            this.bumpTo(this.message.length);
            return false;
        }
    };
    /**
     * Bump the parser to the target offset.
     * If target offset is beyond the end of the input, bump the parser to the end of the input.
     */
    Parser.prototype.bumpTo = function (targetOffset) {
        if (this.offset() > targetOffset) {
            throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
        }
        targetOffset = Math.min(targetOffset, this.message.length);
        while (true) {
            var offset = this.offset();
            if (offset === targetOffset) {
                break;
            }
            if (offset > targetOffset) {
                throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
            }
            this.bump();
            if (this.isEOF()) {
                break;
            }
        }
    };
    /** advance the parser through all whitespace to the next non-whitespace code unit. */
    Parser.prototype.bumpSpace = function () {
        while (!this.isEOF() && _isWhiteSpace(this.char())) {
            this.bump();
        }
    };
    /**
     * Peek at the *next* Unicode codepoint in the input without advancing the parser.
     * If the input has been exhausted, then this returns null.
     */
    Parser.prototype.peek = function () {
        if (this.isEOF()) {
            return null;
        }
        var code = this.char();
        var offset = this.offset();
        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));
        return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser;
}());

/**
 * This check if codepoint is alphabet (lower & uppercase)
 * @param codepoint
 * @returns
 */
function _isAlpha(codepoint) {
    return ((codepoint >= 97 && codepoint <= 122) ||
        (codepoint >= 65 && codepoint <= 90));
}
function _isAlphaOrSlash(codepoint) {
    return _isAlpha(codepoint) || codepoint === 47; /* '/' */
}
/** See `parseTag` function docs. */
function _isPotentialElementNameChar(c) {
    return (c === 45 /* '-' */ ||
        c === 46 /* '.' */ ||
        (c >= 48 && c <= 57) /* 0..9 */ ||
        c === 95 /* '_' */ ||
        (c >= 97 && c <= 122) /** a..z */ ||
        (c >= 65 && c <= 90) /* A..Z */ ||
        c == 0xb7 ||
        (c >= 0xc0 && c <= 0xd6) ||
        (c >= 0xd8 && c <= 0xf6) ||
        (c >= 0xf8 && c <= 0x37d) ||
        (c >= 0x37f && c <= 0x1fff) ||
        (c >= 0x200c && c <= 0x200d) ||
        (c >= 0x203f && c <= 0x2040) ||
        (c >= 0x2070 && c <= 0x218f) ||
        (c >= 0x2c00 && c <= 0x2fef) ||
        (c >= 0x3001 && c <= 0xd7ff) ||
        (c >= 0xf900 && c <= 0xfdcf) ||
        (c >= 0xfdf0 && c <= 0xfffd) ||
        (c >= 0x10000 && c <= 0xeffff));
}
/**
 * Code point equivalent of regex `\p{White_Space}`.
 * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isWhiteSpace(c) {
    return ((c >= 0x0009 && c <= 0x000d) ||
        c === 0x0020 ||
        c === 0x0085 ||
        (c >= 0x200e && c <= 0x200f) ||
        c === 0x2028 ||
        c === 0x2029);
}
/**
 * Code point equivalent of regex `\p{Pattern_Syntax}`.
 * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt
 */
function _isPatternSyntax(c) {
    return ((c >= 0x0021 && c <= 0x0023) ||
        c === 0x0024 ||
        (c >= 0x0025 && c <= 0x0027) ||
        c === 0x0028 ||
        c === 0x0029 ||
        c === 0x002a ||
        c === 0x002b ||
        c === 0x002c ||
        c === 0x002d ||
        (c >= 0x002e && c <= 0x002f) ||
        (c >= 0x003a && c <= 0x003b) ||
        (c >= 0x003c && c <= 0x003e) ||
        (c >= 0x003f && c <= 0x0040) ||
        c === 0x005b ||
        c === 0x005c ||
        c === 0x005d ||
        c === 0x005e ||
        c === 0x0060 ||
        c === 0x007b ||
        c === 0x007c ||
        c === 0x007d ||
        c === 0x007e ||
        c === 0x00a1 ||
        (c >= 0x00a2 && c <= 0x00a5) ||
        c === 0x00a6 ||
        c === 0x00a7 ||
        c === 0x00a9 ||
        c === 0x00ab ||
        c === 0x00ac ||
        c === 0x00ae ||
        c === 0x00b0 ||
        c === 0x00b1 ||
        c === 0x00b6 ||
        c === 0x00bb ||
        c === 0x00bf ||
        c === 0x00d7 ||
        c === 0x00f7 ||
        (c >= 0x2010 && c <= 0x2015) ||
        (c >= 0x2016 && c <= 0x2017) ||
        c === 0x2018 ||
        c === 0x2019 ||
        c === 0x201a ||
        (c >= 0x201b && c <= 0x201c) ||
        c === 0x201d ||
        c === 0x201e ||
        c === 0x201f ||
        (c >= 0x2020 && c <= 0x2027) ||
        (c >= 0x2030 && c <= 0x2038) ||
        c === 0x2039 ||
        c === 0x203a ||
        (c >= 0x203b && c <= 0x203e) ||
        (c >= 0x2041 && c <= 0x2043) ||
        c === 0x2044 ||
        c === 0x2045 ||
        c === 0x2046 ||
        (c >= 0x2047 && c <= 0x2051) ||
        c === 0x2052 ||
        c === 0x2053 ||
        (c >= 0x2055 && c <= 0x205e) ||
        (c >= 0x2190 && c <= 0x2194) ||
        (c >= 0x2195 && c <= 0x2199) ||
        (c >= 0x219a && c <= 0x219b) ||
        (c >= 0x219c && c <= 0x219f) ||
        c === 0x21a0 ||
        (c >= 0x21a1 && c <= 0x21a2) ||
        c === 0x21a3 ||
        (c >= 0x21a4 && c <= 0x21a5) ||
        c === 0x21a6 ||
        (c >= 0x21a7 && c <= 0x21ad) ||
        c === 0x21ae ||
        (c >= 0x21af && c <= 0x21cd) ||
        (c >= 0x21ce && c <= 0x21cf) ||
        (c >= 0x21d0 && c <= 0x21d1) ||
        c === 0x21d2 ||
        c === 0x21d3 ||
        c === 0x21d4 ||
        (c >= 0x21d5 && c <= 0x21f3) ||
        (c >= 0x21f4 && c <= 0x22ff) ||
        (c >= 0x2300 && c <= 0x2307) ||
        c === 0x2308 ||
        c === 0x2309 ||
        c === 0x230a ||
        c === 0x230b ||
        (c >= 0x230c && c <= 0x231f) ||
        (c >= 0x2320 && c <= 0x2321) ||
        (c >= 0x2322 && c <= 0x2328) ||
        c === 0x2329 ||
        c === 0x232a ||
        (c >= 0x232b && c <= 0x237b) ||
        c === 0x237c ||
        (c >= 0x237d && c <= 0x239a) ||
        (c >= 0x239b && c <= 0x23b3) ||
        (c >= 0x23b4 && c <= 0x23db) ||
        (c >= 0x23dc && c <= 0x23e1) ||
        (c >= 0x23e2 && c <= 0x2426) ||
        (c >= 0x2427 && c <= 0x243f) ||
        (c >= 0x2440 && c <= 0x244a) ||
        (c >= 0x244b && c <= 0x245f) ||
        (c >= 0x2500 && c <= 0x25b6) ||
        c === 0x25b7 ||
        (c >= 0x25b8 && c <= 0x25c0) ||
        c === 0x25c1 ||
        (c >= 0x25c2 && c <= 0x25f7) ||
        (c >= 0x25f8 && c <= 0x25ff) ||
        (c >= 0x2600 && c <= 0x266e) ||
        c === 0x266f ||
        (c >= 0x2670 && c <= 0x2767) ||
        c === 0x2768 ||
        c === 0x2769 ||
        c === 0x276a ||
        c === 0x276b ||
        c === 0x276c ||
        c === 0x276d ||
        c === 0x276e ||
        c === 0x276f ||
        c === 0x2770 ||
        c === 0x2771 ||
        c === 0x2772 ||
        c === 0x2773 ||
        c === 0x2774 ||
        c === 0x2775 ||
        (c >= 0x2794 && c <= 0x27bf) ||
        (c >= 0x27c0 && c <= 0x27c4) ||
        c === 0x27c5 ||
        c === 0x27c6 ||
        (c >= 0x27c7 && c <= 0x27e5) ||
        c === 0x27e6 ||
        c === 0x27e7 ||
        c === 0x27e8 ||
        c === 0x27e9 ||
        c === 0x27ea ||
        c === 0x27eb ||
        c === 0x27ec ||
        c === 0x27ed ||
        c === 0x27ee ||
        c === 0x27ef ||
        (c >= 0x27f0 && c <= 0x27ff) ||
        (c >= 0x2800 && c <= 0x28ff) ||
        (c >= 0x2900 && c <= 0x2982) ||
        c === 0x2983 ||
        c === 0x2984 ||
        c === 0x2985 ||
        c === 0x2986 ||
        c === 0x2987 ||
        c === 0x2988 ||
        c === 0x2989 ||
        c === 0x298a ||
        c === 0x298b ||
        c === 0x298c ||
        c === 0x298d ||
        c === 0x298e ||
        c === 0x298f ||
        c === 0x2990 ||
        c === 0x2991 ||
        c === 0x2992 ||
        c === 0x2993 ||
        c === 0x2994 ||
        c === 0x2995 ||
        c === 0x2996 ||
        c === 0x2997 ||
        c === 0x2998 ||
        (c >= 0x2999 && c <= 0x29d7) ||
        c === 0x29d8 ||
        c === 0x29d9 ||
        c === 0x29da ||
        c === 0x29db ||
        (c >= 0x29dc && c <= 0x29fb) ||
        c === 0x29fc ||
        c === 0x29fd ||
        (c >= 0x29fe && c <= 0x2aff) ||
        (c >= 0x2b00 && c <= 0x2b2f) ||
        (c >= 0x2b30 && c <= 0x2b44) ||
        (c >= 0x2b45 && c <= 0x2b46) ||
        (c >= 0x2b47 && c <= 0x2b4c) ||
        (c >= 0x2b4d && c <= 0x2b73) ||
        (c >= 0x2b74 && c <= 0x2b75) ||
        (c >= 0x2b76 && c <= 0x2b95) ||
        c === 0x2b96 ||
        (c >= 0x2b97 && c <= 0x2bff) ||
        (c >= 0x2e00 && c <= 0x2e01) ||
        c === 0x2e02 ||
        c === 0x2e03 ||
        c === 0x2e04 ||
        c === 0x2e05 ||
        (c >= 0x2e06 && c <= 0x2e08) ||
        c === 0x2e09 ||
        c === 0x2e0a ||
        c === 0x2e0b ||
        c === 0x2e0c ||
        c === 0x2e0d ||
        (c >= 0x2e0e && c <= 0x2e16) ||
        c === 0x2e17 ||
        (c >= 0x2e18 && c <= 0x2e19) ||
        c === 0x2e1a ||
        c === 0x2e1b ||
        c === 0x2e1c ||
        c === 0x2e1d ||
        (c >= 0x2e1e && c <= 0x2e1f) ||
        c === 0x2e20 ||
        c === 0x2e21 ||
        c === 0x2e22 ||
        c === 0x2e23 ||
        c === 0x2e24 ||
        c === 0x2e25 ||
        c === 0x2e26 ||
        c === 0x2e27 ||
        c === 0x2e28 ||
        c === 0x2e29 ||
        (c >= 0x2e2a && c <= 0x2e2e) ||
        c === 0x2e2f ||
        (c >= 0x2e30 && c <= 0x2e39) ||
        (c >= 0x2e3a && c <= 0x2e3b) ||
        (c >= 0x2e3c && c <= 0x2e3f) ||
        c === 0x2e40 ||
        c === 0x2e41 ||
        c === 0x2e42 ||
        (c >= 0x2e43 && c <= 0x2e4f) ||
        (c >= 0x2e50 && c <= 0x2e51) ||
        c === 0x2e52 ||
        (c >= 0x2e53 && c <= 0x2e7f) ||
        (c >= 0x3001 && c <= 0x3003) ||
        c === 0x3008 ||
        c === 0x3009 ||
        c === 0x300a ||
        c === 0x300b ||
        c === 0x300c ||
        c === 0x300d ||
        c === 0x300e ||
        c === 0x300f ||
        c === 0x3010 ||
        c === 0x3011 ||
        (c >= 0x3012 && c <= 0x3013) ||
        c === 0x3014 ||
        c === 0x3015 ||
        c === 0x3016 ||
        c === 0x3017 ||
        c === 0x3018 ||
        c === 0x3019 ||
        c === 0x301a ||
        c === 0x301b ||
        c === 0x301c ||
        c === 0x301d ||
        (c >= 0x301e && c <= 0x301f) ||
        c === 0x3020 ||
        c === 0x3030 ||
        c === 0xfd3e ||
        c === 0xfd3f ||
        (c >= 0xfe45 && c <= 0xfe46));
}


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SPACE_SEPARATOR_REGEX: () => (/* binding */ SPACE_SEPARATOR_REGEX),
/* harmony export */   WHITE_SPACE_REGEX: () => (/* binding */ WHITE_SPACE_REGEX)
/* harmony export */ });
// @generated from regex-gen.ts
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/;


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   timeData: () => (/* binding */ timeData)
/* harmony export */ });
// @generated from time-data-gen.ts
// prettier-ignore  
var timeData = {
    "001": [
        "H",
        "h"
    ],
    "AC": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "AD": [
        "H",
        "hB"
    ],
    "AE": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "AF": [
        "H",
        "hb",
        "hB",
        "h"
    ],
    "AG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "AI": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "AL": [
        "h",
        "H",
        "hB"
    ],
    "AM": [
        "H",
        "hB"
    ],
    "AO": [
        "H",
        "hB"
    ],
    "AR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "AS": [
        "h",
        "H"
    ],
    "AT": [
        "H",
        "hB"
    ],
    "AU": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "AW": [
        "H",
        "hB"
    ],
    "AX": [
        "H"
    ],
    "AZ": [
        "H",
        "hB",
        "h"
    ],
    "BA": [
        "H",
        "hB",
        "h"
    ],
    "BB": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BD": [
        "h",
        "hB",
        "H"
    ],
    "BE": [
        "H",
        "hB"
    ],
    "BF": [
        "H",
        "hB"
    ],
    "BG": [
        "H",
        "hB",
        "h"
    ],
    "BH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "BI": [
        "H",
        "h"
    ],
    "BJ": [
        "H",
        "hB"
    ],
    "BL": [
        "H",
        "hB"
    ],
    "BM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BN": [
        "hb",
        "hB",
        "h",
        "H"
    ],
    "BO": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "BQ": [
        "H"
    ],
    "BR": [
        "H",
        "hB"
    ],
    "BS": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "BT": [
        "h",
        "H"
    ],
    "BW": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "BY": [
        "H",
        "h"
    ],
    "BZ": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CA": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "CC": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CD": [
        "hB",
        "H"
    ],
    "CF": [
        "H",
        "h",
        "hB"
    ],
    "CG": [
        "H",
        "hB"
    ],
    "CH": [
        "H",
        "hB",
        "h"
    ],
    "CI": [
        "H",
        "hB"
    ],
    "CK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CL": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CM": [
        "H",
        "h",
        "hB"
    ],
    "CN": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "CO": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "CP": [
        "H"
    ],
    "CR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CU": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "CV": [
        "H",
        "hB"
    ],
    "CW": [
        "H",
        "hB"
    ],
    "CX": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "CY": [
        "h",
        "H",
        "hb",
        "hB"
    ],
    "CZ": [
        "H"
    ],
    "DE": [
        "H",
        "hB"
    ],
    "DG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "DJ": [
        "h",
        "H"
    ],
    "DK": [
        "H"
    ],
    "DM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "DO": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "DZ": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "EA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "EC": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "EE": [
        "H",
        "hB"
    ],
    "EG": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "EH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "ER": [
        "h",
        "H"
    ],
    "ES": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "ET": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "FI": [
        "H"
    ],
    "FJ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "FK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "FM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "FO": [
        "H",
        "h"
    ],
    "FR": [
        "H",
        "hB"
    ],
    "GA": [
        "H",
        "hB"
    ],
    "GB": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GD": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GE": [
        "H",
        "hB",
        "h"
    ],
    "GF": [
        "H",
        "hB"
    ],
    "GG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GH": [
        "h",
        "H"
    ],
    "GI": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "GL": [
        "H",
        "h"
    ],
    "GM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GN": [
        "H",
        "hB"
    ],
    "GP": [
        "H",
        "hB"
    ],
    "GQ": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "GR": [
        "h",
        "H",
        "hb",
        "hB"
    ],
    "GT": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "GU": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "GW": [
        "H",
        "hB"
    ],
    "GY": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "HK": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "HN": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "HR": [
        "H",
        "hB"
    ],
    "HU": [
        "H",
        "h"
    ],
    "IC": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "ID": [
        "H"
    ],
    "IE": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IL": [
        "H",
        "hB"
    ],
    "IM": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IN": [
        "h",
        "H"
    ],
    "IO": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "IQ": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "IR": [
        "hB",
        "H"
    ],
    "IS": [
        "H"
    ],
    "IT": [
        "H",
        "hB"
    ],
    "JE": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "JM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "JO": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "JP": [
        "H",
        "K",
        "h"
    ],
    "KE": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "KG": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "KH": [
        "hB",
        "h",
        "H",
        "hb"
    ],
    "KI": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KM": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "KN": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KP": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "KR": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "KW": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "KY": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "KZ": [
        "H",
        "hB"
    ],
    "LA": [
        "H",
        "hb",
        "hB",
        "h"
    ],
    "LB": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "LC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "LI": [
        "H",
        "hB",
        "h"
    ],
    "LK": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "LR": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "LS": [
        "h",
        "H"
    ],
    "LT": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "LU": [
        "H",
        "h",
        "hB"
    ],
    "LV": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "LY": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "MA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "MC": [
        "H",
        "hB"
    ],
    "MD": [
        "H",
        "hB"
    ],
    "ME": [
        "H",
        "hB",
        "h"
    ],
    "MF": [
        "H",
        "hB"
    ],
    "MG": [
        "H",
        "h"
    ],
    "MH": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MK": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "ML": [
        "H"
    ],
    "MM": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "MN": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "MO": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "MP": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MQ": [
        "H",
        "hB"
    ],
    "MR": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "MS": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "MT": [
        "H",
        "h"
    ],
    "MU": [
        "H",
        "h"
    ],
    "MV": [
        "H",
        "h"
    ],
    "MW": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "MX": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "MY": [
        "hb",
        "hB",
        "h",
        "H"
    ],
    "MZ": [
        "H",
        "hB"
    ],
    "NA": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "NC": [
        "H",
        "hB"
    ],
    "NE": [
        "H"
    ],
    "NF": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NG": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NI": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "NL": [
        "H",
        "hB"
    ],
    "NO": [
        "H",
        "h"
    ],
    "NP": [
        "H",
        "h",
        "hB"
    ],
    "NR": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NU": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "NZ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "OM": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "PA": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "PE": [
        "H",
        "hB",
        "h",
        "hb"
    ],
    "PF": [
        "H",
        "h",
        "hB"
    ],
    "PG": [
        "h",
        "H"
    ],
    "PH": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "PK": [
        "h",
        "hB",
        "H"
    ],
    "PL": [
        "H",
        "h"
    ],
    "PM": [
        "H",
        "hB"
    ],
    "PN": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "PR": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "PS": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "PT": [
        "H",
        "hB"
    ],
    "PW": [
        "h",
        "H"
    ],
    "PY": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "QA": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "RE": [
        "H",
        "hB"
    ],
    "RO": [
        "H",
        "hB"
    ],
    "RS": [
        "H",
        "hB",
        "h"
    ],
    "RU": [
        "H"
    ],
    "RW": [
        "H",
        "h"
    ],
    "SA": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SB": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SC": [
        "H",
        "h",
        "hB"
    ],
    "SD": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SE": [
        "H"
    ],
    "SG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SH": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "SI": [
        "H",
        "hB"
    ],
    "SJ": [
        "H"
    ],
    "SK": [
        "H"
    ],
    "SL": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "SM": [
        "H",
        "h",
        "hB"
    ],
    "SN": [
        "H",
        "h",
        "hB"
    ],
    "SO": [
        "h",
        "H"
    ],
    "SR": [
        "H",
        "hB"
    ],
    "SS": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "ST": [
        "H",
        "hB"
    ],
    "SV": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "SX": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "SY": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "SZ": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "TA": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "TC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "TD": [
        "h",
        "H",
        "hB"
    ],
    "TF": [
        "H",
        "h",
        "hB"
    ],
    "TG": [
        "H",
        "hB"
    ],
    "TH": [
        "H",
        "h"
    ],
    "TJ": [
        "H",
        "h"
    ],
    "TL": [
        "H",
        "hB",
        "hb",
        "h"
    ],
    "TM": [
        "H",
        "h"
    ],
    "TN": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "TO": [
        "h",
        "H"
    ],
    "TR": [
        "H",
        "hB"
    ],
    "TT": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "TW": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "TZ": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "UA": [
        "H",
        "hB",
        "h"
    ],
    "UG": [
        "hB",
        "hb",
        "H",
        "h"
    ],
    "UM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "US": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "UY": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "UZ": [
        "H",
        "hB",
        "h"
    ],
    "VA": [
        "H",
        "h",
        "hB"
    ],
    "VC": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VE": [
        "h",
        "H",
        "hB",
        "hb"
    ],
    "VG": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VI": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "VN": [
        "H",
        "h"
    ],
    "VU": [
        "h",
        "H"
    ],
    "WF": [
        "H",
        "hB"
    ],
    "WS": [
        "h",
        "H"
    ],
    "XK": [
        "H",
        "hB",
        "h"
    ],
    "YE": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "YT": [
        "H",
        "hB"
    ],
    "ZA": [
        "H",
        "h",
        "hb",
        "hB"
    ],
    "ZM": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "ZW": [
        "H",
        "h"
    ],
    "af-ZA": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "ar-001": [
        "h",
        "hB",
        "hb",
        "H"
    ],
    "ca-ES": [
        "H",
        "h",
        "hB"
    ],
    "en-001": [
        "h",
        "hb",
        "H",
        "hB"
    ],
    "es-BO": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-BR": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-EC": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-ES": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-GQ": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "es-PE": [
        "H",
        "h",
        "hB",
        "hb"
    ],
    "fr-CA": [
        "H",
        "h",
        "hB"
    ],
    "gl-ES": [
        "H",
        "h",
        "hB"
    ],
    "gu-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "hi-IN": [
        "hB",
        "h",
        "H"
    ],
    "it-CH": [
        "H",
        "h",
        "hB"
    ],
    "it-IT": [
        "H",
        "h",
        "hB"
    ],
    "kn-IN": [
        "hB",
        "h",
        "H"
    ],
    "ml-IN": [
        "hB",
        "h",
        "H"
    ],
    "mr-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "pa-IN": [
        "hB",
        "hb",
        "h",
        "H"
    ],
    "ta-IN": [
        "hB",
        "h",
        "hb",
        "H"
    ],
    "te-IN": [
        "hB",
        "h",
        "H"
    ],
    "zu-ZA": [
        "H",
        "hB",
        "hb",
        "h"
    ]
};


/***/ }),

/***/ "./node_modules/@formatjs/icu-messageformat-parser/lib/types.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@formatjs/icu-messageformat-parser/lib/types.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SKELETON_TYPE: () => (/* binding */ SKELETON_TYPE),
/* harmony export */   TYPE: () => (/* binding */ TYPE),
/* harmony export */   createLiteralElement: () => (/* binding */ createLiteralElement),
/* harmony export */   createNumberElement: () => (/* binding */ createNumberElement),
/* harmony export */   isArgumentElement: () => (/* binding */ isArgumentElement),
/* harmony export */   isDateElement: () => (/* binding */ isDateElement),
/* harmony export */   isDateTimeSkeleton: () => (/* binding */ isDateTimeSkeleton),
/* harmony export */   isLiteralElement: () => (/* binding */ isLiteralElement),
/* harmony export */   isNumberElement: () => (/* binding */ isNumberElement),
/* harmony export */   isNumberSkeleton: () => (/* binding */ isNumberSkeleton),
/* harmony export */   isPluralElement: () => (/* binding */ isPluralElement),
/* harmony export */   isPoundElement: () => (/* binding */ isPoundElement),
/* harmony export */   isSelectElement: () => (/* binding */ isSelectElement),
/* harmony export */   isTagElement: () => (/* binding */ isTagElement),
/* harmony export */   isTimeElement: () => (/* binding */ isTimeElement)
/* harmony export */ });
var TYPE;
(function (TYPE) {
    /**
     * Raw text
     */
    TYPE[TYPE["literal"] = 0] = "literal";
    /**
     * Variable w/o any format, e.g `var` in `this is a {var}`
     */
    TYPE[TYPE["argument"] = 1] = "argument";
    /**
     * Variable w/ number format
     */
    TYPE[TYPE["number"] = 2] = "number";
    /**
     * Variable w/ date format
     */
    TYPE[TYPE["date"] = 3] = "date";
    /**
     * Variable w/ time format
     */
    TYPE[TYPE["time"] = 4] = "time";
    /**
     * Variable w/ select format
     */
    TYPE[TYPE["select"] = 5] = "select";
    /**
     * Variable w/ plural format
     */
    TYPE[TYPE["plural"] = 6] = "plural";
    /**
     * Only possible within plural argument.
     * This is the `#` symbol that will be substituted with the count.
     */
    TYPE[TYPE["pound"] = 7] = "pound";
    /**
     * XML-like tag
     */
    TYPE[TYPE["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function (SKELETON_TYPE) {
    SKELETON_TYPE[SKELETON_TYPE["number"] = 0] = "number";
    SKELETON_TYPE[SKELETON_TYPE["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
/**
 * Type Guards
 */
function isLiteralElement(el) {
    return el.type === TYPE.literal;
}
function isArgumentElement(el) {
    return el.type === TYPE.argument;
}
function isNumberElement(el) {
    return el.type === TYPE.number;
}
function isDateElement(el) {
    return el.type === TYPE.date;
}
function isTimeElement(el) {
    return el.type === TYPE.time;
}
function isSelectElement(el) {
    return el.type === TYPE.select;
}
function isPluralElement(el) {
    return el.type === TYPE.plural;
}
function isPoundElement(el) {
    return el.type === TYPE.pound;
}
function isTagElement(el) {
    return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
    return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);
}
function createLiteralElement(value) {
    return {
        type: TYPE.literal,
        value: value,
    };
}
function createNumberElement(value, style) {
    return {
        type: TYPE.number,
        value: value,
        style: style,
    };
}


/***/ }),

/***/ "./node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseDateTimeSkeleton: () => (/* binding */ parseDateTimeSkeleton)
/* harmony export */ });
/**
 * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js
 * with some tweaks
 */
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
/**
 * Parse Date time skeleton into Intl.DateTimeFormatOptions
 * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * @public
 * @param skeleton skeleton string
 */
function parseDateTimeSkeleton(skeleton) {
    var result = {};
    skeleton.replace(DATE_TIME_REGEX, function (match) {
        var len = match.length;
        switch (match[0]) {
            // Era
            case 'G':
                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';
                break;
            // Year
            case 'y':
                result.year = len === 2 ? '2-digit' : 'numeric';
                break;
            case 'Y':
            case 'u':
            case 'U':
            case 'r':
                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');
            // Quarter
            case 'q':
            case 'Q':
                throw new RangeError('`q/Q` (quarter) patterns are not supported');
            // Month
            case 'M':
            case 'L':
                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];
                break;
            // Week
            case 'w':
            case 'W':
                throw new RangeError('`w/W` (week) patterns are not supported');
            case 'd':
                result.day = ['numeric', '2-digit'][len - 1];
                break;
            case 'D':
            case 'F':
            case 'g':
                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');
            // Weekday
            case 'E':
                result.weekday = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';
                break;
            case 'e':
                if (len < 4) {
                    throw new RangeError('`e..eee` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            case 'c':
                if (len < 4) {
                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');
                }
                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];
                break;
            // Period
            case 'a': // AM, PM
                result.hour12 = true;
                break;
            case 'b': // am, pm, noon, midnight
            case 'B': // flexible day periods
                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');
            // Hour
            case 'h':
                result.hourCycle = 'h12';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'H':
                result.hourCycle = 'h23';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'K':
                result.hourCycle = 'h11';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'k':
                result.hourCycle = 'h24';
                result.hour = ['numeric', '2-digit'][len - 1];
                break;
            case 'j':
            case 'J':
            case 'C':
                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');
            // Minute
            case 'm':
                result.minute = ['numeric', '2-digit'][len - 1];
                break;
            // Second
            case 's':
                result.second = ['numeric', '2-digit'][len - 1];
                break;
            case 'S':
            case 'A':
                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');
            // Zone
            case 'z': // 1..3, 4: specific non-location format
                result.timeZoneName = len < 4 ? 'short' : 'long';
                break;
            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats
            case 'O': // 1, 4: milliseconds in day short, long
            case 'v': // 1, 4: generic non-location format
            case 'V': // 1, 2, 3, 4: time zone ID or city
            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats
            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats
                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');
        }
        return '';
    });
    return result;
}


/***/ }),

/***/ "./node_modules/@formatjs/icu-skeleton-parser/lib/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@formatjs/icu-skeleton-parser/lib/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseDateTimeSkeleton: () => (/* reexport safe */ _date_time__WEBPACK_IMPORTED_MODULE_0__.parseDateTimeSkeleton),
/* harmony export */   parseNumberSkeleton: () => (/* reexport safe */ _number__WEBPACK_IMPORTED_MODULE_1__.parseNumberSkeleton),
/* harmony export */   parseNumberSkeletonFromString: () => (/* reexport safe */ _number__WEBPACK_IMPORTED_MODULE_1__.parseNumberSkeletonFromString)
/* harmony export */ });
/* harmony import */ var _date_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./date-time */ "./node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js");
/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number */ "./node_modules/@formatjs/icu-skeleton-parser/lib/number.js");




/***/ }),

/***/ "./node_modules/@formatjs/icu-skeleton-parser/lib/number.js":
/*!******************************************************************!*\
  !*** ./node_modules/@formatjs/icu-skeleton-parser/lib/number.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseNumberSkeleton: () => (/* binding */ parseNumberSkeleton),
/* harmony export */   parseNumberSkeletonFromString: () => (/* binding */ parseNumberSkeletonFromString)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _regex_generated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.generated */ "./node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js");


function parseNumberSkeletonFromString(skeleton) {
    if (skeleton.length === 0) {
        throw new Error('Number skeleton cannot be empty');
    }
    // Parse the skeleton
    var stringTokens = skeleton
        .split(_regex_generated__WEBPACK_IMPORTED_MODULE_0__.WHITE_SPACE_REGEX)
        .filter(function (x) { return x.length > 0; });
    var tokens = [];
    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
        var stringToken = stringTokens_1[_i];
        var stemAndOptions = stringToken.split('/');
        if (stemAndOptions.length === 0) {
            throw new Error('Invalid number skeleton');
        }
        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {
            var option = options_1[_a];
            if (option.length === 0) {
                throw new Error('Invalid number skeleton');
            }
        }
        tokens.push({ stem: stem, options: options });
    }
    return tokens;
}
function icuUnitToEcma(unit) {
    return unit.replace(/^(.*?)-/, '');
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
    var result = {};
    if (str[str.length - 1] === 'r') {
        result.roundingPriority = 'morePrecision';
    }
    else if (str[str.length - 1] === 's') {
        result.roundingPriority = 'lessPrecision';
    }
    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {
        // @@@ case
        if (typeof g2 !== 'string') {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits = g1.length;
        }
        // @@@+ case
        else if (g2 === '+') {
            result.minimumSignificantDigits = g1.length;
        }
        // .### case
        else if (g1[0] === '#') {
            result.maximumSignificantDigits = g1.length;
        }
        // .@@## or .@@@ case
        else {
            result.minimumSignificantDigits = g1.length;
            result.maximumSignificantDigits =
                g1.length + (typeof g2 === 'string' ? g2.length : 0);
        }
        return '';
    });
    return result;
}
function parseSign(str) {
    switch (str) {
        case 'sign-auto':
            return {
                signDisplay: 'auto',
            };
        case 'sign-accounting':
        case '()':
            return {
                currencySign: 'accounting',
            };
        case 'sign-always':
        case '+!':
            return {
                signDisplay: 'always',
            };
        case 'sign-accounting-always':
        case '()!':
            return {
                signDisplay: 'always',
                currencySign: 'accounting',
            };
        case 'sign-except-zero':
        case '+?':
            return {
                signDisplay: 'exceptZero',
            };
        case 'sign-accounting-except-zero':
        case '()?':
            return {
                signDisplay: 'exceptZero',
                currencySign: 'accounting',
            };
        case 'sign-never':
        case '+_':
            return {
                signDisplay: 'never',
            };
    }
}
function parseConciseScientificAndEngineeringStem(stem) {
    // Engineering
    var result;
    if (stem[0] === 'E' && stem[1] === 'E') {
        result = {
            notation: 'engineering',
        };
        stem = stem.slice(2);
    }
    else if (stem[0] === 'E') {
        result = {
            notation: 'scientific',
        };
        stem = stem.slice(1);
    }
    if (result) {
        var signDisplay = stem.slice(0, 2);
        if (signDisplay === '+!') {
            result.signDisplay = 'always';
            stem = stem.slice(2);
        }
        else if (signDisplay === '+?') {
            result.signDisplay = 'exceptZero';
            stem = stem.slice(2);
        }
        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
            throw new Error('Malformed concise eng/scientific notation');
        }
        result.minimumIntegerDigits = stem.length;
    }
    return result;
}
function parseNotationOptions(opt) {
    var result = {};
    var signOpts = parseSign(opt);
    if (signOpts) {
        return signOpts;
    }
    return result;
}
/**
 * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options
 */
function parseNumberSkeleton(tokens) {
    var result = {};
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        switch (token.stem) {
            case 'percent':
            case '%':
                result.style = 'percent';
                continue;
            case '%x100':
                result.style = 'percent';
                result.scale = 100;
                continue;
            case 'currency':
                result.style = 'currency';
                result.currency = token.options[0];
                continue;
            case 'group-off':
            case ',_':
                result.useGrouping = false;
                continue;
            case 'precision-integer':
            case '.':
                result.maximumFractionDigits = 0;
                continue;
            case 'measure-unit':
            case 'unit':
                result.style = 'unit';
                result.unit = icuUnitToEcma(token.options[0]);
                continue;
            case 'compact-short':
            case 'K':
                result.notation = 'compact';
                result.compactDisplay = 'short';
                continue;
            case 'compact-long':
            case 'KK':
                result.notation = 'compact';
                result.compactDisplay = 'long';
                continue;
            case 'scientific':
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'engineering':
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, all), parseNotationOptions(opt))); }, {}));
                continue;
            case 'notation-simple':
                result.notation = 'standard';
                continue;
            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h
            case 'unit-width-narrow':
                result.currencyDisplay = 'narrowSymbol';
                result.unitDisplay = 'narrow';
                continue;
            case 'unit-width-short':
                result.currencyDisplay = 'code';
                result.unitDisplay = 'short';
                continue;
            case 'unit-width-full-name':
                result.currencyDisplay = 'name';
                result.unitDisplay = 'long';
                continue;
            case 'unit-width-iso-code':
                result.currencyDisplay = 'symbol';
                continue;
            case 'scale':
                result.scale = parseFloat(token.options[0]);
                continue;
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
            case 'integer-width':
                if (token.options.length > 1) {
                    throw new RangeError('integer-width stems only accept a single optional option');
                }
                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {
                    if (g1) {
                        result.minimumIntegerDigits = g2.length;
                    }
                    else if (g3 && g4) {
                        throw new Error('We currently do not support maximum integer digits');
                    }
                    else if (g5) {
                        throw new Error('We currently do not support exact integer digits');
                    }
                    return '';
                });
                continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width
        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
            result.minimumIntegerDigits = token.stem.length;
            continue;
        }
        if (FRACTION_PRECISION_REGEX.test(token.stem)) {
            // Precision
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision
            // precision-integer case
            if (token.options.length > 1) {
                throw new RangeError('Fraction-precision stems only accept a single optional option');
            }
            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {
                // .000* case (before ICU67 it was .000+)
                if (g2 === '*') {
                    result.minimumFractionDigits = g1.length;
                }
                // .### case
                else if (g3 && g3[0] === '#') {
                    result.maximumFractionDigits = g3.length;
                }
                // .00## case
                else if (g4 && g5) {
                    result.minimumFractionDigits = g4.length;
                    result.maximumFractionDigits = g4.length + g5.length;
                }
                else {
                    result.minimumFractionDigits = g1.length;
                    result.maximumFractionDigits = g1.length;
                }
                return '';
            });
            var opt = token.options[0];
            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#trailing-zero-display
            if (opt === 'w') {
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), { trailingZeroDisplay: 'stripIfInteger' });
            }
            else if (opt) {
                result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), parseSignificantPrecision(opt));
            }
            continue;
        }
        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision
        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), parseSignificantPrecision(token.stem));
            continue;
        }
        var signOpts = parseSign(token.stem);
        if (signOpts) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), signOpts);
        }
        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
        if (conciseScientificAndEngineeringOpts) {
            result = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, result), conciseScientificAndEngineeringOpts);
        }
    }
    return result;
}


/***/ }),

/***/ "./node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WHITE_SPACE_REGEX: () => (/* binding */ WHITE_SPACE_REGEX)
/* harmony export */ });
// @generated from regex-gen.ts
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;


/***/ }),

/***/ "./node_modules/@hotwired/stimulus/dist/stimulus.js":
/*!**********************************************************!*\
  !*** ./node_modules/@hotwired/stimulus/dist/stimulus.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Application: () => (/* binding */ Application),
/* harmony export */   AttributeObserver: () => (/* binding */ AttributeObserver),
/* harmony export */   Context: () => (/* binding */ Context),
/* harmony export */   Controller: () => (/* binding */ Controller),
/* harmony export */   ElementObserver: () => (/* binding */ ElementObserver),
/* harmony export */   IndexedMultimap: () => (/* binding */ IndexedMultimap),
/* harmony export */   Multimap: () => (/* binding */ Multimap),
/* harmony export */   SelectorObserver: () => (/* binding */ SelectorObserver),
/* harmony export */   StringMapObserver: () => (/* binding */ StringMapObserver),
/* harmony export */   TokenListObserver: () => (/* binding */ TokenListObserver),
/* harmony export */   ValueListObserver: () => (/* binding */ ValueListObserver),
/* harmony export */   add: () => (/* binding */ add),
/* harmony export */   defaultSchema: () => (/* binding */ defaultSchema),
/* harmony export */   del: () => (/* binding */ del),
/* harmony export */   fetch: () => (/* binding */ fetch),
/* harmony export */   prune: () => (/* binding */ prune)
/* harmony export */ });
/*
Stimulus 3.2.1
Copyright © 2023 Basecamp, LLC
 */
class EventListener {
    constructor(eventTarget, eventName, eventOptions) {
        this.eventTarget = eventTarget;
        this.eventName = eventName;
        this.eventOptions = eventOptions;
        this.unorderedBindings = new Set();
    }
    connect() {
        this.eventTarget.addEventListener(this.eventName, this, this.eventOptions);
    }
    disconnect() {
        this.eventTarget.removeEventListener(this.eventName, this, this.eventOptions);
    }
    bindingConnected(binding) {
        this.unorderedBindings.add(binding);
    }
    bindingDisconnected(binding) {
        this.unorderedBindings.delete(binding);
    }
    handleEvent(event) {
        const extendedEvent = extendEvent(event);
        for (const binding of this.bindings) {
            if (extendedEvent.immediatePropagationStopped) {
                break;
            }
            else {
                binding.handleEvent(extendedEvent);
            }
        }
    }
    hasBindings() {
        return this.unorderedBindings.size > 0;
    }
    get bindings() {
        return Array.from(this.unorderedBindings).sort((left, right) => {
            const leftIndex = left.index, rightIndex = right.index;
            return leftIndex < rightIndex ? -1 : leftIndex > rightIndex ? 1 : 0;
        });
    }
}
function extendEvent(event) {
    if ("immediatePropagationStopped" in event) {
        return event;
    }
    else {
        const { stopImmediatePropagation } = event;
        return Object.assign(event, {
            immediatePropagationStopped: false,
            stopImmediatePropagation() {
                this.immediatePropagationStopped = true;
                stopImmediatePropagation.call(this);
            },
        });
    }
}

class Dispatcher {
    constructor(application) {
        this.application = application;
        this.eventListenerMaps = new Map();
        this.started = false;
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.eventListeners.forEach((eventListener) => eventListener.connect());
        }
    }
    stop() {
        if (this.started) {
            this.started = false;
            this.eventListeners.forEach((eventListener) => eventListener.disconnect());
        }
    }
    get eventListeners() {
        return Array.from(this.eventListenerMaps.values()).reduce((listeners, map) => listeners.concat(Array.from(map.values())), []);
    }
    bindingConnected(binding) {
        this.fetchEventListenerForBinding(binding).bindingConnected(binding);
    }
    bindingDisconnected(binding, clearEventListeners = false) {
        this.fetchEventListenerForBinding(binding).bindingDisconnected(binding);
        if (clearEventListeners)
            this.clearEventListenersForBinding(binding);
    }
    handleError(error, message, detail = {}) {
        this.application.handleError(error, `Error ${message}`, detail);
    }
    clearEventListenersForBinding(binding) {
        const eventListener = this.fetchEventListenerForBinding(binding);
        if (!eventListener.hasBindings()) {
            eventListener.disconnect();
            this.removeMappedEventListenerFor(binding);
        }
    }
    removeMappedEventListenerFor(binding) {
        const { eventTarget, eventName, eventOptions } = binding;
        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
        const cacheKey = this.cacheKey(eventName, eventOptions);
        eventListenerMap.delete(cacheKey);
        if (eventListenerMap.size == 0)
            this.eventListenerMaps.delete(eventTarget);
    }
    fetchEventListenerForBinding(binding) {
        const { eventTarget, eventName, eventOptions } = binding;
        return this.fetchEventListener(eventTarget, eventName, eventOptions);
    }
    fetchEventListener(eventTarget, eventName, eventOptions) {
        const eventListenerMap = this.fetchEventListenerMapForEventTarget(eventTarget);
        const cacheKey = this.cacheKey(eventName, eventOptions);
        let eventListener = eventListenerMap.get(cacheKey);
        if (!eventListener) {
            eventListener = this.createEventListener(eventTarget, eventName, eventOptions);
            eventListenerMap.set(cacheKey, eventListener);
        }
        return eventListener;
    }
    createEventListener(eventTarget, eventName, eventOptions) {
        const eventListener = new EventListener(eventTarget, eventName, eventOptions);
        if (this.started) {
            eventListener.connect();
        }
        return eventListener;
    }
    fetchEventListenerMapForEventTarget(eventTarget) {
        let eventListenerMap = this.eventListenerMaps.get(eventTarget);
        if (!eventListenerMap) {
            eventListenerMap = new Map();
            this.eventListenerMaps.set(eventTarget, eventListenerMap);
        }
        return eventListenerMap;
    }
    cacheKey(eventName, eventOptions) {
        const parts = [eventName];
        Object.keys(eventOptions)
            .sort()
            .forEach((key) => {
            parts.push(`${eventOptions[key] ? "" : "!"}${key}`);
        });
        return parts.join(":");
    }
}

const defaultActionDescriptorFilters = {
    stop({ event, value }) {
        if (value)
            event.stopPropagation();
        return true;
    },
    prevent({ event, value }) {
        if (value)
            event.preventDefault();
        return true;
    },
    self({ event, value, element }) {
        if (value) {
            return element === event.target;
        }
        else {
            return true;
        }
    },
};
const descriptorPattern = /^(?:(?:([^.]+?)\+)?(.+?)(?:\.(.+?))?(?:@(window|document))?->)?(.+?)(?:#([^:]+?))(?::(.+))?$/;
function parseActionDescriptorString(descriptorString) {
    const source = descriptorString.trim();
    const matches = source.match(descriptorPattern) || [];
    let eventName = matches[2];
    let keyFilter = matches[3];
    if (keyFilter && !["keydown", "keyup", "keypress"].includes(eventName)) {
        eventName += `.${keyFilter}`;
        keyFilter = "";
    }
    return {
        eventTarget: parseEventTarget(matches[4]),
        eventName,
        eventOptions: matches[7] ? parseEventOptions(matches[7]) : {},
        identifier: matches[5],
        methodName: matches[6],
        keyFilter: matches[1] || keyFilter,
    };
}
function parseEventTarget(eventTargetName) {
    if (eventTargetName == "window") {
        return window;
    }
    else if (eventTargetName == "document") {
        return document;
    }
}
function parseEventOptions(eventOptions) {
    return eventOptions
        .split(":")
        .reduce((options, token) => Object.assign(options, { [token.replace(/^!/, "")]: !/^!/.test(token) }), {});
}
function stringifyEventTarget(eventTarget) {
    if (eventTarget == window) {
        return "window";
    }
    else if (eventTarget == document) {
        return "document";
    }
}

function camelize(value) {
    return value.replace(/(?:[_-])([a-z0-9])/g, (_, char) => char.toUpperCase());
}
function namespaceCamelize(value) {
    return camelize(value.replace(/--/g, "-").replace(/__/g, "_"));
}
function capitalize(value) {
    return value.charAt(0).toUpperCase() + value.slice(1);
}
function dasherize(value) {
    return value.replace(/([A-Z])/g, (_, char) => `-${char.toLowerCase()}`);
}
function tokenize(value) {
    return value.match(/[^\s]+/g) || [];
}

function isSomething(object) {
    return object !== null && object !== undefined;
}
function hasProperty(object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
}

const allModifiers = ["meta", "ctrl", "alt", "shift"];
class Action {
    constructor(element, index, descriptor, schema) {
        this.element = element;
        this.index = index;
        this.eventTarget = descriptor.eventTarget || element;
        this.eventName = descriptor.eventName || getDefaultEventNameForElement(element) || error("missing event name");
        this.eventOptions = descriptor.eventOptions || {};
        this.identifier = descriptor.identifier || error("missing identifier");
        this.methodName = descriptor.methodName || error("missing method name");
        this.keyFilter = descriptor.keyFilter || "";
        this.schema = schema;
    }
    static forToken(token, schema) {
        return new this(token.element, token.index, parseActionDescriptorString(token.content), schema);
    }
    toString() {
        const eventFilter = this.keyFilter ? `.${this.keyFilter}` : "";
        const eventTarget = this.eventTargetName ? `@${this.eventTargetName}` : "";
        return `${this.eventName}${eventFilter}${eventTarget}->${this.identifier}#${this.methodName}`;
    }
    shouldIgnoreKeyboardEvent(event) {
        if (!this.keyFilter) {
            return false;
        }
        const filters = this.keyFilter.split("+");
        if (this.keyFilterDissatisfied(event, filters)) {
            return true;
        }
        const standardFilter = filters.filter((key) => !allModifiers.includes(key))[0];
        if (!standardFilter) {
            return false;
        }
        if (!hasProperty(this.keyMappings, standardFilter)) {
            error(`contains unknown key filter: ${this.keyFilter}`);
        }
        return this.keyMappings[standardFilter].toLowerCase() !== event.key.toLowerCase();
    }
    shouldIgnoreMouseEvent(event) {
        if (!this.keyFilter) {
            return false;
        }
        const filters = [this.keyFilter];
        if (this.keyFilterDissatisfied(event, filters)) {
            return true;
        }
        return false;
    }
    get params() {
        const params = {};
        const pattern = new RegExp(`^data-${this.identifier}-(.+)-param$`, "i");
        for (const { name, value } of Array.from(this.element.attributes)) {
            const match = name.match(pattern);
            const key = match && match[1];
            if (key) {
                params[camelize(key)] = typecast(value);
            }
        }
        return params;
    }
    get eventTargetName() {
        return stringifyEventTarget(this.eventTarget);
    }
    get keyMappings() {
        return this.schema.keyMappings;
    }
    keyFilterDissatisfied(event, filters) {
        const [meta, ctrl, alt, shift] = allModifiers.map((modifier) => filters.includes(modifier));
        return event.metaKey !== meta || event.ctrlKey !== ctrl || event.altKey !== alt || event.shiftKey !== shift;
    }
}
const defaultEventNames = {
    a: () => "click",
    button: () => "click",
    form: () => "submit",
    details: () => "toggle",
    input: (e) => (e.getAttribute("type") == "submit" ? "click" : "input"),
    select: () => "change",
    textarea: () => "input",
};
function getDefaultEventNameForElement(element) {
    const tagName = element.tagName.toLowerCase();
    if (tagName in defaultEventNames) {
        return defaultEventNames[tagName](element);
    }
}
function error(message) {
    throw new Error(message);
}
function typecast(value) {
    try {
        return JSON.parse(value);
    }
    catch (o_O) {
        return value;
    }
}

class Binding {
    constructor(context, action) {
        this.context = context;
        this.action = action;
    }
    get index() {
        return this.action.index;
    }
    get eventTarget() {
        return this.action.eventTarget;
    }
    get eventOptions() {
        return this.action.eventOptions;
    }
    get identifier() {
        return this.context.identifier;
    }
    handleEvent(event) {
        const actionEvent = this.prepareActionEvent(event);
        if (this.willBeInvokedByEvent(event) && this.applyEventModifiers(actionEvent)) {
            this.invokeWithEvent(actionEvent);
        }
    }
    get eventName() {
        return this.action.eventName;
    }
    get method() {
        const method = this.controller[this.methodName];
        if (typeof method == "function") {
            return method;
        }
        throw new Error(`Action "${this.action}" references undefined method "${this.methodName}"`);
    }
    applyEventModifiers(event) {
        const { element } = this.action;
        const { actionDescriptorFilters } = this.context.application;
        const { controller } = this.context;
        let passes = true;
        for (const [name, value] of Object.entries(this.eventOptions)) {
            if (name in actionDescriptorFilters) {
                const filter = actionDescriptorFilters[name];
                passes = passes && filter({ name, value, event, element, controller });
            }
            else {
                continue;
            }
        }
        return passes;
    }
    prepareActionEvent(event) {
        return Object.assign(event, { params: this.action.params });
    }
    invokeWithEvent(event) {
        const { target, currentTarget } = event;
        try {
            this.method.call(this.controller, event);
            this.context.logDebugActivity(this.methodName, { event, target, currentTarget, action: this.methodName });
        }
        catch (error) {
            const { identifier, controller, element, index } = this;
            const detail = { identifier, controller, element, index, event };
            this.context.handleError(error, `invoking action "${this.action}"`, detail);
        }
    }
    willBeInvokedByEvent(event) {
        const eventTarget = event.target;
        if (event instanceof KeyboardEvent && this.action.shouldIgnoreKeyboardEvent(event)) {
            return false;
        }
        if (event instanceof MouseEvent && this.action.shouldIgnoreMouseEvent(event)) {
            return false;
        }
        if (this.element === eventTarget) {
            return true;
        }
        else if (eventTarget instanceof Element && this.element.contains(eventTarget)) {
            return this.scope.containsElement(eventTarget);
        }
        else {
            return this.scope.containsElement(this.action.element);
        }
    }
    get controller() {
        return this.context.controller;
    }
    get methodName() {
        return this.action.methodName;
    }
    get element() {
        return this.scope.element;
    }
    get scope() {
        return this.context.scope;
    }
}

class ElementObserver {
    constructor(element, delegate) {
        this.mutationObserverInit = { attributes: true, childList: true, subtree: true };
        this.element = element;
        this.started = false;
        this.delegate = delegate;
        this.elements = new Set();
        this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.refresh();
        }
    }
    pause(callback) {
        if (this.started) {
            this.mutationObserver.disconnect();
            this.started = false;
        }
        callback();
        if (!this.started) {
            this.mutationObserver.observe(this.element, this.mutationObserverInit);
            this.started = true;
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) {
            const matches = new Set(this.matchElementsInTree());
            for (const element of Array.from(this.elements)) {
                if (!matches.has(element)) {
                    this.removeElement(element);
                }
            }
            for (const element of Array.from(matches)) {
                this.addElement(element);
            }
        }
    }
    processMutations(mutations) {
        if (this.started) {
            for (const mutation of mutations) {
                this.processMutation(mutation);
            }
        }
    }
    processMutation(mutation) {
        if (mutation.type == "attributes") {
            this.processAttributeChange(mutation.target, mutation.attributeName);
        }
        else if (mutation.type == "childList") {
            this.processRemovedNodes(mutation.removedNodes);
            this.processAddedNodes(mutation.addedNodes);
        }
    }
    processAttributeChange(element, attributeName) {
        if (this.elements.has(element)) {
            if (this.delegate.elementAttributeChanged && this.matchElement(element)) {
                this.delegate.elementAttributeChanged(element, attributeName);
            }
            else {
                this.removeElement(element);
            }
        }
        else if (this.matchElement(element)) {
            this.addElement(element);
        }
    }
    processRemovedNodes(nodes) {
        for (const node of Array.from(nodes)) {
            const element = this.elementFromNode(node);
            if (element) {
                this.processTree(element, this.removeElement);
            }
        }
    }
    processAddedNodes(nodes) {
        for (const node of Array.from(nodes)) {
            const element = this.elementFromNode(node);
            if (element && this.elementIsActive(element)) {
                this.processTree(element, this.addElement);
            }
        }
    }
    matchElement(element) {
        return this.delegate.matchElement(element);
    }
    matchElementsInTree(tree = this.element) {
        return this.delegate.matchElementsInTree(tree);
    }
    processTree(tree, processor) {
        for (const element of this.matchElementsInTree(tree)) {
            processor.call(this, element);
        }
    }
    elementFromNode(node) {
        if (node.nodeType == Node.ELEMENT_NODE) {
            return node;
        }
    }
    elementIsActive(element) {
        if (element.isConnected != this.element.isConnected) {
            return false;
        }
        else {
            return this.element.contains(element);
        }
    }
    addElement(element) {
        if (!this.elements.has(element)) {
            if (this.elementIsActive(element)) {
                this.elements.add(element);
                if (this.delegate.elementMatched) {
                    this.delegate.elementMatched(element);
                }
            }
        }
    }
    removeElement(element) {
        if (this.elements.has(element)) {
            this.elements.delete(element);
            if (this.delegate.elementUnmatched) {
                this.delegate.elementUnmatched(element);
            }
        }
    }
}

class AttributeObserver {
    constructor(element, attributeName, delegate) {
        this.attributeName = attributeName;
        this.delegate = delegate;
        this.elementObserver = new ElementObserver(element, this);
    }
    get element() {
        return this.elementObserver.element;
    }
    get selector() {
        return `[${this.attributeName}]`;
    }
    start() {
        this.elementObserver.start();
    }
    pause(callback) {
        this.elementObserver.pause(callback);
    }
    stop() {
        this.elementObserver.stop();
    }
    refresh() {
        this.elementObserver.refresh();
    }
    get started() {
        return this.elementObserver.started;
    }
    matchElement(element) {
        return element.hasAttribute(this.attributeName);
    }
    matchElementsInTree(tree) {
        const match = this.matchElement(tree) ? [tree] : [];
        const matches = Array.from(tree.querySelectorAll(this.selector));
        return match.concat(matches);
    }
    elementMatched(element) {
        if (this.delegate.elementMatchedAttribute) {
            this.delegate.elementMatchedAttribute(element, this.attributeName);
        }
    }
    elementUnmatched(element) {
        if (this.delegate.elementUnmatchedAttribute) {
            this.delegate.elementUnmatchedAttribute(element, this.attributeName);
        }
    }
    elementAttributeChanged(element, attributeName) {
        if (this.delegate.elementAttributeValueChanged && this.attributeName == attributeName) {
            this.delegate.elementAttributeValueChanged(element, attributeName);
        }
    }
}

function add(map, key, value) {
    fetch(map, key).add(value);
}
function del(map, key, value) {
    fetch(map, key).delete(value);
    prune(map, key);
}
function fetch(map, key) {
    let values = map.get(key);
    if (!values) {
        values = new Set();
        map.set(key, values);
    }
    return values;
}
function prune(map, key) {
    const values = map.get(key);
    if (values != null && values.size == 0) {
        map.delete(key);
    }
}

class Multimap {
    constructor() {
        this.valuesByKey = new Map();
    }
    get keys() {
        return Array.from(this.valuesByKey.keys());
    }
    get values() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((values, set) => values.concat(Array.from(set)), []);
    }
    get size() {
        const sets = Array.from(this.valuesByKey.values());
        return sets.reduce((size, set) => size + set.size, 0);
    }
    add(key, value) {
        add(this.valuesByKey, key, value);
    }
    delete(key, value) {
        del(this.valuesByKey, key, value);
    }
    has(key, value) {
        const values = this.valuesByKey.get(key);
        return values != null && values.has(value);
    }
    hasKey(key) {
        return this.valuesByKey.has(key);
    }
    hasValue(value) {
        const sets = Array.from(this.valuesByKey.values());
        return sets.some((set) => set.has(value));
    }
    getValuesForKey(key) {
        const values = this.valuesByKey.get(key);
        return values ? Array.from(values) : [];
    }
    getKeysForValue(value) {
        return Array.from(this.valuesByKey)
            .filter(([_key, values]) => values.has(value))
            .map(([key, _values]) => key);
    }
}

class IndexedMultimap extends Multimap {
    constructor() {
        super();
        this.keysByValue = new Map();
    }
    get values() {
        return Array.from(this.keysByValue.keys());
    }
    add(key, value) {
        super.add(key, value);
        add(this.keysByValue, value, key);
    }
    delete(key, value) {
        super.delete(key, value);
        del(this.keysByValue, value, key);
    }
    hasValue(value) {
        return this.keysByValue.has(value);
    }
    getKeysForValue(value) {
        const set = this.keysByValue.get(value);
        return set ? Array.from(set) : [];
    }
}

class SelectorObserver {
    constructor(element, selector, delegate, details) {
        this._selector = selector;
        this.details = details;
        this.elementObserver = new ElementObserver(element, this);
        this.delegate = delegate;
        this.matchesByElement = new Multimap();
    }
    get started() {
        return this.elementObserver.started;
    }
    get selector() {
        return this._selector;
    }
    set selector(selector) {
        this._selector = selector;
        this.refresh();
    }
    start() {
        this.elementObserver.start();
    }
    pause(callback) {
        this.elementObserver.pause(callback);
    }
    stop() {
        this.elementObserver.stop();
    }
    refresh() {
        this.elementObserver.refresh();
    }
    get element() {
        return this.elementObserver.element;
    }
    matchElement(element) {
        const { selector } = this;
        if (selector) {
            const matches = element.matches(selector);
            if (this.delegate.selectorMatchElement) {
                return matches && this.delegate.selectorMatchElement(element, this.details);
            }
            return matches;
        }
        else {
            return false;
        }
    }
    matchElementsInTree(tree) {
        const { selector } = this;
        if (selector) {
            const match = this.matchElement(tree) ? [tree] : [];
            const matches = Array.from(tree.querySelectorAll(selector)).filter((match) => this.matchElement(match));
            return match.concat(matches);
        }
        else {
            return [];
        }
    }
    elementMatched(element) {
        const { selector } = this;
        if (selector) {
            this.selectorMatched(element, selector);
        }
    }
    elementUnmatched(element) {
        const selectors = this.matchesByElement.getKeysForValue(element);
        for (const selector of selectors) {
            this.selectorUnmatched(element, selector);
        }
    }
    elementAttributeChanged(element, _attributeName) {
        const { selector } = this;
        if (selector) {
            const matches = this.matchElement(element);
            const matchedBefore = this.matchesByElement.has(selector, element);
            if (matches && !matchedBefore) {
                this.selectorMatched(element, selector);
            }
            else if (!matches && matchedBefore) {
                this.selectorUnmatched(element, selector);
            }
        }
    }
    selectorMatched(element, selector) {
        this.delegate.selectorMatched(element, selector, this.details);
        this.matchesByElement.add(selector, element);
    }
    selectorUnmatched(element, selector) {
        this.delegate.selectorUnmatched(element, selector, this.details);
        this.matchesByElement.delete(selector, element);
    }
}

class StringMapObserver {
    constructor(element, delegate) {
        this.element = element;
        this.delegate = delegate;
        this.started = false;
        this.stringMap = new Map();
        this.mutationObserver = new MutationObserver((mutations) => this.processMutations(mutations));
    }
    start() {
        if (!this.started) {
            this.started = true;
            this.mutationObserver.observe(this.element, { attributes: true, attributeOldValue: true });
            this.refresh();
        }
    }
    stop() {
        if (this.started) {
            this.mutationObserver.takeRecords();
            this.mutationObserver.disconnect();
            this.started = false;
        }
    }
    refresh() {
        if (this.started) {
            for (const attributeName of this.knownAttributeNames) {
                this.refreshAttribute(attributeName, null);
            }
        }
    }
    processMutations(mutations) {
        if (this.started) {
            for (const mutation of mutations) {
                this.processMutation(mutation);
            }
        }
    }
    processMutation(mutation) {
        const attributeName = mutation.attributeName;
        if (attributeName) {
            this.refreshAttribute(attributeName, mutation.oldValue);
        }
    }
    refreshAttribute(attributeName, oldValue) {
        const key = this.delegate.getStringMapKeyForAttribute(attributeName);
        if (key != null) {
            if (!this.stringMap.has(attributeName)) {
                this.stringMapKeyAdded(key, attributeName);
            }
            const value = this.element.getAttribute(attributeName);
            if (this.stringMap.get(attributeName) != value) {
                this.stringMapValueChanged(value, key, oldValue);
            }
            if (value == null) {
                const oldValue = this.stringMap.get(attributeName);
                this.stringMap.delete(attributeName);
                if (oldValue)
                    this.stringMapKeyRemoved(key, attributeName, oldValue);
            }
            else {
                this.stringMap.set(attributeName, value);
            }
        }
    }
    stringMapKeyAdded(key, attributeName) {
        if (this.delegate.stringMapKeyAdded) {
            this.delegate.stringMapKeyAdded(key, attributeName);
        }
    }
    stringMapValueChanged(value, key, oldValue) {
        if (this.delegate.stringMapValueChanged) {
            this.delegate.stringMapValueChanged(value, key, oldValue);
        }
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        if (this.delegate.stringMapKeyRemoved) {
            this.delegate.stringMapKeyRemoved(key, attributeName, oldValue);
        }
    }
    get knownAttributeNames() {
        return Array.from(new Set(this.currentAttributeNames.concat(this.recordedAttributeNames)));
    }
    get currentAttributeNames() {
        return Array.from(this.element.attributes).map((attribute) => attribute.name);
    }
    get recordedAttributeNames() {
        return Array.from(this.stringMap.keys());
    }
}

class TokenListObserver {
    constructor(element, attributeName, delegate) {
        this.attributeObserver = new AttributeObserver(element, attributeName, this);
        this.delegate = delegate;
        this.tokensByElement = new Multimap();
    }
    get started() {
        return this.attributeObserver.started;
    }
    start() {
        this.attributeObserver.start();
    }
    pause(callback) {
        this.attributeObserver.pause(callback);
    }
    stop() {
        this.attributeObserver.stop();
    }
    refresh() {
        this.attributeObserver.refresh();
    }
    get element() {
        return this.attributeObserver.element;
    }
    get attributeName() {
        return this.attributeObserver.attributeName;
    }
    elementMatchedAttribute(element) {
        this.tokensMatched(this.readTokensForElement(element));
    }
    elementAttributeValueChanged(element) {
        const [unmatchedTokens, matchedTokens] = this.refreshTokensForElement(element);
        this.tokensUnmatched(unmatchedTokens);
        this.tokensMatched(matchedTokens);
    }
    elementUnmatchedAttribute(element) {
        this.tokensUnmatched(this.tokensByElement.getValuesForKey(element));
    }
    tokensMatched(tokens) {
        tokens.forEach((token) => this.tokenMatched(token));
    }
    tokensUnmatched(tokens) {
        tokens.forEach((token) => this.tokenUnmatched(token));
    }
    tokenMatched(token) {
        this.delegate.tokenMatched(token);
        this.tokensByElement.add(token.element, token);
    }
    tokenUnmatched(token) {
        this.delegate.tokenUnmatched(token);
        this.tokensByElement.delete(token.element, token);
    }
    refreshTokensForElement(element) {
        const previousTokens = this.tokensByElement.getValuesForKey(element);
        const currentTokens = this.readTokensForElement(element);
        const firstDifferingIndex = zip(previousTokens, currentTokens).findIndex(([previousToken, currentToken]) => !tokensAreEqual(previousToken, currentToken));
        if (firstDifferingIndex == -1) {
            return [[], []];
        }
        else {
            return [previousTokens.slice(firstDifferingIndex), currentTokens.slice(firstDifferingIndex)];
        }
    }
    readTokensForElement(element) {
        const attributeName = this.attributeName;
        const tokenString = element.getAttribute(attributeName) || "";
        return parseTokenString(tokenString, element, attributeName);
    }
}
function parseTokenString(tokenString, element, attributeName) {
    return tokenString
        .trim()
        .split(/\s+/)
        .filter((content) => content.length)
        .map((content, index) => ({ element, attributeName, content, index }));
}
function zip(left, right) {
    const length = Math.max(left.length, right.length);
    return Array.from({ length }, (_, index) => [left[index], right[index]]);
}
function tokensAreEqual(left, right) {
    return left && right && left.index == right.index && left.content == right.content;
}

class ValueListObserver {
    constructor(element, attributeName, delegate) {
        this.tokenListObserver = new TokenListObserver(element, attributeName, this);
        this.delegate = delegate;
        this.parseResultsByToken = new WeakMap();
        this.valuesByTokenByElement = new WeakMap();
    }
    get started() {
        return this.tokenListObserver.started;
    }
    start() {
        this.tokenListObserver.start();
    }
    stop() {
        this.tokenListObserver.stop();
    }
    refresh() {
        this.tokenListObserver.refresh();
    }
    get element() {
        return this.tokenListObserver.element;
    }
    get attributeName() {
        return this.tokenListObserver.attributeName;
    }
    tokenMatched(token) {
        const { element } = token;
        const { value } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).set(token, value);
            this.delegate.elementMatchedValue(element, value);
        }
    }
    tokenUnmatched(token) {
        const { element } = token;
        const { value } = this.fetchParseResultForToken(token);
        if (value) {
            this.fetchValuesByTokenForElement(element).delete(token);
            this.delegate.elementUnmatchedValue(element, value);
        }
    }
    fetchParseResultForToken(token) {
        let parseResult = this.parseResultsByToken.get(token);
        if (!parseResult) {
            parseResult = this.parseToken(token);
            this.parseResultsByToken.set(token, parseResult);
        }
        return parseResult;
    }
    fetchValuesByTokenForElement(element) {
        let valuesByToken = this.valuesByTokenByElement.get(element);
        if (!valuesByToken) {
            valuesByToken = new Map();
            this.valuesByTokenByElement.set(element, valuesByToken);
        }
        return valuesByToken;
    }
    parseToken(token) {
        try {
            const value = this.delegate.parseValueForToken(token);
            return { value };
        }
        catch (error) {
            return { error };
        }
    }
}

class BindingObserver {
    constructor(context, delegate) {
        this.context = context;
        this.delegate = delegate;
        this.bindingsByAction = new Map();
    }
    start() {
        if (!this.valueListObserver) {
            this.valueListObserver = new ValueListObserver(this.element, this.actionAttribute, this);
            this.valueListObserver.start();
        }
    }
    stop() {
        if (this.valueListObserver) {
            this.valueListObserver.stop();
            delete this.valueListObserver;
            this.disconnectAllActions();
        }
    }
    get element() {
        return this.context.element;
    }
    get identifier() {
        return this.context.identifier;
    }
    get actionAttribute() {
        return this.schema.actionAttribute;
    }
    get schema() {
        return this.context.schema;
    }
    get bindings() {
        return Array.from(this.bindingsByAction.values());
    }
    connectAction(action) {
        const binding = new Binding(this.context, action);
        this.bindingsByAction.set(action, binding);
        this.delegate.bindingConnected(binding);
    }
    disconnectAction(action) {
        const binding = this.bindingsByAction.get(action);
        if (binding) {
            this.bindingsByAction.delete(action);
            this.delegate.bindingDisconnected(binding);
        }
    }
    disconnectAllActions() {
        this.bindings.forEach((binding) => this.delegate.bindingDisconnected(binding, true));
        this.bindingsByAction.clear();
    }
    parseValueForToken(token) {
        const action = Action.forToken(token, this.schema);
        if (action.identifier == this.identifier) {
            return action;
        }
    }
    elementMatchedValue(element, action) {
        this.connectAction(action);
    }
    elementUnmatchedValue(element, action) {
        this.disconnectAction(action);
    }
}

class ValueObserver {
    constructor(context, receiver) {
        this.context = context;
        this.receiver = receiver;
        this.stringMapObserver = new StringMapObserver(this.element, this);
        this.valueDescriptorMap = this.controller.valueDescriptorMap;
    }
    start() {
        this.stringMapObserver.start();
        this.invokeChangedCallbacksForDefaultValues();
    }
    stop() {
        this.stringMapObserver.stop();
    }
    get element() {
        return this.context.element;
    }
    get controller() {
        return this.context.controller;
    }
    getStringMapKeyForAttribute(attributeName) {
        if (attributeName in this.valueDescriptorMap) {
            return this.valueDescriptorMap[attributeName].name;
        }
    }
    stringMapKeyAdded(key, attributeName) {
        const descriptor = this.valueDescriptorMap[attributeName];
        if (!this.hasValue(key)) {
            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), descriptor.writer(descriptor.defaultValue));
        }
    }
    stringMapValueChanged(value, name, oldValue) {
        const descriptor = this.valueDescriptorNameMap[name];
        if (value === null)
            return;
        if (oldValue === null) {
            oldValue = descriptor.writer(descriptor.defaultValue);
        }
        this.invokeChangedCallback(name, value, oldValue);
    }
    stringMapKeyRemoved(key, attributeName, oldValue) {
        const descriptor = this.valueDescriptorNameMap[key];
        if (this.hasValue(key)) {
            this.invokeChangedCallback(key, descriptor.writer(this.receiver[key]), oldValue);
        }
        else {
            this.invokeChangedCallback(key, descriptor.writer(descriptor.defaultValue), oldValue);
        }
    }
    invokeChangedCallbacksForDefaultValues() {
        for (const { key, name, defaultValue, writer } of this.valueDescriptors) {
            if (defaultValue != undefined && !this.controller.data.has(key)) {
                this.invokeChangedCallback(name, writer(defaultValue), undefined);
            }
        }
    }
    invokeChangedCallback(name, rawValue, rawOldValue) {
        const changedMethodName = `${name}Changed`;
        const changedMethod = this.receiver[changedMethodName];
        if (typeof changedMethod == "function") {
            const descriptor = this.valueDescriptorNameMap[name];
            try {
                const value = descriptor.reader(rawValue);
                let oldValue = rawOldValue;
                if (rawOldValue) {
                    oldValue = descriptor.reader(rawOldValue);
                }
                changedMethod.call(this.receiver, value, oldValue);
            }
            catch (error) {
                if (error instanceof TypeError) {
                    error.message = `Stimulus Value "${this.context.identifier}.${descriptor.name}" - ${error.message}`;
                }
                throw error;
            }
        }
    }
    get valueDescriptors() {
        const { valueDescriptorMap } = this;
        return Object.keys(valueDescriptorMap).map((key) => valueDescriptorMap[key]);
    }
    get valueDescriptorNameMap() {
        const descriptors = {};
        Object.keys(this.valueDescriptorMap).forEach((key) => {
            const descriptor = this.valueDescriptorMap[key];
            descriptors[descriptor.name] = descriptor;
        });
        return descriptors;
    }
    hasValue(attributeName) {
        const descriptor = this.valueDescriptorNameMap[attributeName];
        const hasMethodName = `has${capitalize(descriptor.name)}`;
        return this.receiver[hasMethodName];
    }
}

class TargetObserver {
    constructor(context, delegate) {
        this.context = context;
        this.delegate = delegate;
        this.targetsByName = new Multimap();
    }
    start() {
        if (!this.tokenListObserver) {
            this.tokenListObserver = new TokenListObserver(this.element, this.attributeName, this);
            this.tokenListObserver.start();
        }
    }
    stop() {
        if (this.tokenListObserver) {
            this.disconnectAllTargets();
            this.tokenListObserver.stop();
            delete this.tokenListObserver;
        }
    }
    tokenMatched({ element, content: name }) {
        if (this.scope.containsElement(element)) {
            this.connectTarget(element, name);
        }
    }
    tokenUnmatched({ element, content: name }) {
        this.disconnectTarget(element, name);
    }
    connectTarget(element, name) {
        var _a;
        if (!this.targetsByName.has(name, element)) {
            this.targetsByName.add(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetConnected(element, name));
        }
    }
    disconnectTarget(element, name) {
        var _a;
        if (this.targetsByName.has(name, element)) {
            this.targetsByName.delete(name, element);
            (_a = this.tokenListObserver) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.targetDisconnected(element, name));
        }
    }
    disconnectAllTargets() {
        for (const name of this.targetsByName.keys) {
            for (const element of this.targetsByName.getValuesForKey(name)) {
                this.disconnectTarget(element, name);
            }
        }
    }
    get attributeName() {
        return `data-${this.context.identifier}-target`;
    }
    get element() {
        return this.context.element;
    }
    get scope() {
        return this.context.scope;
    }
}

function readInheritableStaticArrayValues(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return Array.from(ancestors.reduce((values, constructor) => {
        getOwnStaticArrayValues(constructor, propertyName).forEach((name) => values.add(name));
        return values;
    }, new Set()));
}
function readInheritableStaticObjectPairs(constructor, propertyName) {
    const ancestors = getAncestorsForConstructor(constructor);
    return ancestors.reduce((pairs, constructor) => {
        pairs.push(...getOwnStaticObjectPairs(constructor, propertyName));
        return pairs;
    }, []);
}
function getAncestorsForConstructor(constructor) {
    const ancestors = [];
    while (constructor) {
        ancestors.push(constructor);
        constructor = Object.getPrototypeOf(constructor);
    }
    return ancestors.reverse();
}
function getOwnStaticArrayValues(constructor, propertyName) {
    const definition = constructor[propertyName];
    return Array.isArray(definition) ? definition : [];
}
function getOwnStaticObjectPairs(constructor, propertyName) {
    const definition = constructor[propertyName];
    return definition ? Object.keys(definition).map((key) => [key, definition[key]]) : [];
}

class OutletObserver {
    constructor(context, delegate) {
        this.started = false;
        this.context = context;
        this.delegate = delegate;
        this.outletsByName = new Multimap();
        this.outletElementsByName = new Multimap();
        this.selectorObserverMap = new Map();
        this.attributeObserverMap = new Map();
    }
    start() {
        if (!this.started) {
            this.outletDefinitions.forEach((outletName) => {
                this.setupSelectorObserverForOutlet(outletName);
                this.setupAttributeObserverForOutlet(outletName);
            });
            this.started = true;
            this.dependentContexts.forEach((context) => context.refresh());
        }
    }
    refresh() {
        this.selectorObserverMap.forEach((observer) => observer.refresh());
        this.attributeObserverMap.forEach((observer) => observer.refresh());
    }
    stop() {
        if (this.started) {
            this.started = false;
            this.disconnectAllOutlets();
            this.stopSelectorObservers();
            this.stopAttributeObservers();
        }
    }
    stopSelectorObservers() {
        if (this.selectorObserverMap.size > 0) {
            this.selectorObserverMap.forEach((observer) => observer.stop());
            this.selectorObserverMap.clear();
        }
    }
    stopAttributeObservers() {
        if (this.attributeObserverMap.size > 0) {
            this.attributeObserverMap.forEach((observer) => observer.stop());
            this.attributeObserverMap.clear();
        }
    }
    selectorMatched(element, _selector, { outletName }) {
        const outlet = this.getOutlet(element, outletName);
        if (outlet) {
            this.connectOutlet(outlet, element, outletName);
        }
    }
    selectorUnmatched(element, _selector, { outletName }) {
        const outlet = this.getOutletFromMap(element, outletName);
        if (outlet) {
            this.disconnectOutlet(outlet, element, outletName);
        }
    }
    selectorMatchElement(element, { outletName }) {
        const selector = this.selector(outletName);
        const hasOutlet = this.hasOutlet(element, outletName);
        const hasOutletController = element.matches(`[${this.schema.controllerAttribute}~=${outletName}]`);
        if (selector) {
            return hasOutlet && hasOutletController && element.matches(selector);
        }
        else {
            return false;
        }
    }
    elementMatchedAttribute(_element, attributeName) {
        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);
        if (outletName) {
            this.updateSelectorObserverForOutlet(outletName);
        }
    }
    elementAttributeValueChanged(_element, attributeName) {
        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);
        if (outletName) {
            this.updateSelectorObserverForOutlet(outletName);
        }
    }
    elementUnmatchedAttribute(_element, attributeName) {
        const outletName = this.getOutletNameFromOutletAttributeName(attributeName);
        if (outletName) {
            this.updateSelectorObserverForOutlet(outletName);
        }
    }
    connectOutlet(outlet, element, outletName) {
        var _a;
        if (!this.outletElementsByName.has(outletName, element)) {
            this.outletsByName.add(outletName, outlet);
            this.outletElementsByName.add(outletName, element);
            (_a = this.selectorObserverMap.get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletConnected(outlet, element, outletName));
        }
    }
    disconnectOutlet(outlet, element, outletName) {
        var _a;
        if (this.outletElementsByName.has(outletName, element)) {
            this.outletsByName.delete(outletName, outlet);
            this.outletElementsByName.delete(outletName, element);
            (_a = this.selectorObserverMap
                .get(outletName)) === null || _a === void 0 ? void 0 : _a.pause(() => this.delegate.outletDisconnected(outlet, element, outletName));
        }
    }
    disconnectAllOutlets() {
        for (const outletName of this.outletElementsByName.keys) {
            for (const element of this.outletElementsByName.getValuesForKey(outletName)) {
                for (const outlet of this.outletsByName.getValuesForKey(outletName)) {
                    this.disconnectOutlet(outlet, element, outletName);
                }
            }
        }
    }
    updateSelectorObserverForOutlet(outletName) {
        const observer = this.selectorObserverMap.get(outletName);
        if (observer) {
            observer.selector = this.selector(outletName);
        }
    }
    setupSelectorObserverForOutlet(outletName) {
        const selector = this.selector(outletName);
        const selectorObserver = new SelectorObserver(document.body, selector, this, { outletName });
        this.selectorObserverMap.set(outletName, selectorObserver);
        selectorObserver.start();
    }
    setupAttributeObserverForOutlet(outletName) {
        const attributeName = this.attributeNameForOutletName(outletName);
        const attributeObserver = new AttributeObserver(this.scope.element, attributeName, this);
        this.attributeObserverMap.set(outletName, attributeObserver);
        attributeObserver.start();
    }
    selector(outletName) {
        return this.scope.outlets.getSelectorForOutletName(outletName);
    }
    attributeNameForOutletName(outletName) {
        return this.scope.schema.outletAttributeForScope(this.identifier, outletName);
    }
    getOutletNameFromOutletAttributeName(attributeName) {
        return this.outletDefinitions.find((outletName) => this.attributeNameForOutletName(outletName) === attributeName);
    }
    get outletDependencies() {
        const dependencies = new Multimap();
        this.router.modules.forEach((module) => {
            const constructor = module.definition.controllerConstructor;
            const outlets = readInheritableStaticArrayValues(constructor, "outlets");
            outlets.forEach((outlet) => dependencies.add(outlet, module.identifier));
        });
        return dependencies;
    }
    get outletDefinitions() {
        return this.outletDependencies.getKeysForValue(this.identifier);
    }
    get dependentControllerIdentifiers() {
        return this.outletDependencies.getValuesForKey(this.identifier);
    }
    get dependentContexts() {
        const identifiers = this.dependentControllerIdentifiers;
        return this.router.contexts.filter((context) => identifiers.includes(context.identifier));
    }
    hasOutlet(element, outletName) {
        return !!this.getOutlet(element, outletName) || !!this.getOutletFromMap(element, outletName);
    }
    getOutlet(element, outletName) {
        return this.application.getControllerForElementAndIdentifier(element, outletName);
    }
    getOutletFromMap(element, outletName) {
        return this.outletsByName.getValuesForKey(outletName).find((outlet) => outlet.element === element);
    }
    get scope() {
        return this.context.scope;
    }
    get schema() {
        return this.context.schema;
    }
    get identifier() {
        return this.context.identifier;
    }
    get application() {
        return this.context.application;
    }
    get router() {
        return this.application.router;
    }
}

class Context {
    constructor(module, scope) {
        this.logDebugActivity = (functionName, detail = {}) => {
            const { identifier, controller, element } = this;
            detail = Object.assign({ identifier, controller, element }, detail);
            this.application.logDebugActivity(this.identifier, functionName, detail);
        };
        this.module = module;
        this.scope = scope;
        this.controller = new module.controllerConstructor(this);
        this.bindingObserver = new BindingObserver(this, this.dispatcher);
        this.valueObserver = new ValueObserver(this, this.controller);
        this.targetObserver = new TargetObserver(this, this);
        this.outletObserver = new OutletObserver(this, this);
        try {
            this.controller.initialize();
            this.logDebugActivity("initialize");
        }
        catch (error) {
            this.handleError(error, "initializing controller");
        }
    }
    connect() {
        this.bindingObserver.start();
        this.valueObserver.start();
        this.targetObserver.start();
        this.outletObserver.start();
        try {
            this.controller.connect();
            this.logDebugActivity("connect");
        }
        catch (error) {
            this.handleError(error, "connecting controller");
        }
    }
    refresh() {
        this.outletObserver.refresh();
    }
    disconnect() {
        try {
            this.controller.disconnect();
            this.logDebugActivity("disconnect");
        }
        catch (error) {
            this.handleError(error, "disconnecting controller");
        }
        this.outletObserver.stop();
        this.targetObserver.stop();
        this.valueObserver.stop();
        this.bindingObserver.stop();
    }
    get application() {
        return this.module.application;
    }
    get identifier() {
        return this.module.identifier;
    }
    get schema() {
        return this.application.schema;
    }
    get dispatcher() {
        return this.application.dispatcher;
    }
    get element() {
        return this.scope.element;
    }
    get parentElement() {
        return this.element.parentElement;
    }
    handleError(error, message, detail = {}) {
        const { identifier, controller, element } = this;
        detail = Object.assign({ identifier, controller, element }, detail);
        this.application.handleError(error, `Error ${message}`, detail);
    }
    targetConnected(element, name) {
        this.invokeControllerMethod(`${name}TargetConnected`, element);
    }
    targetDisconnected(element, name) {
        this.invokeControllerMethod(`${name}TargetDisconnected`, element);
    }
    outletConnected(outlet, element, name) {
        this.invokeControllerMethod(`${namespaceCamelize(name)}OutletConnected`, outlet, element);
    }
    outletDisconnected(outlet, element, name) {
        this.invokeControllerMethod(`${namespaceCamelize(name)}OutletDisconnected`, outlet, element);
    }
    invokeControllerMethod(methodName, ...args) {
        const controller = this.controller;
        if (typeof controller[methodName] == "function") {
            controller[methodName](...args);
        }
    }
}

function bless(constructor) {
    return shadow(constructor, getBlessedProperties(constructor));
}
function shadow(constructor, properties) {
    const shadowConstructor = extend(constructor);
    const shadowProperties = getShadowProperties(constructor.prototype, properties);
    Object.defineProperties(shadowConstructor.prototype, shadowProperties);
    return shadowConstructor;
}
function getBlessedProperties(constructor) {
    const blessings = readInheritableStaticArrayValues(constructor, "blessings");
    return blessings.reduce((blessedProperties, blessing) => {
        const properties = blessing(constructor);
        for (const key in properties) {
            const descriptor = blessedProperties[key] || {};
            blessedProperties[key] = Object.assign(descriptor, properties[key]);
        }
        return blessedProperties;
    }, {});
}
function getShadowProperties(prototype, properties) {
    return getOwnKeys(properties).reduce((shadowProperties, key) => {
        const descriptor = getShadowedDescriptor(prototype, properties, key);
        if (descriptor) {
            Object.assign(shadowProperties, { [key]: descriptor });
        }
        return shadowProperties;
    }, {});
}
function getShadowedDescriptor(prototype, properties, key) {
    const shadowingDescriptor = Object.getOwnPropertyDescriptor(prototype, key);
    const shadowedByValue = shadowingDescriptor && "value" in shadowingDescriptor;
    if (!shadowedByValue) {
        const descriptor = Object.getOwnPropertyDescriptor(properties, key).value;
        if (shadowingDescriptor) {
            descriptor.get = shadowingDescriptor.get || descriptor.get;
            descriptor.set = shadowingDescriptor.set || descriptor.set;
        }
        return descriptor;
    }
}
const getOwnKeys = (() => {
    if (typeof Object.getOwnPropertySymbols == "function") {
        return (object) => [...Object.getOwnPropertyNames(object), ...Object.getOwnPropertySymbols(object)];
    }
    else {
        return Object.getOwnPropertyNames;
    }
})();
const extend = (() => {
    function extendWithReflect(constructor) {
        function extended() {
            return Reflect.construct(constructor, arguments, new.target);
        }
        extended.prototype = Object.create(constructor.prototype, {
            constructor: { value: extended },
        });
        Reflect.setPrototypeOf(extended, constructor);
        return extended;
    }
    function testReflectExtension() {
        const a = function () {
            this.a.call(this);
        };
        const b = extendWithReflect(a);
        b.prototype.a = function () { };
        return new b();
    }
    try {
        testReflectExtension();
        return extendWithReflect;
    }
    catch (error) {
        return (constructor) => class extended extends constructor {
        };
    }
})();

function blessDefinition(definition) {
    return {
        identifier: definition.identifier,
        controllerConstructor: bless(definition.controllerConstructor),
    };
}

class Module {
    constructor(application, definition) {
        this.application = application;
        this.definition = blessDefinition(definition);
        this.contextsByScope = new WeakMap();
        this.connectedContexts = new Set();
    }
    get identifier() {
        return this.definition.identifier;
    }
    get controllerConstructor() {
        return this.definition.controllerConstructor;
    }
    get contexts() {
        return Array.from(this.connectedContexts);
    }
    connectContextForScope(scope) {
        const context = this.fetchContextForScope(scope);
        this.connectedContexts.add(context);
        context.connect();
    }
    disconnectContextForScope(scope) {
        const context = this.contextsByScope.get(scope);
        if (context) {
            this.connectedContexts.delete(context);
            context.disconnect();
        }
    }
    fetchContextForScope(scope) {
        let context = this.contextsByScope.get(scope);
        if (!context) {
            context = new Context(this, scope);
            this.contextsByScope.set(scope, context);
        }
        return context;
    }
}

class ClassMap {
    constructor(scope) {
        this.scope = scope;
    }
    has(name) {
        return this.data.has(this.getDataKey(name));
    }
    get(name) {
        return this.getAll(name)[0];
    }
    getAll(name) {
        const tokenString = this.data.get(this.getDataKey(name)) || "";
        return tokenize(tokenString);
    }
    getAttributeName(name) {
        return this.data.getAttributeNameForKey(this.getDataKey(name));
    }
    getDataKey(name) {
        return `${name}-class`;
    }
    get data() {
        return this.scope.data;
    }
}

class DataMap {
    constructor(scope) {
        this.scope = scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.getAttribute(name);
    }
    set(key, value) {
        const name = this.getAttributeNameForKey(key);
        this.element.setAttribute(name, value);
        return this.get(key);
    }
    has(key) {
        const name = this.getAttributeNameForKey(key);
        return this.element.hasAttribute(name);
    }
    delete(key) {
        if (this.has(key)) {
            const name = this.getAttributeNameForKey(key);
            this.element.removeAttribute(name);
            return true;
        }
        else {
            return false;
        }
    }
    getAttributeNameForKey(key) {
        return `data-${this.identifier}-${dasherize(key)}`;
    }
}

class Guide {
    constructor(logger) {
        this.warnedKeysByObject = new WeakMap();
        this.logger = logger;
    }
    warn(object, key, message) {
        let warnedKeys = this.warnedKeysByObject.get(object);
        if (!warnedKeys) {
            warnedKeys = new Set();
            this.warnedKeysByObject.set(object, warnedKeys);
        }
        if (!warnedKeys.has(key)) {
            warnedKeys.add(key);
            this.logger.warn(message, object);
        }
    }
}

function attributeValueContainsToken(attributeName, token) {
    return `[${attributeName}~="${token}"]`;
}

class TargetSet {
    constructor(scope) {
        this.scope = scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get schema() {
        return this.scope.schema;
    }
    has(targetName) {
        return this.find(targetName) != null;
    }
    find(...targetNames) {
        return targetNames.reduce((target, targetName) => target || this.findTarget(targetName) || this.findLegacyTarget(targetName), undefined);
    }
    findAll(...targetNames) {
        return targetNames.reduce((targets, targetName) => [
            ...targets,
            ...this.findAllTargets(targetName),
            ...this.findAllLegacyTargets(targetName),
        ], []);
    }
    findTarget(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findElement(selector);
    }
    findAllTargets(targetName) {
        const selector = this.getSelectorForTargetName(targetName);
        return this.scope.findAllElements(selector);
    }
    getSelectorForTargetName(targetName) {
        const attributeName = this.schema.targetAttributeForScope(this.identifier);
        return attributeValueContainsToken(attributeName, targetName);
    }
    findLegacyTarget(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.deprecate(this.scope.findElement(selector), targetName);
    }
    findAllLegacyTargets(targetName) {
        const selector = this.getLegacySelectorForTargetName(targetName);
        return this.scope.findAllElements(selector).map((element) => this.deprecate(element, targetName));
    }
    getLegacySelectorForTargetName(targetName) {
        const targetDescriptor = `${this.identifier}.${targetName}`;
        return attributeValueContainsToken(this.schema.targetAttribute, targetDescriptor);
    }
    deprecate(element, targetName) {
        if (element) {
            const { identifier } = this;
            const attributeName = this.schema.targetAttribute;
            const revisedAttributeName = this.schema.targetAttributeForScope(identifier);
            this.guide.warn(element, `target:${targetName}`, `Please replace ${attributeName}="${identifier}.${targetName}" with ${revisedAttributeName}="${targetName}". ` +
                `The ${attributeName} attribute is deprecated and will be removed in a future version of Stimulus.`);
        }
        return element;
    }
    get guide() {
        return this.scope.guide;
    }
}

class OutletSet {
    constructor(scope, controllerElement) {
        this.scope = scope;
        this.controllerElement = controllerElement;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get schema() {
        return this.scope.schema;
    }
    has(outletName) {
        return this.find(outletName) != null;
    }
    find(...outletNames) {
        return outletNames.reduce((outlet, outletName) => outlet || this.findOutlet(outletName), undefined);
    }
    findAll(...outletNames) {
        return outletNames.reduce((outlets, outletName) => [...outlets, ...this.findAllOutlets(outletName)], []);
    }
    getSelectorForOutletName(outletName) {
        const attributeName = this.schema.outletAttributeForScope(this.identifier, outletName);
        return this.controllerElement.getAttribute(attributeName);
    }
    findOutlet(outletName) {
        const selector = this.getSelectorForOutletName(outletName);
        if (selector)
            return this.findElement(selector, outletName);
    }
    findAllOutlets(outletName) {
        const selector = this.getSelectorForOutletName(outletName);
        return selector ? this.findAllElements(selector, outletName) : [];
    }
    findElement(selector, outletName) {
        const elements = this.scope.queryElements(selector);
        return elements.filter((element) => this.matchesElement(element, selector, outletName))[0];
    }
    findAllElements(selector, outletName) {
        const elements = this.scope.queryElements(selector);
        return elements.filter((element) => this.matchesElement(element, selector, outletName));
    }
    matchesElement(element, selector, outletName) {
        const controllerAttribute = element.getAttribute(this.scope.schema.controllerAttribute) || "";
        return element.matches(selector) && controllerAttribute.split(" ").includes(outletName);
    }
}

class Scope {
    constructor(schema, element, identifier, logger) {
        this.targets = new TargetSet(this);
        this.classes = new ClassMap(this);
        this.data = new DataMap(this);
        this.containsElement = (element) => {
            return element.closest(this.controllerSelector) === this.element;
        };
        this.schema = schema;
        this.element = element;
        this.identifier = identifier;
        this.guide = new Guide(logger);
        this.outlets = new OutletSet(this.documentScope, element);
    }
    findElement(selector) {
        return this.element.matches(selector) ? this.element : this.queryElements(selector).find(this.containsElement);
    }
    findAllElements(selector) {
        return [
            ...(this.element.matches(selector) ? [this.element] : []),
            ...this.queryElements(selector).filter(this.containsElement),
        ];
    }
    queryElements(selector) {
        return Array.from(this.element.querySelectorAll(selector));
    }
    get controllerSelector() {
        return attributeValueContainsToken(this.schema.controllerAttribute, this.identifier);
    }
    get isDocumentScope() {
        return this.element === document.documentElement;
    }
    get documentScope() {
        return this.isDocumentScope
            ? this
            : new Scope(this.schema, document.documentElement, this.identifier, this.guide.logger);
    }
}

class ScopeObserver {
    constructor(element, schema, delegate) {
        this.element = element;
        this.schema = schema;
        this.delegate = delegate;
        this.valueListObserver = new ValueListObserver(this.element, this.controllerAttribute, this);
        this.scopesByIdentifierByElement = new WeakMap();
        this.scopeReferenceCounts = new WeakMap();
    }
    start() {
        this.valueListObserver.start();
    }
    stop() {
        this.valueListObserver.stop();
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    parseValueForToken(token) {
        const { element, content: identifier } = token;
        return this.parseValueForElementAndIdentifier(element, identifier);
    }
    parseValueForElementAndIdentifier(element, identifier) {
        const scopesByIdentifier = this.fetchScopesByIdentifierForElement(element);
        let scope = scopesByIdentifier.get(identifier);
        if (!scope) {
            scope = this.delegate.createScopeForElementAndIdentifier(element, identifier);
            scopesByIdentifier.set(identifier, scope);
        }
        return scope;
    }
    elementMatchedValue(element, value) {
        const referenceCount = (this.scopeReferenceCounts.get(value) || 0) + 1;
        this.scopeReferenceCounts.set(value, referenceCount);
        if (referenceCount == 1) {
            this.delegate.scopeConnected(value);
        }
    }
    elementUnmatchedValue(element, value) {
        const referenceCount = this.scopeReferenceCounts.get(value);
        if (referenceCount) {
            this.scopeReferenceCounts.set(value, referenceCount - 1);
            if (referenceCount == 1) {
                this.delegate.scopeDisconnected(value);
            }
        }
    }
    fetchScopesByIdentifierForElement(element) {
        let scopesByIdentifier = this.scopesByIdentifierByElement.get(element);
        if (!scopesByIdentifier) {
            scopesByIdentifier = new Map();
            this.scopesByIdentifierByElement.set(element, scopesByIdentifier);
        }
        return scopesByIdentifier;
    }
}

class Router {
    constructor(application) {
        this.application = application;
        this.scopeObserver = new ScopeObserver(this.element, this.schema, this);
        this.scopesByIdentifier = new Multimap();
        this.modulesByIdentifier = new Map();
    }
    get element() {
        return this.application.element;
    }
    get schema() {
        return this.application.schema;
    }
    get logger() {
        return this.application.logger;
    }
    get controllerAttribute() {
        return this.schema.controllerAttribute;
    }
    get modules() {
        return Array.from(this.modulesByIdentifier.values());
    }
    get contexts() {
        return this.modules.reduce((contexts, module) => contexts.concat(module.contexts), []);
    }
    start() {
        this.scopeObserver.start();
    }
    stop() {
        this.scopeObserver.stop();
    }
    loadDefinition(definition) {
        this.unloadIdentifier(definition.identifier);
        const module = new Module(this.application, definition);
        this.connectModule(module);
        const afterLoad = definition.controllerConstructor.afterLoad;
        if (afterLoad) {
            afterLoad.call(definition.controllerConstructor, definition.identifier, this.application);
        }
    }
    unloadIdentifier(identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) {
            this.disconnectModule(module);
        }
    }
    getContextForElementAndIdentifier(element, identifier) {
        const module = this.modulesByIdentifier.get(identifier);
        if (module) {
            return module.contexts.find((context) => context.element == element);
        }
    }
    proposeToConnectScopeForElementAndIdentifier(element, identifier) {
        const scope = this.scopeObserver.parseValueForElementAndIdentifier(element, identifier);
        if (scope) {
            this.scopeObserver.elementMatchedValue(scope.element, scope);
        }
        else {
            console.error(`Couldn't find or create scope for identifier: "${identifier}" and element:`, element);
        }
    }
    handleError(error, message, detail) {
        this.application.handleError(error, message, detail);
    }
    createScopeForElementAndIdentifier(element, identifier) {
        return new Scope(this.schema, element, identifier, this.logger);
    }
    scopeConnected(scope) {
        this.scopesByIdentifier.add(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) {
            module.connectContextForScope(scope);
        }
    }
    scopeDisconnected(scope) {
        this.scopesByIdentifier.delete(scope.identifier, scope);
        const module = this.modulesByIdentifier.get(scope.identifier);
        if (module) {
            module.disconnectContextForScope(scope);
        }
    }
    connectModule(module) {
        this.modulesByIdentifier.set(module.identifier, module);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach((scope) => module.connectContextForScope(scope));
    }
    disconnectModule(module) {
        this.modulesByIdentifier.delete(module.identifier);
        const scopes = this.scopesByIdentifier.getValuesForKey(module.identifier);
        scopes.forEach((scope) => module.disconnectContextForScope(scope));
    }
}

const defaultSchema = {
    controllerAttribute: "data-controller",
    actionAttribute: "data-action",
    targetAttribute: "data-target",
    targetAttributeForScope: (identifier) => `data-${identifier}-target`,
    outletAttributeForScope: (identifier, outlet) => `data-${identifier}-${outlet}-outlet`,
    keyMappings: Object.assign(Object.assign({ enter: "Enter", tab: "Tab", esc: "Escape", space: " ", up: "ArrowUp", down: "ArrowDown", left: "ArrowLeft", right: "ArrowRight", home: "Home", end: "End", page_up: "PageUp", page_down: "PageDown" }, objectFromEntries("abcdefghijklmnopqrstuvwxyz".split("").map((c) => [c, c]))), objectFromEntries("0123456789".split("").map((n) => [n, n]))),
};
function objectFromEntries(array) {
    return array.reduce((memo, [k, v]) => (Object.assign(Object.assign({}, memo), { [k]: v })), {});
}

class Application {
    constructor(element = document.documentElement, schema = defaultSchema) {
        this.logger = console;
        this.debug = false;
        this.logDebugActivity = (identifier, functionName, detail = {}) => {
            if (this.debug) {
                this.logFormattedMessage(identifier, functionName, detail);
            }
        };
        this.element = element;
        this.schema = schema;
        this.dispatcher = new Dispatcher(this);
        this.router = new Router(this);
        this.actionDescriptorFilters = Object.assign({}, defaultActionDescriptorFilters);
    }
    static start(element, schema) {
        const application = new this(element, schema);
        application.start();
        return application;
    }
    async start() {
        await domReady();
        this.logDebugActivity("application", "starting");
        this.dispatcher.start();
        this.router.start();
        this.logDebugActivity("application", "start");
    }
    stop() {
        this.logDebugActivity("application", "stopping");
        this.dispatcher.stop();
        this.router.stop();
        this.logDebugActivity("application", "stop");
    }
    register(identifier, controllerConstructor) {
        this.load({ identifier, controllerConstructor });
    }
    registerActionOption(name, filter) {
        this.actionDescriptorFilters[name] = filter;
    }
    load(head, ...rest) {
        const definitions = Array.isArray(head) ? head : [head, ...rest];
        definitions.forEach((definition) => {
            if (definition.controllerConstructor.shouldLoad) {
                this.router.loadDefinition(definition);
            }
        });
    }
    unload(head, ...rest) {
        const identifiers = Array.isArray(head) ? head : [head, ...rest];
        identifiers.forEach((identifier) => this.router.unloadIdentifier(identifier));
    }
    get controllers() {
        return this.router.contexts.map((context) => context.controller);
    }
    getControllerForElementAndIdentifier(element, identifier) {
        const context = this.router.getContextForElementAndIdentifier(element, identifier);
        return context ? context.controller : null;
    }
    handleError(error, message, detail) {
        var _a;
        this.logger.error(`%s\n\n%o\n\n%o`, message, error, detail);
        (_a = window.onerror) === null || _a === void 0 ? void 0 : _a.call(window, message, "", 0, 0, error);
    }
    logFormattedMessage(identifier, functionName, detail = {}) {
        detail = Object.assign({ application: this }, detail);
        this.logger.groupCollapsed(`${identifier} #${functionName}`);
        this.logger.log("details:", Object.assign({}, detail));
        this.logger.groupEnd();
    }
}
function domReady() {
    return new Promise((resolve) => {
        if (document.readyState == "loading") {
            document.addEventListener("DOMContentLoaded", () => resolve());
        }
        else {
            resolve();
        }
    });
}

function ClassPropertiesBlessing(constructor) {
    const classes = readInheritableStaticArrayValues(constructor, "classes");
    return classes.reduce((properties, classDefinition) => {
        return Object.assign(properties, propertiesForClassDefinition(classDefinition));
    }, {});
}
function propertiesForClassDefinition(key) {
    return {
        [`${key}Class`]: {
            get() {
                const { classes } = this;
                if (classes.has(key)) {
                    return classes.get(key);
                }
                else {
                    const attribute = classes.getAttributeName(key);
                    throw new Error(`Missing attribute "${attribute}"`);
                }
            },
        },
        [`${key}Classes`]: {
            get() {
                return this.classes.getAll(key);
            },
        },
        [`has${capitalize(key)}Class`]: {
            get() {
                return this.classes.has(key);
            },
        },
    };
}

function OutletPropertiesBlessing(constructor) {
    const outlets = readInheritableStaticArrayValues(constructor, "outlets");
    return outlets.reduce((properties, outletDefinition) => {
        return Object.assign(properties, propertiesForOutletDefinition(outletDefinition));
    }, {});
}
function getOutletController(controller, element, identifier) {
    return controller.application.getControllerForElementAndIdentifier(element, identifier);
}
function getControllerAndEnsureConnectedScope(controller, element, outletName) {
    let outletController = getOutletController(controller, element, outletName);
    if (outletController)
        return outletController;
    controller.application.router.proposeToConnectScopeForElementAndIdentifier(element, outletName);
    outletController = getOutletController(controller, element, outletName);
    if (outletController)
        return outletController;
}
function propertiesForOutletDefinition(name) {
    const camelizedName = namespaceCamelize(name);
    return {
        [`${camelizedName}Outlet`]: {
            get() {
                const outletElement = this.outlets.find(name);
                const selector = this.outlets.getSelectorForOutletName(name);
                if (outletElement) {
                    const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);
                    if (outletController)
                        return outletController;
                    throw new Error(`The provided outlet element is missing an outlet controller "${name}" instance for host controller "${this.identifier}"`);
                }
                throw new Error(`Missing outlet element "${name}" for host controller "${this.identifier}". Stimulus couldn't find a matching outlet element using selector "${selector}".`);
            },
        },
        [`${camelizedName}Outlets`]: {
            get() {
                const outlets = this.outlets.findAll(name);
                if (outlets.length > 0) {
                    return outlets
                        .map((outletElement) => {
                        const outletController = getControllerAndEnsureConnectedScope(this, outletElement, name);
                        if (outletController)
                            return outletController;
                        console.warn(`The provided outlet element is missing an outlet controller "${name}" instance for host controller "${this.identifier}"`, outletElement);
                    })
                        .filter((controller) => controller);
                }
                return [];
            },
        },
        [`${camelizedName}OutletElement`]: {
            get() {
                const outletElement = this.outlets.find(name);
                const selector = this.outlets.getSelectorForOutletName(name);
                if (outletElement) {
                    return outletElement;
                }
                else {
                    throw new Error(`Missing outlet element "${name}" for host controller "${this.identifier}". Stimulus couldn't find a matching outlet element using selector "${selector}".`);
                }
            },
        },
        [`${camelizedName}OutletElements`]: {
            get() {
                return this.outlets.findAll(name);
            },
        },
        [`has${capitalize(camelizedName)}Outlet`]: {
            get() {
                return this.outlets.has(name);
            },
        },
    };
}

function TargetPropertiesBlessing(constructor) {
    const targets = readInheritableStaticArrayValues(constructor, "targets");
    return targets.reduce((properties, targetDefinition) => {
        return Object.assign(properties, propertiesForTargetDefinition(targetDefinition));
    }, {});
}
function propertiesForTargetDefinition(name) {
    return {
        [`${name}Target`]: {
            get() {
                const target = this.targets.find(name);
                if (target) {
                    return target;
                }
                else {
                    throw new Error(`Missing target element "${name}" for "${this.identifier}" controller`);
                }
            },
        },
        [`${name}Targets`]: {
            get() {
                return this.targets.findAll(name);
            },
        },
        [`has${capitalize(name)}Target`]: {
            get() {
                return this.targets.has(name);
            },
        },
    };
}

function ValuePropertiesBlessing(constructor) {
    const valueDefinitionPairs = readInheritableStaticObjectPairs(constructor, "values");
    const propertyDescriptorMap = {
        valueDescriptorMap: {
            get() {
                return valueDefinitionPairs.reduce((result, valueDefinitionPair) => {
                    const valueDescriptor = parseValueDefinitionPair(valueDefinitionPair, this.identifier);
                    const attributeName = this.data.getAttributeNameForKey(valueDescriptor.key);
                    return Object.assign(result, { [attributeName]: valueDescriptor });
                }, {});
            },
        },
    };
    return valueDefinitionPairs.reduce((properties, valueDefinitionPair) => {
        return Object.assign(properties, propertiesForValueDefinitionPair(valueDefinitionPair));
    }, propertyDescriptorMap);
}
function propertiesForValueDefinitionPair(valueDefinitionPair, controller) {
    const definition = parseValueDefinitionPair(valueDefinitionPair, controller);
    const { key, name, reader: read, writer: write } = definition;
    return {
        [name]: {
            get() {
                const value = this.data.get(key);
                if (value !== null) {
                    return read(value);
                }
                else {
                    return definition.defaultValue;
                }
            },
            set(value) {
                if (value === undefined) {
                    this.data.delete(key);
                }
                else {
                    this.data.set(key, write(value));
                }
            },
        },
        [`has${capitalize(name)}`]: {
            get() {
                return this.data.has(key) || definition.hasCustomDefaultValue;
            },
        },
    };
}
function parseValueDefinitionPair([token, typeDefinition], controller) {
    return valueDescriptorForTokenAndTypeDefinition({
        controller,
        token,
        typeDefinition,
    });
}
function parseValueTypeConstant(constant) {
    switch (constant) {
        case Array:
            return "array";
        case Boolean:
            return "boolean";
        case Number:
            return "number";
        case Object:
            return "object";
        case String:
            return "string";
    }
}
function parseValueTypeDefault(defaultValue) {
    switch (typeof defaultValue) {
        case "boolean":
            return "boolean";
        case "number":
            return "number";
        case "string":
            return "string";
    }
    if (Array.isArray(defaultValue))
        return "array";
    if (Object.prototype.toString.call(defaultValue) === "[object Object]")
        return "object";
}
function parseValueTypeObject(payload) {
    const { controller, token, typeObject } = payload;
    const hasType = isSomething(typeObject.type);
    const hasDefault = isSomething(typeObject.default);
    const fullObject = hasType && hasDefault;
    const onlyType = hasType && !hasDefault;
    const onlyDefault = !hasType && hasDefault;
    const typeFromObject = parseValueTypeConstant(typeObject.type);
    const typeFromDefaultValue = parseValueTypeDefault(payload.typeObject.default);
    if (onlyType)
        return typeFromObject;
    if (onlyDefault)
        return typeFromDefaultValue;
    if (typeFromObject !== typeFromDefaultValue) {
        const propertyPath = controller ? `${controller}.${token}` : token;
        throw new Error(`The specified default value for the Stimulus Value "${propertyPath}" must match the defined type "${typeFromObject}". The provided default value of "${typeObject.default}" is of type "${typeFromDefaultValue}".`);
    }
    if (fullObject)
        return typeFromObject;
}
function parseValueTypeDefinition(payload) {
    const { controller, token, typeDefinition } = payload;
    const typeObject = { controller, token, typeObject: typeDefinition };
    const typeFromObject = parseValueTypeObject(typeObject);
    const typeFromDefaultValue = parseValueTypeDefault(typeDefinition);
    const typeFromConstant = parseValueTypeConstant(typeDefinition);
    const type = typeFromObject || typeFromDefaultValue || typeFromConstant;
    if (type)
        return type;
    const propertyPath = controller ? `${controller}.${typeDefinition}` : token;
    throw new Error(`Unknown value type "${propertyPath}" for "${token}" value`);
}
function defaultValueForDefinition(typeDefinition) {
    const constant = parseValueTypeConstant(typeDefinition);
    if (constant)
        return defaultValuesByType[constant];
    const hasDefault = hasProperty(typeDefinition, "default");
    const hasType = hasProperty(typeDefinition, "type");
    const typeObject = typeDefinition;
    if (hasDefault)
        return typeObject.default;
    if (hasType) {
        const { type } = typeObject;
        const constantFromType = parseValueTypeConstant(type);
        if (constantFromType)
            return defaultValuesByType[constantFromType];
    }
    return typeDefinition;
}
function valueDescriptorForTokenAndTypeDefinition(payload) {
    const { token, typeDefinition } = payload;
    const key = `${dasherize(token)}-value`;
    const type = parseValueTypeDefinition(payload);
    return {
        type,
        key,
        name: camelize(key),
        get defaultValue() {
            return defaultValueForDefinition(typeDefinition);
        },
        get hasCustomDefaultValue() {
            return parseValueTypeDefault(typeDefinition) !== undefined;
        },
        reader: readers[type],
        writer: writers[type] || writers.default,
    };
}
const defaultValuesByType = {
    get array() {
        return [];
    },
    boolean: false,
    number: 0,
    get object() {
        return {};
    },
    string: "",
};
const readers = {
    array(value) {
        const array = JSON.parse(value);
        if (!Array.isArray(array)) {
            throw new TypeError(`expected value of type "array" but instead got value "${value}" of type "${parseValueTypeDefault(array)}"`);
        }
        return array;
    },
    boolean(value) {
        return !(value == "0" || String(value).toLowerCase() == "false");
    },
    number(value) {
        return Number(value.replace(/_/g, ""));
    },
    object(value) {
        const object = JSON.parse(value);
        if (object === null || typeof object != "object" || Array.isArray(object)) {
            throw new TypeError(`expected value of type "object" but instead got value "${value}" of type "${parseValueTypeDefault(object)}"`);
        }
        return object;
    },
    string(value) {
        return value;
    },
};
const writers = {
    default: writeString,
    array: writeJSON,
    object: writeJSON,
};
function writeJSON(value) {
    return JSON.stringify(value);
}
function writeString(value) {
    return `${value}`;
}

class Controller {
    constructor(context) {
        this.context = context;
    }
    static get shouldLoad() {
        return true;
    }
    static afterLoad(_identifier, _application) {
        return;
    }
    get application() {
        return this.context.application;
    }
    get scope() {
        return this.context.scope;
    }
    get element() {
        return this.scope.element;
    }
    get identifier() {
        return this.scope.identifier;
    }
    get targets() {
        return this.scope.targets;
    }
    get outlets() {
        return this.scope.outlets;
    }
    get classes() {
        return this.scope.classes;
    }
    get data() {
        return this.scope.data;
    }
    initialize() {
    }
    connect() {
    }
    disconnect() {
    }
    dispatch(eventName, { target = this.element, detail = {}, prefix = this.identifier, bubbles = true, cancelable = true, } = {}) {
        const type = prefix ? `${prefix}:${eventName}` : eventName;
        const event = new CustomEvent(type, { detail, bubbles, cancelable });
        target.dispatchEvent(event);
        return event;
    }
}
Controller.blessings = [
    ClassPropertiesBlessing,
    TargetPropertiesBlessing,
    ValuePropertiesBlessing,
    OutletPropertiesBlessing,
];
Controller.targets = [];
Controller.outlets = [];
Controller.values = {};




/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   startStimulusApp: () => (/* binding */ startStimulusApp)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack/loader!@symfony/stimulus-bridge/controllers.json */ "./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json");



/*
Stimulus Webpack Helpers 1.0.0
Copyright © 2021 Basecamp, LLC
 */
function definitionsFromContext(context) {
    return context.keys()
        .map((key) => definitionForModuleWithContextAndKey(context, key))
        .filter((value) => value);
}
function definitionForModuleWithContextAndKey(context, key) {
    const identifier = identifierForContextKey(key);
    if (identifier) {
        return definitionForModuleAndIdentifier(context(key), identifier);
    }
}
function definitionForModuleAndIdentifier(module, identifier) {
    const controllerConstructor = module.default;
    if (typeof controllerConstructor == "function") {
        return { identifier, controllerConstructor };
    }
}
function identifierForContextKey(key) {
    const logicalName = (key.match(/^(?:\.\/)?(.+)(?:[_-]controller\..+?)$/) || [])[1];
    if (logicalName) {
        return logicalName.replace(/_/g, "-").replace(/\//g, "--");
    }
}

function startStimulusApp(context) {
    const application = _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Application.start();
    if (true) {
        application.debug = true;
    }
    if (context) {
        application.load(definitionsFromContext(context));
    }
    for (const controllerName in _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"]) {
        if (!_webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"].hasOwnProperty(controllerName)) {
            continue;
        }
        application.register(controllerName, _webpack_loader_symfony_stimulus_bridge_controllers_json__WEBPACK_IMPORTED_MODULE_1__["default"][controllerName]);
    }
    return application;
}




/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json":
/*!************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/dist/webpack/loader.js!./assets/controllers.json ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _symfony_ux_autocomplete_dist_controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @symfony/ux-autocomplete/dist/controller.js */ "./node_modules/@symfony/ux-autocomplete/dist/controller.js");
/* harmony import */ var tom_select_dist_css_tom_select_default_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tom-select/dist/css/tom-select.default.css */ "./node_modules/tom-select/dist/css/tom-select.default.css");
/* harmony import */ var _symfony_ux_dropzone_dist_controller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @symfony/ux-dropzone/dist/controller.js */ "./node_modules/@symfony/ux-dropzone/dist/controller.js");
/* harmony import */ var _symfony_ux_dropzone_dist_style_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @symfony/ux-dropzone/dist/style.min.css */ "./node_modules/@symfony/ux-dropzone/dist/style.min.css");
/* harmony import */ var _symfony_ux_live_component_dist_live_controller_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @symfony/ux-live-component/dist/live_controller.js */ "./node_modules/@symfony/ux-live-component/dist/live_controller.js");
/* harmony import */ var _symfony_ux_live_component_dist_live_min_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @symfony/ux-live-component/dist/live.min.css */ "./node_modules/@symfony/ux-live-component/dist/live.min.css");
/* harmony import */ var _symfony_ux_react_dist_render_controller_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @symfony/ux-react/dist/render_controller.js */ "./node_modules/@symfony/ux-react/dist/render_controller.js");
/* harmony import */ var _symfony_ux_toggle_password_dist_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @symfony/ux-toggle-password/dist/controller.js */ "./node_modules/@symfony/ux-toggle-password/dist/controller.js");
/* harmony import */ var _symfony_ux_toggle_password_dist_style_min_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @symfony/ux-toggle-password/dist/style.min.css */ "./node_modules/@symfony/ux-toggle-password/dist/style.min.css");









/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  'symfony--ux-autocomplete--autocomplete': _symfony_ux_autocomplete_dist_controller_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  'symfony--ux-dropzone--dropzone': _symfony_ux_dropzone_dist_controller_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  'live': _symfony_ux_live_component_dist_live_controller_js__WEBPACK_IMPORTED_MODULE_4__["default"],
  'symfony--ux-react--react': _symfony_ux_react_dist_render_controller_js__WEBPACK_IMPORTED_MODULE_6__["default"],
  'symfony--ux-toggle-password--toggle-password': _symfony_ux_toggle_password_dist_controller_js__WEBPACK_IMPORTED_MODULE_7__["default"],
});

/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/alert_controller.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/alert_controller.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var _symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @symfony/ux-live-component */ "./node_modules/@symfony/ux-live-component/dist/live_controller.js");
/* harmony import */ var _translator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../translator */ "./assets/translator.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sweetalert2 */ "./node_modules/sweetalert2/dist/sweetalert2.all.js");
/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var sweetalert2_src_sweetalert2_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! sweetalert2/src/sweetalert2.scss */ "./node_modules/sweetalert2/src/sweetalert2.scss");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return (0,_symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_1__.getComponent)(this.element);
            case 2:
              this.component = _context.sent;
            case 3:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "confirm",
    value: function confirm(e) {
      var _target$dataset$title,
        _target$dataset$text,
        _this = this;
      var target = e.currentTarget;
      e.preventDefault();
      var inputValidator = target.dataset.inputValidator;
      var mixin = sweetalert2__WEBPACK_IMPORTED_MODULE_3___default().mixin({
        customClass: {
          confirmButton: 'c-button c-button--style-default c-button--secondary',
          denyButton: 'c-button c-button--style-default c-button--danger'
        },
        buttonsStyling: false
      });
      var config = {
        title: (_target$dataset$title = target.dataset.title) !== null && _target$dataset$title !== void 0 ? _target$dataset$title : (0,_translator__WEBPACK_IMPORTED_MODULE_2__.trans)(_translator__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_TITLE, {}, 'js.alert'),
        html: (_target$dataset$text = target.dataset.text) !== null && _target$dataset$text !== void 0 ? _target$dataset$text : (0,_translator__WEBPACK_IMPORTED_MODULE_2__.trans)(_translator__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_TEXT, {}, 'js.alert'),
        showDenyButton: true,
        denyButtonText: (0,_translator__WEBPACK_IMPORTED_MODULE_2__.trans)(_translator__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_DENY_BUTTON_TEXT, {}, 'js.alert'),
        confirmButtonText: (0,_translator__WEBPACK_IMPORTED_MODULE_2__.trans)(_translator__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_BUTTON_TEXT, {}, 'js.alert')
      };
      var callback = function callback(result) {
        if (result.isConfirmed) {
          var action = target.dataset.actionName;
          if (action) {
            var directives = parseDirectives(action);
            var _iterator = _createForOfIteratorHelper(directives),
              _step;
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                var directive = _step.value;
                _this.component.action(directive.action, directive.named);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
          }
        }
      };
      if (inputValidator) {
        config.input = 'text';
        config.inputValidator = function (value) {
          return new Promise(function (resolve) {
            if (value === inputValidator) {
              resolve();
            } else {
              resolve((0,_translator__WEBPACK_IMPORTED_MODULE_2__.trans)(_translator__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_INPUT_VALIDATOR_TEXT, {
                value: inputValidator
              }));
            }
          });
        };
      }
      var swal = mixin.fire(config);
      if (callback) {
        swal.then(callback);
      }
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);

function parseDirectives(content) {
  var directives = [];
  if (!content) {
    return directives;
  }
  var currentActionName = '';
  var currentArgumentName = '';
  var currentArgumentValue = '';
  var currentArguments = [];
  var currentNamedArguments = {};
  var currentModifiers = [];
  var state = 'action';
  var getLastActionName = function getLastActionName() {
    if (currentActionName) {
      return currentActionName;
    }
    if (directives.length === 0) {
      throw new Error('Could not find any directives');
    }
    return directives[directives.length - 1].action;
  };
  var pushInstruction = function pushInstruction() {
    directives.push({
      action: currentActionName,
      args: currentArguments,
      named: currentNamedArguments,
      modifiers: currentModifiers,
      getString: function getString() {
        return content;
      }
    });
    currentActionName = '';
    currentArgumentName = '';
    currentArgumentValue = '';
    currentArguments = [];
    currentNamedArguments = {};
    currentModifiers = [];
    state = 'action';
  };
  var pushArgument = function pushArgument() {
    var mixedArgTypesError = function mixedArgTypesError() {
      throw new Error("Normal and named arguments cannot be mixed inside \"".concat(currentActionName, "()\""));
    };
    if (currentArgumentName) {
      if (currentArguments.length > 0) {
        mixedArgTypesError();
      }
      currentNamedArguments[currentArgumentName.trim()] = currentArgumentValue;
    } else {
      if (Object.keys(currentNamedArguments).length > 0) {
        mixedArgTypesError();
      }
      currentArguments.push(currentArgumentValue.trim());
    }
    currentArgumentName = '';
    currentArgumentValue = '';
  };
  var pushModifier = function pushModifier() {
    if (currentArguments.length > 1) {
      throw new Error("The modifier \"".concat(currentActionName, "()\" does not support multiple arguments."));
    }
    if (Object.keys(currentNamedArguments).length > 0) {
      throw new Error("The modifier \"".concat(currentActionName, "()\" does not support named arguments."));
    }
    currentModifiers.push({
      name: currentActionName,
      value: currentArguments.length > 0 ? currentArguments[0] : null
    });
    currentActionName = '';
    currentArgumentName = '';
    currentArguments = [];
    state = 'action';
  };
  for (var i = 0; i < content.length; i++) {
    var _char = content[i];
    switch (state) {
      case 'action':
        if (_char === '(') {
          state = 'arguments';
          break;
        }
        if (_char === ' ') {
          if (currentActionName) {
            pushInstruction();
          }
          break;
        }
        if (_char === '|') {
          pushModifier();
          break;
        }
        currentActionName += _char;
        break;
      case 'arguments':
        if (_char === ')') {
          pushArgument();
          state = 'after_arguments';
          break;
        }
        if (_char === ',') {
          pushArgument();
          break;
        }
        if (_char === '=') {
          currentArgumentName = currentArgumentValue;
          currentArgumentValue = '';
          break;
        }
        currentArgumentValue += _char;
        break;
      case 'after_arguments':
        if (_char === '|') {
          pushModifier();
          break;
        }
        if (_char !== ' ') {
          throw new Error("Missing space after ".concat(getLastActionName(), "()"));
        }
        pushInstruction();
        break;
    }
  }
  switch (state) {
    case 'action':
    case 'after_arguments':
      if (currentActionName) {
        pushInstruction();
      }
      break;
    default:
      throw new Error("Did you forget to add a closing \")\" after \"".concat(currentActionName, "\"?"));
  }
  return directives;
}

/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/customfile_controller.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/customfile_controller.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var _canopee_app_assets_js_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canopee_app/assets/js/utils */ "./assets/js/utils/index.ts");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "connect",
    value: function connect() {
      var _this = this;
      // check if the input change and upload the file to change the preview
      this.inputTarget.addEventListener('change', function (e) {
        _this.upload(e);
      });
    }
  }, {
    key: "upload",
    value: function upload(e) {
      var _this2 = this;
      var target = e.currentTarget;
      if (target.files && target.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
          var img = document.createElement('img');
          img.src = e.target.result;
          img.alt = target.files[0].name;
          _this2.previewTarget.innerHTML = '';
          _this2.previewTarget.appendChild(img);
        };
        reader.readAsDataURL(target.files[0]);
      }
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);
_defineProperty(_default, "targets", ['input', 'preview']);


/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/filters_controller.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/filters_controller.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "connect",
    value: function connect() {
      this.filter(this.filterTargets[0]);
    }
  }, {
    key: "filtered",
    value: function filtered(e) {
      var target = e.currentTarget;
      e.preventDefault();
      this.filter(target);
    }
  }, {
    key: "filter",
    value: function filter(target) {
      this.clear();
      target.classList.add('active');
      this.contentTargets.filter(function (content) {
        return content.dataset.filter === target.dataset.filter;
      }).forEach(function (content) {
        content.removeAttribute('hidden');
        content.classList.add('active');
      });
    }
  }, {
    key: "clear",
    value: function clear() {
      this.filterTargets.forEach(function (target) {
        target.classList.remove('active');
      });
      this.contentTargets.forEach(function (target) {
        target.setAttribute('hidden', 'hidden');
        target.classList.remove('active');
      });
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);
_defineProperty(_default, "targets", ['content', 'filter']);


/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/hello_controller.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


/*
 * This is an example Stimulus controller!
 *
 * Any element with a data-controller="hello" attribute will cause
 * this controller to be executed. The name "hello" comes from the filename:
 * hello_controller.js -> "hello"
 *
 * Delete this file or adapt it for your use!
 */
var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "connect",
    value: function connect() {
      this.element.textContent = 'Hello Stimulus! Edit me in assets/controllers/hello_controller.js';
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);


/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/sortable_controller.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/sortable_controller.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _default)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var _shopify_draggable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shopify/draggable */ "./node_modules/@shopify/draggable/build/esm/index.mjs");
/* harmony import */ var _symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @symfony/ux-live-component */ "./node_modules/@symfony/ux-live-component/dist/live_controller.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }



var _default = /*#__PURE__*/function (_Controller) {
  _inherits(_default, _Controller);
  var _super = _createSuper(_default);
  function _default() {
    _classCallCheck(this, _default);
    return _super.apply(this, arguments);
  }
  _createClass(_default, [{
    key: "initialize",
    value: function () {
      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var _this = this;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return (0,_symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_2__.getComponent)(this.element);
            case 2:
              this.component = _context.sent;
              this.isSortable = false;
              this.sortables = [];
              window.addEventListener('sortable:toggle-sortable', function () {
                return _this.toggleSortable();
              });
            case 6:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function initialize() {
        return _initialize.apply(this, arguments);
      }
      return initialize;
    }()
  }, {
    key: "connect",
    value: function connect() {
      this.initializeSortable();
    }
  }, {
    key: "initializeSortable",
    value: function () {
      var _initializeSortable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this2 = this;
        var component;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (this.isSortable) {
                _context2.next = 2;
                break;
              }
              return _context2.abrupt("return");
            case 2:
              _context2.next = 4;
              return (0,_symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_2__.getComponent)(this.element);
            case 4:
              component = _context2.sent;
              this.handleTargets.forEach(function (element) {
                element.classList.add('is-draggable-active');
                var sortable = _this2.sortable(element);
                _this2.sortables.push(sortable);
                if (component) {
                  if (_this2.updateActionValue) {
                    sortable.on('sortable:stop', function (e) {
                      var el = e.data.dragEvent.data.originalSource;
                      var _id = parseInt(el.getAttribute('_id'));
                      component.action(_this2.updateActionValue, {
                        instance: _id,
                        newPosition: e.newIndex
                      });
                    });
                  }
                }
              });
            case 6:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this);
      }));
      function initializeSortable() {
        return _initializeSortable.apply(this, arguments);
      }
      return initializeSortable;
    }()
  }, {
    key: "toggleSortable",
    value: function toggleSortable() {
      this.isSortable = !this.isSortable;
      if (this.isSortable) {
        this.initializeSortable();
      } else {
        this.sortables.forEach(function (sortable) {
          sortable.destroy();
        });
        this.handleTargets.forEach(function (element) {
          element.classList.remove('is-draggable-active');
        });
      }
    }
  }, {
    key: "sortable",
    value: function sortable(handle) {
      return new _shopify_draggable__WEBPACK_IMPORTED_MODULE_1__.Sortable(handle, {
        draggable: this.draggableValue,
        mirror: {
          constrainDimensions: true
        },
        plugins: [_shopify_draggable__WEBPACK_IMPORTED_MODULE_1__.Plugins.SortAnimation],
        swapAnimation: {
          duration: 200,
          easingFunction: 'ease-in-out'
        }
      });
    }
  }]);
  return _default;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);
_defineProperty(_default, "values", {
  draggable: String,
  updateAction: String
});
_defineProperty(_default, "targets", ['handle']);


/***/ }),

/***/ "./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/quill_controller.ts":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js!./assets/controllers/quill_controller.ts ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ default_1)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var quill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! quill */ "./node_modules/quill/dist/quill.js");
/* harmony import */ var quill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(quill__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var quill_dist_quill_snow_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! quill/dist/quill.snow.css */ "./node_modules/quill/dist/quill.snow.css");
/* harmony import */ var quill_dist_quill_bubble_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! quill/dist/quill.bubble.css */ "./node_modules/quill/dist/quill.bubble.css");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
// @ts-nocheck




var isQuillInitialized = false;
var default_1 = /*#__PURE__*/function (_Controller) {
  _inherits(default_1, _Controller);
  var _super = _createSuper(default_1);
  function default_1() {
    var _this;
    _classCallCheck(this, default_1);
    _this = _super.apply(this, arguments);
    _this.quill = null;
    return _this;
  }
  _createClass(default_1, [{
    key: "connect",
    value: function connect() {
      var _this2 = this;
      if (!isQuillInitialized) {
        isQuillInitialized = true;
        this.dispatchEvent('init', {
          Quill: (quill__WEBPACK_IMPORTED_MODULE_1___default())
        });
      }
      this.quill = new (quill__WEBPACK_IMPORTED_MODULE_1___default())(this.editorTarget, this.optionsValue);
      if (this.optionsValue.data) {
        this.quill.root.innerHTML = this.optionsValue.data;
      }
      this.quill.on('editor-change', function () {
        _this2.outputTarget.value = _this2.quill.root.innerHTML.replace(/"/g, '\'');
        // Dispatch change event on the output target when 0,5 seconds have passed
        // since the last change event was dispatched.
        clearTimeout(_this2.outputTarget.timeout);
        _this2.outputTarget.timeout = setTimeout(function () {
          _this2.outputTarget.dispatchEvent(new Event('change', {
            bubbles: true
          }));
        }, 500);
      });
      this.dispatchEvent('connect', {
        quill: this.quill
      });
    }
  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(name, payload) {
      this.dispatch(name, {
        detail: payload,
        prefix: 'quill'
      });
    }
  }]);
  return default_1;
}(_hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller);

default_1.targets = ['editor', 'output'];
default_1.values = {
  options: Object
};

/***/ }),

/***/ "./node_modules/@symfony/ux-autocomplete/dist/controller.js":
/*!******************************************************************!*\
  !*** ./node_modules/@symfony/ux-autocomplete/dist/controller.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ default_1)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");
/* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tom-select */ "./node_modules/tom-select/dist/js/tom-select.complete.js");
/* harmony import */ var tom_select__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tom_select__WEBPACK_IMPORTED_MODULE_1__);



/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

var _default_1_instances, _default_1_getCommonConfig, _default_1_createAutocomplete, _default_1_createAutocompleteWithHtmlContents, _default_1_createAutocompleteWithRemoteData, _default_1_stripTags, _default_1_mergeObjects, _default_1_createTomSelect;
class default_1 extends _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller {
    constructor() {
        super(...arguments);
        _default_1_instances.add(this);
        this.isObserving = false;
        this.hasLoadedChoicesPreviously = false;
    }
    initialize() {
        if (this.requiresLiveIgnore()) {
            this.element.setAttribute('data-live-ignore', '');
            if (this.element.id) {
                const label = document.querySelector(`label[for="${this.element.id}"]`);
                if (label) {
                    label.setAttribute('data-live-ignore', '');
                }
            }
        }
        else {
            if (!this.mutationObserver) {
                this.mutationObserver = new MutationObserver((mutations) => {
                    this.onMutations(mutations);
                });
            }
        }
    }
    connect() {
        if (this.urlValue) {
            this.tomSelect = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createAutocompleteWithRemoteData).call(this, this.urlValue, this.hasMinCharactersValue ? this.minCharactersValue : null);
            return;
        }
        if (this.optionsAsHtmlValue) {
            this.tomSelect = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createAutocompleteWithHtmlContents).call(this);
            return;
        }
        this.tomSelect = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createAutocomplete).call(this);
        this.startMutationObserver();
    }
    disconnect() {
        this.stopMutationObserver();
        this.tomSelect.destroy();
    }
    getMaxOptions() {
        return this.selectElement ? this.selectElement.options.length : 50;
    }
    get selectElement() {
        if (!(this.element instanceof HTMLSelectElement)) {
            return null;
        }
        return this.element;
    }
    get formElement() {
        if (!(this.element instanceof HTMLInputElement) && !(this.element instanceof HTMLSelectElement)) {
            throw new Error('Autocomplete Stimulus controller can only be used on an <input> or <select>.');
        }
        return this.element;
    }
    dispatchEvent(name, payload) {
        this.dispatch(name, { detail: payload, prefix: 'autocomplete' });
    }
    get preload() {
        if (!this.hasPreloadValue) {
            return 'focus';
        }
        if (this.preloadValue == 'false') {
            return false;
        }
        if (this.preloadValue == 'true') {
            return true;
        }
        return this.preloadValue;
    }
    resetTomSelect() {
        if (this.tomSelect) {
            this.stopMutationObserver();
            this.tomSelect.clearOptions();
            this.tomSelect.settings.maxOptions = this.getMaxOptions();
            this.tomSelect.sync();
            this.startMutationObserver();
        }
    }
    changeTomSelectDisabledState(isDisabled) {
        this.stopMutationObserver();
        if (isDisabled) {
            this.tomSelect.disable();
        }
        else {
            this.tomSelect.enable();
        }
        this.startMutationObserver();
    }
    updateTomSelectPlaceholder() {
        const input = this.element;
        let placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');
        if (!placeholder && !this.tomSelect.allowEmptyOption) {
            const option = input.querySelector('option[value=""]');
            if (option) {
                placeholder = option.textContent;
            }
        }
        if (placeholder) {
            this.stopMutationObserver();
            this.tomSelect.settings.placeholder = placeholder;
            this.tomSelect.control_input.setAttribute('placeholder', placeholder);
            this.startMutationObserver();
        }
    }
    startMutationObserver() {
        if (!this.isObserving && this.mutationObserver) {
            this.mutationObserver.observe(this.element, {
                childList: true,
                subtree: true,
                attributes: true,
                characterData: true,
            });
            this.isObserving = true;
        }
    }
    stopMutationObserver() {
        if (this.isObserving && this.mutationObserver) {
            this.mutationObserver.disconnect();
            this.isObserving = false;
        }
    }
    onMutations(mutations) {
        const addedOptionElements = [];
        const removedOptionElements = [];
        let hasAnOptionChanged = false;
        let changeDisabledState = false;
        let changePlaceholder = false;
        mutations.forEach((mutation) => {
            switch (mutation.type) {
                case 'childList':
                    if (mutation.target instanceof HTMLOptionElement) {
                        if (mutation.target.value === '') {
                            changePlaceholder = true;
                            break;
                        }
                        hasAnOptionChanged = true;
                        break;
                    }
                    mutation.addedNodes.forEach((node) => {
                        if (node instanceof HTMLOptionElement) {
                            if (removedOptionElements.includes(node)) {
                                removedOptionElements.splice(removedOptionElements.indexOf(node), 1);
                                return;
                            }
                            addedOptionElements.push(node);
                        }
                    });
                    mutation.removedNodes.forEach((node) => {
                        if (node instanceof HTMLOptionElement) {
                            if (addedOptionElements.includes(node)) {
                                addedOptionElements.splice(addedOptionElements.indexOf(node), 1);
                                return;
                            }
                            removedOptionElements.push(node);
                        }
                    });
                    break;
                case 'attributes':
                    if (mutation.target instanceof HTMLOptionElement) {
                        hasAnOptionChanged = true;
                        break;
                    }
                    if (mutation.target === this.element && mutation.attributeName === 'disabled') {
                        changeDisabledState = true;
                        break;
                    }
                    break;
                case 'characterData':
                    if (mutation.target instanceof Text && mutation.target.parentElement instanceof HTMLOptionElement) {
                        if (mutation.target.parentElement.value === '') {
                            changePlaceholder = true;
                            break;
                        }
                        hasAnOptionChanged = true;
                    }
            }
        });
        if (hasAnOptionChanged || addedOptionElements.length > 0 || removedOptionElements.length > 0) {
            this.resetTomSelect();
        }
        if (changeDisabledState) {
            this.changeTomSelectDisabledState(this.formElement.disabled);
        }
        if (changePlaceholder) {
            this.updateTomSelectPlaceholder();
        }
    }
    requiresLiveIgnore() {
        return this.element instanceof HTMLSelectElement && this.element.multiple;
    }
}
_default_1_instances = new WeakSet(), _default_1_getCommonConfig = function _default_1_getCommonConfig() {
    const plugins = {};
    const isMultiple = !this.selectElement || this.selectElement.multiple;
    if (!this.formElement.disabled && !isMultiple) {
        plugins.clear_button = { title: '' };
    }
    if (isMultiple) {
        plugins.remove_button = { title: '' };
    }
    if (this.urlValue) {
        plugins.virtual_scroll = {};
    }
    const render = {
        no_results: () => {
            return `<div class="no-results">${this.noResultsFoundTextValue}</div>`;
        },
    };
    const requiresLiveIgnore = this.requiresLiveIgnore();
    const config = {
        render,
        plugins,
        onItemAdd: () => {
            this.tomSelect.setTextboxValue('');
        },
        onInitialize: function () {
            if (requiresLiveIgnore) {
                const tomSelect = this;
                tomSelect.wrapper.setAttribute('data-live-ignore', '');
            }
        },
        closeAfterSelect: true,
    };
    if (!this.selectElement && !this.urlValue) {
        config.shouldLoad = () => false;
    }
    return __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_mergeObjects).call(this, config, this.tomSelectOptionsValue);
}, _default_1_createAutocomplete = function _default_1_createAutocomplete() {
    const config = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_mergeObjects).call(this, __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_getCommonConfig).call(this), {
        maxOptions: this.getMaxOptions(),
    });
    return __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createTomSelect).call(this, config);
}, _default_1_createAutocompleteWithHtmlContents = function _default_1_createAutocompleteWithHtmlContents() {
    const config = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_mergeObjects).call(this, __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_getCommonConfig).call(this), {
        maxOptions: this.getMaxOptions(),
        score: (search) => {
            const scoringFunction = this.tomSelect.getScoreFunction(search);
            return (item) => {
                return scoringFunction(Object.assign(Object.assign({}, item), { text: __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_stripTags).call(this, item.text) }));
            };
        },
        render: {
            item: function (item) {
                return `<div>${item.text}</div>`;
            },
            option: function (item) {
                return `<div>${item.text}</div>`;
            },
        },
    });
    return __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createTomSelect).call(this, config);
}, _default_1_createAutocompleteWithRemoteData = function _default_1_createAutocompleteWithRemoteData(autocompleteEndpointUrl, minCharacterLength) {
    const config = __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_mergeObjects).call(this, __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_getCommonConfig).call(this), {
        firstUrl: (query) => {
            const separator = autocompleteEndpointUrl.includes('?') ? '&' : '?';
            return `${autocompleteEndpointUrl}${separator}query=${encodeURIComponent(query)}`;
        },
        load: function (query, callback) {
            const url = this.getUrl(query);
            fetch(url)
                .then((response) => response.json())
                .then((json) => {
                this.setNextUrl(query, json.next_page);
                callback(json.results.options || json.results, json.results.optgroups || []);
            })
                .catch(() => callback([], []));
        },
        shouldLoad: (query) => {
            if (null !== minCharacterLength) {
                return query.length >= minCharacterLength;
            }
            if (this.hasLoadedChoicesPreviously) {
                return true;
            }
            if (query.length > 0) {
                this.hasLoadedChoicesPreviously = true;
            }
            return query.length >= 3;
        },
        optgroupField: 'group_by',
        score: function (search) {
            return function (item) {
                return 1;
            };
        },
        render: {
            option: function (item) {
                return `<div>${item.text}</div>`;
            },
            item: function (item) {
                return `<div>${item.text}</div>`;
            },
            no_more_results: () => {
                return `<div class="no-more-results">${this.noMoreResultsTextValue}</div>`;
            },
            no_results: () => {
                return `<div class="no-results">${this.noResultsFoundTextValue}</div>`;
            },
        },
        preload: this.preload,
    });
    return __classPrivateFieldGet(this, _default_1_instances, "m", _default_1_createTomSelect).call(this, config);
}, _default_1_stripTags = function _default_1_stripTags(string) {
    return string.replace(/(<([^>]+)>)/gi, '');
}, _default_1_mergeObjects = function _default_1_mergeObjects(object1, object2) {
    return Object.assign(Object.assign({}, object1), object2);
}, _default_1_createTomSelect = function _default_1_createTomSelect(options) {
    const preConnectPayload = { options };
    this.dispatchEvent('pre-connect', preConnectPayload);
    const tomSelect = new (tom_select__WEBPACK_IMPORTED_MODULE_1___default())(this.formElement, options);
    const connectPayload = { tomSelect, options };
    this.dispatchEvent('connect', connectPayload);
    return tomSelect;
};
default_1.values = {
    url: String,
    optionsAsHtml: Boolean,
    noResultsFoundText: String,
    noMoreResultsText: String,
    minCharacters: Number,
    tomSelectOptions: Object,
    preload: String,
};




/***/ }),

/***/ "./node_modules/@symfony/ux-dropzone/dist/controller.js":
/*!**************************************************************!*\
  !*** ./node_modules/@symfony/ux-dropzone/dist/controller.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ default_1)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");


class default_1 extends _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller {
    connect() {
        this.clear();
        this.previewClearButtonTarget.addEventListener('click', () => this.clear());
        this.inputTarget.addEventListener('change', (event) => this.onInputChange(event));
        this.dispatchEvent('connect');
    }
    clear() {
        this.inputTarget.value = '';
        this.inputTarget.style.display = 'block';
        this.placeholderTarget.style.display = 'block';
        this.previewTarget.style.display = 'none';
        this.previewImageTarget.style.display = 'none';
        this.previewImageTarget.style.backgroundImage = 'none';
        this.previewFilenameTarget.textContent = '';
        this.dispatchEvent('clear');
    }
    onInputChange(event) {
        const file = event.target.files[0];
        if (typeof file === 'undefined') {
            return;
        }
        this.inputTarget.style.display = 'none';
        this.placeholderTarget.style.display = 'none';
        this.previewFilenameTarget.textContent = file.name;
        this.previewTarget.style.display = 'flex';
        this.previewImageTarget.style.display = 'none';
        if (file.type && file.type.indexOf('image') !== -1) {
            this._populateImagePreview(file);
        }
        this.dispatchEvent('change', file);
    }
    _populateImagePreview(file) {
        if (typeof FileReader === 'undefined') {
            return;
        }
        const reader = new FileReader();
        reader.addEventListener('load', (event) => {
            this.previewImageTarget.style.display = 'block';
            this.previewImageTarget.style.backgroundImage = 'url("' + event.target.result + '")';
        });
        reader.readAsDataURL(file);
    }
    dispatchEvent(name, payload = {}) {
        this.dispatch(name, { detail: payload, prefix: 'dropzone' });
    }
}
default_1.targets = ['input', 'placeholder', 'preview', 'previewClearButton', 'previewFilename', 'previewImage'];




/***/ }),

/***/ "./node_modules/@symfony/ux-live-component/dist/live_controller.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@symfony/ux-live-component/dist/live_controller.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Component: () => (/* binding */ Component),
/* harmony export */   "default": () => (/* binding */ LiveControllerDefault),
/* harmony export */   getComponent: () => (/* binding */ getComponent)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");


function parseDirectives(content) {
    const directives = [];
    if (!content) {
        return directives;
    }
    let currentActionName = '';
    let currentArgumentName = '';
    let currentArgumentValue = '';
    let currentArguments = [];
    let currentNamedArguments = {};
    let currentModifiers = [];
    let state = 'action';
    const getLastActionName = function () {
        if (currentActionName) {
            return currentActionName;
        }
        if (directives.length === 0) {
            throw new Error('Could not find any directives');
        }
        return directives[directives.length - 1].action;
    };
    const pushInstruction = function () {
        directives.push({
            action: currentActionName,
            args: currentArguments,
            named: currentNamedArguments,
            modifiers: currentModifiers,
            getString: () => {
                return content;
            }
        });
        currentActionName = '';
        currentArgumentName = '';
        currentArgumentValue = '';
        currentArguments = [];
        currentNamedArguments = {};
        currentModifiers = [];
        state = 'action';
    };
    const pushArgument = function () {
        const mixedArgTypesError = () => {
            throw new Error(`Normal and named arguments cannot be mixed inside "${currentActionName}()"`);
        };
        if (currentArgumentName) {
            if (currentArguments.length > 0) {
                mixedArgTypesError();
            }
            currentNamedArguments[currentArgumentName.trim()] = currentArgumentValue;
        }
        else {
            if (Object.keys(currentNamedArguments).length > 0) {
                mixedArgTypesError();
            }
            currentArguments.push(currentArgumentValue.trim());
        }
        currentArgumentName = '';
        currentArgumentValue = '';
    };
    const pushModifier = function () {
        if (currentArguments.length > 1) {
            throw new Error(`The modifier "${currentActionName}()" does not support multiple arguments.`);
        }
        if (Object.keys(currentNamedArguments).length > 0) {
            throw new Error(`The modifier "${currentActionName}()" does not support named arguments.`);
        }
        currentModifiers.push({
            name: currentActionName,
            value: currentArguments.length > 0 ? currentArguments[0] : null,
        });
        currentActionName = '';
        currentArgumentName = '';
        currentArguments = [];
        state = 'action';
    };
    for (let i = 0; i < content.length; i++) {
        const char = content[i];
        switch (state) {
            case 'action':
                if (char === '(') {
                    state = 'arguments';
                    break;
                }
                if (char === ' ') {
                    if (currentActionName) {
                        pushInstruction();
                    }
                    break;
                }
                if (char === '|') {
                    pushModifier();
                    break;
                }
                currentActionName += char;
                break;
            case 'arguments':
                if (char === ')') {
                    pushArgument();
                    state = 'after_arguments';
                    break;
                }
                if (char === ',') {
                    pushArgument();
                    break;
                }
                if (char === '=') {
                    currentArgumentName = currentArgumentValue;
                    currentArgumentValue = '';
                    break;
                }
                currentArgumentValue += char;
                break;
            case 'after_arguments':
                if (char === '|') {
                    pushModifier();
                    break;
                }
                if (char !== ' ') {
                    throw new Error(`Missing space after ${getLastActionName()}()`);
                }
                pushInstruction();
                break;
        }
    }
    switch (state) {
        case 'action':
        case 'after_arguments':
            if (currentActionName) {
                pushInstruction();
            }
            break;
        default:
            throw new Error(`Did you forget to add a closing ")" after "${currentActionName}"?`);
    }
    return directives;
}

function combineSpacedArray(parts) {
    const finalParts = [];
    parts.forEach((part) => {
        finalParts.push(...part.split(' '));
    });
    return finalParts;
}
function normalizeModelName(model) {
    return (model
        .replace(/\[]$/, '')
        .split('[')
        .map(function (s) {
        return s.replace(']', '');
    })
        .join('.'));
}

function getValueFromElement(element, valueStore) {
    if (element instanceof HTMLInputElement) {
        if (element.type === 'checkbox') {
            const modelNameData = getModelDirectiveFromElement(element, false);
            if (modelNameData !== null) {
                const modelValue = valueStore.get(modelNameData.action);
                if (Array.isArray(modelValue)) {
                    return getMultipleCheckboxValue(element, modelValue);
                }
                else if (Object(modelValue) === modelValue) {
                    return getMultipleCheckboxValue(element, Object.values(modelValue));
                }
            }
            if (element.hasAttribute('value')) {
                return element.checked ? element.getAttribute('value') : null;
            }
            return element.checked;
        }
        return inputValue(element);
    }
    if (element instanceof HTMLSelectElement) {
        if (element.multiple) {
            return Array.from(element.selectedOptions).map((el) => el.value);
        }
        return element.value;
    }
    if (element.dataset.value) {
        return element.dataset.value;
    }
    if ('value' in element) {
        return element.value;
    }
    if (element.hasAttribute('value')) {
        return element.getAttribute('value');
    }
    return null;
}
function setValueOnElement(element, value) {
    if (element instanceof HTMLInputElement) {
        if (element.type === 'file') {
            return;
        }
        if (element.type === 'radio') {
            element.checked = element.value == value;
            return;
        }
        if (element.type === 'checkbox') {
            if (Array.isArray(value)) {
                let valueFound = false;
                value.forEach((val) => {
                    if (val == element.value) {
                        valueFound = true;
                    }
                });
                element.checked = valueFound;
            }
            else {
                if (element.hasAttribute('value')) {
                    element.checked = element.value == value;
                }
                else {
                    element.checked = value;
                }
            }
            return;
        }
    }
    if (element instanceof HTMLSelectElement) {
        const arrayWrappedValue = [].concat(value).map((value) => {
            return value + '';
        });
        Array.from(element.options).forEach((option) => {
            option.selected = arrayWrappedValue.includes(option.value);
        });
        return;
    }
    value = value === undefined ? '' : value;
    element.value = value;
}
function getAllModelDirectiveFromElements(element) {
    if (!element.dataset.model) {
        return [];
    }
    const directives = parseDirectives(element.dataset.model);
    directives.forEach((directive) => {
        if (directive.args.length > 0 || directive.named.length > 0) {
            throw new Error(`The data-model="${element.dataset.model}" format is invalid: it does not support passing arguments to the model.`);
        }
        directive.action = normalizeModelName(directive.action);
    });
    return directives;
}
function getModelDirectiveFromElement(element, throwOnMissing = true) {
    const dataModelDirectives = getAllModelDirectiveFromElements(element);
    if (dataModelDirectives.length > 0) {
        return dataModelDirectives[0];
    }
    if (element.getAttribute('name')) {
        const formElement = element.closest('form');
        if (formElement && 'model' in formElement.dataset) {
            const directives = parseDirectives(formElement.dataset.model || '*');
            const directive = directives[0];
            if (directive.args.length > 0 || directive.named.length > 0) {
                throw new Error(`The data-model="${formElement.dataset.model}" format is invalid: it does not support passing arguments to the model.`);
            }
            directive.action = normalizeModelName(element.getAttribute('name'));
            return directive;
        }
    }
    if (!throwOnMissing) {
        return null;
    }
    throw new Error(`Cannot determine the model name for "${getElementAsTagText(element)}": the element must either have a "data-model" (or "name" attribute living inside a <form data-model="*">).`);
}
function elementBelongsToThisComponent(element, component) {
    if (component.element === element) {
        return true;
    }
    if (!component.element.contains(element)) {
        return false;
    }
    let foundChildComponent = false;
    component.getChildren().forEach((childComponent) => {
        if (foundChildComponent) {
            return;
        }
        if (childComponent.element === element || childComponent.element.contains(element)) {
            foundChildComponent = true;
        }
    });
    return !foundChildComponent;
}
function cloneHTMLElement(element) {
    const newElement = element.cloneNode(true);
    if (!(newElement instanceof HTMLElement)) {
        throw new Error('Could not clone element');
    }
    return newElement;
}
function htmlToElement(html) {
    const template = document.createElement('template');
    html = html.trim();
    template.innerHTML = html;
    if (template.content.childElementCount > 1) {
        throw new Error(`Component HTML contains ${template.content.childElementCount} elements, but only 1 root element is allowed.`);
    }
    const child = template.content.firstElementChild;
    if (!child) {
        throw new Error('Child not found');
    }
    if (!(child instanceof HTMLElement)) {
        throw new Error(`Created element is not an HTMLElement: ${html.trim()}`);
    }
    return child;
}
function getElementAsTagText(element) {
    return element.innerHTML
        ? element.outerHTML.slice(0, element.outerHTML.indexOf(element.innerHTML))
        : element.outerHTML;
}
const getMultipleCheckboxValue = function (element, currentValues) {
    const finalValues = [...currentValues];
    const value = inputValue(element);
    const index = currentValues.indexOf(value);
    if (element.checked) {
        if (index === -1) {
            finalValues.push(value);
        }
        return finalValues;
    }
    if (index > -1) {
        finalValues.splice(index, 1);
    }
    return finalValues;
};
const inputValue = function (element) {
    return element.dataset.value ? element.dataset.value : element.value;
};

function getDeepData(data, propertyPath) {
    const { currentLevelData, finalKey } = parseDeepData(data, propertyPath);
    if (currentLevelData === undefined) {
        return undefined;
    }
    return currentLevelData[finalKey];
}
const parseDeepData = function (data, propertyPath) {
    const finalData = JSON.parse(JSON.stringify(data));
    let currentLevelData = finalData;
    const parts = propertyPath.split('.');
    for (let i = 0; i < parts.length - 1; i++) {
        currentLevelData = currentLevelData[parts[i]];
    }
    const finalKey = parts[parts.length - 1];
    return {
        currentLevelData,
        finalData,
        finalKey,
        parts,
    };
};

class ValueStore {
    constructor(props) {
        this.props = {};
        this.dirtyProps = {};
        this.pendingProps = {};
        this.updatedPropsFromParent = {};
        this.props = props;
    }
    get(name) {
        const normalizedName = normalizeModelName(name);
        if (this.dirtyProps[normalizedName] !== undefined) {
            return this.dirtyProps[normalizedName];
        }
        if (this.pendingProps[normalizedName] !== undefined) {
            return this.pendingProps[normalizedName];
        }
        if (this.props[normalizedName] !== undefined) {
            return this.props[normalizedName];
        }
        return getDeepData(this.props, normalizedName);
    }
    has(name) {
        return this.get(name) !== undefined;
    }
    set(name, value) {
        const normalizedName = normalizeModelName(name);
        const currentValue = this.get(normalizedName);
        if (currentValue === value) {
            return false;
        }
        this.dirtyProps[normalizedName] = value;
        return true;
    }
    getOriginalProps() {
        return Object.assign({}, this.props);
    }
    getDirtyProps() {
        return Object.assign({}, this.dirtyProps);
    }
    getUpdatedPropsFromParent() {
        return Object.assign({}, this.updatedPropsFromParent);
    }
    flushDirtyPropsToPending() {
        this.pendingProps = Object.assign({}, this.dirtyProps);
        this.dirtyProps = {};
    }
    reinitializeAllProps(props) {
        this.props = props;
        this.updatedPropsFromParent = {};
        this.pendingProps = {};
    }
    pushPendingPropsBackToDirty() {
        this.dirtyProps = Object.assign(Object.assign({}, this.pendingProps), this.dirtyProps);
        this.pendingProps = {};
    }
    storeNewPropsFromParent(props) {
        let changed = false;
        for (const [key, value] of Object.entries(props)) {
            const currentValue = this.get(key);
            if (currentValue !== value) {
                changed = true;
            }
        }
        if (changed) {
            this.updatedPropsFromParent = props;
        }
        return changed;
    }
}

var DOCUMENT_FRAGMENT_NODE = 11;

function morphAttrs(fromNode, toNode) {
    var toNodeAttrs = toNode.attributes;
    var attr;
    var attrName;
    var attrNamespaceURI;
    var attrValue;
    var fromValue;

    // document-fragments dont have attributes so lets not do anything
    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {
      return;
    }

    // update attributes on original DOM element
    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {
        attr = toNodeAttrs[i];
        attrName = attr.name;
        attrNamespaceURI = attr.namespaceURI;
        attrValue = attr.value;

        if (attrNamespaceURI) {
            attrName = attr.localName || attrName;
            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);

            if (fromValue !== attrValue) {
                if (attr.prefix === 'xmlns'){
                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix
                }
                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);
            }
        } else {
            fromValue = fromNode.getAttribute(attrName);

            if (fromValue !== attrValue) {
                fromNode.setAttribute(attrName, attrValue);
            }
        }
    }

    // Remove any extra attributes found on the original DOM element that
    // weren't found on the target element.
    var fromNodeAttrs = fromNode.attributes;

    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {
        attr = fromNodeAttrs[d];
        attrName = attr.name;
        attrNamespaceURI = attr.namespaceURI;

        if (attrNamespaceURI) {
            attrName = attr.localName || attrName;

            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {
                fromNode.removeAttributeNS(attrNamespaceURI, attrName);
            }
        } else {
            if (!toNode.hasAttribute(attrName)) {
                fromNode.removeAttribute(attrName);
            }
        }
    }
}

var range; // Create a range object for efficently rendering strings to elements.
var NS_XHTML = 'http://www.w3.org/1999/xhtml';

var doc = typeof document === 'undefined' ? undefined : document;
var HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');
var HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();

function createFragmentFromTemplate(str) {
    var template = doc.createElement('template');
    template.innerHTML = str;
    return template.content.childNodes[0];
}

function createFragmentFromRange(str) {
    if (!range) {
        range = doc.createRange();
        range.selectNode(doc.body);
    }

    var fragment = range.createContextualFragment(str);
    return fragment.childNodes[0];
}

function createFragmentFromWrap(str) {
    var fragment = doc.createElement('body');
    fragment.innerHTML = str;
    return fragment.childNodes[0];
}

/**
 * This is about the same
 * var html = new DOMParser().parseFromString(str, 'text/html');
 * return html.body.firstChild;
 *
 * @method toElement
 * @param {String} str
 */
function toElement(str) {
    str = str.trim();
    if (HAS_TEMPLATE_SUPPORT) {
      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which
      // createContextualFragment doesn't support
      // <template> support not available in IE
      return createFragmentFromTemplate(str);
    } else if (HAS_RANGE_SUPPORT) {
      return createFragmentFromRange(str);
    }

    return createFragmentFromWrap(str);
}

/**
 * Returns true if two node's names are the same.
 *
 * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same
 *       nodeName and different namespace URIs.
 *
 * @param {Element} a
 * @param {Element} b The target element
 * @return {boolean}
 */
function compareNodeNames(fromEl, toEl) {
    var fromNodeName = fromEl.nodeName;
    var toNodeName = toEl.nodeName;
    var fromCodeStart, toCodeStart;

    if (fromNodeName === toNodeName) {
        return true;
    }

    fromCodeStart = fromNodeName.charCodeAt(0);
    toCodeStart = toNodeName.charCodeAt(0);

    // If the target element is a virtual DOM node or SVG node then we may
    // need to normalize the tag name before comparing. Normal HTML elements that are
    // in the "http://www.w3.org/1999/xhtml"
    // are converted to upper case
    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower
        return fromNodeName === toNodeName.toUpperCase();
    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower
        return toNodeName === fromNodeName.toUpperCase();
    } else {
        return false;
    }
}

/**
 * Create an element, optionally with a known namespace URI.
 *
 * @param {string} name the element name, e.g. 'div' or 'svg'
 * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of
 * its `xmlns` attribute or its inferred namespace.
 *
 * @return {Element}
 */
function createElementNS(name, namespaceURI) {
    return !namespaceURI || namespaceURI === NS_XHTML ?
        doc.createElement(name) :
        doc.createElementNS(namespaceURI, name);
}

/**
 * Copies the children of one DOM element to another DOM element
 */
function moveChildren(fromEl, toEl) {
    var curChild = fromEl.firstChild;
    while (curChild) {
        var nextChild = curChild.nextSibling;
        toEl.appendChild(curChild);
        curChild = nextChild;
    }
    return toEl;
}

function syncBooleanAttrProp(fromEl, toEl, name) {
    if (fromEl[name] !== toEl[name]) {
        fromEl[name] = toEl[name];
        if (fromEl[name]) {
            fromEl.setAttribute(name, '');
        } else {
            fromEl.removeAttribute(name);
        }
    }
}

var specialElHandlers = {
    OPTION: function(fromEl, toEl) {
        var parentNode = fromEl.parentNode;
        if (parentNode) {
            var parentName = parentNode.nodeName.toUpperCase();
            if (parentName === 'OPTGROUP') {
                parentNode = parentNode.parentNode;
                parentName = parentNode && parentNode.nodeName.toUpperCase();
            }
            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {
                if (fromEl.hasAttribute('selected') && !toEl.selected) {
                    // Workaround for MS Edge bug where the 'selected' attribute can only be
                    // removed if set to a non-empty value:
                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/
                    fromEl.setAttribute('selected', 'selected');
                    fromEl.removeAttribute('selected');
                }
                // We have to reset select element's selectedIndex to -1, otherwise setting
                // fromEl.selected using the syncBooleanAttrProp below has no effect.
                // The correct selectedIndex will be set in the SELECT special handler below.
                parentNode.selectedIndex = -1;
            }
        }
        syncBooleanAttrProp(fromEl, toEl, 'selected');
    },
    /**
     * The "value" attribute is special for the <input> element since it sets
     * the initial value. Changing the "value" attribute without changing the
     * "value" property will have no effect since it is only used to the set the
     * initial value.  Similar for the "checked" attribute, and "disabled".
     */
    INPUT: function(fromEl, toEl) {
        syncBooleanAttrProp(fromEl, toEl, 'checked');
        syncBooleanAttrProp(fromEl, toEl, 'disabled');

        if (fromEl.value !== toEl.value) {
            fromEl.value = toEl.value;
        }

        if (!toEl.hasAttribute('value')) {
            fromEl.removeAttribute('value');
        }
    },

    TEXTAREA: function(fromEl, toEl) {
        var newValue = toEl.value;
        if (fromEl.value !== newValue) {
            fromEl.value = newValue;
        }

        var firstChild = fromEl.firstChild;
        if (firstChild) {
            // Needed for IE. Apparently IE sets the placeholder as the
            // node value and vise versa. This ignores an empty update.
            var oldValue = firstChild.nodeValue;

            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {
                return;
            }

            firstChild.nodeValue = newValue;
        }
    },
    SELECT: function(fromEl, toEl) {
        if (!toEl.hasAttribute('multiple')) {
            var selectedIndex = -1;
            var i = 0;
            // We have to loop through children of fromEl, not toEl since nodes can be moved
            // from toEl to fromEl directly when morphing.
            // At the time this special handler is invoked, all children have already been morphed
            // and appended to / removed from fromEl, so using fromEl here is safe and correct.
            var curChild = fromEl.firstChild;
            var optgroup;
            var nodeName;
            while(curChild) {
                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();
                if (nodeName === 'OPTGROUP') {
                    optgroup = curChild;
                    curChild = optgroup.firstChild;
                } else {
                    if (nodeName === 'OPTION') {
                        if (curChild.hasAttribute('selected')) {
                            selectedIndex = i;
                            break;
                        }
                        i++;
                    }
                    curChild = curChild.nextSibling;
                    if (!curChild && optgroup) {
                        curChild = optgroup.nextSibling;
                        optgroup = null;
                    }
                }
            }

            fromEl.selectedIndex = selectedIndex;
        }
    }
};

var ELEMENT_NODE = 1;
var DOCUMENT_FRAGMENT_NODE$1 = 11;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;

function noop() {}

function defaultGetNodeKey(node) {
  if (node) {
    return (node.getAttribute && node.getAttribute('id')) || node.id;
  }
}

function morphdomFactory(morphAttrs) {

  return function morphdom(fromNode, toNode, options) {
    if (!options) {
      options = {};
    }

    if (typeof toNode === 'string') {
      if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {
        var toNodeHtml = toNode;
        toNode = doc.createElement('html');
        toNode.innerHTML = toNodeHtml;
      } else {
        toNode = toElement(toNode);
      }
    } else if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE$1) {
      toNode = toNode.firstElementChild;
    }

    var getNodeKey = options.getNodeKey || defaultGetNodeKey;
    var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;
    var onNodeAdded = options.onNodeAdded || noop;
    var onBeforeElUpdated = options.onBeforeElUpdated || noop;
    var onElUpdated = options.onElUpdated || noop;
    var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;
    var onNodeDiscarded = options.onNodeDiscarded || noop;
    var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;
    var skipFromChildren = options.skipFromChildren || noop;
    var addChild = options.addChild || function(parent, child){ return parent.appendChild(child); };
    var childrenOnly = options.childrenOnly === true;

    // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.
    var fromNodesLookup = Object.create(null);
    var keyedRemovalList = [];

    function addKeyedRemoval(key) {
      keyedRemovalList.push(key);
    }

    function walkDiscardedChildNodes(node, skipKeyedNodes) {
      if (node.nodeType === ELEMENT_NODE) {
        var curChild = node.firstChild;
        while (curChild) {

          var key = undefined;

          if (skipKeyedNodes && (key = getNodeKey(curChild))) {
            // If we are skipping keyed nodes then we add the key
            // to a list so that it can be handled at the very end.
            addKeyedRemoval(key);
          } else {
            // Only report the node as discarded if it is not keyed. We do this because
            // at the end we loop through all keyed elements that were unmatched
            // and then discard them in one final pass.
            onNodeDiscarded(curChild);
            if (curChild.firstChild) {
              walkDiscardedChildNodes(curChild, skipKeyedNodes);
            }
          }

          curChild = curChild.nextSibling;
        }
      }
    }

    /**
    * Removes a DOM node out of the original DOM
    *
    * @param  {Node} node The node to remove
    * @param  {Node} parentNode The nodes parent
    * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.
    * @return {undefined}
    */
    function removeNode(node, parentNode, skipKeyedNodes) {
      if (onBeforeNodeDiscarded(node) === false) {
        return;
      }

      if (parentNode) {
        parentNode.removeChild(node);
      }

      onNodeDiscarded(node);
      walkDiscardedChildNodes(node, skipKeyedNodes);
    }

    // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future
    // function indexTree(root) {
    //     var treeWalker = document.createTreeWalker(
    //         root,
    //         NodeFilter.SHOW_ELEMENT);
    //
    //     var el;
    //     while((el = treeWalker.nextNode())) {
    //         var key = getNodeKey(el);
    //         if (key) {
    //             fromNodesLookup[key] = el;
    //         }
    //     }
    // }

    // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future
    //
    // function indexTree(node) {
    //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);
    //     var el;
    //     while((el = nodeIterator.nextNode())) {
    //         var key = getNodeKey(el);
    //         if (key) {
    //             fromNodesLookup[key] = el;
    //         }
    //     }
    // }

    function indexTree(node) {
      if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {
        var curChild = node.firstChild;
        while (curChild) {
          var key = getNodeKey(curChild);
          if (key) {
            fromNodesLookup[key] = curChild;
          }

          // Walk recursively
          indexTree(curChild);

          curChild = curChild.nextSibling;
        }
      }
    }

    indexTree(fromNode);

    function handleNodeAdded(el) {
      onNodeAdded(el);

      var curChild = el.firstChild;
      while (curChild) {
        var nextSibling = curChild.nextSibling;

        var key = getNodeKey(curChild);
        if (key) {
          var unmatchedFromEl = fromNodesLookup[key];
          // if we find a duplicate #id node in cache, replace `el` with cache value
          // and morph it to the child node.
          if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {
            curChild.parentNode.replaceChild(unmatchedFromEl, curChild);
            morphEl(unmatchedFromEl, curChild);
          } else {
            handleNodeAdded(curChild);
          }
        } else {
          // recursively call for curChild and it's children to see if we find something in
          // fromNodesLookup
          handleNodeAdded(curChild);
        }

        curChild = nextSibling;
      }
    }

    function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {
      // We have processed all of the "to nodes". If curFromNodeChild is
      // non-null then we still have some from nodes left over that need
      // to be removed
      while (curFromNodeChild) {
        var fromNextSibling = curFromNodeChild.nextSibling;
        if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {
          // Since the node is keyed it might be matched up later so we defer
          // the actual removal to later
          addKeyedRemoval(curFromNodeKey);
        } else {
          // NOTE: we skip nested keyed nodes from being removed since there is
          //       still a chance they will be matched up later
          removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
        }
        curFromNodeChild = fromNextSibling;
      }
    }

    function morphEl(fromEl, toEl, childrenOnly) {
      var toElKey = getNodeKey(toEl);

      if (toElKey) {
        // If an element with an ID is being morphed then it will be in the final
        // DOM so clear it out of the saved elements collection
        delete fromNodesLookup[toElKey];
      }

      if (!childrenOnly) {
        // optional
        if (onBeforeElUpdated(fromEl, toEl) === false) {
          return;
        }

        // update attributes on original DOM element first
        morphAttrs(fromEl, toEl);
        // optional
        onElUpdated(fromEl);

        if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {
          return;
        }
      }

      if (fromEl.nodeName !== 'TEXTAREA') {
        morphChildren(fromEl, toEl);
      } else {
        specialElHandlers.TEXTAREA(fromEl, toEl);
      }
    }

    function morphChildren(fromEl, toEl) {
      var skipFrom = skipFromChildren(fromEl);
      var curToNodeChild = toEl.firstChild;
      var curFromNodeChild = fromEl.firstChild;
      var curToNodeKey;
      var curFromNodeKey;

      var fromNextSibling;
      var toNextSibling;
      var matchingFromEl;

      // walk the children
      outer: while (curToNodeChild) {
        toNextSibling = curToNodeChild.nextSibling;
        curToNodeKey = getNodeKey(curToNodeChild);

        // walk the fromNode children all the way through
        while (!skipFrom && curFromNodeChild) {
          fromNextSibling = curFromNodeChild.nextSibling;

          if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {
            curToNodeChild = toNextSibling;
            curFromNodeChild = fromNextSibling;
            continue outer;
          }

          curFromNodeKey = getNodeKey(curFromNodeChild);

          var curFromNodeType = curFromNodeChild.nodeType;

          // this means if the curFromNodeChild doesnt have a match with the curToNodeChild
          var isCompatible = undefined;

          if (curFromNodeType === curToNodeChild.nodeType) {
            if (curFromNodeType === ELEMENT_NODE) {
              // Both nodes being compared are Element nodes

              if (curToNodeKey) {
                // The target node has a key so we want to match it up with the correct element
                // in the original DOM tree
                if (curToNodeKey !== curFromNodeKey) {
                  // The current element in the original DOM tree does not have a matching key so
                  // let's check our lookup to see if there is a matching element in the original
                  // DOM tree
                  if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {
                    if (fromNextSibling === matchingFromEl) {
                      // Special case for single element removals. To avoid removing the original
                      // DOM node out of the tree (since that can break CSS transitions, etc.),
                      // we will instead discard the current node and wait until the next
                      // iteration to properly match up the keyed target element with its matching
                      // element in the original tree
                      isCompatible = false;
                    } else {
                      // We found a matching keyed element somewhere in the original DOM tree.
                      // Let's move the original DOM node into the current position and morph
                      // it.

                      // NOTE: We use insertBefore instead of replaceChild because we want to go through
                      // the `removeNode()` function for the node that is being discarded so that
                      // all lifecycle hooks are correctly invoked
                      fromEl.insertBefore(matchingFromEl, curFromNodeChild);

                      // fromNextSibling = curFromNodeChild.nextSibling;

                      if (curFromNodeKey) {
                        // Since the node is keyed it might be matched up later so we defer
                        // the actual removal to later
                        addKeyedRemoval(curFromNodeKey);
                      } else {
                        // NOTE: we skip nested keyed nodes from being removed since there is
                        //       still a chance they will be matched up later
                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
                      }

                      curFromNodeChild = matchingFromEl;
                    }
                  } else {
                    // The nodes are not compatible since the "to" node has a key and there
                    // is no matching keyed node in the source tree
                    isCompatible = false;
                  }
                }
              } else if (curFromNodeKey) {
                // The original has a key
                isCompatible = false;
              }

              isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);
              if (isCompatible) {
                // We found compatible DOM elements so transform
                // the current "from" node to match the current
                // target DOM node.
                // MORPH
                morphEl(curFromNodeChild, curToNodeChild);
              }

            } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {
              // Both nodes being compared are Text or Comment nodes
              isCompatible = true;
              // Simply update nodeValue on the original node to
              // change the text value
              if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {
                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;
              }

            }
          }

          if (isCompatible) {
            // Advance both the "to" child and the "from" child since we found a match
            // Nothing else to do as we already recursively called morphChildren above
            curToNodeChild = toNextSibling;
            curFromNodeChild = fromNextSibling;
            continue outer;
          }

          // No compatible match so remove the old node from the DOM and continue trying to find a
          // match in the original DOM. However, we only do this if the from node is not keyed
          // since it is possible that a keyed node might match up with a node somewhere else in the
          // target tree and we don't want to discard it just yet since it still might find a
          // home in the final DOM tree. After everything is done we will remove any keyed nodes
          // that didn't find a home
          if (curFromNodeKey) {
            // Since the node is keyed it might be matched up later so we defer
            // the actual removal to later
            addKeyedRemoval(curFromNodeKey);
          } else {
            // NOTE: we skip nested keyed nodes from being removed since there is
            //       still a chance they will be matched up later
            removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);
          }

          curFromNodeChild = fromNextSibling;
        } // END: while(curFromNodeChild) {}

        // If we got this far then we did not find a candidate match for
        // our "to node" and we exhausted all of the children "from"
        // nodes. Therefore, we will just append the current "to" node
        // to the end
        if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {
          // MORPH
          if(!skipFrom){ addChild(fromEl, matchingFromEl); }
          morphEl(matchingFromEl, curToNodeChild);
        } else {
          var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);
          if (onBeforeNodeAddedResult !== false) {
            if (onBeforeNodeAddedResult) {
              curToNodeChild = onBeforeNodeAddedResult;
            }

            if (curToNodeChild.actualize) {
              curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);
            }
            addChild(fromEl, curToNodeChild);
            handleNodeAdded(curToNodeChild);
          }
        }

        curToNodeChild = toNextSibling;
        curFromNodeChild = fromNextSibling;
      }

      cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);

      var specialElHandler = specialElHandlers[fromEl.nodeName];
      if (specialElHandler) {
        specialElHandler(fromEl, toEl);
      }
    } // END: morphChildren(...)

    var morphedNode = fromNode;
    var morphedNodeType = morphedNode.nodeType;
    var toNodeType = toNode.nodeType;

    if (!childrenOnly) {
      // Handle the case where we are given two DOM nodes that are not
      // compatible (e.g. <div> --> <span> or <div> --> TEXT)
      if (morphedNodeType === ELEMENT_NODE) {
        if (toNodeType === ELEMENT_NODE) {
          if (!compareNodeNames(fromNode, toNode)) {
            onNodeDiscarded(fromNode);
            morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));
          }
        } else {
          // Going from an element node to a text node
          morphedNode = toNode;
        }
      } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node
        if (toNodeType === morphedNodeType) {
          if (morphedNode.nodeValue !== toNode.nodeValue) {
            morphedNode.nodeValue = toNode.nodeValue;
          }

          return morphedNode;
        } else {
          // Text node to something else
          morphedNode = toNode;
        }
      }
    }

    if (morphedNode === toNode) {
      // The "to node" was not compatible with the "from node" so we had to
      // toss out the "from node" and use the "to node"
      onNodeDiscarded(fromNode);
    } else {
      if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {
        return;
      }

      morphEl(morphedNode, toNode, childrenOnly);

      // We now need to loop over any keyed nodes that might need to be
      // removed. We only do the removal if we know that the keyed node
      // never found a match. When a keyed node is matched up we remove
      // it out of fromNodesLookup and we use fromNodesLookup to determine
      // if a keyed node has been matched up or not
      if (keyedRemovalList) {
        for (var i=0, len=keyedRemovalList.length; i<len; i++) {
          var elToRemove = fromNodesLookup[keyedRemovalList[i]];
          if (elToRemove) {
            removeNode(elToRemove, elToRemove.parentNode, false);
          }
        }
      }
    }

    if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {
      if (morphedNode.actualize) {
        morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);
      }
      // If we had to swap out the from node with a new node because the old
      // node was not compatible with the target node then we need to
      // replace the old DOM node in the original DOM tree. This is only
      // possible if the original DOM node was part of a DOM tree which
      // we know is the case if it has a parent node.
      fromNode.parentNode.replaceChild(morphedNode, fromNode);
    }

    return morphedNode;
  };
}

var morphdom = morphdomFactory(morphAttrs);

function normalizeAttributesForComparison(element) {
    const isFileInput = element instanceof HTMLInputElement && element.type === 'file';
    if (!isFileInput) {
        if ('value' in element) {
            element.setAttribute('value', element.value);
        }
        else if (element.hasAttribute('value')) {
            element.setAttribute('value', '');
        }
    }
    Array.from(element.children).forEach((child) => {
        normalizeAttributesForComparison(child);
    });
}

function executeMorphdom(rootFromElement, rootToElement, modifiedFieldElements, getElementValue, childComponents, findChildComponent, getKeyFromElement, externalMutationTracker) {
    const childComponentMap = new Map();
    childComponents.forEach((childComponent) => {
        childComponentMap.set(childComponent.element, childComponent);
    });
    morphdom(rootFromElement, rootToElement, {
        getNodeKey: (node) => {
            if (!(node instanceof HTMLElement)) {
                return;
            }
            if (externalMutationTracker.wasElementAdded(node)) {
                return 'added_element_' + Math.random();
            }
            return getKeyFromElement(node);
        },
        onBeforeElUpdated: (fromEl, toEl) => {
            if (fromEl === rootFromElement) {
                return true;
            }
            if (fromEl instanceof HTMLElement && toEl instanceof HTMLElement) {
                if (typeof fromEl.__x !== 'undefined') {
                    if (!window.Alpine) {
                        throw new Error('Unable to access Alpine.js though the global window.Alpine variable. Please make sure Alpine.js is loaded before Symfony UX LiveComponent.');
                    }
                    if (typeof window.Alpine.morph !== 'function') {
                        throw new Error('Unable to access Alpine.js morph function. Please make sure the Alpine.js Morph plugin is installed and loaded, see https://alpinejs.dev/plugins/morph for more information.');
                    }
                    window.Alpine.morph(fromEl.__x, toEl);
                }
                if (childComponentMap.has(fromEl)) {
                    const childComponent = childComponentMap.get(fromEl);
                    childComponent.updateFromNewElementFromParentRender(toEl);
                    return false;
                }
                if (modifiedFieldElements.includes(fromEl)) {
                    setValueOnElement(toEl, getElementValue(fromEl));
                }
                const elementChanges = externalMutationTracker.getChangedElement(fromEl);
                if (elementChanges) {
                    elementChanges.applyToElement(toEl);
                }
                if (fromEl.nodeName.toUpperCase() !== 'OPTION' && fromEl.isEqualNode(toEl)) {
                    const normalizedFromEl = cloneHTMLElement(fromEl);
                    normalizeAttributesForComparison(normalizedFromEl);
                    const normalizedToEl = cloneHTMLElement(toEl);
                    normalizeAttributesForComparison(normalizedToEl);
                    if (normalizedFromEl.isEqualNode(normalizedToEl)) {
                        return false;
                    }
                }
            }
            return !fromEl.hasAttribute('data-live-ignore');
        },
        onBeforeNodeDiscarded(node) {
            if (!(node instanceof HTMLElement)) {
                return true;
            }
            if (externalMutationTracker.wasElementAdded(node)) {
                return false;
            }
            return !node.hasAttribute('data-live-ignore');
        },
    });
}

class UnsyncedInputsTracker {
    constructor(component, modelElementResolver) {
        this.elementEventListeners = [
            { event: 'input', callback: (event) => this.handleInputEvent(event) },
        ];
        this.component = component;
        this.modelElementResolver = modelElementResolver;
        this.unsyncedInputs = new UnsyncedInputContainer();
    }
    activate() {
        this.elementEventListeners.forEach(({ event, callback }) => {
            this.component.element.addEventListener(event, callback);
        });
    }
    deactivate() {
        this.elementEventListeners.forEach(({ event, callback }) => {
            this.component.element.removeEventListener(event, callback);
        });
    }
    markModelAsSynced(modelName) {
        this.unsyncedInputs.markModelAsSynced(modelName);
    }
    handleInputEvent(event) {
        const target = event.target;
        if (!target) {
            return;
        }
        this.updateModelFromElement(target);
    }
    updateModelFromElement(element) {
        if (!elementBelongsToThisComponent(element, this.component)) {
            return;
        }
        if (!(element instanceof HTMLElement)) {
            throw new Error('Could not update model for non HTMLElement');
        }
        const modelName = this.modelElementResolver.getModelName(element);
        this.unsyncedInputs.add(element, modelName);
    }
    getUnsyncedInputs() {
        return this.unsyncedInputs.allUnsyncedInputs();
    }
    getUnsyncedModels() {
        return Array.from(this.unsyncedInputs.getUnsyncedModelNames());
    }
    resetUnsyncedFields() {
        this.unsyncedInputs.resetUnsyncedFields();
    }
}
class UnsyncedInputContainer {
    constructor() {
        this.unsyncedNonModelFields = [];
        this.unsyncedModelNames = [];
        this.unsyncedModelFields = new Map();
    }
    add(element, modelName = null) {
        if (modelName) {
            this.unsyncedModelFields.set(modelName, element);
            if (!this.unsyncedModelNames.includes(modelName)) {
                this.unsyncedModelNames.push(modelName);
            }
            return;
        }
        this.unsyncedNonModelFields.push(element);
    }
    resetUnsyncedFields() {
        this.unsyncedModelFields.forEach((value, key) => {
            if (!this.unsyncedModelNames.includes(key)) {
                this.unsyncedModelFields.delete(key);
            }
        });
    }
    allUnsyncedInputs() {
        return [...this.unsyncedNonModelFields, ...this.unsyncedModelFields.values()];
    }
    markModelAsSynced(modelName) {
        const index = this.unsyncedModelNames.indexOf(modelName);
        if (index !== -1) {
            this.unsyncedModelNames.splice(index, 1);
        }
    }
    getUnsyncedModelNames() {
        return this.unsyncedModelNames;
    }
}

class HookManager {
    constructor() {
        this.hooks = new Map();
    }
    register(hookName, callback) {
        const hooks = this.hooks.get(hookName) || [];
        hooks.push(callback);
        this.hooks.set(hookName, hooks);
    }
    unregister(hookName, callback) {
        const hooks = this.hooks.get(hookName) || [];
        const index = hooks.indexOf(callback);
        if (index === -1) {
            return;
        }
        hooks.splice(index, 1);
        this.hooks.set(hookName, hooks);
    }
    triggerHook(hookName, ...args) {
        const hooks = this.hooks.get(hookName) || [];
        hooks.forEach((callback) => {
            callback(...args);
        });
    }
}

class BackendResponse {
    constructor(response) {
        this.response = response;
    }
    async getBody() {
        if (!this.body) {
            this.body = await this.response.text();
        }
        return this.body;
    }
}

class ChangingItemsTracker {
    constructor() {
        this.changedItems = new Map();
        this.removedItems = new Map();
    }
    setItem(itemName, newValue, previousValue) {
        if (this.removedItems.has(itemName)) {
            const removedRecord = this.removedItems.get(itemName);
            this.removedItems.delete(itemName);
            if (removedRecord.original === newValue) {
                return;
            }
        }
        if (this.changedItems.has(itemName)) {
            const originalRecord = this.changedItems.get(itemName);
            if (originalRecord.original === newValue) {
                this.changedItems.delete(itemName);
                return;
            }
            this.changedItems.set(itemName, { original: originalRecord.original, new: newValue });
            return;
        }
        this.changedItems.set(itemName, { original: previousValue, new: newValue });
    }
    removeItem(itemName, currentValue) {
        let trueOriginalValue = currentValue;
        if (this.changedItems.has(itemName)) {
            const originalRecord = this.changedItems.get(itemName);
            trueOriginalValue = originalRecord.original;
            this.changedItems.delete(itemName);
            if (trueOriginalValue === null) {
                return;
            }
        }
        if (!this.removedItems.has(itemName)) {
            this.removedItems.set(itemName, { original: trueOriginalValue });
        }
    }
    getChangedItems() {
        const changedItems = [];
        this.changedItems.forEach((value, key) => {
            changedItems.push({ name: key, value: value.new });
        });
        return changedItems;
    }
    getRemovedItems() {
        const removedItems = [];
        this.removedItems.forEach((value, key) => {
            removedItems.push(key);
        });
        return removedItems;
    }
    isEmpty() {
        return this.changedItems.size === 0 && this.removedItems.size === 0;
    }
}

class ElementChanges {
    constructor() {
        this.addedClasses = [];
        this.removedClasses = [];
        this.styleChanges = new ChangingItemsTracker();
        this.attributeChanges = new ChangingItemsTracker();
    }
    addClass(className) {
        if (this.removedClasses.includes(className)) {
            this.removedClasses = this.removedClasses.filter((name) => name !== className);
            return;
        }
        if (!this.addedClasses.includes(className)) {
            this.addedClasses.push(className);
        }
    }
    removeClass(className) {
        if (this.addedClasses.includes(className)) {
            this.addedClasses = this.addedClasses.filter((name) => name !== className);
            return;
        }
        if (!this.removedClasses.includes(className)) {
            this.removedClasses.push(className);
        }
    }
    addStyle(styleName, newValue, originalValue) {
        this.styleChanges.setItem(styleName, newValue, originalValue);
    }
    removeStyle(styleName, originalValue) {
        this.styleChanges.removeItem(styleName, originalValue);
    }
    addAttribute(attributeName, newValue, originalValue) {
        this.attributeChanges.setItem(attributeName, newValue, originalValue);
    }
    removeAttribute(attributeName, originalValue) {
        this.attributeChanges.removeItem(attributeName, originalValue);
    }
    getAddedClasses() {
        return this.addedClasses;
    }
    getRemovedClasses() {
        return this.removedClasses;
    }
    getChangedStyles() {
        return this.styleChanges.getChangedItems();
    }
    getRemovedStyles() {
        return this.styleChanges.getRemovedItems();
    }
    getChangedAttributes() {
        return this.attributeChanges.getChangedItems();
    }
    getRemovedAttributes() {
        return this.attributeChanges.getRemovedItems();
    }
    applyToElement(element) {
        this.addedClasses.forEach((className) => {
            element.classList.add(className);
        });
        this.removedClasses.forEach((className) => {
            element.classList.remove(className);
        });
        this.styleChanges.getChangedItems().forEach((change) => {
            element.style.setProperty(change.name, change.value);
            return;
        });
        this.styleChanges.getRemovedItems().forEach((styleName) => {
            element.style.removeProperty(styleName);
        });
        this.attributeChanges.getChangedItems().forEach((change) => {
            element.setAttribute(change.name, change.value);
        });
        this.attributeChanges.getRemovedItems().forEach((attributeName) => {
            element.removeAttribute(attributeName);
        });
    }
    isEmpty() {
        return (this.addedClasses.length === 0 &&
            this.removedClasses.length === 0 &&
            this.styleChanges.isEmpty() &&
            this.attributeChanges.isEmpty());
    }
}

class ExternalMutationTracker {
    constructor(element, shouldTrackChangeCallback) {
        this.changedElements = new WeakMap();
        this.changedElementsCount = 0;
        this.addedElements = [];
        this.removedElements = [];
        this.isStarted = false;
        this.element = element;
        this.shouldTrackChangeCallback = shouldTrackChangeCallback;
        this.mutationObserver = new MutationObserver(this.onMutations.bind(this));
    }
    start() {
        if (this.isStarted) {
            return;
        }
        this.mutationObserver.observe(this.element, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeOldValue: true,
        });
        this.isStarted = true;
    }
    stop() {
        if (this.isStarted) {
            this.mutationObserver.disconnect();
            this.isStarted = false;
        }
    }
    getChangedElement(element) {
        return this.changedElements.has(element) ? this.changedElements.get(element) : null;
    }
    getAddedElements() {
        return this.addedElements;
    }
    wasElementAdded(element) {
        return this.addedElements.includes(element);
    }
    handlePendingChanges() {
        this.onMutations(this.mutationObserver.takeRecords());
    }
    onMutations(mutations) {
        const handledAttributeMutations = new WeakMap();
        for (const mutation of mutations) {
            const element = mutation.target;
            if (!this.shouldTrackChangeCallback(element)) {
                continue;
            }
            if (this.isElementAddedByTranslation(element)) {
                continue;
            }
            let isChangeInAddedElement = false;
            for (const addedElement of this.addedElements) {
                if (addedElement.contains(element)) {
                    isChangeInAddedElement = true;
                    break;
                }
            }
            if (isChangeInAddedElement) {
                continue;
            }
            switch (mutation.type) {
                case 'childList':
                    this.handleChildListMutation(mutation);
                    break;
                case 'attributes':
                    if (!handledAttributeMutations.has(element)) {
                        handledAttributeMutations.set(element, []);
                    }
                    if (!handledAttributeMutations.get(element).includes(mutation.attributeName)) {
                        this.handleAttributeMutation(mutation);
                        handledAttributeMutations.set(element, [
                            ...handledAttributeMutations.get(element),
                            mutation.attributeName
                        ]);
                    }
                    break;
            }
        }
    }
    handleChildListMutation(mutation) {
        mutation.addedNodes.forEach((node) => {
            if (!(node instanceof Element)) {
                return;
            }
            if (this.removedElements.includes(node)) {
                this.removedElements.splice(this.removedElements.indexOf(node), 1);
                return;
            }
            if (this.isElementAddedByTranslation(node)) {
                return;
            }
            this.addedElements.push(node);
        });
        mutation.removedNodes.forEach((node) => {
            if (!(node instanceof Element)) {
                return;
            }
            if (this.addedElements.includes(node)) {
                this.addedElements.splice(this.addedElements.indexOf(node), 1);
                return;
            }
            this.removedElements.push(node);
        });
    }
    handleAttributeMutation(mutation) {
        const element = mutation.target;
        if (!this.changedElements.has(element)) {
            this.changedElements.set(element, new ElementChanges());
            this.changedElementsCount++;
        }
        const changedElement = this.changedElements.get(element);
        switch (mutation.attributeName) {
            case 'class':
                this.handleClassAttributeMutation(mutation, changedElement);
                break;
            case 'style':
                this.handleStyleAttributeMutation(mutation, changedElement);
                break;
            default:
                this.handleGenericAttributeMutation(mutation, changedElement);
        }
        if (changedElement.isEmpty()) {
            this.changedElements.delete(element);
            this.changedElementsCount--;
        }
    }
    handleClassAttributeMutation(mutation, elementChanges) {
        const element = mutation.target;
        const previousValue = mutation.oldValue;
        const previousValues = previousValue ? previousValue.split(' ') : [];
        previousValues.forEach((value, index) => {
            const trimmedValue = value.trim();
            if (trimmedValue !== '') {
                previousValues[index] = trimmedValue;
            }
            else {
                previousValues.splice(index, 1);
            }
        });
        const newValues = [].slice.call(element.classList);
        const addedValues = newValues.filter((value) => !previousValues.includes(value));
        const removedValues = previousValues.filter((value) => !newValues.includes(value));
        addedValues.forEach((value) => {
            elementChanges.addClass(value);
        });
        removedValues.forEach((value) => {
            elementChanges.removeClass(value);
        });
    }
    handleStyleAttributeMutation(mutation, elementChanges) {
        const element = mutation.target;
        const previousValue = mutation.oldValue || '';
        const previousStyles = this.extractStyles(previousValue);
        const newValue = element.getAttribute('style') || '';
        const newStyles = this.extractStyles(newValue);
        const addedOrChangedStyles = Object.keys(newStyles).filter((key) => previousStyles[key] === undefined || previousStyles[key] !== newStyles[key]);
        const removedStyles = Object.keys(previousStyles).filter((key) => !newStyles[key]);
        addedOrChangedStyles.forEach((style) => {
            elementChanges.addStyle(style, newStyles[style], previousStyles[style] === undefined ? null : previousStyles[style]);
        });
        removedStyles.forEach((style) => {
            elementChanges.removeStyle(style, previousStyles[style]);
        });
    }
    handleGenericAttributeMutation(mutation, elementChanges) {
        const attributeName = mutation.attributeName;
        const element = mutation.target;
        let oldValue = mutation.oldValue;
        let newValue = element.getAttribute(attributeName);
        if (oldValue === attributeName) {
            oldValue = '';
        }
        if (newValue === attributeName) {
            newValue = '';
        }
        if (!element.hasAttribute(attributeName)) {
            if (oldValue === null) {
                return;
            }
            elementChanges.removeAttribute(attributeName, mutation.oldValue);
            return;
        }
        if (newValue === oldValue) {
            return;
        }
        elementChanges.addAttribute(attributeName, element.getAttribute(attributeName), mutation.oldValue);
    }
    extractStyles(styles) {
        const styleObject = {};
        styles.split(';').forEach((style) => {
            const parts = style.split(':');
            if (parts.length === 1) {
                return;
            }
            const property = parts[0].trim();
            styleObject[property] = parts.slice(1).join(':').trim();
        });
        return styleObject;
    }
    isElementAddedByTranslation(element) {
        return element.tagName === 'FONT' && element.getAttribute('style') === 'vertical-align: inherit;';
    }
}

class ChildComponentWrapper {
    constructor(component, modelBindings) {
        this.component = component;
        this.modelBindings = modelBindings;
    }
}
class Component {
    constructor(element, name, props, listeners, componentFinder, fingerprint, id, backend, elementDriver) {
        this.defaultDebounce = 150;
        this.backendRequest = null;
        this.pendingActions = [];
        this.pendingFiles = {};
        this.isRequestPending = false;
        this.requestDebounceTimeout = null;
        this.children = new Map();
        this.parent = null;
        this.element = element;
        this.name = name;
        this.componentFinder = componentFinder;
        this.backend = backend;
        this.elementDriver = elementDriver;
        this.id = id;
        this.fingerprint = fingerprint;
        this.listeners = new Map();
        listeners.forEach((listener) => {
            var _a;
            if (!this.listeners.has(listener.event)) {
                this.listeners.set(listener.event, []);
            }
            (_a = this.listeners.get(listener.event)) === null || _a === void 0 ? void 0 : _a.push(listener.action);
        });
        this.valueStore = new ValueStore(props);
        this.unsyncedInputsTracker = new UnsyncedInputsTracker(this, elementDriver);
        this.hooks = new HookManager();
        this.resetPromise();
        this.externalMutationTracker = new ExternalMutationTracker(this.element, (element) => elementBelongsToThisComponent(element, this));
        this.externalMutationTracker.start();
        this.onChildComponentModelUpdate = this.onChildComponentModelUpdate.bind(this);
    }
    _swapBackend(backend) {
        this.backend = backend;
    }
    addPlugin(plugin) {
        plugin.attachToComponent(this);
    }
    connect() {
        this.hooks.triggerHook('connect', this);
        this.unsyncedInputsTracker.activate();
        this.externalMutationTracker.start();
    }
    disconnect() {
        this.hooks.triggerHook('disconnect', this);
        this.clearRequestDebounceTimeout();
        this.unsyncedInputsTracker.deactivate();
        this.externalMutationTracker.stop();
    }
    on(hookName, callback) {
        this.hooks.register(hookName, callback);
    }
    off(hookName, callback) {
        this.hooks.unregister(hookName, callback);
    }
    set(model, value, reRender = false, debounce = false) {
        const promise = this.nextRequestPromise;
        const modelName = normalizeModelName(model);
        if (!this.valueStore.has(modelName)) {
            throw new Error(`Invalid model name "${model}".`);
        }
        const isChanged = this.valueStore.set(modelName, value);
        this.hooks.triggerHook('model:set', model, value, this);
        this.unsyncedInputsTracker.markModelAsSynced(modelName);
        if (reRender && isChanged) {
            this.debouncedStartRequest(debounce);
        }
        return promise;
    }
    getData(model) {
        const modelName = normalizeModelName(model);
        if (!this.valueStore.has(modelName)) {
            throw new Error(`Invalid model "${model}".`);
        }
        return this.valueStore.get(modelName);
    }
    action(name, args = {}, debounce = false) {
        const promise = this.nextRequestPromise;
        this.pendingActions.push({
            name,
            args
        });
        this.debouncedStartRequest(debounce);
        return promise;
    }
    files(key, input) {
        this.pendingFiles[key] = input;
    }
    render() {
        const promise = this.nextRequestPromise;
        this.tryStartingRequest();
        return promise;
    }
    getUnsyncedModels() {
        return this.unsyncedInputsTracker.getUnsyncedModels();
    }
    addChild(child, modelBindings = []) {
        if (!child.id) {
            throw new Error('Children components must have an id.');
        }
        this.children.set(child.id, new ChildComponentWrapper(child, modelBindings));
        child.parent = this;
        child.on('model:set', this.onChildComponentModelUpdate);
    }
    removeChild(child) {
        if (!child.id) {
            throw new Error('Children components must have an id.');
        }
        this.children.delete(child.id);
        child.parent = null;
        child.off('model:set', this.onChildComponentModelUpdate);
    }
    getParent() {
        return this.parent;
    }
    getChildren() {
        const children = new Map();
        this.children.forEach((childComponent, id) => {
            children.set(id, childComponent.component);
        });
        return children;
    }
    emit(name, data, onlyMatchingComponentsNamed = null) {
        return this.performEmit(name, data, false, onlyMatchingComponentsNamed);
    }
    emitUp(name, data, onlyMatchingComponentsNamed = null) {
        return this.performEmit(name, data, true, onlyMatchingComponentsNamed);
    }
    emitSelf(name, data) {
        return this.doEmit(name, data);
    }
    performEmit(name, data, emitUp, matchingName) {
        const components = this.componentFinder(this, emitUp, matchingName);
        components.forEach((component) => {
            component.doEmit(name, data);
        });
    }
    doEmit(name, data) {
        if (!this.listeners.has(name)) {
            return;
        }
        const actions = this.listeners.get(name) || [];
        actions.forEach((action) => {
            this.action(action, data, 1);
        });
    }
    updateFromNewElementFromParentRender(toEl) {
        const props = this.elementDriver.getComponentProps(toEl);
        if (props === null) {
            return;
        }
        const isChanged = this.valueStore.storeNewPropsFromParent(props);
        const fingerprint = toEl.dataset.liveFingerprintValue;
        if (fingerprint !== undefined) {
            this.fingerprint = fingerprint;
        }
        if (isChanged) {
            this.render();
        }
    }
    onChildComponentModelUpdate(modelName, value, childComponent) {
        if (!childComponent.id) {
            throw new Error('Missing id');
        }
        const childWrapper = this.children.get(childComponent.id);
        if (!childWrapper) {
            throw new Error('Missing child');
        }
        childWrapper.modelBindings.forEach((modelBinding) => {
            const childModelName = modelBinding.innerModelName || 'value';
            if (childModelName !== modelName) {
                return;
            }
            this.set(modelBinding.modelName, value, modelBinding.shouldRender, modelBinding.debounce);
        });
    }
    isTurboEnabled() {
        return typeof Turbo !== 'undefined' && !this.element.closest('[data-turbo="false"]');
    }
    tryStartingRequest() {
        if (!this.backendRequest) {
            this.performRequest();
            return;
        }
        this.isRequestPending = true;
    }
    performRequest() {
        const thisPromiseResolve = this.nextRequestPromiseResolve;
        this.resetPromise();
        this.unsyncedInputsTracker.resetUnsyncedFields();
        const filesToSend = {};
        for (const [key, value] of Object.entries(this.pendingFiles)) {
            if (value.files) {
                filesToSend[key] = value.files;
            }
        }
        this.backendRequest = this.backend.makeRequest(this.valueStore.getOriginalProps(), this.pendingActions, this.valueStore.getDirtyProps(), this.getChildrenFingerprints(), this.valueStore.getUpdatedPropsFromParent(), filesToSend);
        this.hooks.triggerHook('loading.state:started', this.element, this.backendRequest);
        this.pendingActions = [];
        this.valueStore.flushDirtyPropsToPending();
        this.isRequestPending = false;
        this.backendRequest.promise.then(async (response) => {
            this.backendRequest = null;
            const backendResponse = new BackendResponse(response);
            const html = await backendResponse.getBody();
            for (const input of Object.values(this.pendingFiles)) {
                input.value = '';
            }
            const headers = backendResponse.response.headers;
            if (headers.get('Content-Type') !== 'application/vnd.live-component+html' && !headers.get('X-Live-Redirect')) {
                const controls = { displayError: true };
                this.valueStore.pushPendingPropsBackToDirty();
                this.hooks.triggerHook('response:error', backendResponse, controls);
                if (controls.displayError) {
                    this.renderError(html);
                }
                thisPromiseResolve(backendResponse);
                return response;
            }
            this.processRerender(html, backendResponse);
            thisPromiseResolve(backendResponse);
            if (this.isRequestPending) {
                this.isRequestPending = false;
                this.performRequest();
            }
            return response;
        });
    }
    processRerender(html, backendResponse) {
        const controls = { shouldRender: true };
        this.hooks.triggerHook('render:started', html, backendResponse, controls);
        if (!controls.shouldRender) {
            return;
        }
        if (backendResponse.response.headers.get('Location')) {
            if (this.isTurboEnabled()) {
                Turbo.visit(backendResponse.response.headers.get('Location'));
            }
            else {
                window.location.href = backendResponse.response.headers.get('Location') || '';
            }
            return;
        }
        this.hooks.triggerHook('loading.state:finished', this.element);
        const modifiedModelValues = {};
        Object.keys(this.valueStore.getDirtyProps()).forEach((modelName) => {
            modifiedModelValues[modelName] = this.valueStore.get(modelName);
        });
        let newElement;
        try {
            newElement = htmlToElement(html);
            if (!newElement.matches('[data-controller~=live]')) {
                throw new Error('A live component template must contain a single root controller element.');
            }
        }
        catch (error) {
            console.error('There was a problem with the component HTML returned:');
            throw error;
        }
        const newProps = this.elementDriver.getComponentProps(newElement);
        this.valueStore.reinitializeAllProps(newProps);
        const eventsToEmit = this.elementDriver.getEventsToEmit(newElement);
        const browserEventsToDispatch = this.elementDriver.getBrowserEventsToDispatch(newElement);
        this.externalMutationTracker.handlePendingChanges();
        this.externalMutationTracker.stop();
        executeMorphdom(this.element, newElement, this.unsyncedInputsTracker.getUnsyncedInputs(), (element) => getValueFromElement(element, this.valueStore), Array.from(this.getChildren().values()), this.elementDriver.findChildComponentElement, this.elementDriver.getKeyFromElement, this.externalMutationTracker);
        this.externalMutationTracker.start();
        Object.keys(modifiedModelValues).forEach((modelName) => {
            this.valueStore.set(modelName, modifiedModelValues[modelName]);
        });
        eventsToEmit.forEach(({ event, data, target, componentName }) => {
            if (target === 'up') {
                this.emitUp(event, data, componentName);
                return;
            }
            if (target === 'self') {
                this.emitSelf(event, data);
                return;
            }
            this.emit(event, data, componentName);
        });
        browserEventsToDispatch.forEach(({ event, payload }) => {
            this.element.dispatchEvent(new CustomEvent(event, {
                detail: payload,
                bubbles: true,
            }));
        });
        this.hooks.triggerHook('render:finished', this);
    }
    calculateDebounce(debounce) {
        if (debounce === true) {
            return this.defaultDebounce;
        }
        if (debounce === false) {
            return 0;
        }
        return debounce;
    }
    clearRequestDebounceTimeout() {
        if (this.requestDebounceTimeout) {
            clearTimeout(this.requestDebounceTimeout);
            this.requestDebounceTimeout = null;
        }
    }
    debouncedStartRequest(debounce) {
        this.clearRequestDebounceTimeout();
        this.requestDebounceTimeout = window.setTimeout(() => {
            this.render();
        }, this.calculateDebounce(debounce));
    }
    renderError(html) {
        let modal = document.getElementById('live-component-error');
        if (modal) {
            modal.innerHTML = '';
        }
        else {
            modal = document.createElement('div');
            modal.id = 'live-component-error';
            modal.style.padding = '50px';
            modal.style.backgroundColor = 'rgba(0, 0, 0, .5)';
            modal.style.zIndex = '100000';
            modal.style.position = 'fixed';
            modal.style.top = '0px';
            modal.style.bottom = '0px';
            modal.style.left = '0px';
            modal.style.right = '0px';
            modal.style.display = 'flex';
            modal.style.flexDirection = 'column';
        }
        const iframe = document.createElement('iframe');
        iframe.style.borderRadius = '5px';
        iframe.style.flexGrow = '1';
        modal.appendChild(iframe);
        document.body.prepend(modal);
        document.body.style.overflow = 'hidden';
        if (iframe.contentWindow) {
            iframe.contentWindow.document.open();
            iframe.contentWindow.document.write(html);
            iframe.contentWindow.document.close();
        }
        const closeModal = (modal) => {
            if (modal) {
                modal.outerHTML = '';
            }
            document.body.style.overflow = 'visible';
        };
        modal.addEventListener('click', () => closeModal(modal));
        modal.setAttribute('tabindex', '0');
        modal.addEventListener('keydown', e => {
            if (e.key === 'Escape') {
                closeModal(modal);
            }
        });
        modal.focus();
    }
    getChildrenFingerprints() {
        const fingerprints = {};
        this.children.forEach((childComponent) => {
            const child = childComponent.component;
            if (!child.id) {
                throw new Error('missing id');
            }
            fingerprints[child.id] = {
                fingerprint: child.fingerprint,
                tag: child.element.tagName.toLowerCase(),
            };
        });
        return fingerprints;
    }
    resetPromise() {
        this.nextRequestPromise = new Promise((resolve) => {
            this.nextRequestPromiseResolve = resolve;
        });
    }
}
function proxifyComponent(component) {
    return new Proxy(component, {
        get(component, prop) {
            if (prop in component || typeof prop !== 'string') {
                if (typeof component[prop] === 'function') {
                    const callable = component[prop];
                    return (...args) => {
                        return callable.apply(component, args);
                    };
                }
                return Reflect.get(component, prop);
            }
            if (component.valueStore.has(prop)) {
                return component.getData(prop);
            }
            return (args) => {
                return component.action.apply(component, [prop, args]);
            };
        },
        set(target, property, value) {
            if (property in target) {
                target[property] = value;
                return true;
            }
            target.set(property, value);
            return true;
        },
    });
}

class BackendRequest {
    constructor(promise, actions, updateModels) {
        this.isResolved = false;
        this.promise = promise;
        this.promise.then((response) => {
            this.isResolved = true;
            return response;
        });
        this.actions = actions;
        this.updatedModels = updateModels;
    }
    containsOneOfActions(targetedActions) {
        return this.actions.filter((action) => targetedActions.includes(action)).length > 0;
    }
    areAnyModelsUpdated(targetedModels) {
        return this.updatedModels.filter((model) => targetedModels.includes(model)).length > 0;
    }
}

class RequestBuilder {
    constructor(url, csrfToken = null) {
        this.url = url;
        this.csrfToken = csrfToken;
    }
    buildRequest(props, actions, updated, children, updatedPropsFromParent, files) {
        const splitUrl = this.url.split('?');
        let [url] = splitUrl;
        const [, queryString] = splitUrl;
        const params = new URLSearchParams(queryString || '');
        const fetchOptions = {};
        fetchOptions.headers = {
            Accept: 'application/vnd.live-component+html',
            'X-Requested-With': 'XMLHttpRequest',
        };
        const totalFiles = Object.entries(files).reduce((total, current) => total + current.length, 0);
        const hasFingerprints = Object.keys(children).length > 0;
        if (actions.length === 0 &&
            totalFiles === 0 &&
            this.willDataFitInUrl(JSON.stringify(props), JSON.stringify(updated), params, JSON.stringify(children), JSON.stringify(updatedPropsFromParent))) {
            params.set('props', JSON.stringify(props));
            params.set('updated', JSON.stringify(updated));
            if (Object.keys(updatedPropsFromParent).length > 0) {
                params.set('propsFromParent', JSON.stringify(updatedPropsFromParent));
            }
            if (hasFingerprints) {
                params.set('children', JSON.stringify(children));
            }
            fetchOptions.method = 'GET';
        }
        else {
            fetchOptions.method = 'POST';
            const requestData = { props, updated };
            if (Object.keys(updatedPropsFromParent).length > 0) {
                requestData.propsFromParent = updatedPropsFromParent;
            }
            if (hasFingerprints) {
                requestData.children = children;
            }
            if (this.csrfToken &&
                (actions.length || totalFiles)) {
                fetchOptions.headers['X-CSRF-TOKEN'] = this.csrfToken;
            }
            if (actions.length > 0) {
                if (actions.length === 1) {
                    requestData.args = actions[0].args;
                    url += `/${encodeURIComponent(actions[0].name)}`;
                }
                else {
                    url += '/_batch';
                    requestData.actions = actions;
                }
            }
            const formData = new FormData();
            formData.append('data', JSON.stringify(requestData));
            for (const [key, value] of Object.entries(files)) {
                const length = value.length;
                for (let i = 0; i < length; ++i) {
                    formData.append(key, value[i]);
                }
            }
            fetchOptions.body = formData;
        }
        const paramsString = params.toString();
        return {
            url: `${url}${paramsString.length > 0 ? `?${paramsString}` : ''}`,
            fetchOptions,
        };
    }
    willDataFitInUrl(propsJson, updatedJson, params, childrenJson, propsFromParentJson) {
        const urlEncodedJsonData = new URLSearchParams(propsJson + updatedJson + childrenJson + propsFromParentJson).toString();
        return (urlEncodedJsonData + params.toString()).length < 1500;
    }
}

class Backend {
    constructor(url, csrfToken = null) {
        this.requestBuilder = new RequestBuilder(url, csrfToken);
    }
    makeRequest(props, actions, updated, children, updatedPropsFromParent, files) {
        const { url, fetchOptions } = this.requestBuilder.buildRequest(props, actions, updated, children, updatedPropsFromParent, files);
        return new BackendRequest(fetch(url, fetchOptions), actions.map((backendAction) => backendAction.name), Object.keys(updated));
    }
}

class StandardElementDriver {
    getModelName(element) {
        const modelDirective = getModelDirectiveFromElement(element, false);
        if (!modelDirective) {
            return null;
        }
        return modelDirective.action;
    }
    getComponentProps(rootElement) {
        var _a;
        const propsJson = (_a = rootElement.dataset.livePropsValue) !== null && _a !== void 0 ? _a : '{}';
        return JSON.parse(propsJson);
    }
    findChildComponentElement(id, element) {
        return element.querySelector(`[data-live-id=${id}]`);
    }
    getKeyFromElement(element) {
        return element.dataset.liveId || null;
    }
    getEventsToEmit(element) {
        var _a;
        const eventsJson = (_a = element.dataset.liveEmit) !== null && _a !== void 0 ? _a : '[]';
        return JSON.parse(eventsJson);
    }
    getBrowserEventsToDispatch(element) {
        var _a;
        const eventsJson = (_a = element.dataset.liveBrowserDispatch) !== null && _a !== void 0 ? _a : '[]';
        return JSON.parse(eventsJson);
    }
}

class LoadingPlugin {
    attachToComponent(component) {
        component.on('loading.state:started', (element, request) => {
            this.startLoading(element, request);
        });
        component.on('loading.state:finished', (element) => {
            this.finishLoading(element);
        });
        this.finishLoading(component.element);
    }
    startLoading(targetElement, backendRequest) {
        this.handleLoadingToggle(true, targetElement, backendRequest);
    }
    finishLoading(targetElement) {
        this.handleLoadingToggle(false, targetElement, null);
    }
    handleLoadingToggle(isLoading, targetElement, backendRequest) {
        if (isLoading) {
            this.addAttributes(targetElement, ['busy']);
        }
        else {
            this.removeAttributes(targetElement, ['busy']);
        }
        this.getLoadingDirectives(targetElement).forEach(({ element, directives }) => {
            if (isLoading) {
                this.addAttributes(element, ['data-live-is-loading']);
            }
            else {
                this.removeAttributes(element, ['data-live-is-loading']);
            }
            directives.forEach((directive) => {
                this.handleLoadingDirective(element, isLoading, directive, backendRequest);
            });
        });
    }
    handleLoadingDirective(element, isLoading, directive, backendRequest) {
        const finalAction = parseLoadingAction(directive.action, isLoading);
        const targetedActions = [];
        const targetedModels = [];
        let delay = 0;
        const validModifiers = new Map();
        validModifiers.set('delay', (modifier) => {
            if (!isLoading) {
                return;
            }
            delay = modifier.value ? parseInt(modifier.value) : 200;
        });
        validModifiers.set('action', (modifier) => {
            if (!modifier.value) {
                throw new Error(`The "action" in data-loading must have an action name - e.g. action(foo). It's missing for "${directive.getString()}"`);
            }
            targetedActions.push(modifier.value);
        });
        validModifiers.set('model', (modifier) => {
            if (!modifier.value) {
                throw new Error(`The "model" in data-loading must have an action name - e.g. model(foo). It's missing for "${directive.getString()}"`);
            }
            targetedModels.push(modifier.value);
        });
        directive.modifiers.forEach((modifier) => {
            var _a;
            if (validModifiers.has(modifier.name)) {
                const callable = (_a = validModifiers.get(modifier.name)) !== null && _a !== void 0 ? _a : (() => { });
                callable(modifier);
                return;
            }
            throw new Error(`Unknown modifier "${modifier.name}" used in data-loading="${directive.getString()}". Available modifiers are: ${Array.from(validModifiers.keys()).join(', ')}.`);
        });
        if (isLoading && targetedActions.length > 0 && backendRequest && !backendRequest.containsOneOfActions(targetedActions)) {
            return;
        }
        if (isLoading && targetedModels.length > 0 && backendRequest && !backendRequest.areAnyModelsUpdated(targetedModels)) {
            return;
        }
        let loadingDirective;
        switch (finalAction) {
            case 'show':
                loadingDirective = () => {
                    this.showElement(element);
                };
                break;
            case 'hide':
                loadingDirective = () => this.hideElement(element);
                break;
            case 'addClass':
                loadingDirective = () => this.addClass(element, directive.args);
                break;
            case 'removeClass':
                loadingDirective = () => this.removeClass(element, directive.args);
                break;
            case 'addAttribute':
                loadingDirective = () => this.addAttributes(element, directive.args);
                break;
            case 'removeAttribute':
                loadingDirective = () => this.removeAttributes(element, directive.args);
                break;
            default:
                throw new Error(`Unknown data-loading action "${finalAction}"`);
        }
        if (delay) {
            window.setTimeout(() => {
                if (backendRequest && !backendRequest.isResolved) {
                    loadingDirective();
                }
            }, delay);
            return;
        }
        loadingDirective();
    }
    getLoadingDirectives(element) {
        const loadingDirectives = [];
        element.querySelectorAll('[data-loading]').forEach((element => {
            if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {
                throw new Error('Invalid Element Type');
            }
            const directives = parseDirectives(element.dataset.loading || 'show');
            loadingDirectives.push({
                element,
                directives,
            });
        }));
        return loadingDirectives;
    }
    showElement(element) {
        element.style.display = 'revert';
    }
    hideElement(element) {
        element.style.display = 'none';
    }
    addClass(element, classes) {
        element.classList.add(...combineSpacedArray(classes));
    }
    removeClass(element, classes) {
        element.classList.remove(...combineSpacedArray(classes));
        if (element.classList.length === 0) {
            this.removeAttributes(element, ['class']);
        }
    }
    addAttributes(element, attributes) {
        attributes.forEach((attribute) => {
            element.setAttribute(attribute, '');
        });
    }
    removeAttributes(element, attributes) {
        attributes.forEach((attribute) => {
            element.removeAttribute(attribute);
        });
    }
}
const parseLoadingAction = function (action, isLoading) {
    switch (action) {
        case 'show':
            return isLoading ? 'show' : 'hide';
        case 'hide':
            return isLoading ? 'hide' : 'show';
        case 'addClass':
            return isLoading ? 'addClass' : 'removeClass';
        case 'removeClass':
            return isLoading ? 'removeClass' : 'addClass';
        case 'addAttribute':
            return isLoading ? 'addAttribute' : 'removeAttribute';
        case 'removeAttribute':
            return isLoading ? 'removeAttribute' : 'addAttribute';
    }
    throw new Error(`Unknown data-loading action "${action}"`);
};

class ValidatedFieldsPlugin {
    attachToComponent(component) {
        component.on('model:set', (modelName) => {
            this.handleModelSet(modelName, component.valueStore);
        });
    }
    handleModelSet(modelName, valueStore) {
        if (valueStore.has('validatedFields')) {
            const validatedFields = [...valueStore.get('validatedFields')];
            if (!validatedFields.includes(modelName)) {
                validatedFields.push(modelName);
            }
            valueStore.set('validatedFields', validatedFields);
        }
    }
}

class PageUnloadingPlugin {
    constructor() {
        this.isConnected = false;
    }
    attachToComponent(component) {
        component.on('render:started', (html, response, controls) => {
            if (!this.isConnected) {
                controls.shouldRender = false;
            }
        });
        component.on('connect', () => {
            this.isConnected = true;
        });
        component.on('disconnect', () => {
            this.isConnected = false;
        });
    }
}

class PollingDirector {
    constructor(component) {
        this.isPollingActive = true;
        this.pollingIntervals = [];
        this.component = component;
    }
    addPoll(actionName, duration) {
        this.polls.push({ actionName, duration });
        if (this.isPollingActive) {
            this.initiatePoll(actionName, duration);
        }
    }
    startAllPolling() {
        if (this.isPollingActive) {
            return;
        }
        this.isPollingActive = true;
        this.polls.forEach(({ actionName, duration }) => {
            this.initiatePoll(actionName, duration);
        });
    }
    stopAllPolling() {
        this.isPollingActive = false;
        this.pollingIntervals.forEach((interval) => {
            clearInterval(interval);
        });
    }
    clearPolling() {
        this.stopAllPolling();
        this.polls = [];
        this.startAllPolling();
    }
    initiatePoll(actionName, duration) {
        let callback;
        if (actionName === '$render') {
            callback = () => {
                this.component.render();
            };
        }
        else {
            callback = () => {
                this.component.action(actionName, {}, 0);
            };
        }
        const timer = setInterval(() => {
            callback();
        }, duration);
        this.pollingIntervals.push(timer);
    }
}

class PollingPlugin {
    attachToComponent(component) {
        this.element = component.element;
        this.pollingDirector = new PollingDirector(component);
        this.initializePolling();
        component.on('connect', () => {
            this.pollingDirector.startAllPolling();
        });
        component.on('disconnect', () => {
            this.pollingDirector.stopAllPolling();
        });
        component.on('render:finished', () => {
            this.initializePolling();
        });
    }
    addPoll(actionName, duration) {
        this.pollingDirector.addPoll(actionName, duration);
    }
    clearPolling() {
        this.pollingDirector.clearPolling();
    }
    initializePolling() {
        this.clearPolling();
        if (this.element.dataset.poll === undefined) {
            return;
        }
        const rawPollConfig = this.element.dataset.poll;
        const directives = parseDirectives(rawPollConfig || '$render');
        directives.forEach((directive) => {
            let duration = 2000;
            directive.modifiers.forEach((modifier) => {
                switch (modifier.name) {
                    case 'delay':
                        if (modifier.value) {
                            duration = parseInt(modifier.value);
                        }
                        break;
                    default:
                        console.warn(`Unknown modifier "${modifier.name}" in data-poll "${rawPollConfig}".`);
                }
            });
            this.addPoll(directive.action, duration);
        });
    }
}

class SetValueOntoModelFieldsPlugin {
    attachToComponent(component) {
        this.synchronizeValueOfModelFields(component);
        component.on('render:finished', () => {
            this.synchronizeValueOfModelFields(component);
        });
    }
    synchronizeValueOfModelFields(component) {
        component.element.querySelectorAll('[data-model]').forEach((element) => {
            if (!(element instanceof HTMLElement)) {
                throw new Error('Invalid element using data-model.');
            }
            if (element instanceof HTMLFormElement) {
                return;
            }
            if (!elementBelongsToThisComponent(element, component)) {
                return;
            }
            const modelDirective = getModelDirectiveFromElement(element);
            if (!modelDirective) {
                return;
            }
            const modelName = modelDirective.action;
            if (component.getUnsyncedModels().includes(modelName)) {
                return;
            }
            if (component.valueStore.has(modelName)) {
                setValueOnElement(element, component.valueStore.get(modelName));
            }
            if (element instanceof HTMLSelectElement && !element.multiple) {
                component.valueStore.set(modelName, getValueFromElement(element, component.valueStore));
            }
        });
    }
}

function getModelBinding (modelDirective) {
    let shouldRender = true;
    let targetEventName = null;
    let debounce = false;
    modelDirective.modifiers.forEach((modifier) => {
        switch (modifier.name) {
            case 'on':
                if (!modifier.value) {
                    throw new Error(`The "on" modifier in ${modelDirective.getString()} requires a value - e.g. on(change).`);
                }
                if (!['input', 'change'].includes(modifier.value)) {
                    throw new Error(`The "on" modifier in ${modelDirective.getString()} only accepts the arguments "input" or "change".`);
                }
                targetEventName = modifier.value;
                break;
            case 'norender':
                shouldRender = false;
                break;
            case 'debounce':
                debounce = modifier.value ? parseInt(modifier.value) : true;
                break;
            default:
                throw new Error(`Unknown modifier "${modifier.name}" in data-model="${modelDirective.getString()}".`);
        }
    });
    const [modelName, innerModelName] = modelDirective.action.split(':');
    return {
        modelName,
        innerModelName: innerModelName || null,
        shouldRender,
        debounce,
        targetEventName
    };
}

class ComponentRegistry {
    constructor() {
        this.componentMapByElement = new WeakMap();
        this.componentMapByComponent = new Map();
    }
    registerComponent(element, component) {
        this.componentMapByElement.set(element, component);
        this.componentMapByComponent.set(component, component.name);
    }
    unregisterComponent(component) {
        this.componentMapByElement.delete(component.element);
        this.componentMapByComponent.delete(component);
    }
    getComponent(element) {
        return new Promise((resolve, reject) => {
            let count = 0;
            const maxCount = 10;
            const interval = setInterval(() => {
                const component = this.componentMapByElement.get(element);
                if (component) {
                    clearInterval(interval);
                    resolve(component);
                }
                count++;
                if (count > maxCount) {
                    clearInterval(interval);
                    reject(new Error(`Component not found for element ${getElementAsTagText(element)}`));
                }
            }, 5);
        });
    }
    findComponents(currentComponent, onlyParents, onlyMatchName) {
        const components = [];
        this.componentMapByComponent.forEach((componentName, component) => {
            if (onlyParents &&
                (currentComponent === component || !component.element.contains(currentComponent.element))) {
                return;
            }
            if (onlyMatchName && componentName !== onlyMatchName) {
                return;
            }
            components.push(component);
        });
        return components;
    }
}

const getComponent = (element) => LiveControllerDefault.componentRegistry.getComponent(element);
class LiveControllerDefault extends _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller {
    constructor() {
        super(...arguments);
        this.pendingActionTriggerModelElement = null;
        this.elementEventListeners = [
            { event: 'input', callback: (event) => this.handleInputEvent(event) },
            { event: 'change', callback: (event) => this.handleChangeEvent(event) },
            { event: 'live:connect', callback: (event) => this.handleConnectedControllerEvent(event) },
        ];
        this.pendingFiles = {};
    }
    initialize() {
        this.handleDisconnectedChildControllerEvent = this.handleDisconnectedChildControllerEvent.bind(this);
        const id = this.element.dataset.liveId || null;
        this.component = new Component(this.element, this.nameValue, this.propsValue, this.listenersValue, (currentComponent, onlyParents, onlyMatchName) => LiveControllerDefault.componentRegistry.findComponents(currentComponent, onlyParents, onlyMatchName), this.fingerprintValue, id, new Backend(this.urlValue, this.csrfValue), new StandardElementDriver());
        this.proxiedComponent = proxifyComponent(this.component);
        this.element.__component = this.proxiedComponent;
        if (this.hasDebounceValue) {
            this.component.defaultDebounce = this.debounceValue;
        }
        const plugins = [
            new LoadingPlugin(),
            new ValidatedFieldsPlugin(),
            new PageUnloadingPlugin(),
            new PollingPlugin(),
            new SetValueOntoModelFieldsPlugin(),
        ];
        plugins.forEach((plugin) => {
            this.component.addPlugin(plugin);
        });
    }
    connect() {
        LiveControllerDefault.componentRegistry.registerComponent(this.element, this.component);
        this.component.connect();
        this.elementEventListeners.forEach(({ event, callback }) => {
            this.component.element.addEventListener(event, callback);
        });
        this.dispatchEvent('connect');
    }
    disconnect() {
        LiveControllerDefault.componentRegistry.unregisterComponent(this.component);
        this.component.disconnect();
        this.elementEventListeners.forEach(({ event, callback }) => {
            this.component.element.removeEventListener(event, callback);
        });
        this.dispatchEvent('disconnect');
    }
    update(event) {
        if (event.type === 'input' || event.type === 'change') {
            throw new Error(`Since LiveComponents 2.3, you no longer need data-action="live#update" on form elements. Found on element: ${getElementAsTagText(event.currentTarget)}`);
        }
        this.updateModelFromElementEvent(event.currentTarget, null);
    }
    action(event) {
        const rawAction = event.currentTarget.dataset.actionName;
        const directives = parseDirectives(rawAction);
        let debounce = false;
        directives.forEach((directive) => {
            let pendingFiles = {};
            const validModifiers = new Map();
            validModifiers.set('prevent', () => {
                event.preventDefault();
            });
            validModifiers.set('stop', () => {
                event.stopPropagation();
            });
            validModifiers.set('self', () => {
                if (event.target !== event.currentTarget) {
                    return;
                }
            });
            validModifiers.set('debounce', (modifier) => {
                debounce = modifier.value ? parseInt(modifier.value) : true;
            });
            validModifiers.set('files', (modifier) => {
                if (!modifier.value) {
                    pendingFiles = this.pendingFiles;
                }
                else if (this.pendingFiles[modifier.value]) {
                    pendingFiles[modifier.value] = this.pendingFiles[modifier.value];
                }
            });
            directive.modifiers.forEach((modifier) => {
                var _a;
                if (validModifiers.has(modifier.name)) {
                    const callable = (_a = validModifiers.get(modifier.name)) !== null && _a !== void 0 ? _a : (() => { });
                    callable(modifier);
                    return;
                }
                console.warn(`Unknown modifier ${modifier.name} in action "${rawAction}". Available modifiers are: ${Array.from(validModifiers.keys()).join(', ')}.`);
            });
            for (const [key, input] of Object.entries(pendingFiles)) {
                if (input.files) {
                    this.component.files(key, input);
                }
                delete this.pendingFiles[key];
            }
            this.component.action(directive.action, directive.named, debounce);
            if (getModelDirectiveFromElement(event.currentTarget, false)) {
                this.pendingActionTriggerModelElement = event.currentTarget;
            }
        });
    }
    $render() {
        return this.component.render();
    }
    emit(event) {
        this.getEmitDirectives(event).forEach(({ name, data, nameMatch }) => {
            this.component.emit(name, data, nameMatch);
        });
    }
    emitUp(event) {
        this.getEmitDirectives(event).forEach(({ name, data, nameMatch }) => {
            this.component.emitUp(name, data, nameMatch);
        });
    }
    emitSelf(event) {
        this.getEmitDirectives(event).forEach(({ name, data }) => {
            this.component.emitSelf(name, data);
        });
    }
    getEmitDirectives(event) {
        const element = event.currentTarget;
        if (!element.dataset.event) {
            throw new Error(`No data-event attribute found on element: ${getElementAsTagText(element)}`);
        }
        const eventInfo = element.dataset.event;
        const directives = parseDirectives(eventInfo);
        const emits = [];
        directives.forEach((directive) => {
            let nameMatch = null;
            directive.modifiers.forEach((modifier) => {
                switch (modifier.name) {
                    case 'name':
                        nameMatch = modifier.value;
                        break;
                    default:
                        throw new Error(`Unknown modifier ${modifier.name} in event "${eventInfo}".`);
                }
            });
            emits.push({
                name: directive.action,
                data: directive.named,
                nameMatch,
            });
        });
        return emits;
    }
    $updateModel(model, value, shouldRender = true, debounce = true) {
        return this.component.set(model, value, shouldRender, debounce);
    }
    handleInputEvent(event) {
        const target = event.target;
        if (!target) {
            return;
        }
        this.updateModelFromElementEvent(target, 'input');
    }
    handleChangeEvent(event) {
        const target = event.target;
        if (!target) {
            return;
        }
        this.updateModelFromElementEvent(target, 'change');
    }
    updateModelFromElementEvent(element, eventName) {
        var _a;
        if (!elementBelongsToThisComponent(element, this.component)) {
            return;
        }
        if (!(element instanceof HTMLElement)) {
            throw new Error('Could not update model for non HTMLElement');
        }
        if (element instanceof HTMLInputElement && element.type === 'file') {
            const key = element.name;
            if ((_a = element.files) === null || _a === void 0 ? void 0 : _a.length) {
                this.pendingFiles[key] = element;
            }
            else if (this.pendingFiles[key]) {
                delete this.pendingFiles[key];
            }
        }
        const modelDirective = getModelDirectiveFromElement(element, false);
        if (!modelDirective) {
            return;
        }
        const modelBinding = getModelBinding(modelDirective);
        if (!modelBinding.targetEventName) {
            modelBinding.targetEventName = 'input';
        }
        if (this.pendingActionTriggerModelElement === element) {
            modelBinding.shouldRender = false;
        }
        if (eventName === 'change' && modelBinding.targetEventName === 'input') {
            modelBinding.targetEventName = 'change';
        }
        if (eventName && modelBinding.targetEventName !== eventName) {
            return;
        }
        if (false === modelBinding.debounce) {
            if (modelBinding.targetEventName === 'input') {
                modelBinding.debounce = true;
            }
            else {
                modelBinding.debounce = 0;
            }
        }
        const finalValue = getValueFromElement(element, this.component.valueStore);
        this.component.set(modelBinding.modelName, finalValue, modelBinding.shouldRender, modelBinding.debounce);
    }
    handleConnectedControllerEvent(event) {
        if (event.target === this.element) {
            return;
        }
        const childController = event.detail.controller;
        if (childController.component.getParent()) {
            return;
        }
        const modelDirectives = getAllModelDirectiveFromElements(childController.element);
        const modelBindings = modelDirectives.map(getModelBinding);
        this.component.addChild(childController.component, modelBindings);
        childController.element.addEventListener('live:disconnect', this.handleDisconnectedChildControllerEvent);
    }
    handleDisconnectedChildControllerEvent(event) {
        const childController = event.detail.controller;
        childController.element.removeEventListener('live:disconnect', this.handleDisconnectedChildControllerEvent);
        if (childController.component.getParent() !== this.component) {
            return;
        }
        this.component.removeChild(childController.component);
    }
    dispatchEvent(name, detail = {}, canBubble = true, cancelable = false) {
        detail.controller = this;
        detail.component = this.proxiedComponent;
        this.dispatch(name, { detail, prefix: 'live', cancelable, bubbles: canBubble });
    }
}
LiveControllerDefault.values = {
    name: String,
    url: String,
    props: Object,
    csrf: String,
    listeners: { type: Array, default: [] },
    debounce: { type: Number, default: 150 },
    id: String,
    fingerprint: { type: String, default: '' },
};
LiveControllerDefault.componentRegistry = new ComponentRegistry();




/***/ }),

/***/ "./node_modules/@symfony/ux-react/dist/register_controller.js":
/*!********************************************************************!*\
  !*** ./node_modules/@symfony/ux-react/dist/register_controller.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   registerReactControllerComponents: () => (/* binding */ registerReactControllerComponents)
/* harmony export */ });
function registerReactControllerComponents(context) {
    const reactControllers = {};
    const importAllReactComponents = (r) => {
        r.keys().forEach((key) => (reactControllers[key] = r(key).default));
    };
    importAllReactComponents(context);
    window.resolveReactComponent = (name) => {
        const component = reactControllers[`./${name}.jsx`] || reactControllers[`./${name}.tsx`];
        if (typeof component === 'undefined') {
            const possibleValues = Object.keys(reactControllers).map((key) => key.replace('./', '').replace('.jsx', '').replace('.tsx', ''));
            throw new Error(`React controller "${name}" does not exist. Possible values: ${possibleValues.join(', ')}`);
        }
        return component;
    };
}




/***/ }),

/***/ "./node_modules/@symfony/ux-react/dist/render_controller.js":
/*!******************************************************************!*\
  !*** ./node_modules/@symfony/ux-react/dist/render_controller.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ default_1)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");




var createRoot;

var m = react_dom__WEBPACK_IMPORTED_MODULE_1__;
if (false) {} else {
  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
      return m.createRoot(c, o);
    } finally {
      i.usingClientEntryPoint = false;
    }
  };
}

class default_1 extends _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_2__.Controller {
    connect() {
        const props = this.propsValue ? this.propsValue : null;
        this.dispatchEvent('connect', { component: this.componentValue, props: props });
        if (!this.componentValue) {
            throw new Error('No component specified.');
        }
        const component = window.resolveReactComponent(this.componentValue);
        this._renderReactElement(react__WEBPACK_IMPORTED_MODULE_0___default().createElement(component, props, null));
        this.dispatchEvent('mount', {
            componentName: this.componentValue,
            component: component,
            props: props,
        });
    }
    disconnect() {
        this.element.root.unmount();
        this.dispatchEvent('unmount', {
            component: this.componentValue,
            props: this.propsValue ? this.propsValue : null,
        });
    }
    _renderReactElement(reactElement) {
        const element = this.element;
        if (!element.root) {
            element.root = createRoot(this.element);
        }
        element.root.render(reactElement);
    }
    dispatchEvent(name, payload) {
        this.dispatch(name, { detail: payload, prefix: 'react' });
    }
}
default_1.values = {
    component: String,
    props: Object,
};




/***/ }),

/***/ "./node_modules/@symfony/ux-toggle-password/dist/controller.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@symfony/ux-toggle-password/dist/controller.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ default_1)
/* harmony export */ });
/* harmony import */ var _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hotwired/stimulus */ "./node_modules/@hotwired/stimulus/dist/stimulus.js");


class default_1 extends _hotwired_stimulus__WEBPACK_IMPORTED_MODULE_0__.Controller {
    constructor() {
        super(...arguments);
        this.isDisplayed = false;
        this.visibleIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="toggle-password-icon" viewBox="0 0 20 20" fill="currentColor">
<path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
<path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
</svg>`;
        this.hiddenIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="toggle-password-icon" viewBox="0 0 20 20" fill="currentColor">
<path fill-rule="evenodd" d="M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z" clip-rule="evenodd" />
<path d="M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z" />
</svg>`;
    }
    connect() {
        if (this.visibleIconValue !== 'Default') {
            this.visibleIcon = this.visibleIconValue;
        }
        if (this.hiddenIconValue !== 'Default') {
            this.hiddenIcon = this.hiddenIconValue;
        }
        const button = this.createButton();
        this.element.insertAdjacentElement('afterend', button);
        this.dispatchEvent('connect', { element: this.element, button: button });
    }
    createButton() {
        const button = document.createElement('button');
        button.type = 'button';
        button.classList.add(...this.buttonClassesValue);
        button.setAttribute('tabindex', '-1');
        button.addEventListener('click', this.toggle.bind(this));
        button.innerHTML = this.visibleIcon + ' ' + this.visibleLabelValue;
        return button;
    }
    toggle(event) {
        this.isDisplayed = !this.isDisplayed;
        const toggleButtonElement = event.currentTarget;
        toggleButtonElement.innerHTML = this.isDisplayed
            ? this.hiddenIcon + ' ' + this.hiddenLabelValue
            : this.visibleIcon + ' ' + this.visibleLabelValue;
        this.element.setAttribute('type', this.isDisplayed ? 'text' : 'password');
        this.dispatchEvent(this.isDisplayed ? 'show' : 'hide', { element: this.element, button: toggleButtonElement });
    }
    dispatchEvent(name, payload) {
        this.dispatch(name, { detail: payload, prefix: 'toggle-password' });
    }
}
default_1.values = {
    visibleLabel: { type: String, default: 'Show' },
    visibleIcon: { type: String, default: 'Default' },
    hiddenLabel: { type: String, default: 'Hide' },
    hiddenIcon: { type: String, default: 'Default' },
    buttonClasses: Array,
};




/***/ }),

/***/ "./node_modules/@symfony/ux-translator/dist/translator_controller.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@symfony/ux-translator/dist/translator_controller.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getLocale: () => (/* binding */ getLocale),
/* harmony export */   getLocaleFallbacks: () => (/* binding */ getLocaleFallbacks),
/* harmony export */   setLocale: () => (/* binding */ setLocale),
/* harmony export */   setLocaleFallbacks: () => (/* binding */ setLocaleFallbacks),
/* harmony export */   trans: () => (/* binding */ trans)
/* harmony export */ });
/* harmony import */ var intl_messageformat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! intl-messageformat */ "./node_modules/intl-messageformat/lib/src/core.js");


function formatIntl(id, parameters = {}, locale) {
    if (id === '') {
        return '';
    }
    const intlMessage = new intl_messageformat__WEBPACK_IMPORTED_MODULE_0__.IntlMessageFormat(id, [locale.replace('_', '-')], undefined, { ignoreTag: true });
    parameters = Object.assign({}, parameters);
    Object.entries(parameters).forEach(([key, value]) => {
        if (key.includes('%') || key.includes('{')) {
            delete parameters[key];
            parameters[key.replace(/[%{} ]/g, '').trim()] = value;
        }
    });
    return intlMessage.format(parameters);
}

function strtr(string, replacePairs) {
    const regex = Object.entries(replacePairs).map(([from]) => {
        return from.replace(/([-[\]{}()*+?.\\^$|#,])/g, '\\$1');
    });
    if (regex.length === 0) {
        return string;
    }
    return string.replace(new RegExp(regex.join('|'), 'g'), (matched) => replacePairs[matched].toString());
}

function format(id, parameters = {}, locale) {
    if (null === id || '' === id) {
        return '';
    }
    if (typeof parameters['%count%'] === 'undefined' || Number.isNaN(parameters['%count%'])) {
        return strtr(id, parameters);
    }
    const number = Number(parameters['%count%']);
    let parts = [];
    if (/^\|+$/.test(id)) {
        parts = id.split('|');
    }
    else {
        const matches = id.match(/(?:\|\||[^|])+/g);
        if (matches !== null) {
            parts = matches;
        }
    }
    const intervalRegex = /^(?<interval>({\s*(-?\d+(\.\d+)?[\s*,\s*\-?\d+(.\d+)?]*)\s*})|(?<left_delimiter>[[\]])\s*(?<left>-Inf|-?\d+(\.\d+)?)\s*,\s*(?<right>\+?Inf|-?\d+(\.\d+)?)\s*(?<right_delimiter>[[\]]))\s*(?<message>.*?)$/s;
    const standardRules = [];
    for (let part of parts) {
        part = part.trim().replace(/\|\|/g, '|');
        let matches = part.match(intervalRegex);
        if (matches !== null) {
            if (matches[2]) {
                for (const n of matches[3].split(',')) {
                    if (number === Number(n)) {
                        return strtr(matches.groups['message'], parameters);
                    }
                }
            }
            else {
                const leftNumber = '-Inf' === matches.groups['left'] ? Number.NEGATIVE_INFINITY : Number(matches.groups['left']);
                const rightNumber = ['Inf', '+Inf'].includes(matches.groups['right']) ? Number.POSITIVE_INFINITY : Number(matches.groups['right']);
                if (('[' === matches.groups['left_delimiter'] ? number >= leftNumber : number > leftNumber)
                    && (']' === matches.groups['right_delimiter'] ? number <= rightNumber : number < rightNumber)) {
                    return strtr(matches.groups['message'], parameters);
                }
            }
        }
        else {
            matches = part.match(/^\w+:\s*(.*?)$/);
            if (matches !== null) {
                standardRules.push(matches[1]);
            }
            else {
                standardRules.push(part);
            }
        }
    }
    const position = getPluralizationRule(number, locale);
    if (typeof standardRules[position] === 'undefined') {
        if (1 === parts.length && typeof standardRules[0] !== 'undefined') {
            return strtr(standardRules[0], parameters);
        }
        throw new Error(`Unable to choose a translation for "${id}" with locale "${locale}" for value "${number}". Double check that this translation has the correct plural options (e.g. "There is one apple|There are %count% apples").`);
    }
    return strtr(standardRules[position], parameters);
}
function getPluralizationRule(number, locale) {
    number = Math.abs(number);
    let _locale = locale;
    if (locale === 'pt_BR' || locale === 'en_US_POSIX') {
        return 0;
    }
    _locale = _locale.length > 3 ? _locale.substring(0, _locale.indexOf('_')) : _locale;
    switch (_locale) {
        case 'af':
        case 'bn':
        case 'bg':
        case 'ca':
        case 'da':
        case 'de':
        case 'el':
        case 'en':
        case 'en_US_POSIX':
        case 'eo':
        case 'es':
        case 'et':
        case 'eu':
        case 'fa':
        case 'fi':
        case 'fo':
        case 'fur':
        case 'fy':
        case 'gl':
        case 'gu':
        case 'ha':
        case 'he':
        case 'hu':
        case 'is':
        case 'it':
        case 'ku':
        case 'lb':
        case 'ml':
        case 'mn':
        case 'mr':
        case 'nah':
        case 'nb':
        case 'ne':
        case 'nl':
        case 'nn':
        case 'no':
        case 'oc':
        case 'om':
        case 'or':
        case 'pa':
        case 'pap':
        case 'ps':
        case 'pt':
        case 'so':
        case 'sq':
        case 'sv':
        case 'sw':
        case 'ta':
        case 'te':
        case 'tk':
        case 'ur':
        case 'zu':
            return (1 == number) ? 0 : 1;
        case 'am':
        case 'bh':
        case 'fil':
        case 'fr':
        case 'gun':
        case 'hi':
        case 'hy':
        case 'ln':
        case 'mg':
        case 'nso':
        case 'pt_BR':
        case 'ti':
        case 'wa':
            return (number < 2) ? 0 : 1;
        case 'be':
        case 'bs':
        case 'hr':
        case 'ru':
        case 'sh':
        case 'sr':
        case 'uk':
            return ((1 == number % 10) && (11 != number % 100)) ? 0 : (((number % 10 >= 2) && (number % 10 <= 4) && ((number % 100 < 10) || (number % 100 >= 20))) ? 1 : 2);
        case 'cs':
        case 'sk':
            return (1 == number) ? 0 : (((number >= 2) && (number <= 4)) ? 1 : 2);
        case 'ga':
            return (1 == number) ? 0 : ((2 == number) ? 1 : 2);
        case 'lt':
            return ((1 == number % 10) && (11 != number % 100)) ? 0 : (((number % 10 >= 2) && ((number % 100 < 10) || (number % 100 >= 20))) ? 1 : 2);
        case 'sl':
            return (1 == number % 100) ? 0 : ((2 == number % 100) ? 1 : (((3 == number % 100) || (4 == number % 100)) ? 2 : 3));
        case 'mk':
            return (1 == number % 10) ? 0 : 1;
        case 'mt':
            return (1 == number) ? 0 : (((0 == number) || ((number % 100 > 1) && (number % 100 < 11))) ? 1 : (((number % 100 > 10) && (number % 100 < 20)) ? 2 : 3));
        case 'lv':
            return (0 == number) ? 0 : (((1 == number % 10) && (11 != number % 100)) ? 1 : 2);
        case 'pl':
            return (1 == number) ? 0 : (((number % 10 >= 2) && (number % 10 <= 4) && ((number % 100 < 12) || (number % 100 > 14))) ? 1 : 2);
        case 'cy':
            return (1 == number) ? 0 : ((2 == number) ? 1 : (((8 == number) || (11 == number)) ? 2 : 3));
        case 'ro':
            return (1 == number) ? 0 : (((0 == number) || ((number % 100 > 0) && (number % 100 < 20))) ? 1 : 2);
        case 'ar':
            return (0 == number) ? 0 : ((1 == number) ? 1 : ((2 == number) ? 2 : (((number % 100 >= 3) && (number % 100 <= 10)) ? 3 : (((number % 100 >= 11) && (number % 100 <= 99)) ? 4 : 5))));
        default:
            return 0;
    }
}

let _locale = null;
let _localeFallbacks = {};
function setLocale(locale) {
    _locale = locale;
}
function getLocale() {
    return (_locale ||
        document.documentElement.getAttribute('data-symfony-ux-translator-locale') ||
        document.documentElement.lang ||
        'en');
}
function setLocaleFallbacks(localeFallbacks) {
    _localeFallbacks = localeFallbacks;
}
function getLocaleFallbacks() {
    return _localeFallbacks;
}
function trans(message, parameters = {}, domain = 'messages', locale = null) {
    if (typeof domain === 'undefined') {
        domain = 'messages';
    }
    if (typeof locale === 'undefined' || null === locale) {
        locale = getLocale();
    }
    if (typeof message.translations === 'undefined') {
        return message.id;
    }
    const localesFallbacks = getLocaleFallbacks();
    const translationsIntl = message.translations[`${domain}+intl-icu`];
    if (typeof translationsIntl !== 'undefined') {
        while (typeof translationsIntl[locale] === 'undefined') {
            locale = localesFallbacks[locale];
            if (!locale) {
                break;
            }
        }
        if (locale) {
            return formatIntl(translationsIntl[locale], parameters, locale);
        }
    }
    const translations = message.translations[domain];
    if (typeof translations !== 'undefined') {
        while (typeof translations[locale] === 'undefined') {
            locale = localesFallbacks[locale];
            if (!locale) {
                break;
            }
        }
        if (locale) {
            return format(translations[locale], parameters, locale);
        }
    }
    return message.id;
}




/***/ }),

/***/ "../../../var/translations/configuration.js":
/*!**************************************************!*\
  !*** ../../../var/translations/configuration.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   localeFallbacks: () => (/* binding */ localeFallbacks)
/* harmony export */ });
var localeFallbacks = {
  "fr": null,
  "af": "fr",
  "ar": "fr",
  "az": "fr",
  "be": "fr",
  "bg": "fr",
  "bs": "fr",
  "ca": "fr",
  "cs": "fr",
  "cy": "fr",
  "da": "fr",
  "de": "fr",
  "el": "fr",
  "en": "fr",
  "es": "fr",
  "et": "fr",
  "eu": "fr",
  "fa": "fr",
  "fi": "fr",
  "gl": "fr",
  "he": "fr",
  "hr": "fr",
  "hu": "fr",
  "hy": "fr",
  "id": "fr",
  "it": "fr",
  "ja": "fr",
  "lb": "fr",
  "lt": "fr",
  "lv": "fr",
  "mk": "fr",
  "mn": "fr",
  "my": "fr",
  "nb": "no",
  "nl": "fr",
  "nn": "no",
  "no": "fr",
  "pl": "fr",
  "pt": "fr",
  "pt_BR": "pt",
  "ro": "fr",
  "ru": "fr",
  "sk": "fr",
  "sl": "fr",
  "sq": "fr",
  "sr_Cyrl": "sr",
  "sr_Latn": "fr",
  "sv": "fr",
  "th": "fr",
  "tl": "fr",
  "tr": "fr",
  "uk": "fr",
  "ur": "fr",
  "uz": "fr",
  "vi": "fr",
  "zh_CN": "zh",
  "zh": "fr",
  "zh_TW": "zh",
  "sr": "fr",
  "sr_RS": "sr",
  "vn": "fr",
  "ky": "fr",
  "sw": "fr"
};

/***/ }),

/***/ "../../../var/translations/index.js":
/*!******************************************!*\
  !*** ../../../var/translations/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ACCOUNT_HAS_EXPIRED: () => (/* binding */ ACCOUNT_HAS_EXPIRED),
/* harmony export */   ACCOUNT_IS_DISABLED: () => (/* binding */ ACCOUNT_IS_DISABLED),
/* harmony export */   ACCOUNT_IS_LOCKED: () => (/* binding */ ACCOUNT_IS_LOCKED),
/* harmony export */   ALERT_CONFIRM_BUTTON_TEXT: () => (/* binding */ ALERT_CONFIRM_BUTTON_TEXT),
/* harmony export */   ALERT_CONFIRM_DENY_BUTTON_TEXT: () => (/* binding */ ALERT_CONFIRM_DENY_BUTTON_TEXT),
/* harmony export */   ALERT_CONFIRM_INPUT_VALIDATOR_TEXT: () => (/* binding */ ALERT_CONFIRM_INPUT_VALIDATOR_TEXT),
/* harmony export */   ALERT_CONFIRM_TEXT: () => (/* binding */ ALERT_CONFIRM_TEXT),
/* harmony export */   ALERT_CONFIRM_TITLE: () => (/* binding */ ALERT_CONFIRM_TITLE),
/* harmony export */   ALERT_CUSTOMER_DELETE: () => (/* binding */ ALERT_CUSTOMER_DELETE),
/* harmony export */   ALERT_CUSTOMER_DELETE_TEXT: () => (/* binding */ ALERT_CUSTOMER_DELETE_TEXT),
/* harmony export */   ALERT_USER_DELETE: () => (/* binding */ ALERT_USER_DELETE),
/* harmony export */   ALERT_USER_DELETE_TEXT: () => (/* binding */ ALERT_USER_DELETE_TEXT),
/* harmony export */   ALERT_WIDGET_DELETE: () => (/* binding */ ALERT_WIDGET_DELETE),
/* harmony export */   ALERT_WIDGET_DELETE_TEXT: () => (/* binding */ ALERT_WIDGET_DELETE_TEXT),
/* harmony export */   ALREADY_LOGGED_IN: () => (/* binding */ ALREADY_LOGGED_IN),
/* harmony export */   AN_AUTHENTICATION_EXCEPTION_OCCURRED: () => (/* binding */ AN_AUTHENTICATION_EXCEPTION_OCCURRED),
/* harmony export */   AN_EMPTY_FILE_IS_NOT_ALLOWED: () => (/* binding */ AN_EMPTY_FILE_IS_NOT_ALLOWED),
/* harmony export */   APP: () => (/* binding */ APP),
/* harmony export */   AUTHENTICATION_CREDENTIALS_COULD_NOT_BE_FOUND: () => (/* binding */ AUTHENTICATION_CREDENTIALS_COULD_NOT_BE_FOUND),
/* harmony export */   AUTHENTICATION_FORGOT_PASSWORD_EMPTY_EMAIL: () => (/* binding */ AUTHENTICATION_FORGOT_PASSWORD_EMPTY_EMAIL),
/* harmony export */   AUTHENTICATION_REQUEST_COULD_NOT_BE_PROCESSED_DUE_TO_A_SYSTEM_PROBLEM: () => (/* binding */ AUTHENTICATION_REQUEST_COULD_NOT_BE_PROCESSED_DUE_TO_A_SYSTEM_PROBLEM),
/* harmony export */   A_PHP_EXTENSION_CAUSED_THE_UPLOAD_TO_FAIL: () => (/* binding */ A_PHP_EXTENSION_CAUSED_THE_UPLOAD_TO_FAIL),
/* harmony export */   BACK: () => (/* binding */ BACK),
/* harmony export */   BROWSE: () => (/* binding */ BROWSE),
/* harmony export */   CANCEL: () => (/* binding */ CANCEL),
/* harmony export */   CANNOT_WRITE_TEMPORARY_FILE_TO_DISK: () => (/* binding */ CANNOT_WRITE_TEMPORARY_FILE_TO_DISK),
/* harmony export */   CHECK_EMAIL_ACCOUNT_EXISTS: () => (/* binding */ CHECK_EMAIL_ACCOUNT_EXISTS),
/* harmony export */   CHECK_EMAIL_DIDNT_RECEIVE: () => (/* binding */ CHECK_EMAIL_DIDNT_RECEIVE),
/* harmony export */   CHECK_EMAIL_LINK_EXPIRES_IN: () => (/* binding */ CHECK_EMAIL_LINK_EXPIRES_IN),
/* harmony export */   CHECK_EMAIL_PAGE_TITLE: () => (/* binding */ CHECK_EMAIL_PAGE_TITLE),
/* harmony export */   CHECK_EMAIL_SUBTITLE: () => (/* binding */ CHECK_EMAIL_SUBTITLE),
/* harmony export */   CHECK_EMAIL_TITLE: () => (/* binding */ CHECK_EMAIL_TITLE),
/* harmony export */   COMMON_ADD_BUTTON: () => (/* binding */ COMMON_ADD_BUTTON),
/* harmony export */   COMMON_ADD_BUTTON_SUBORGANIZATION: () => (/* binding */ COMMON_ADD_BUTTON_SUBORGANIZATION),
/* harmony export */   COMMON_BACK: () => (/* binding */ COMMON_BACK),
/* harmony export */   COMMON_COLOR: () => (/* binding */ COMMON_COLOR),
/* harmony export */   COMMON_DESCRIPTION: () => (/* binding */ COMMON_DESCRIPTION),
/* harmony export */   COMMON_EDIT_BUTTON: () => (/* binding */ COMMON_EDIT_BUTTON),
/* harmony export */   COMMON_ICON: () => (/* binding */ COMMON_ICON),
/* harmony export */   COMMON_IMAGE: () => (/* binding */ COMMON_IMAGE),
/* harmony export */   COMMON_LINK: () => (/* binding */ COMMON_LINK),
/* harmony export */   COMMON_NAME: () => (/* binding */ COMMON_NAME),
/* harmony export */   COMMON_NOT_BLANK: () => (/* binding */ COMMON_NOT_BLANK),
/* harmony export */   COMMON_SEARCH: () => (/* binding */ COMMON_SEARCH),
/* harmony export */   COMMON_SEARCH_PLACEHOLDER: () => (/* binding */ COMMON_SEARCH_PLACEHOLDER),
/* harmony export */   COMMON_TITLE: () => (/* binding */ COMMON_TITLE),
/* harmony export */   COMPLETE_PROFILE_FLASH_ERROR_ALREADY_ASKED: () => (/* binding */ COMPLETE_PROFILE_FLASH_ERROR_ALREADY_ASKED),
/* harmony export */   COMPLETE_PROFILE_FLASH_SUCCESS_DATA_UPDATED: () => (/* binding */ COMPLETE_PROFILE_FLASH_SUCCESS_DATA_UPDATED),
/* harmony export */   COMPLETE_PROFILE_FORM_ADDRESS: () => (/* binding */ COMPLETE_PROFILE_FORM_ADDRESS),
/* harmony export */   COMPLETE_PROFILE_FORM_CONTACT: () => (/* binding */ COMPLETE_PROFILE_FORM_CONTACT),
/* harmony export */   COMPLETE_PROFILE_FORM_GENERAL: () => (/* binding */ COMPLETE_PROFILE_FORM_GENERAL),
/* harmony export */   COMPLETE_PROFILE_FORM_SUBMIT_LABEL: () => (/* binding */ COMPLETE_PROFILE_FORM_SUBMIT_LABEL),
/* harmony export */   COMPLETE_PROFILE_PAGE_TITLE: () => (/* binding */ COMPLETE_PROFILE_PAGE_TITLE),
/* harmony export */   COMPLETE_PROFILE_SUBTITLE: () => (/* binding */ COMPLETE_PROFILE_SUBTITLE),
/* harmony export */   COMPLETE_PROFILE_TITLE: () => (/* binding */ COMPLETE_PROFILE_TITLE),
/* harmony export */   CONFIRM_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED: () => (/* binding */ CONFIRM_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL: () => (/* binding */ CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER: () => (/* binding */ CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_LABEL: () => (/* binding */ CONFIRM_PASSWORD_FORM_PASSWORD_LABEL),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_PLACEHOLDER: () => (/* binding */ CONFIRM_PASSWORD_FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   CONFIRM_PASSWORD_FORM_SUBMIT_LABEL: () => (/* binding */ CONFIRM_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   CONFIRM_PASSWORD_PAGE_TITLE: () => (/* binding */ CONFIRM_PASSWORD_PAGE_TITLE),
/* harmony export */   CONFIRM_PASSWORD_SUBTITLE: () => (/* binding */ CONFIRM_PASSWORD_SUBTITLE),
/* harmony export */   CONFIRM_PASSWORD_TITLE: () => (/* binding */ CONFIRM_PASSWORD_TITLE),
/* harmony export */   COOKIE_HAS_ALREADY_BEEN_USED_BY_SOMEONE_ELSE: () => (/* binding */ COOKIE_HAS_ALREADY_BEEN_USED_BY_SOMEONE_ELSE),
/* harmony export */   COUNT_DAY_COUNT_DAYS: () => (/* binding */ COUNT_DAY_COUNT_DAYS),
/* harmony export */   COUNT_HOUR_COUNT_HOURS: () => (/* binding */ COUNT_HOUR_COUNT_HOURS),
/* harmony export */   COUNT_MINUTE_COUNT_MINUTES: () => (/* binding */ COUNT_MINUTE_COUNT_MINUTES),
/* harmony export */   COUNT_MONTH_COUNT_MONTHS: () => (/* binding */ COUNT_MONTH_COUNT_MONTHS),
/* harmony export */   COUNT_YEAR_COUNT_YEARS: () => (/* binding */ COUNT_YEAR_COUNT_YEARS),
/* harmony export */   CREDENTIALS_HAVE_EXPIRED: () => (/* binding */ CREDENTIALS_HAVE_EXPIRED),
/* harmony export */   CUSTOMER: () => (/* binding */ CUSTOMER),
/* harmony export */   CUSTOMER_COMMON_ADMINISTRATOR: () => (/* binding */ CUSTOMER_COMMON_ADMINISTRATOR),
/* harmony export */   CUSTOMER_COMMON_BACK: () => (/* binding */ CUSTOMER_COMMON_BACK),
/* harmony export */   CUSTOMER_COMMON_CUSTOMIZATIONS: () => (/* binding */ CUSTOMER_COMMON_CUSTOMIZATIONS),
/* harmony export */   CUSTOMER_COMMON_EMAIL: () => (/* binding */ CUSTOMER_COMMON_EMAIL),
/* harmony export */   CUSTOMER_COMMON_EXTERNAL_LINKS: () => (/* binding */ CUSTOMER_COMMON_EXTERNAL_LINKS),
/* harmony export */   CUSTOMER_COMMON_FAMILY_NAME: () => (/* binding */ CUSTOMER_COMMON_FAMILY_NAME),
/* harmony export */   CUSTOMER_COMMON_FULL_NAME: () => (/* binding */ CUSTOMER_COMMON_FULL_NAME),
/* harmony export */   CUSTOMER_COMMON_GIVEN_NAME: () => (/* binding */ CUSTOMER_COMMON_GIVEN_NAME),
/* harmony export */   CUSTOMER_COMMON_SAVE: () => (/* binding */ CUSTOMER_COMMON_SAVE),
/* harmony export */   CUSTOMER_COMMON_SUB_ORGANIZATION: () => (/* binding */ CUSTOMER_COMMON_SUB_ORGANIZATION),
/* harmony export */   CUSTOMER_COMMON_URL: () => (/* binding */ CUSTOMER_COMMON_URL),
/* harmony export */   CUSTOMER_COMMON_USERS_LIST: () => (/* binding */ CUSTOMER_COMMON_USERS_LIST),
/* harmony export */   CUSTOMER_DELETE_ERROR_FLASH: () => (/* binding */ CUSTOMER_DELETE_ERROR_FLASH),
/* harmony export */   CUSTOMER_DELETE_SUCCESS_FLASH: () => (/* binding */ CUSTOMER_DELETE_SUCCESS_FLASH),
/* harmony export */   CUSTOMER_EDIT_ADD_BUTTON: () => (/* binding */ CUSTOMER_EDIT_ADD_BUTTON),
/* harmony export */   CUSTOMER_EDIT_BACK_BUTTON: () => (/* binding */ CUSTOMER_EDIT_BACK_BUTTON),
/* harmony export */   CUSTOMER_EDIT_DELETE_BUTTON: () => (/* binding */ CUSTOMER_EDIT_DELETE_BUTTON),
/* harmony export */   CUSTOMER_EDIT_EDIT_BUTTON: () => (/* binding */ CUSTOMER_EDIT_EDIT_BUTTON),
/* harmony export */   CUSTOMER_EDIT_SAVE_BUTTON: () => (/* binding */ CUSTOMER_EDIT_SAVE_BUTTON),
/* harmony export */   CUSTOMER_EDIT_SUCCESS: () => (/* binding */ CUSTOMER_EDIT_SUCCESS),
/* harmony export */   CUSTOMER_EDIT_TITLE: () => (/* binding */ CUSTOMER_EDIT_TITLE),
/* harmony export */   CUSTOMER_NEW_SUCCESS_FLASH: () => (/* binding */ CUSTOMER_NEW_SUCCESS_FLASH),
/* harmony export */   CUSTOMER_NEW_TITLE: () => (/* binding */ CUSTOMER_NEW_TITLE),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_FAMILY_NAME_LABEL: () => (/* binding */ CUSTOMER_SHOW_ADMINISTRATOR_FAMILY_NAME_LABEL),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_GIVEN_NAME_LABEL: () => (/* binding */ CUSTOMER_SHOW_ADMINISTRATOR_GIVEN_NAME_LABEL),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_LABEL: () => (/* binding */ CUSTOMER_SHOW_ADMINISTRATOR_LABEL),
/* harmony export */   CUSTOMER_SHOW_MODULES: () => (/* binding */ CUSTOMER_SHOW_MODULES),
/* harmony export */   CUSTOMER_SHOW_ROLES: () => (/* binding */ CUSTOMER_SHOW_ROLES),
/* harmony export */   DASHBOARD: () => (/* binding */ DASHBOARD),
/* harmony export */   DEFAULT_ROLES: () => (/* binding */ DEFAULT_ROLES),
/* harmony export */   DELETE_ALREADY_DELETE: () => (/* binding */ DELETE_ALREADY_DELETE),
/* harmony export */   DELETE_NOT_IMPLEMENTED: () => (/* binding */ DELETE_NOT_IMPLEMENTED),
/* harmony export */   EACH_ELEMENT_OF_THIS_COLLECTION_SHOULD_SATISFY_ITS_OWN_SET_OF_CONSTRAINTS: () => (/* binding */ EACH_ELEMENT_OF_THIS_COLLECTION_SHOULD_SATISFY_ITS_OWN_SET_OF_CONSTRAINTS),
/* harmony export */   EDIT_FLASH_SUCCESS: () => (/* binding */ EDIT_FLASH_SUCCESS),
/* harmony export */   EDIT_HEADER_TITLE: () => (/* binding */ EDIT_HEADER_TITLE),
/* harmony export */   EDIT_LABEL: () => (/* binding */ EDIT_LABEL),
/* harmony export */   ERROR: () => (/* binding */ ERROR),
/* harmony export */   ERROR_1: () => (/* binding */ ERROR_1),
/* harmony export */   EXPORT: () => (/* binding */ EXPORT),
/* harmony export */   EXTERNAL_LINK_COMMON_DELETE_SUCCESS: () => (/* binding */ EXTERNAL_LINK_COMMON_DELETE_SUCCESS),
/* harmony export */   EXTERNAL_LINK_COMMON_EDIT_SUCCESS: () => (/* binding */ EXTERNAL_LINK_COMMON_EDIT_SUCCESS),
/* harmony export */   EXTERNAL_LINK_COMMON_ERROR: () => (/* binding */ EXTERNAL_LINK_COMMON_ERROR),
/* harmony export */   EXTERNAL_LINK_COMMON_NEW_SUCCESS: () => (/* binding */ EXTERNAL_LINK_COMMON_NEW_SUCCESS),
/* harmony export */   EXTERNAL_LINK_CRUD_ADD_BUTTON: () => (/* binding */ EXTERNAL_LINK_CRUD_ADD_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_DEFAULT_NAME: () => (/* binding */ EXTERNAL_LINK_CRUD_DEFAULT_NAME),
/* harmony export */   EXTERNAL_LINK_CRUD_DELETE_BUTTON: () => (/* binding */ EXTERNAL_LINK_CRUD_DELETE_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_ICON_LABEL: () => (/* binding */ EXTERNAL_LINK_CRUD_ICON_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_ICON_PLACEHOLDER: () => (/* binding */ EXTERNAL_LINK_CRUD_ICON_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_CRUD_NAME_LABEL: () => (/* binding */ EXTERNAL_LINK_CRUD_NAME_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_NAME_PLACEHOLDER: () => (/* binding */ EXTERNAL_LINK_CRUD_NAME_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_CRUD_SAVE_BUTTON: () => (/* binding */ EXTERNAL_LINK_CRUD_SAVE_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_TITLE: () => (/* binding */ EXTERNAL_LINK_CRUD_TITLE),
/* harmony export */   EXTERNAL_LINK_CRUD_URL_LABEL: () => (/* binding */ EXTERNAL_LINK_CRUD_URL_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_URL_PLACEHOLDER: () => (/* binding */ EXTERNAL_LINK_CRUD_URL_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_URL_INVALID: () => (/* binding */ EXTERNAL_LINK_URL_INVALID),
/* harmony export */   FILE_LOG_CONTENT: () => (/* binding */ FILE_LOG_CONTENT),
/* harmony export */   FILE_LOG_CREATED_AT: () => (/* binding */ FILE_LOG_CREATED_AT),
/* harmony export */   FILE_LOG_CUSTOMER: () => (/* binding */ FILE_LOG_CUSTOMER),
/* harmony export */   FILE_LOG_ID: () => (/* binding */ FILE_LOG_ID),
/* harmony export */   FILE_LOG_SENDER: () => (/* binding */ FILE_LOG_SENDER),
/* harmony export */   FILE_LOG_SITE: () => (/* binding */ FILE_LOG_SITE),
/* harmony export */   FILE_LOG_TYPE: () => (/* binding */ FILE_LOG_TYPE),
/* harmony export */   FILTER_SEARCHWORD: () => (/* binding */ FILTER_SEARCHWORD),
/* harmony export */   FLASH_DELETE: () => (/* binding */ FLASH_DELETE),
/* harmony export */   FLASH_ERROR_COMMON: () => (/* binding */ FLASH_ERROR_COMMON),
/* harmony export */   FORGOT_PASSWORD: () => (/* binding */ FORGOT_PASSWORD),
/* harmony export */   FORGOT_PASSWORD_FLASH_ERROR_ALREADY_ASKED: () => (/* binding */ FORGOT_PASSWORD_FLASH_ERROR_ALREADY_ASKED),
/* harmony export */   FORGOT_PASSWORD_FORM_EMAIL_LABEL: () => (/* binding */ FORGOT_PASSWORD_FORM_EMAIL_LABEL),
/* harmony export */   FORGOT_PASSWORD_FORM_EMAIL_PLACEHOLDER: () => (/* binding */ FORGOT_PASSWORD_FORM_EMAIL_PLACEHOLDER),
/* harmony export */   FORGOT_PASSWORD_FORM_SUBMIT_LABEL: () => (/* binding */ FORGOT_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   FORGOT_PASSWORD_PAGE_TITLE: () => (/* binding */ FORGOT_PASSWORD_PAGE_TITLE),
/* harmony export */   FORGOT_PASSWORD_SUBTITLE: () => (/* binding */ FORGOT_PASSWORD_SUBTITLE),
/* harmony export */   FORGOT_PASSWORD_TITLE: () => (/* binding */ FORGOT_PASSWORD_TITLE),
/* harmony export */   FORM_CREATED_AT: () => (/* binding */ FORM_CREATED_AT),
/* harmony export */   FORM_EMAIL_LABEL: () => (/* binding */ FORM_EMAIL_LABEL),
/* harmony export */   FORM_EMAIL_PLACEHOLDER: () => (/* binding */ FORM_EMAIL_PLACEHOLDER),
/* harmony export */   FORM_GENERAL: () => (/* binding */ FORM_GENERAL),
/* harmony export */   FORM_GRAPHIC_CHARTER: () => (/* binding */ FORM_GRAPHIC_CHARTER),
/* harmony export */   FORM_MODULES: () => (/* binding */ FORM_MODULES),
/* harmony export */   FORM_MODULES_ROLES: () => (/* binding */ FORM_MODULES_ROLES),
/* harmony export */   FORM_PASSWORD_LABEL: () => (/* binding */ FORM_PASSWORD_LABEL),
/* harmony export */   FORM_PASSWORD_PLACEHOLDER: () => (/* binding */ FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   FORM_SEARCH_LABEL: () => (/* binding */ FORM_SEARCH_LABEL),
/* harmony export */   FORM_SEARCH_PLACEHOLDER: () => (/* binding */ FORM_SEARCH_PLACEHOLDER),
/* harmony export */   FORM_SUBMIT_LABEL: () => (/* binding */ FORM_SUBMIT_LABEL),
/* harmony export */   FORM_SUB_ORGANIZATION: () => (/* binding */ FORM_SUB_ORGANIZATION),
/* harmony export */   FORM_UPDATED_AT: () => (/* binding */ FORM_UPDATED_AT),
/* harmony export */   GENERAL_ADMINISTRATOR_LABEL: () => (/* binding */ GENERAL_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_ADMINISTRATOR_PLACEHOLDER: () => (/* binding */ GENERAL_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_EMAIL_ADMINISTRATOR_LABEL: () => (/* binding */ GENERAL_EMAIL_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_EMAIL_ADMINISTRATOR_PLACEHOLDER: () => (/* binding */ GENERAL_EMAIL_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_FAMILY_NAME_ADMINISTRATOR_LABEL: () => (/* binding */ GENERAL_FAMILY_NAME_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_FAMILY_NAME_ADMINISTRATOR_PLACEHOLDER: () => (/* binding */ GENERAL_FAMILY_NAME_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_GIVEN_NAME_ADMINISTRATOR_LABEL: () => (/* binding */ GENERAL_GIVEN_NAME_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_GIVEN_NAME_ADMINISTRATOR_PLACEHOLDER: () => (/* binding */ GENERAL_GIVEN_NAME_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_LEGALNAME_LABEL: () => (/* binding */ GENERAL_LEGALNAME_LABEL),
/* harmony export */   GENERAL_LEGALNAME_PLACEHOLDER: () => (/* binding */ GENERAL_LEGALNAME_PLACEHOLDER),
/* harmony export */   GRAPHIC_CHARTER_COMPLEMENTARY_COLOR: () => (/* binding */ GRAPHIC_CHARTER_COMPLEMENTARY_COLOR),
/* harmony export */   GRAPHIC_CHARTER_LOGO: () => (/* binding */ GRAPHIC_CHARTER_LOGO),
/* harmony export */   GRAPHIC_CHARTER_MINIFIED_LOGO: () => (/* binding */ GRAPHIC_CHARTER_MINIFIED_LOGO),
/* harmony export */   GRAPHIC_CHARTER_PRIMARY_COLOR: () => (/* binding */ GRAPHIC_CHARTER_PRIMARY_COLOR),
/* harmony export */   GRAPHIC_CHARTER_SECONDARY_COLOR: () => (/* binding */ GRAPHIC_CHARTER_SECONDARY_COLOR),
/* harmony export */   GUARD_CURRENT_USER: () => (/* binding */ GUARD_CURRENT_USER),
/* harmony export */   INDEX_EMPTY: () => (/* binding */ INDEX_EMPTY),
/* harmony export */   INDEX_HEADER_TITLE: () => (/* binding */ INDEX_HEADER_TITLE),
/* harmony export */   INVALID_CARD_NUMBER: () => (/* binding */ INVALID_CARD_NUMBER),
/* harmony export */   INVALID_CREDENTIALS: () => (/* binding */ INVALID_CREDENTIALS),
/* harmony export */   INVALID_CSRF_TOKEN: () => (/* binding */ INVALID_CSRF_TOKEN),
/* harmony export */   INVALID_OR_EXPIRED_LOGIN_LINK: () => (/* binding */ INVALID_OR_EXPIRED_LOGIN_LINK),
/* harmony export */   LABEL_NEXT: () => (/* binding */ LABEL_NEXT),
/* harmony export */   LABEL_PREVIOUS: () => (/* binding */ LABEL_PREVIOUS),
/* harmony export */   LEGAL_PAGE_FLASH_SUCCESS: () => (/* binding */ LEGAL_PAGE_FLASH_SUCCESS),
/* harmony export */   LEGAL_PAGE_TITLE: () => (/* binding */ LEGAL_PAGE_TITLE),
/* harmony export */   LEGISLATION_EDIT_CONTENT_LABEL: () => (/* binding */ LEGISLATION_EDIT_CONTENT_LABEL),
/* harmony export */   LEGISLATION_EDIT_CONTENT_PLACEHOLDER: () => (/* binding */ LEGISLATION_EDIT_CONTENT_PLACEHOLDER),
/* harmony export */   LEGISLATION_EDIT_TITLE_LABEL: () => (/* binding */ LEGISLATION_EDIT_TITLE_LABEL),
/* harmony export */   LEGISLATION_EDIT_TITLE_PLACEHOLDER: () => (/* binding */ LEGISLATION_EDIT_TITLE_PLACEHOLDER),
/* harmony export */   LIST_EMPTY: () => (/* binding */ LIST_EMPTY),
/* harmony export */   LOGIN_SUBTITLE: () => (/* binding */ LOGIN_SUBTITLE),
/* harmony export */   LOGIN_TITLE: () => (/* binding */ LOGIN_TITLE),
/* harmony export */   LOGOUT: () => (/* binding */ LOGOUT),
/* harmony export */   LOG_AUTHENTICATION_COMPLETE_PROFILE: () => (/* binding */ LOG_AUTHENTICATION_COMPLETE_PROFILE),
/* harmony export */   LOG_AUTHENTICATION_FIRST_LOGIN: () => (/* binding */ LOG_AUTHENTICATION_FIRST_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_LOGIN: () => (/* binding */ LOG_AUTHENTICATION_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_LOGOUT: () => (/* binding */ LOG_AUTHENTICATION_LOGOUT),
/* harmony export */   LOG_AUTHENTICATION_MODULE_LOGIN: () => (/* binding */ LOG_AUTHENTICATION_MODULE_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_RESET_PASSWORD: () => (/* binding */ LOG_AUTHENTICATION_RESET_PASSWORD),
/* harmony export */   LOG_AUTHENTICATION_RESET_PASSWORD_REQUEST: () => (/* binding */ LOG_AUTHENTICATION_RESET_PASSWORD_REQUEST),
/* harmony export */   LOG_COMMON_ATTACHEMENT: () => (/* binding */ LOG_COMMON_ATTACHEMENT),
/* harmony export */   LOG_COMMON_CONTENT: () => (/* binding */ LOG_COMMON_CONTENT),
/* harmony export */   LOG_COMMON_CREATED: () => (/* binding */ LOG_COMMON_CREATED),
/* harmony export */   LOG_COMMON_CUSTOMER: () => (/* binding */ LOG_COMMON_CUSTOMER),
/* harmony export */   LOG_COMMON_SENDER: () => (/* binding */ LOG_COMMON_SENDER),
/* harmony export */   LOG_COMMON_SITE: () => (/* binding */ LOG_COMMON_SITE),
/* harmony export */   LOG_COMMON_SUBTITLE: () => (/* binding */ LOG_COMMON_SUBTITLE),
/* harmony export */   LOG_COMMON_TITLE: () => (/* binding */ LOG_COMMON_TITLE),
/* harmony export */   LOG_COMMON_TYPE: () => (/* binding */ LOG_COMMON_TYPE),
/* harmony export */   LOG_CUSTOMER_ADD_MODULE: () => (/* binding */ LOG_CUSTOMER_ADD_MODULE),
/* harmony export */   LOG_CUSTOMER_DELETE: () => (/* binding */ LOG_CUSTOMER_DELETE),
/* harmony export */   LOG_CUSTOMER_EDIT_GENERAL: () => (/* binding */ LOG_CUSTOMER_EDIT_GENERAL),
/* harmony export */   LOG_CUSTOMER_EDIT_GRAPHIC_CHARTER: () => (/* binding */ LOG_CUSTOMER_EDIT_GRAPHIC_CHARTER),
/* harmony export */   LOG_CUSTOMER_NEW: () => (/* binding */ LOG_CUSTOMER_NEW),
/* harmony export */   LOG_CUSTOMER_NEW_CHILD: () => (/* binding */ LOG_CUSTOMER_NEW_CHILD),
/* harmony export */   LOG_CUSTOMER_REMOVE_MODULE: () => (/* binding */ LOG_CUSTOMER_REMOVE_MODULE),
/* harmony export */   LOG_EMAIL_SEND: () => (/* binding */ LOG_EMAIL_SEND),
/* harmony export */   LOG_ERROR_MODULE: () => (/* binding */ LOG_ERROR_MODULE),
/* harmony export */   LOG_ERROR_TOKEN_TRADUCTION: () => (/* binding */ LOG_ERROR_TOKEN_TRADUCTION),
/* harmony export */   LOG_EXTERNAL_LINK_DELETE: () => (/* binding */ LOG_EXTERNAL_LINK_DELETE),
/* harmony export */   LOG_EXTERNAL_LINK_EDIT: () => (/* binding */ LOG_EXTERNAL_LINK_EDIT),
/* harmony export */   LOG_EXTERNAL_LINK_NEW: () => (/* binding */ LOG_EXTERNAL_LINK_NEW),
/* harmony export */   LOG_ROLE_ADD_FOR_ALL_USERS: () => (/* binding */ LOG_ROLE_ADD_FOR_ALL_USERS),
/* harmony export */   LOG_ROLE_ADD_FOR_USER: () => (/* binding */ LOG_ROLE_ADD_FOR_USER),
/* harmony export */   LOG_ROLE_REMOVE_FOR_USER: () => (/* binding */ LOG_ROLE_REMOVE_FOR_USER),
/* harmony export */   LOG_TITLE: () => (/* binding */ LOG_TITLE),
/* harmony export */   LOG_USER_DELETE: () => (/* binding */ LOG_USER_DELETE),
/* harmony export */   LOG_USER_EDIT_COMPLEMENTARY: () => (/* binding */ LOG_USER_EDIT_COMPLEMENTARY),
/* harmony export */   LOG_USER_EDIT_GENERAL: () => (/* binding */ LOG_USER_EDIT_GENERAL),
/* harmony export */   LOG_USER_NEW: () => (/* binding */ LOG_USER_NEW),
/* harmony export */   LOG_WIDGET_DELETE: () => (/* binding */ LOG_WIDGET_DELETE),
/* harmony export */   LOG_WIDGET_EDIT: () => (/* binding */ LOG_WIDGET_EDIT),
/* harmony export */   LOG_WIDGET_NEW: () => (/* binding */ LOG_WIDGET_NEW),
/* harmony export */   MIXING_NUMBERS_FROM_DIFFERENT_SCRIPTS_IS_NOT_ALLOWED: () => (/* binding */ MIXING_NUMBERS_FROM_DIFFERENT_SCRIPTS_IS_NOT_ALLOWED),
/* harmony export */   MODULE_LOGIN_FLASH_ERROR_GET_LINK: () => (/* binding */ MODULE_LOGIN_FLASH_ERROR_GET_LINK),
/* harmony export */   MODULE_SLUG_INVALID: () => (/* binding */ MODULE_SLUG_INVALID),
/* harmony export */   MODULE_URL_INVALID: () => (/* binding */ MODULE_URL_INVALID),
/* harmony export */   NEW_FLASH_SUCCESS: () => (/* binding */ NEW_FLASH_SUCCESS),
/* harmony export */   NEW_HEADER_TITLE: () => (/* binding */ NEW_HEADER_TITLE),
/* harmony export */   NEXT: () => (/* binding */ NEXT),
/* harmony export */   NOT_GRANTED: () => (/* binding */ NOT_GRANTED),
/* harmony export */   NOT_PRIVILEGED_TO_REQUEST_THE_RESOURCE: () => (/* binding */ NOT_PRIVILEGED_TO_REQUEST_THE_RESOURCE),
/* harmony export */   NO_AUTHENTICATION_PROVIDER_FOUND_TO_SUPPORT_THE_AUTHENTICATION_TOKEN: () => (/* binding */ NO_AUTHENTICATION_PROVIDER_FOUND_TO_SUPPORT_THE_AUTHENTICATION_TOKEN),
/* harmony export */   NO_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED: () => (/* binding */ NO_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED),
/* harmony export */   NO_ELEMENTS: () => (/* binding */ NO_ELEMENTS),
/* harmony export */   NO_FILE_WAS_UPLOADED: () => (/* binding */ NO_FILE_WAS_UPLOADED),
/* harmony export */   NO_MORE_RESULTS: () => (/* binding */ NO_MORE_RESULTS),
/* harmony export */   NO_RESULTS_FOUND: () => (/* binding */ NO_RESULTS_FOUND),
/* harmony export */   NO_SESSION_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED: () => (/* binding */ NO_SESSION_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED),
/* harmony export */   NO_TEMPORARY_FOLDER_WAS_CONFIGURED_IN_PHP_INI: () => (/* binding */ NO_TEMPORARY_FOLDER_WAS_CONFIGURED_IN_PHP_INI),
/* harmony export */   NO_TOKEN_COULD_BE_FOUND: () => (/* binding */ NO_TOKEN_COULD_BE_FOUND),
/* harmony export */   ONE_OR_MORE_OF_THE_GIVEN_VALUES_IS_INVALID: () => (/* binding */ ONE_OR_MORE_OF_THE_GIVEN_VALUES_IS_INVALID),
/* harmony export */   PAGE_TITLE: () => (/* binding */ PAGE_TITLE),
/* harmony export */   PLEASE_CHOOSE_A_VALID_DATE_INTERVAL: () => (/* binding */ PLEASE_CHOOSE_A_VALID_DATE_INTERVAL),
/* harmony export */   PLEASE_ENTER_AN_INTEGER: () => (/* binding */ PLEASE_ENTER_AN_INTEGER),
/* harmony export */   PLEASE_ENTER_A_NUMBER: () => (/* binding */ PLEASE_ENTER_A_NUMBER),
/* harmony export */   PLEASE_ENTER_A_PERCENTAGE_VALUE: () => (/* binding */ PLEASE_ENTER_A_PERCENTAGE_VALUE),
/* harmony export */   PLEASE_ENTER_A_VALID_BIRTHDATE: () => (/* binding */ PLEASE_ENTER_A_VALID_BIRTHDATE),
/* harmony export */   PLEASE_ENTER_A_VALID_DATE: () => (/* binding */ PLEASE_ENTER_A_VALID_DATE),
/* harmony export */   PLEASE_ENTER_A_VALID_DATE_AND_TIME: () => (/* binding */ PLEASE_ENTER_A_VALID_DATE_AND_TIME),
/* harmony export */   PLEASE_ENTER_A_VALID_EMAIL_ADDRESS: () => (/* binding */ PLEASE_ENTER_A_VALID_EMAIL_ADDRESS),
/* harmony export */   PLEASE_ENTER_A_VALID_MONEY_AMOUNT: () => (/* binding */ PLEASE_ENTER_A_VALID_MONEY_AMOUNT),
/* harmony export */   PLEASE_ENTER_A_VALID_SEARCH_TERM: () => (/* binding */ PLEASE_ENTER_A_VALID_SEARCH_TERM),
/* harmony export */   PLEASE_ENTER_A_VALID_TIME: () => (/* binding */ PLEASE_ENTER_A_VALID_TIME),
/* harmony export */   PLEASE_ENTER_A_VALID_URL: () => (/* binding */ PLEASE_ENTER_A_VALID_URL),
/* harmony export */   PLEASE_ENTER_A_VALID_WEEK: () => (/* binding */ PLEASE_ENTER_A_VALID_WEEK),
/* harmony export */   PLEASE_PROVIDE_A_VALID_PHONE_NUMBER: () => (/* binding */ PLEASE_PROVIDE_A_VALID_PHONE_NUMBER),
/* harmony export */   PLEASE_SELECT_A_VALID_COLOR: () => (/* binding */ PLEASE_SELECT_A_VALID_COLOR),
/* harmony export */   PLEASE_SELECT_A_VALID_COUNTRY: () => (/* binding */ PLEASE_SELECT_A_VALID_COUNTRY),
/* harmony export */   PLEASE_SELECT_A_VALID_CURRENCY: () => (/* binding */ PLEASE_SELECT_A_VALID_CURRENCY),
/* harmony export */   PLEASE_SELECT_A_VALID_FILE: () => (/* binding */ PLEASE_SELECT_A_VALID_FILE),
/* harmony export */   PLEASE_SELECT_A_VALID_LANGUAGE: () => (/* binding */ PLEASE_SELECT_A_VALID_LANGUAGE),
/* harmony export */   PLEASE_SELECT_A_VALID_LOCALE: () => (/* binding */ PLEASE_SELECT_A_VALID_LOCALE),
/* harmony export */   PLEASE_SELECT_A_VALID_OPTION: () => (/* binding */ PLEASE_SELECT_A_VALID_OPTION),
/* harmony export */   PLEASE_SELECT_A_VALID_RANGE: () => (/* binding */ PLEASE_SELECT_A_VALID_RANGE),
/* harmony export */   PLEASE_SELECT_A_VALID_TIMEZONE: () => (/* binding */ PLEASE_SELECT_A_VALID_TIMEZONE),
/* harmony export */   PLEASE_UPDATE_THE_REQUEST_PASSWORD_REPOSITORY_CONFIGURATION_IN_CONFIG_PACKAGES_RESET_PASSWORD_YAML_TO_POINT_TO_YOUR_REQUEST_PASSWORD_REPOSITORY_SERVICE: () => (/* binding */ PLEASE_UPDATE_THE_REQUEST_PASSWORD_REPOSITORY_CONFIGURATION_IN_CONFIG_PACKAGES_RESET_PASSWORD_YAML_TO_POINT_TO_YOUR_REQUEST_PASSWORD_REPOSITORY_SERVICE),
/* harmony export */   PREFIX: () => (/* binding */ PREFIX),
/* harmony export */   PREVIOUS: () => (/* binding */ PREVIOUS),
/* harmony export */   RESET_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED: () => (/* binding */ RESET_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL: () => (/* binding */ RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER: () => (/* binding */ RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_LABEL: () => (/* binding */ RESET_PASSWORD_FORM_PASSWORD_LABEL),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_PLACEHOLDER: () => (/* binding */ RESET_PASSWORD_FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   RESET_PASSWORD_FORM_SUBMIT_LABEL: () => (/* binding */ RESET_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   RESET_PASSWORD_PAGE_TITLE: () => (/* binding */ RESET_PASSWORD_PAGE_TITLE),
/* harmony export */   RESET_PASSWORD_SUBJECT: () => (/* binding */ RESET_PASSWORD_SUBJECT),
/* harmony export */   RESET_PASSWORD_SUBTITLE_FIRST_LOGIN: () => (/* binding */ RESET_PASSWORD_SUBTITLE_FIRST_LOGIN),
/* harmony export */   RESET_PASSWORD_TITLE: () => (/* binding */ RESET_PASSWORD_TITLE),
/* harmony export */   ROLE_EDIT_ADD_ALL: () => (/* binding */ ROLE_EDIT_ADD_ALL),
/* harmony export */   ROLE_EDIT_NAME: () => (/* binding */ ROLE_EDIT_NAME),
/* harmony export */   ROLE_EDIT_REMOVE_ALL: () => (/* binding */ ROLE_EDIT_REMOVE_ALL),
/* harmony export */   ROLE_EDIT_ROLE: () => (/* binding */ ROLE_EDIT_ROLE),
/* harmony export */   ROLE_INDEX_TITLE: () => (/* binding */ ROLE_INDEX_TITLE),
/* harmony export */   SAVE_LABEL: () => (/* binding */ SAVE_LABEL),
/* harmony export */   SEARCH: () => (/* binding */ SEARCH),
/* harmony export */   SELECT: () => (/* binding */ SELECT),
/* harmony export */   SUBTITLE: () => (/* binding */ SUBTITLE),
/* harmony export */   SUB_ORGANIZATION_HAS_SUB_ORGANIZATION: () => (/* binding */ SUB_ORGANIZATION_HAS_SUB_ORGANIZATION),
/* harmony export */   THERE_WAS_A_PROBLEM_HANDLING_YOUR_PASSWORD_RESET_REQUEST: () => (/* binding */ THERE_WAS_A_PROBLEM_HANDLING_YOUR_PASSWORD_RESET_REQUEST),
/* harmony export */   THERE_WAS_A_PROBLEM_VALIDATING_YOUR_PASSWORD_RESET_REQUEST: () => (/* binding */ THERE_WAS_A_PROBLEM_VALIDATING_YOUR_PASSWORD_RESET_REQUEST),
/* harmony export */   THE_CHECKBOX_HAS_AN_INVALID_VALUE: () => (/* binding */ THE_CHECKBOX_HAS_AN_INVALID_VALUE),
/* harmony export */   THE_COLLECTION_IS_INVALID: () => (/* binding */ THE_COLLECTION_IS_INVALID),
/* harmony export */   THE_CSRF_TOKEN_IS_INVALID: () => (/* binding */ THE_CSRF_TOKEN_IS_INVALID),
/* harmony export */   THE_CSRF_TOKEN_IS_INVALID_PLEASE_TRY_TO_RESUBMIT_THE_FORM: () => (/* binding */ THE_CSRF_TOKEN_IS_INVALID_PLEASE_TRY_TO_RESUBMIT_THE_FORM),
/* harmony export */   THE_FIELDS_FIELDS_ARE_MISSING: () => (/* binding */ THE_FIELDS_FIELDS_ARE_MISSING),
/* harmony export */   THE_FIELDS_FIELDS_WERE_NOT_EXPECTED: () => (/* binding */ THE_FIELDS_FIELDS_WERE_NOT_EXPECTED),
/* harmony export */   THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTER_OR_LESS_THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTERS_OR_LESS: () => (/* binding */ THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTER_OR_LESS_THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTERS_OR_LESS),
/* harmony export */   THE_FILE_COULD_NOT_BE_FOUND: () => (/* binding */ THE_FILE_COULD_NOT_BE_FOUND),
/* harmony export */   THE_FILE_COULD_NOT_BE_UPLOADED: () => (/* binding */ THE_FILE_COULD_NOT_BE_UPLOADED),
/* harmony export */   THE_FILE_IS_NOT_READABLE: () => (/* binding */ THE_FILE_IS_NOT_READABLE),
/* harmony export */   THE_FILE_IS_TOO_LARGE: () => (/* binding */ THE_FILE_IS_TOO_LARGE),
/* harmony export */   THE_FILE_IS_TOO_LARGE_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX: () => (/* binding */ THE_FILE_IS_TOO_LARGE_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX),
/* harmony export */   THE_FILE_IS_TOO_LARGE_SIZE_SUFFIX_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX: () => (/* binding */ THE_FILE_IS_TOO_LARGE_SIZE_SUFFIX_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX),
/* harmony export */   THE_FILE_WAS_ONLY_PARTIALLY_UPLOADED: () => (/* binding */ THE_FILE_WAS_ONLY_PARTIALLY_UPLOADED),
/* harmony export */   THE_HIDDEN_FIELD_IS_INVALID: () => (/* binding */ THE_HIDDEN_FIELD_IS_INVALID),
/* harmony export */   THE_HOST_COULD_NOT_BE_RESOLVED: () => (/* binding */ THE_HOST_COULD_NOT_BE_RESOLVED),
/* harmony export */   THE_IMAGE_HEIGHT_IS_TOO_BIG_HEIGHT_PX_ALLOWED_MAXIMUM_HEIGHT_IS_MAX_HEIGHT_PX: () => (/* binding */ THE_IMAGE_HEIGHT_IS_TOO_BIG_HEIGHT_PX_ALLOWED_MAXIMUM_HEIGHT_IS_MAX_HEIGHT_PX),
/* harmony export */   THE_IMAGE_HEIGHT_IS_TOO_SMALL_HEIGHT_PX_MINIMUM_HEIGHT_EXPECTED_IS_MIN_HEIGHT_PX: () => (/* binding */ THE_IMAGE_HEIGHT_IS_TOO_SMALL_HEIGHT_PX_MINIMUM_HEIGHT_EXPECTED_IS_MIN_HEIGHT_PX),
/* harmony export */   THE_IMAGE_IS_LANDSCAPE_ORIENTED_WIDTH_X_HEIGHT_PX_LANDSCAPE_ORIENTED_IMAGES_ARE_NOT_ALLOWED: () => (/* binding */ THE_IMAGE_IS_LANDSCAPE_ORIENTED_WIDTH_X_HEIGHT_PX_LANDSCAPE_ORIENTED_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_IS_PORTRAIT_ORIENTED_WIDTH_X_HEIGHT_PX_PORTRAIT_ORIENTED_IMAGES_ARE_NOT_ALLOWED: () => (/* binding */ THE_IMAGE_IS_PORTRAIT_ORIENTED_WIDTH_X_HEIGHT_PX_PORTRAIT_ORIENTED_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_IS_SQUARE_WIDTH_X_HEIGHT_PX_SQUARE_IMAGES_ARE_NOT_ALLOWED: () => (/* binding */ THE_IMAGE_IS_SQUARE_WIDTH_X_HEIGHT_PX_SQUARE_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_RATIO_IS_TOO_BIG_RATIO_ALLOWED_MAXIMUM_RATIO_IS_MAX_RATIO: () => (/* binding */ THE_IMAGE_RATIO_IS_TOO_BIG_RATIO_ALLOWED_MAXIMUM_RATIO_IS_MAX_RATIO),
/* harmony export */   THE_IMAGE_RATIO_IS_TOO_SMALL_RATIO_MINIMUM_RATIO_EXPECTED_IS_MIN_RATIO: () => (/* binding */ THE_IMAGE_RATIO_IS_TOO_SMALL_RATIO_MINIMUM_RATIO_EXPECTED_IS_MIN_RATIO),
/* harmony export */   THE_IMAGE_WIDTH_IS_TOO_BIG_WIDTH_PX_ALLOWED_MAXIMUM_WIDTH_IS_MAX_WIDTH_PX: () => (/* binding */ THE_IMAGE_WIDTH_IS_TOO_BIG_WIDTH_PX_ALLOWED_MAXIMUM_WIDTH_IS_MAX_WIDTH_PX),
/* harmony export */   THE_IMAGE_WIDTH_IS_TOO_SMALL_WIDTH_PX_MINIMUM_WIDTH_EXPECTED_IS_MIN_WIDTH_PX: () => (/* binding */ THE_IMAGE_WIDTH_IS_TOO_SMALL_WIDTH_PX_MINIMUM_WIDTH_EXPECTED_IS_MIN_WIDTH_PX),
/* harmony export */   THE_LINK_IN_YOUR_EMAIL_IS_EXPIRED_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN: () => (/* binding */ THE_LINK_IN_YOUR_EMAIL_IS_EXPIRED_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN),
/* harmony export */   THE_MIME_TYPE_OF_THE_FILE_IS_INVALID_TYPE_ALLOWED_MIME_TYPES_ARE_TYPES: () => (/* binding */ THE_MIME_TYPE_OF_THE_FILE_IS_INVALID_TYPE_ALLOWED_MIME_TYPES_ARE_TYPES),
/* harmony export */   THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE: () => (/* binding */ THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE),
/* harmony export */   THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE_1: () => (/* binding */ THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE_1),
/* harmony export */   THE_PASSWORD_IS_INVALID: () => (/* binding */ THE_PASSWORD_IS_INVALID),
/* harmony export */   THE_PASSWORD_STRENGTH_IS_TOO_LOW_PLEASE_USE_A_STRONGER_PASSWORD: () => (/* binding */ THE_PASSWORD_STRENGTH_IS_TOO_LOW_PLEASE_USE_A_STRONGER_PASSWORD),
/* harmony export */   THE_RESET_PASSWORD_LINK_IS_INVALID_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN: () => (/* binding */ THE_RESET_PASSWORD_LINK_IS_INVALID_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN),
/* harmony export */   THE_SELECTED_CHOICE_IS_INVALID: () => (/* binding */ THE_SELECTED_CHOICE_IS_INVALID),
/* harmony export */   THE_SIZE_OF_THE_IMAGE_COULD_NOT_BE_DETECTED: () => (/* binding */ THE_SIZE_OF_THE_IMAGE_COULD_NOT_BE_DETECTED),
/* harmony export */   THE_TWO_VALUES_SHOULD_BE_EQUAL: () => (/* binding */ THE_TWO_VALUES_SHOULD_BE_EQUAL),
/* harmony export */   THE_UPLOADED_FILE_WAS_TOO_LARGE_PLEASE_TRY_TO_UPLOAD_A_SMALLER_FILE: () => (/* binding */ THE_UPLOADED_FILE_WAS_TOO_LARGE_PLEASE_TRY_TO_UPLOAD_A_SMALLER_FILE),
/* harmony export */   THE_VALUES_DO_NOT_MATCH: () => (/* binding */ THE_VALUES_DO_NOT_MATCH),
/* harmony export */   THE_VALUE_OF_THE_NETMASK_SHOULD_BE_BETWEEN_MIN_AND_MAX: () => (/* binding */ THE_VALUE_OF_THE_NETMASK_SHOULD_BE_BETWEEN_MIN_AND_MAX),
/* harmony export */   THE_VALUE_YOU_SELECTED_IS_NOT_A_VALID_CHOICE: () => (/* binding */ THE_VALUE_YOU_SELECTED_IS_NOT_A_VALID_CHOICE),
/* harmony export */   THIS_BUSINESS_IDENTIFIER_CODE_BIC_IS_NOT_ASSOCIATED_WITH_IBAN_IBAN: () => (/* binding */ THIS_BUSINESS_IDENTIFIER_CODE_BIC_IS_NOT_ASSOCIATED_WITH_IBAN_IBAN),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENT_THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENTS: () => (/* binding */ THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENT_THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENTS),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_LESS_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_LESS: () => (/* binding */ THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_LESS_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_LESS),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_MORE_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_MORE: () => (/* binding */ THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_MORE_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_MORE),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_ONLY_UNIQUE_ELEMENTS: () => (/* binding */ THIS_COLLECTION_SHOULD_CONTAIN_ONLY_UNIQUE_ELEMENTS),
/* harmony export */   THIS_FIELD_IS_MISSING: () => (/* binding */ THIS_FIELD_IS_MISSING),
/* harmony export */   THIS_FIELD_WAS_NOT_EXPECTED: () => (/* binding */ THIS_FIELD_WAS_NOT_EXPECTED),
/* harmony export */   THIS_FILE_IS_NOT_A_VALID_IMAGE: () => (/* binding */ THIS_FILE_IS_NOT_A_VALID_IMAGE),
/* harmony export */   THIS_FORM_SHOULD_NOT_CONTAIN_EXTRA_FIELDS: () => (/* binding */ THIS_FORM_SHOULD_NOT_CONTAIN_EXTRA_FIELDS),
/* harmony export */   THIS_IS_NOT_A_VALID_BUSINESS_IDENTIFIER_CODE_BIC: () => (/* binding */ THIS_IS_NOT_A_VALID_BUSINESS_IDENTIFIER_CODE_BIC),
/* harmony export */   THIS_IS_NOT_A_VALID_INTERNATIONAL_BANK_ACCOUNT_NUMBER_IBAN: () => (/* binding */ THIS_IS_NOT_A_VALID_INTERNATIONAL_BANK_ACCOUNT_NUMBER_IBAN),
/* harmony export */   THIS_IS_NOT_A_VALID_IP_ADDRESS: () => (/* binding */ THIS_IS_NOT_A_VALID_IP_ADDRESS),
/* harmony export */   THIS_IS_NOT_A_VALID_UUID: () => (/* binding */ THIS_IS_NOT_A_VALID_UUID),
/* harmony export */   THIS_PASSWORD_HAS_BEEN_LEAKED_IN_A_DATA_BREACH_IT_MUST_NOT_BE_USED_PLEASE_USE_ANOTHER_PASSWORD: () => (/* binding */ THIS_PASSWORD_HAS_BEEN_LEAKED_IN_A_DATA_BREACH_IT_MUST_NOT_BE_USED_PLEASE_USE_ANOTHER_PASSWORD),
/* harmony export */   THIS_VALUE_CONTAINS_CHARACTERS_THAT_ARE_NOT_ALLOWED_BY_THE_CURRENT_RESTRICTION_LEVEL: () => (/* binding */ THIS_VALUE_CONTAINS_CHARACTERS_THAT_ARE_NOT_ALLOWED_BY_THE_CURRENT_RESTRICTION_LEVEL),
/* harmony export */   THIS_VALUE_DOES_NOT_MATCH_THE_EXPECTED_CHARSET_CHARSET: () => (/* binding */ THIS_VALUE_DOES_NOT_MATCH_THE_EXPECTED_CHARSET_CHARSET),
/* harmony export */   THIS_VALUE_IS_ALREADY_USED: () => (/* binding */ THIS_VALUE_IS_ALREADY_USED),
/* harmony export */   THIS_VALUE_IS_NEITHER_A_VALID_ISBN10_NOR_A_VALID_ISBN13: () => (/* binding */ THIS_VALUE_IS_NEITHER_A_VALID_ISBN10_NOR_A_VALID_ISBN13),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CIDR_NOTATION: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_CIDR_NOTATION),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_COUNTRY: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_COUNTRY),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CSS_COLOR: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_CSS_COLOR),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CURRENCY: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_CURRENCY),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_DATE: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_DATE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_DATETIME: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_DATETIME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_EMAIL_ADDRESS: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_EMAIL_ADDRESS),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_HOSTNAME: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_HOSTNAME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_HTML5_COLOR: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_HTML5_COLOR),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_INTERNATIONAL_SECURITIES_IDENTIFICATION_NUMBER_ISIN: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_INTERNATIONAL_SECURITIES_IDENTIFICATION_NUMBER_ISIN),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISBN10: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_ISBN10),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISBN13: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_ISBN13),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISSN: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_ISSN),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_LANGUAGE: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_LANGUAGE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_LOCALE: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_LOCALE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_TIME: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_TIME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_TIMEZONE: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_TIMEZONE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_URL: () => (/* binding */ THIS_VALUE_IS_NOT_A_VALID_URL),
/* harmony export */   THIS_VALUE_IS_NOT_VALID: () => (/* binding */ THIS_VALUE_IS_NOT_VALID),
/* harmony export */   THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_LESS_THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_LESS: () => (/* binding */ THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_LESS_THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_LESS),
/* harmony export */   THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_MORE_THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_MORE: () => (/* binding */ THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_MORE_THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_MORE),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_VALID_EXPRESSION: () => (/* binding */ THIS_VALUE_SHOULD_BE_A_VALID_EXPRESSION),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_VALID_NUMBER: () => (/* binding */ THIS_VALUE_SHOULD_BE_A_VALID_NUMBER),
/* harmony export */   THIS_VALUE_SHOULD_BE_BETWEEN_MIN_AND_MAX: () => (/* binding */ THIS_VALUE_SHOULD_BE_BETWEEN_MIN_AND_MAX),
/* harmony export */   THIS_VALUE_SHOULD_BE_BLANK: () => (/* binding */ THIS_VALUE_SHOULD_BE_BLANK),
/* harmony export */   THIS_VALUE_SHOULD_BE_EITHER_NEGATIVE_OR_ZERO: () => (/* binding */ THIS_VALUE_SHOULD_BE_EITHER_NEGATIVE_OR_ZERO),
/* harmony export */   THIS_VALUE_SHOULD_BE_EITHER_POSITIVE_OR_ZERO: () => (/* binding */ THIS_VALUE_SHOULD_BE_EITHER_POSITIVE_OR_ZERO),
/* harmony export */   THIS_VALUE_SHOULD_BE_EQUAL_TO_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_FALSE: () => (/* binding */ THIS_VALUE_SHOULD_BE_FALSE),
/* harmony export */   THIS_VALUE_SHOULD_BE_GREATER_THAN_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_GREATER_THAN_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LESS_THAN_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_LESS_THAN_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LESS_THAN_OR_EQUAL_TO_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_LESS_THAN_OR_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LIMIT_OR_LESS: () => (/* binding */ THIS_VALUE_SHOULD_BE_LIMIT_OR_LESS),
/* harmony export */   THIS_VALUE_SHOULD_BE_LIMIT_OR_MORE: () => (/* binding */ THIS_VALUE_SHOULD_BE_LIMIT_OR_MORE),
/* harmony export */   THIS_VALUE_SHOULD_BE_NEGATIVE: () => (/* binding */ THIS_VALUE_SHOULD_BE_NEGATIVE),
/* harmony export */   THIS_VALUE_SHOULD_BE_NULL: () => (/* binding */ THIS_VALUE_SHOULD_BE_NULL),
/* harmony export */   THIS_VALUE_SHOULD_BE_OF_TYPE_TYPE: () => (/* binding */ THIS_VALUE_SHOULD_BE_OF_TYPE_TYPE),
/* harmony export */   THIS_VALUE_SHOULD_BE_POSITIVE: () => (/* binding */ THIS_VALUE_SHOULD_BE_POSITIVE),
/* harmony export */   THIS_VALUE_SHOULD_BE_THE_USER_S_CURRENT_PASSWORD: () => (/* binding */ THIS_VALUE_SHOULD_BE_THE_USER_S_CURRENT_PASSWORD),
/* harmony export */   THIS_VALUE_SHOULD_BE_TRUE: () => (/* binding */ THIS_VALUE_SHOULD_BE_TRUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_VALID_JSON: () => (/* binding */ THIS_VALUE_SHOULD_BE_VALID_JSON),
/* harmony export */   THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTER_THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTERS: () => (/* binding */ THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTER_THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTERS),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_BLANK: () => (/* binding */ THIS_VALUE_SHOULD_NOT_BE_BLANK),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_EQUAL_TO_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_NOT_BE_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE: () => (/* binding */ THIS_VALUE_SHOULD_NOT_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_NULL: () => (/* binding */ THIS_VALUE_SHOULD_NOT_BE_NULL),
/* harmony export */   THIS_VALUE_SHOULD_SATISFY_AT_LEAST_ONE_OF_THE_FOLLOWING_CONSTRAINTS: () => (/* binding */ THIS_VALUE_SHOULD_SATISFY_AT_LEAST_ONE_OF_THE_FOLLOWING_CONSTRAINTS),
/* harmony export */   TITLE: () => (/* binding */ TITLE),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTE: () => (/* binding */ TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTE),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTES: () => (/* binding */ TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTES),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_LATER: () => (/* binding */ TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_LATER),
/* harmony export */   UNSUPPORTED_CARD_TYPE_OR_INVALID_CARD_NUMBER: () => (/* binding */ UNSUPPORTED_CARD_TYPE_OR_INVALID_CARD_NUMBER),
/* harmony export */   USERNAME_COULD_NOT_BE_FOUND: () => (/* binding */ USERNAME_COULD_NOT_BE_FOUND),
/* harmony export */   USER_COMMON_ACTIVATED: () => (/* binding */ USER_COMMON_ACTIVATED),
/* harmony export */   USER_COMMON_ACTIVE: () => (/* binding */ USER_COMMON_ACTIVE),
/* harmony export */   USER_COMMON_ADDRESS_CITY: () => (/* binding */ USER_COMMON_ADDRESS_CITY),
/* harmony export */   USER_COMMON_ADDRESS_POSTAL_CODE: () => (/* binding */ USER_COMMON_ADDRESS_POSTAL_CODE),
/* harmony export */   USER_COMMON_ADDRESS_STREET_ADDRESS: () => (/* binding */ USER_COMMON_ADDRESS_STREET_ADDRESS),
/* harmony export */   USER_COMMON_AVATAR: () => (/* binding */ USER_COMMON_AVATAR),
/* harmony export */   USER_COMMON_BIRTH_GIVEN_NAME: () => (/* binding */ USER_COMMON_BIRTH_GIVEN_NAME),
/* harmony export */   USER_COMMON_BIRTH_GIVEN_NAME_PLACEHOLDER: () => (/* binding */ USER_COMMON_BIRTH_GIVEN_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_BIRTH_PLACE: () => (/* binding */ USER_COMMON_BIRTH_PLACE),
/* harmony export */   USER_COMMON_BIRTH_PLACE_PLACEHOLDER: () => (/* binding */ USER_COMMON_BIRTH_PLACE_PLACEHOLDER),
/* harmony export */   USER_COMMON_CATEGORY_CSP: () => (/* binding */ USER_COMMON_CATEGORY_CSP),
/* harmony export */   USER_COMMON_CATEGORY_CSP_PLACEHOLDER: () => (/* binding */ USER_COMMON_CATEGORY_CSP_PLACEHOLDER),
/* harmony export */   USER_COMMON_CUSTOMER: () => (/* binding */ USER_COMMON_CUSTOMER),
/* harmony export */   USER_COMMON_DEACTIVATED: () => (/* binding */ USER_COMMON_DEACTIVATED),
/* harmony export */   USER_COMMON_EMAIL: () => (/* binding */ USER_COMMON_EMAIL),
/* harmony export */   USER_COMMON_EMAIL_PLACEHOLDER: () => (/* binding */ USER_COMMON_EMAIL_PLACEHOLDER),
/* harmony export */   USER_COMMON_FAMILY_NAME: () => (/* binding */ USER_COMMON_FAMILY_NAME),
/* harmony export */   USER_COMMON_FAMILY_NAME_PLACEHOLDER: () => (/* binding */ USER_COMMON_FAMILY_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_GENDER: () => (/* binding */ USER_COMMON_GENDER),
/* harmony export */   USER_COMMON_GENDER_PLACEHOLDER: () => (/* binding */ USER_COMMON_GENDER_PLACEHOLDER),
/* harmony export */   USER_COMMON_GIVE_NAME: () => (/* binding */ USER_COMMON_GIVE_NAME),
/* harmony export */   USER_COMMON_GIVE_NAME_PLACEHOLDER: () => (/* binding */ USER_COMMON_GIVE_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_JOB_TITLE: () => (/* binding */ USER_COMMON_JOB_TITLE),
/* harmony export */   USER_COMMON_JOB_TITLE_PLACEHOLDER: () => (/* binding */ USER_COMMON_JOB_TITLE_PLACEHOLDER),
/* harmony export */   USER_COMMON_MARITAL_STATUS: () => (/* binding */ USER_COMMON_MARITAL_STATUS),
/* harmony export */   USER_COMMON_MARITAL_STATUS_PLACEHOLDER: () => (/* binding */ USER_COMMON_MARITAL_STATUS_PLACEHOLDER),
/* harmony export */   USER_COMMON_PERSONNAL_EMAIL: () => (/* binding */ USER_COMMON_PERSONNAL_EMAIL),
/* harmony export */   USER_COMMON_PERSONNAL_EMAIL_PLACEHOLDER: () => (/* binding */ USER_COMMON_PERSONNAL_EMAIL_PLACEHOLDER),
/* harmony export */   USER_COMMON_PERSONNAL_TELEPHONE: () => (/* binding */ USER_COMMON_PERSONNAL_TELEPHONE),
/* harmony export */   USER_COMMON_PERSONNAL_TELEPHONE_PLACEHOLDER: () => (/* binding */ USER_COMMON_PERSONNAL_TELEPHONE_PLACEHOLDER),
/* harmony export */   USER_COMMON_PROFESIONNAL_TELEPHONE: () => (/* binding */ USER_COMMON_PROFESIONNAL_TELEPHONE),
/* harmony export */   USER_COMMON_PROFESIONNAL_TELEPHONE_PLACEHOLDER: () => (/* binding */ USER_COMMON_PROFESIONNAL_TELEPHONE_PLACEHOLDER),
/* harmony export */   USER_COMMON_USER: () => (/* binding */ USER_COMMON_USER),
/* harmony export */   USER_COMMON_USERS: () => (/* binding */ USER_COMMON_USERS),
/* harmony export */   USER_EDIT_CANCEL: () => (/* binding */ USER_EDIT_CANCEL),
/* harmony export */   USER_EDIT_COMPLEMENTARY_INFORMATION: () => (/* binding */ USER_EDIT_COMPLEMENTARY_INFORMATION),
/* harmony export */   USER_EDIT_DELETE: () => (/* binding */ USER_EDIT_DELETE),
/* harmony export */   USER_EDIT_EDIT_BUTTON: () => (/* binding */ USER_EDIT_EDIT_BUTTON),
/* harmony export */   USER_EDIT_GENERAL_INFORMATION: () => (/* binding */ USER_EDIT_GENERAL_INFORMATION),
/* harmony export */   USER_EDIT_ROLES: () => (/* binding */ USER_EDIT_ROLES),
/* harmony export */   USER_EDIT_SAVE_BUTTON: () => (/* binding */ USER_EDIT_SAVE_BUTTON),
/* harmony export */   USER_EDIT_SUCCESS: () => (/* binding */ USER_EDIT_SUCCESS),
/* harmony export */   USER_EDIT_TITLE: () => (/* binding */ USER_EDIT_TITLE),
/* harmony export */   USER_EMAIL_UNIQUE: () => (/* binding */ USER_EMAIL_UNIQUE),
/* harmony export */   USER_INDEX_ACTIONS: () => (/* binding */ USER_INDEX_ACTIONS),
/* harmony export */   USER_INDEX_ALERT_DELETE: () => (/* binding */ USER_INDEX_ALERT_DELETE),
/* harmony export */   USER_INDEX_CREATE: () => (/* binding */ USER_INDEX_CREATE),
/* harmony export */   USER_INDEX_DELETE_SUCCESS: () => (/* binding */ USER_INDEX_DELETE_SUCCESS),
/* harmony export */   USER_INDEX_EMPTY_TABLE: () => (/* binding */ USER_INDEX_EMPTY_TABLE),
/* harmony export */   USER_INDEX_FAMILY_NAME_GIVE_NAME: () => (/* binding */ USER_INDEX_FAMILY_NAME_GIVE_NAME),
/* harmony export */   USER_INDEX_IS_ACTIVE: () => (/* binding */ USER_INDEX_IS_ACTIVE),
/* harmony export */   USER_INDEX_LAST_LOGIN: () => (/* binding */ USER_INDEX_LAST_LOGIN),
/* harmony export */   USER_INDEX_ROLES: () => (/* binding */ USER_INDEX_ROLES),
/* harmony export */   USER_NEW_CANCEL: () => (/* binding */ USER_NEW_CANCEL),
/* harmony export */   USER_NEW_SAVE_BUTTON: () => (/* binding */ USER_NEW_SAVE_BUTTON),
/* harmony export */   USER_NEW_SUBJECT: () => (/* binding */ USER_NEW_SUBJECT),
/* harmony export */   USER_NEW_SUCCESS_FLASH: () => (/* binding */ USER_NEW_SUCCESS_FLASH),
/* harmony export */   USER_NEW_TITLE: () => (/* binding */ USER_NEW_TITLE),
/* harmony export */   USER_PASSWORD_CONFIRMATION_INVALID: () => (/* binding */ USER_PASSWORD_CONFIRMATION_INVALID),
/* harmony export */   USER_PASSWORD_INVALID: () => (/* binding */ USER_PASSWORD_INVALID),
/* harmony export */   USER_PROFIL_TITLE: () => (/* binding */ USER_PROFIL_TITLE),
/* harmony export */   USER_ROLES_ROLEADMIN: () => (/* binding */ USER_ROLES_ROLEADMIN),
/* harmony export */   USER_ROLES_ROLECOLLABORATOR: () => (/* binding */ USER_ROLES_ROLECOLLABORATOR),
/* harmony export */   USER_ROLES_ROLESUPERADMIN: () => (/* binding */ USER_ROLES_ROLESUPERADMIN),
/* harmony export */   USER_ROLE_EMPTY: () => (/* binding */ USER_ROLE_EMPTY),
/* harmony export */   USER_ROLE_INVALID: () => (/* binding */ USER_ROLE_INVALID),
/* harmony export */   USING_HIDDEN_OVERLAY_CHARACTERS_IS_NOT_ALLOWED: () => (/* binding */ USING_HIDDEN_OVERLAY_CHARACTERS_IS_NOT_ALLOWED),
/* harmony export */   USING_INVISIBLE_CHARACTERS_IS_NOT_ALLOWED: () => (/* binding */ USING_INVISIBLE_CHARACTERS_IS_NOT_ALLOWED),
/* harmony export */   VICH_UPLOADER_FORM_LABEL_DELETE_CONFIRM: () => (/* binding */ VICH_UPLOADER_FORM_LABEL_DELETE_CONFIRM),
/* harmony export */   VICH_UPLOADER_LINK_DOWNLOAD: () => (/* binding */ VICH_UPLOADER_LINK_DOWNLOAD),
/* harmony export */   WIDGET_SLUG_INVALID: () => (/* binding */ WIDGET_SLUG_INVALID),
/* harmony export */   WIDGET_SLUG_INVALID_CHOICE: () => (/* binding */ WIDGET_SLUG_INVALID_CHOICE),
/* harmony export */   WIDGET_TYPE_CANCEL: () => (/* binding */ WIDGET_TYPE_CANCEL),
/* harmony export */   WIDGET_TYPE_DELETE: () => (/* binding */ WIDGET_TYPE_DELETE),
/* harmony export */   WIDGET_TYPE_EDIT_BUTTON: () => (/* binding */ WIDGET_TYPE_EDIT_BUTTON),
/* harmony export */   WIDGET_TYPE_SAVE_BUTTON: () => (/* binding */ WIDGET_TYPE_SAVE_BUTTON),
/* harmony export */   WIDGET_TYPE_SUBMIT: () => (/* binding */ WIDGET_TYPE_SUBMIT),
/* harmony export */   YOU_HAVE_ALREADY_REQUESTED_A_RESET_PASSWORD_EMAIL_PLEASE_CHECK_YOUR_EMAIL_OR_TRY_AGAIN_SOON: () => (/* binding */ YOU_HAVE_ALREADY_REQUESTED_A_RESET_PASSWORD_EMAIL_PLEASE_CHECK_YOUR_EMAIL_OR_TRY_AGAIN_SOON),
/* harmony export */   YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICES: () => (/* binding */ YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICES),
/* harmony export */   YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICES: () => (/* binding */ YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICES)
/* harmony export */ });
var THIS_VALUE_SHOULD_BE_FALSE={"id":"This value should be false.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre fausse.","af":"Hierdie waarde moet vals wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u062E\u0627\u0637\u0626\u0629.","az":"Bu d\u0259y\u0259r false olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u041D\u0435.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043B\u044A\u0436\u0430 (false).","bs":"Ova vrijednost bi trebalo da bude \"neta\u010Dno\" (false).","ca":"Aquest valor hauria de ser fals.","cs":"Tato hodnota mus\xED b\xFDt nepravdiv\xE1 (false).","cy":"Dylid bod y gwerth hwn yn ffug.","da":"V\xE6rdien skal v\xE6re falsk.","de":"Dieser Wert sollte false sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C8\u03B5\u03C5\u03B4\u03AE\u03C2.","en":"This value should be false.","es":"Este valor deber\xEDa ser falso.","et":"V\xE4\xE4rtus peaks olema v\xE4\xE4r.","eu":"Balio hau faltsua izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0646\u0627\u062F\u0631\u0633\u062A (False) \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla ep\xE4tosi.","gl":"Este valor deber\xEDa ser falso.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05E7\u05E8.","hr":"Ova vrijednost treba biti neto\u010Dna (false).","hu":"Ennek az \xE9rt\xE9knek hamisnak kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u056F\u0565\u0572\u056E\u0589","id":"Nilai ini harus bernilai salah.","it":"Questo valore dovrebbe essere falso.","ja":"false\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt falsch sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti neigiama.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt nepatiesai.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043B\u0430\u0436\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A false \u1016\u103C\u1005\u103A\u101B\u1019\u100A\u103A\u104B","nb":"Verdien m\xE5 v\xE6re usann.","nl":"Deze waarde moet onwaar zijn.","nn":"Verdien skulle ha vore tom\/nei.","no":"Verdien m\xE5 v\xE6re usann.","pl":"Ta warto\u015B\u0107 powinna by\u0107 fa\u0142szem.","pt":"Este valor deveria ser falso.","pt_BR":"Este valor deve ser falso.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie fals\u0103 (false).","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043B\u043E\u0436\u043D\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 nastaven\xE1 na false.","sl":"Vrednost bi morala biti nepravilna (false).","sq":"Kjo vler\xEB duhet t\xEB jet\xEB e pav\xEBrtet\xEB (false).","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043D\u0435\u0442\u0430\u0447\u043D\u0430.","sr_Latn":"Vrednost bi trebalo da bude neta\u010Dna.","sv":"V\xE4rdet ska vara falskt.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 false","tl":"Ang halaga nito ay dapat na huwad.","tr":"Bu de\u011Fer olumsuz olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u041D\u0456.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u063A\u0644\u0637 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat false bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i l\xE0 sai.","zh_CN":"\u8BE5\u53D8\u91CF\u7684\u503C\u5E94\u4E3A false \u3002","zh_TW":"\u8A72\u8B8A\u6578\u7684\u503C\u61C9\u70BA false \u3002"}}};var THIS_VALUE_SHOULD_BE_TRUE={"id":"This value should be true.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre vraie.","af":"Hierdie waarde moet waar wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u062D\u0642\u064A\u0642\u064A\u0629.","az":"Bu d\u0259y\u0259r true olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0422\u0430\u043A.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0438\u0441\u0442\u0438\u043D\u0430 (true).","bs":"Ova vrijednost bi trebalo da bude \"ta\u010Dno\" (true).","ca":"Aquest valor hauria de ser cert.","cs":"Tato hodnota mus\xED b\xFDt pravdiv\xE1 (true).","cy":"Dylid bod y gwerth hwn yn wir.","da":"V\xE6rdien skal v\xE6re sand.","de":"Dieser Wert sollte true sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BB\u03B7\u03B8\u03AE\u03C2.","en":"This value should be true.","es":"Este valor deber\xEDa ser verdadero.","et":"V\xE4\xE4rtus peaks oleme t\xF5ene.","eu":"Balio hau egia izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062F\u0631\u0633\u062A (True) \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla tosi.","gl":"Este valor deber\xEDa ser verdadeiro.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05D0\u05DE\u05EA.","hr":"Ova vrijednost treba biti to\u010Dna (true).","hu":"Ennek az \xE9rt\xE9knek igaznak kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u056B\u0580\u0561\u056F\u0561\u0576\u0589","id":"Nilai ini harus bernilai benar.","it":"Questo valore dovrebbe essere vero.","ja":"true\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt wouer sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti teigiama.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt patiesai.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0432\u0438\u0441\u0442\u0438\u043D\u0438\u0442\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A true \u1016\u103C\u1005\u103A\u101B\u1019\u100A\u103A\u104B","nb":"Verdien m\xE5 v\xE6re sann.","nl":"Deze waarde moet waar zijn.","nn":"Verdien skulla ha vore satt\/ja.","no":"Verdien m\xE5 v\xE6re sann.","pl":"Ta warto\u015B\u0107 powinna by\u0107 prawd\u0105.","pt":"Este valor deveria ser verdadeiro.","pt_BR":"Este valor deve ser verdadeiro.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie adev\u0103rat\u0103 (true).","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0438\u0441\u0442\u0438\u043D\u043D\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 nastaven\xE1 na true.","sl":"Vrednost bi morala biti pravilna (true).","sq":"Kjo vler\xEB duhet t\xEB jet\xEB e v\xEBrtet\xEB (true).","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0430\u0447\u043D\u0430.","sr_Latn":"Vrednost bi trebalo da bude ta\u010Dna.","sv":"V\xE4rdet ska vara sant.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 true","tl":"Ang halaga nito ay dapat totoo.","tr":"Bu de\u011Fer olumlu olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0422\u0430\u043A.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat true bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i l\xE0 \u0111\xFAng.","zh_CN":"\u8BE5\u53D8\u91CF\u7684\u503C\u5E94\u4E3A true \u3002","zh_TW":"\u8A72\u8B8A\u6578\u7684\u503C\u61C9\u70BA true \u3002"}}};var THIS_VALUE_SHOULD_BE_OF_TYPE_TYPE={"id":"This value should be of type {{ type }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre de type {{ type }}.","af":"Hierdie waarde moet van die soort {{type}} wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0645\u0646 \u0646\u0648\u0639 {{ type }}.","az":"Bu d\u0259y\u0259rin tipi {{ type }} olmal\u0131d\u0131r.","be":"\u0422\u044B\u043F \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u044F \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0431\u044B\u0446\u044C {{ type }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043E\u0442 \u0442\u0438\u043F {{ type }}.","bs":"Ova vrijednost bi trebalo da bude tipa {{ type }}.","ca":"Aquest valor hauria de ser del tipus {{ type }}.","cs":"Tato hodnota mus\xED b\xFDt typu {{ type }}.","cy":"Dylid bod y gwerth hwn bod o fath {{ type }}.","da":"V\xE6rdien skal v\xE6re af typen {{ type }}.","de":"Dieser Wert sollte vom Typ {{ type }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03CD\u03C0\u03BF\u03C5 {{ type }}.","en":"This value should be of type {{ type }}.","es":"Este valor deber\xEDa ser de tipo {{ type }}.","et":"V\xE4\xE4rtus peaks olema {{ type }}-t\xFC\xFCpi.","eu":"Balio hau {{ type }} motakoa izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0627\u0632 \u0646\u0648\u0639 {{ type }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla tyyppi\xE4 {{ type }}.","gl":"Este valor deber\xEDa ser de tipo {{ type }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05E1\u05D5\u05D2 {{ type }}.","hr":"Ova vrijednost treba biti tipa {{ type }}.","hu":"Ennek az \xE9rt\xE9knek {{ type }} t\xEDpus\xFAnak kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B {{ type }} \u057F\u0565\u057D\u0561\u056F\u056B\u0589","id":"Nilai ini harus bertipe {{ type }}.","it":"Questo valore dovrebbe essere di tipo {{ type }}.","ja":"\u578B\u306F{{ type }}\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt vum Typ {{ type }} sinn.","lt":"\u0160ios reik\u0161m\u0117s tipas turi b\u016Bti {{ type }}.","lv":"\u0160\u012Bs v\u0113rt\u012Bbas tipam ir j\u0101b\u016Bt {{ type }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043E\u0434 \u0442\u0438\u043F\u043E\u0442 {{ type }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430  {{ type }} -\u043D \u0442\u04E9\u0440\u04E9\u043B \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ type }} \u1021\u1019\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u1016\u103C\u1005\u103A\u101B\u1019\u100A\u103A\u104B ","nb":"Verdien skal ha typen {{ type }}.","nl":"Deze waarde moet van het type {{ type }} zijn.","nn":"Verdien m\xE5 vere av typen {{ type }}.","no":"Verdien skal ha typen {{ type }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 typu {{ type }}.","pt":"Este valor deveria ser do tipo {{ type }}.","pt_BR":"Este valor deve ser do tipo {{ type }}.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie de tipul {{ type }}.","ru":"\u0422\u0438\u043F \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C {{ type }}.","sk":"T\xE1to hodnota by mala by\u0165 typu {{ type }}.","sl":"Vrednost mora biti naslednjega tipa {{ type }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB e llojit {{ type }}.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0438\u043F\u0430 {{ type }}.","sr_Latn":"Vrednost bi trebalo da bude tipa {{ type }}.","sv":"V\xE4rdet ska vara av typen {{ type }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 {{ type }}","tl":"Ang halaga nito ay dapat sa uri {{ type }}.","tr":"Bu de\u011Ferin tipi {{ type }} olmal\u0131d\u0131r.","uk":"\u0422\u0438\u043F \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0431\u0443\u0442\u0438 {{ type }}.","ur":"\u0642\u0633\u0645 \u06A9\u06CC \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{type}} \u064A\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat turi {{ type }} bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i l\xE0 ki\u1EC3u  {{ type }}.","zh_CN":"\u8BE5\u53D8\u91CF\u7684\u7C7B\u578B\u5E94\u4E3A {{ type }} \u3002","zh_TW":"\u8A72\u8B8A\u6578\u7684\u985E\u578B\u61C9\u70BA {{ type }} \u3002"}}};var THIS_VALUE_SHOULD_BE_BLANK={"id":"This value should be blank.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre vide.","af":"Hierdie waarde moet leeg wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0641\u0627\u0631\u063A\u0629.","az":"Bu d\u0259y\u0259r bo\u015F olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043F\u0443\u0441\u0442\u044B\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u0430.","bs":"Ova vrijednost bi trebalo da bude prazna.","ca":"Aquest valor hauria d'estar buit.","cs":"Tato hodnota mus\xED b\xFDt pr\xE1zdn\xE1.","cy":"Dylid bod y gwerth hwn yn wag.","da":"V\xE6rdien skal v\xE6re blank.","de":"Dieser Wert sollte leer sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03AE.","en":"This value should be blank.","es":"Este valor deber\xEDa estar vac\xEDo.","et":"V\xE4\xE4rtus peaks olema t\xFChi.","eu":"Balio hau hutsik egon beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla tyhj\xE4.","gl":"Este valor deber\xEDa estar baleiro.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7.","hr":"Ova vrijednost treba biti prazna.","hu":"Ennek az \xE9rt\xE9knek \xFCresnek kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0564\u0561\u057F\u0561\u0580\u056F\u0589","id":"Nilai ini harus kosong.","it":"Questo valore dovrebbe essere vuoto.","ja":"\u7A7A\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt eidel sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti tu\u0161\u010Dia.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt tuk\u0161ai.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1000\u103D\u1015\u103A\u101C\u1015\u103A\u1019\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u1015\u102B\u104B","nb":"Verdien skal v\xE6re blank.","nl":"Deze waarde moet leeg zijn.","nn":"Verdien skal vere blank.","no":"Verdien skal v\xE6re blank.","pl":"Ta warto\u015B\u0107 powinna by\u0107 pusta.","pt":"Este valor deveria ser vazio.","pt_BR":"Este valor deve ser vazio.","ro":"Aceast\u0103 valoare ar trebui sa fie goal\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 pr\xE1zdna.","sl":"Vrednost mora biti prazna.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB e zbraz\xEBt.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u0430.","sr_Latn":"Vrednost bi trebalo da bude prazna.","sv":"V\xE4rdet ska vara tomt.","th":"\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E27\u0E48\u0E32\u0E07","tl":"Ang halaga nito ay dapat walang laman.","tr":"Bu de\u011Fer bo\u015F olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043F\u0443\u0441\u0442\u0438\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062E\u0627\u0644\u06CC \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat bo'sh bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i r\u1ED7ng.","zh_CN":"\u8BE5\u53D8\u91CF\u503C\u5E94\u4E3A\u7A7A\u3002","zh_TW":"\u8A72\u8B8A\u6578\u61C9\u70BA\u7A7A\u3002"}}};var THE_VALUE_YOU_SELECTED_IS_NOT_A_VALID_CHOICE={"id":"The value you selected is not a valid choice.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre l'un des choix propos\xE9s.","af":"Die waarde wat jy gekies het is nie 'n geldige keuse nie.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u0627\u0644\u0645\u062E\u062A\u0627\u0631\u0629 \u0644\u064A\u0633\u062A \u062E\u064A\u0627\u0631\u0627 \u0635\u062D\u064A\u062D\u0627.","az":"Se\xE7diyiniz d\u0259y\u0259r d\xFCzg\xFCn bir se\xE7im de\u011Fil.","be":"\u0410\u0431\u0440\u0430\u043D\u0430\u0435 \u0432\u0430\u043C\u0456 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0435.","bg":"\u0418\u0437\u0431\u0440\u0430\u043D\u0430\u0442\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","bs":"Odabrana vrijednost nije validan izbor.","ca":"El valor seleccionat no \xE9s una opci\xF3 v\xE0lida.","cs":"Vybran\xE1 hodnota nen\xED platnou mo\u017Enost\xED.","cy":"Nid yw'r gwerth \xE2 ddewiswyd yn ddilys.","da":"Den valgte v\xE6rdi er ikke gyldig.","de":"Sie haben einen ung\xFCltigen Wert ausgew\xE4hlt.","el":"\u0397 \u03C4\u03B9\u03BC\u03AE \u03C0\u03BF\u03C5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03C7\u03B8\u03B7\u03BA\u03B5 \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE.","en":"The value you selected is not a valid choice.","es":"El valor seleccionado no es una opci\xF3n v\xE1lida.","et":"V\xE4\xE4rtus peaks olema \xFCks etteantud valikutest.","eu":"Hautatu duzun balioa ez da aukera egoki bat.","fa":"\u0645\u0642\u062F\u0627\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u0634\u062F\u0647 \u06CC\u06A9 \u06AF\u0632\u06CC\u0646\u0647 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla yksi annetuista vaihtoehdoista.","gl":"O valor seleccionado non \xE9 unha opci\xF3n v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05E9\u05D1\u05D7\u05E8\u05EA \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije valjan izbor.","hu":"A v\xE1lasztott \xE9rt\xE9k \xE9rv\xE9nytelen.","hy":"\u0541\u0565\u0580 \u0568\u0576\u057F\u0580\u0561\u056E \u0561\u0580\u056A\u0565\u0584\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0568\u0576\u057F\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576 \u0567\u0589","id":"Nilai yang dipilih tidak tepat.","it":"Questo valore dovrebbe essere una delle opzioni disponibili.","ja":"\u6709\u52B9\u306A\u9078\u629E\u80A2\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt enger vun de Wielm\xE9iglechkeeten entspriechen.","lt":"Neteisingas pasirinkimas.","lv":"V\u0113rt\u012Bba, kuru j\u016Bs izv\u0113l\u0113j\u0101ties nav der\u012Bga izv\u0113le.","mk":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430 \u0448\u0442\u043E \u0458\u0430 \u043E\u0434\u0431\u0440\u0430\u0432\u0442\u0435 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u0437\u0431\u043E\u0440.","mn":"\u0421\u043E\u043D\u0433\u043E\u0441\u043E\u043D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u101E\u1004\u103A\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u101E\u1031\u102C\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Den valgte verdien er ikke gyldig.","nl":"De geselecteerde waarde is geen geldige optie.","nn":"Verdien du valde er ikkje gyldig.","no":"Den valgte verdien er ikke gyldig.","pl":"Ta warto\u015B\u0107 powinna by\u0107 jedn\u0105 z podanych opcji.","pt":"O valor selecionado n\xE3o \xE9 uma op\xE7\xE3o v\xE1lida.","pt_BR":"O valor selecionado n\xE3o \xE9 uma op\xE7\xE3o v\xE1lida.","ro":"Valoarea selectat\u0103 nu este o op\u021Biune valid\u0103.","ru":"\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u043E\u0435 \u0412\u0430\u043C\u0438 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"T\xE1to hodnota by mala by\u0165 jednou z poskytnut\xFDch mo\u017Enost\xED.","sl":"Vrednost, ki ste jo izbrali, ni veljavna mo\u017Enost.","sq":"Vlera q\xEB keni zgjedhur nuk \xEBsht\xEB alternativ\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0458\u0435\u0434\u043D\u0430 \u043E\u0434 \u043F\u043E\u043D\u0443\u0452\u0435\u043D\u0438\u0445.","sr_Latn":"Odabrana vrednost nije validan izbor.","sv":"V\xE4rdet ska vara ett av de givna valen.","th":"\u0E04\u0E38\u0E13\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01","tl":"Ang halaga ng iyong pinili ay hindi balidong pagpili.","tr":"Se\xE7ti\u011Finiz de\u011Fer ge\xE7erli bir se\xE7enek de\u011Fil.","uk":"\u041E\u0431\u0440\u0430\u043D\u0435 \u0432\u0430\u043C\u0438 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u0622\u067E \u0646\u06D2 \u062C\u0648 \u0648\u064A\u0644\u064A\u0648 \u0645\u0646\u062A\u062E\u0628 \u06A9\u06CC \u06C1\u06D2 \u0648\u06C1 \u062F\u0631\u0633\u062A \u0627\u0646\u062A\u062E\u0627\u0628 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Tanlangan qiymat yaroqli emas.","vi":"Gi\xE1 tr\u1ECB b\u1EA1n v\u1EEBa ch\u1ECDn kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u9009\u5B9A\u53D8\u91CF\u7684\u503C\u4E0D\u662F\u6709\u6548\u7684\u9009\u9879\u3002","zh_TW":"\u9078\u5B9A\u8B8A\u6578\u7684\u503C\u4E0D\u662F\u6709\u6548\u7684\u9078\u9805\u3002"}}};var YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICES={"id":"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.","translations":{"validators":{"fr":"Vous devez s\xE9lectionner au moins {{ limit }} choix.|Vous devez s\xE9lectionner au moins {{ limit }} choix.","af":"Jy moet ten minste {{ limit }} kies.|Jy moet ten minste {{ limit }} keuses kies.","ar":"\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631\u0627\u062A \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0642\u0644.","az":"\u018Fn az {{ limit }} se\xE7im qeyd edilm\u0259lidir.","be":"\u0412\u044B \u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0446\u044C \u0445\u0430\u0446\u044F \u0431 {{ limit }} \u0432\u0430\u0440\u044B\u044F\u043D\u0442.|\u0412\u044B \u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0446\u044C \u0445\u0430\u0446\u044F \u0431 {{ limit }} \u0432\u0430\u0440\u044B\u044F\u043D\u0442\u0430\u045E.","bg":"\u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043F\u043E\u043D\u0435 {{ limit }} \u043E\u043F\u0446\u0438\u044F.|\u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043F\u043E\u043D\u0435 {{ limit }} \u043E\u043F\u0446\u0438\u0438.","bs":"Morate odabrati barem {{ limit }} mogu\u0107nost.|Morate odabrati barem {{ limit }} mogu\u0107nosti.|Morate odabrati barem {{ limit }} mogu\u0107nosti.  ","ca":"Ha de seleccionar almenys {{ limit }} opci\xF3.|Ha de seleccionar almenys {{ limit }} opcions.","cs":"Mus\xED b\xFDt vybr\xE1na nejm\xE9n\u011B {{ limit }} mo\u017Enost.|Mus\xED b\xFDt vybr\xE1ny nejm\xE9n\u011B {{ limit }} mo\u017Enosti.|Mus\xED b\xFDt vybr\xE1no nejm\xE9n\u011B {{ limit }} mo\u017Enost\xED.","cy":"Rhaid dewis o leiaf {{ limit }} opsiwn.","da":"Du skal v\xE6lge mindst \xE9n mulighed.|Du skal v\xE6lge mindst {{ limit }} muligheder.","de":"Sie m\xFCssen mindestens {{ limit }} M\xF6glichkeit w\xE4hlen.|Sie m\xFCssen mindestens {{ limit }} M\xF6glichkeiten w\xE4hlen.","el":"\u03A0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03C4\u03BF\u03C5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF\u03BD {{ limit }} \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE.|\u03A0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03C4\u03BF\u03C5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF\u03BD {{ limit }} \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AD\u03C2.","en":"You must select at least {{ limit }} choice.|You must select at least {{ limit }} choices.","es":"Debe seleccionar al menos {{ limit }} opci\xF3n.|Debe seleccionar al menos {{ limit }} opciones.","et":"Valima peaks v\xE4hemalt {{ limit }} valikut.","eu":"Gutxienez aukera {{ limit }} hautatu behar duzu.|Gutxienez {{ limit }} aukera hautatu behar dituzu.","fa":"\u0634\u0645\u0627 \u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 {{ limit }} \u06AF\u0632\u06CC\u0646\u0647 \u0627\u0646\u062A\u062E\u0627\u0628 \u0646\u0645\u0627\u06CC\u06CC\u062F.|\u0634\u0645\u0627 \u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 {{ limit }} \u06AF\u0632\u06CC\u0646\u0647 \u0627\u0646\u062A\u062E\u0627\u0628 \u0646\u0645\u0627\u06CC\u06CC\u062F.","fi":"Sinun tulee valita v\xE4hint\xE4\xE4n yksi vaihtoehto.|Sinun tulee valita v\xE4hint\xE4\xE4n {{ limit }} vaihtoehtoa.","gl":"Debe seleccionar polo menos {{ limit }} opci\xF3n.|Debe seleccionar polo menos {{ limit }} opcions.","he":"\u05D0\u05EA\u05D4 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D1\u05D7\u05D5\u05E8 \u05DC\u05E4\u05D7\u05D5\u05EA {{ limit }} \u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA.|\u05D0\u05EA\u05D4 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D1\u05D7\u05D5\u05E8 \u05DC\u05E4\u05D7\u05D5\u05EA {{ limit }} \u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA.","hr":"Izaberite barem {{ limit }} mogu\u0107nosti.","hu":"Legal\xE1bb {{ limit }} \xE9rt\xE9ket kell kiv\xE1lasztani.|Legal\xE1bb {{ limit }} \xE9rt\xE9ket kell kiv\xE1lasztani.","hy":"\u0534\u0578\u0582\u0584 \u057A\u0565\u057F\u0584 \u0567 \u0568\u0576\u057F\u0580\u0565\u0584 \u0561\u0574\u0565\u0576\u0561\u0584\u056B\u0579\u0568 {{ limit }} \u057F\u0561\u0580\u0562\u0565\u0580\u0561\u056F\u0576\u0565\u0580\u0589","id":"Anda harus memilih paling tidak {{ limit }} pilihan.","it":"Si dovrebbe selezionare almeno {{ limit }} opzione.|Si dovrebbero selezionare almeno {{ limit }} opzioni.","ja":"{{ limit }}\u500B\u4EE5\u4E0A\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"Et muss mindestens {{ limit }} M\xE9iglechkeet ausgewielt ginn.|Et musse mindestens {{ limit }} M\xE9iglechkeeten ausgewielt ginn.","lt":"Turite pasirinkti bent {{ limit }} variant\u0105.|Turite pasirinkti bent {{ limit }} variantus.|Turite pasirinkti bent {{ limit }} variant\u0173.","lv":"Jums nav j\u0101veic izv\u0113le.|Jums ir j\u0101veic vismaz {{ limit }} izv\u0113le.|Jums ir j\u0101veic vismaz {{ limit }} izv\u0113les.","mk":"\u041C\u043E\u0440\u0430 \u0434\u0430 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0458\u043C\u0430\u043B\u043A\u0443 {{ limit }} \u0438\u0437\u0431\u043E\u0440.|\u041C\u043E\u0440\u0430 \u0434\u0430 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0458\u043C\u0430\u043B\u043A\u0443 {{ limit }} \u0438\u0437\u0431\u0440\u043E\u0438.","mn":"\u0425\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 {{ limit }} \u0443\u0442\u0433\u0430 \u0441\u043E\u043D\u0433\u043E\u0433\u0434\u0441\u043E\u043D \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u101E\u1004\u103A\u101E\u100A\u103A \u1021\u1014\u100A\u103A\u1038\u1006\u102F\u1036\u1038\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1019\u103E\u102F {{ limit }} \u1001\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u101B\u1019\u100A\u103A\u104B","nb":"Du m\xE5 velge minst {{ limit }} valg.","nl":"Selecteer ten minste {{ limit }} optie.|Selecteer ten minste {{ limit }} opties.","nn":"Du m\xE5 gjere minst {{ limit }} val.","no":"Du m\xE5 velge minst {{ limit }} valg.","pl":"Powiniene\u015B wybra\u0107 co najmniej {{ limit }} opcj\u0119.|Powiniene\u015B wybra\u0107 co najmniej {{ limit }} opcje.|Powiniene\u015B wybra\u0107 co najmniej {{ limit }} opcji.","pt":"Voc\xEA deveria selecionar {{ limit }} op\xE7\xE3o no m\xEDnimo.|Voc\xEA deveria selecionar {{ limit }} op\xE7\xF5es no m\xEDnimo.","pt_BR":"Voc\xEA deve selecionar, no m\xEDnimo, {{ limit }} op\xE7\xE3o.|Voc\xEA deve selecionar, no m\xEDnimo, {{ limit }} op\xE7\xF5es.","ro":"Trebuie s\u0103 selecta\u021Bi cel pu\u021Bin {{ limit }} op\u021Biune.|Trebuie s\u0103 selecta\u021Bi cel pu\u021Bin {{ limit }} op\u021Biuni.|Trebuie s\u0103 selecta\u021Bi cel pu\u021Bin {{ limit }} de op\u021Biuni","ru":"\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442.|\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442\u0430.|\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u0445\u043E\u0442\u044F \u0431\u044B {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442\u043E\u0432.","sk":"Mali by ste vybra\u0165 minim\xE1lne {{ limit }} mo\u017Enos\u0165.|Mali by ste vybra\u0165 minim\xE1lne {{ limit }} mo\u017Enosti.|Mali by ste vybra\u0165 minim\xE1lne {{ limit }} mo\u017Enost\xED.","sl":"Izbrati morate vsaj {{ limit }} mo\u017Enost.|Izbrati morate vsaj {{ limit }} mo\u017Enosti.|Izbrati morate vsaj {{ limit }} mo\u017Enosti.|Izbrati morate vsaj {{ limit }} mo\u017Enosti.","sq":"Duhet t\xEB zgjedhni s\xEB paku {{ limit }} alternativ\xEB.|Duhet t\xEB zgjedhni s\xEB paku {{ limit }} alternativa.","sr_Cyrl":"\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442\u0438.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0430\u0440 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442\u0438.","sr_Latn":"Morate odabrati bar {{ limit }} mogu\u0107nost.|Morate odabrati bar {{ limit }} mogu\u0107nosti.|Morate odabrati bar {{ limit }} mogu\u0107nosti.","sv":"Du m\xE5ste v\xE4lja minst {{ limit }} val.|Du m\xE5ste v\xE4lja minst {{ limit }} val.","th":"\u0E04\u0E38\u0E13\u0E15\u0E49\u0E2D\u0E07\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22 {{ limit }} \u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01","tl":"Kailangan mong pumili ng pinakamababang {{ limit }} ng pagpilian.|Kailangan mong pumili ng pinakamababang {{ limit }} ng mga pagpipilian.","tr":"En az {{ limit }} se\xE7enek belirtmelisiniz.","uk":"\u0412\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u043E\u0431\u0440\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043D\u0442.|\u0412\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u043E\u0431\u0440\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043D\u0442\u0438.|\u0412\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u043E\u0431\u0440\u0430\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043D\u0442\u0456\u0432.","ur":"\u06A9\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{limit}} \u06A9\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 \u06D4\u0622\u0651\u067E \u06A9\u0648 \u06A9\u0645 \u0627\u0630 \u06A9\u0645 {{limit}} \u0622\u067E \u06A9\u0648 \u06A9\u0645 \u0627\u0632 \u06A9\u0645","uz":"Siz hech bo'lmaganda {{ limit }} ta qiymat tanlashingiz kerak.|Siz kamida {{ limit }} ta qiymat tanlashingiz kerak.","vi":"B\u1EA1n ph\u1EA3i ch\u1ECDn \xEDt nh\u1EA5t {{ limit }} l\u1EF1a ch\u1ECDn.|B\u1EA1n ph\u1EA3i ch\u1ECDn \xEDt nh\u1EA5t {{ limit }} l\u1EF1a ch\u1ECDn.","zh_CN":"\u60A8\u81F3\u5C11\u8981\u9009\u62E9 {{ limit }} \u4E2A\u9009\u9879\u3002","zh_TW":"\u60A8\u81F3\u5C11\u8981\u9078\u64C7 {{ limit }} \u500B\u9078\u9805\u3002"}}};var YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICES={"id":"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.","translations":{"validators":{"fr":"Vous devez s\xE9lectionner au maximum {{ limit }} choix.|Vous devez s\xE9lectionner au maximum {{ limit }} choix.","af":"Jy moet by die meeste {{ limit }} keuse kies.|Jy moet by die meeste {{ limit }} keuses kies.","ar":"\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631\u0627\u062A \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.|\u064A\u062C\u0628 \u0627\u0646 \u062A\u062E\u062A\u0627\u0631 {{ limit }} \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0644\u0649 \u0627\u0644\u0627\u0643\u062B\u0631.","az":"\u018Fn \xE7ox {{ limit }} se\xE7im qeyd edilm\u0259lidir.","be":"\u0412\u044B \u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0446\u044C \u043D\u0435 \u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{ limit }} \u0432\u0430\u0440\u044B\u044F\u043D\u0442.|\u0412\u044B \u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0446\u044C \u043D\u0435 \u0431\u043E\u043B\u044C\u0448 \u0437\u0430 {{ limit }} \u0432\u0430\u0440\u044B\u044F\u043D\u0442\u0430\u045E.","bg":"\u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u043E\u043F\u0446\u0438\u044F.|\u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u043E\u043F\u0446\u0438\u0438.","bs":"Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nost.|Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nosti.|Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nosti.","ca":"Ha de seleccionar com a m\xE0xim {{ limit }} opci\xF3.|Ha de seleccionar com a m\xE0xim {{ limit }} opcions.","cs":"Mus\xED b\xFDt vybr\xE1na maxim\xE1ln\u011B {{ limit }} mo\u017Enost.|Mus\xED b\xFDt vybr\xE1ny maxim\xE1ln\u011B {{ limit }} mo\u017Enosti.|Mus\xED b\xFDt vybr\xE1no maxim\xE1ln\u011B {{ limit }} mo\u017Enost\xED.","cy":"Rhaid dewis dim mwy na {{ limit }} opsiwn.","da":"Du kan h\xF8jst v\xE6lge \xE9n mulighed.|Du kan h\xF8jst v\xE6lge {{ limit }} muligheder.","de":"Sie d\xFCrfen h\xF6chstens {{ limit }} M\xF6glichkeit w\xE4hlen.|Sie d\xFCrfen h\xF6chstens {{ limit }} M\xF6glichkeiten w\xE4hlen.","el":"\u03A0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03C4\u03BF \u03C0\u03BF\u03BB\u03CD {{ limit }} \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE.|\u03A0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03C4\u03BF \u03C0\u03BF\u03BB\u03CD {{ limit }} \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AD\u03C2.","en":"You must select at most {{ limit }} choice.|You must select at most {{ limit }} choices.","es":"Debe seleccionar como m\xE1ximo {{ limit }} opci\xF3n.|Debe seleccionar como m\xE1ximo {{ limit }} opciones.","et":"Valima peaks mitte rohkem kui  {{ limit }} valikut.","eu":"Gehienez aukera {{ limit }} hautatu behar duzu.|Gehienez {{ limit }} aukera hautatu behar dituzu.","fa":"\u0634\u0645\u0627 \u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u06A9\u062B\u0631 {{ limit }} \u06AF\u0632\u06CC\u0646\u0647 \u0627\u0646\u062A\u062E\u0627\u0628 \u0646\u0645\u0627\u06CC\u06CC\u062F.|\u0634\u0645\u0627 \u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u06A9\u062B\u0631 {{ limit }} \u06AF\u0632\u06CC\u0646\u0647 \u0627\u0646\u062A\u062E\u0627\u0628 \u0646\u0645\u0627\u06CC\u06CC\u062F.","fi":"Sinun tulee valita enint\xE4\xE4n yksi vaihtoehto.|Sinun tulee valita enint\xE4\xE4n {{ limit }} vaihtoehtoa.","gl":"Debe seleccionar como m\xE1ximo {{ limit }} opci\xF3n.|Debe seleccionar como m\xE1ximo {{ limit }} opcions.","he":"\u05D0\u05EA\u05D4 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D1\u05D7\u05D5\u05E8 \u05DC\u05DB\u05DC \u05D4\u05D9\u05D5\u05EA\u05E8 {{ limit }} \u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA.|\u05D0\u05EA\u05D4 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D1\u05D7\u05D5\u05E8 \u05DC\u05DB\u05DC \u05D4\u05D9\u05D5\u05EA\u05E8 {{ limit }} \u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA.","hr":"Izaberite najvi\u0161e {{ limit }} mogu\u0107nosti.","hu":"Legfeljebb {{ limit }} \xE9rt\xE9ket lehet kiv\xE1lasztani.|Legfeljebb {{ limit }} \xE9rt\xE9ket lehet kiv\xE1lasztani.","hy":"\u0534\u0578\u0582\u0584 \u057A\u0565\u057F\u0584 \u0567 \u0568\u0576\u057F\u0580\u0565\u0584 \u0578\u0579 \u0561\u057E\u0565\u056C\u056B \u0584\u0561\u0576 {{ limit }} \u057F\u0561\u0580\u0562\u0565\u0580\u0561\u056F\u0576\u0565\u0580\u0589","id":"Anda harus memilih paling banyak {{ limit }} pilihan.","it":"Si dovrebbe selezionare al massimo {{ limit }} opzione.|Si dovrebbero selezionare al massimo {{ limit }} opzioni.","ja":"{{ limit }}\u500B\u4EE5\u5185\u3067\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"Et dierf h\xE9chstens {{ limit }} M\xE9iglechkeet ausgewielt ginn.|Et dierfen h\xE9chstens {{ limit }} M\xE9iglechkeeten ausgewielt ginn.","lt":"Turite pasirinkti ne daugiau kaip {{ limit }} variant\u0105.|Turite pasirinkti ne daugiau kaip {{ limit }} variantus.|Turite pasirinkti ne daugiau kaip {{ limit }} variant\u0173.","lv":"Jums nav j\u0101veic izv\u0113le.|Jums ir j\u0101veic ne vair\u0101k k\u0101 {{ limit }} izv\u0113le.|Jums ir j\u0101veic ne vair\u0101k k\u0101 {{ limit }} izv\u0113les.","mk":"\u041C\u043E\u0436\u0435 \u0434\u0430 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0458\u043C\u043D\u043E\u0433\u0443 {{ limit }} \u0438\u0437\u0431\u043E\u0440.|\u041C\u043E\u0440\u0430 \u0434\u0430 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u043D\u0430\u0458\u043C\u043D\u043E\u0433\u0443 {{ limit }} \u0438\u0437\u0431\u043E\u0440\u0438.","mn":"\u0425\u0430\u043C\u0433\u0438\u0439\u043D \u0438\u0445\u0434\u044D\u044D {{ limit }} \u0443\u0442\u0433\u0430 \u0441\u043E\u043D\u0433\u043E\u0433\u0434\u043E\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0442\u043E\u0439.","my":"\u101E\u1004\u103A\u101E\u100A\u103A\u1021\u1019\u103B\u102C\u1038\u1006\u102F\u1036\u1038 {{ limit }} \u1001\u102F\u101E\u102C\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1001\u103D\u1004\u103A\u1037\u101B\u103E\u102D\u101E\u100A\u103A\u104B","nb":"Du kan maks velge {{ limit }} valg.","nl":"Selecteer maximaal {{ limit }} optie.|Selecteer maximaal {{ limit }} opties.","nn":"Du kan maksimalt gjere {{ limit }} val.","no":"Du kan maks velge {{ limit }} valg.","pl":"Powiniene\u015B wybra\u0107 maksymalnie {{ limit }} opcj\u0119.|Powiniene\u015B wybra\u0107 maksymalnie {{ limit }} opcje.|Powiniene\u015B wybra\u0107 maksymalnie {{ limit }} opcji.","pt":"Voc\xEA deve selecionar, no m\xE1ximo {{ limit }} op\xE7\xE3o.|Voc\xEA deve selecionar, no m\xE1ximo {{ limit }} op\xE7\xF5es.","pt_BR":"Voc\xEA deve selecionar, no m\xE1ximo, {{ limit }} op\xE7\xE3o.|Voc\xEA deve selecionar, no m\xE1ximo, {{ limit }} op\xE7\xF5es.","ro":"Trebuie s\u0103 selecta\u021Bi cel mult {{ limit }} op\u021Biune.|Trebuie s\u0103 selecta\u021Bi cel mult {{ limit }} op\u021Biuni.|Trebuie s\u0103 selecta\u021Bi cel mult {{ limit }} de op\u021Biuni.","ru":"\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 \u0447\u0435\u043C {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442.|\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 \u0447\u0435\u043C {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442\u0430.|\u0412\u044B \u0434\u043E\u043B\u0436\u043D\u044B \u0432\u044B\u0431\u0440\u0430\u0442\u044C \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 \u0447\u0435\u043C {{ limit }} \u0432\u0430\u0440\u0438\u0430\u043D\u0442\u043E\u0432.","sk":"Mali by ste vybra\u0165 najviac {{ limit }} mo\u017Enos\u0165.|Mali by ste vybra\u0165 najviac {{ limit }} mo\u017Enosti.|Mali by ste vybra\u0165 najviac {{ limit }} mo\u017Enost\xED.","sl":"Izberete lahko najve\u010D {{ limit }} mo\u017Enost.|Izberete lahko najve\u010D {{ limit }} mo\u017Enosti.|Izberete lahko najve\u010D {{ limit }} mo\u017Enosti.|Izberete lahko najve\u010D {{ limit }} mo\u017Enosti.","sq":"Duhet t\xEB zgjedhni m\xEB s\xEB shumti {{ limit }} alternativ\xEB.|Duhet t\xEB zgjedhni m\xEB s\xEB shumti {{ limit }} alternativa.","sr_Cyrl":"\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043D\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043D\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442\u0438.|\u0418\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u043D\u0430\u0458\u0432\u0438\u0448\u0435 {{ limit }} \u043C\u043E\u0433\u0443\u045B\u043D\u043E\u0441\u0442\u0438.","sr_Latn":"Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nost.|Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nosti.|Morate odabrati najvi\u0161e {{ limit }} mogu\u0107nosti.","sv":"Du kan som mest v\xE4lja {{ limit }} val.|Du kan som mest v\xE4lja {{ limit }} val.","th":"\u0E04\u0E38\u0E13\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 {{ limit }} \u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01","tl":"Kailangan mong pumili ng pinakamataas {{ limit }} ng pagpipilian.|Kailangan mong pumili ng pinakamataas {{ limit }} ng mga pagpipilian.","tr":"En \xE7ok {{ limit }} se\xE7enek belirtmelisiniz.","uk":"\u0412\u0438 \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u043E\u0431\u0440\u0430\u0442\u0438 \u043D\u0435 \u0431\u0456\u043B\u044C\u0448\u0435 \u043D\u0456\u0436 {{ limit }} \u0432\u0430\u0440\u0456\u0430\u043D\u0442\u0456\u0432.","ur":"\u06A9\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{limit}} \u06A9\u0627 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 \u06D4\u0622\u0651\u067E \u06A9\u0648 \u0630\u064A\u0627\u062F\u06BE \u0633\u06D2 \u0630\u064A\u0627\u062F\u06BE {{limit}} \u0622\u067E \u06A9\u0648 \u0630\u064A\u0627\u062F\u06BE \u0633\u06D2 \u0630\u064A\u0627\u062F\u06BE","uz":"Siz {{ limit }} ta qiymatni tanlashingiz kerak.|Siz {{ limit }} dan ortiq qiymat tanlashingiz kerak.","vi":"B\u1EA1n ph\u1EA3i ch\u1ECDn nhi\u1EC1u nh\u1EA5t {{ limit }} l\u1EF1a ch\u1ECDn.|B\u1EA1n ph\u1EA3i ch\u1ECDn nhi\u1EC1u  nh\u1EA5t {{ limit }} l\u1EF1a ch\u1ECDn.","zh_CN":"\u60A8\u6700\u591A\u80FD\u9009\u62E9 {{ limit }} \u4E2A\u9009\u9879\u3002","zh_TW":"\u60A8\u6700\u591A\u80FD\u9078\u64C7 {{ limit }} \u500B\u9078\u9805\u3002"}}};var ONE_OR_MORE_OF_THE_GIVEN_VALUES_IS_INVALID={"id":"One or more of the given values is invalid.","translations":{"validators":{"fr":"Une ou plusieurs des valeurs soumises sont invalides.","af":"Een of meer van die gegewe waardes is ongeldig.","ar":"\u0648\u0627\u062D\u062F \u0623\u0648 \u0623\u0643\u062B\u0631 \u0645\u0646 \u0627\u0644\u0642\u064A\u0645 \u0627\u0644\u0645\u0639\u0637\u0627\u0647 \u062E\u0627\u0637\u0626.","az":"T\u0259qdim edil\u0259n d\u0259y\u0259rl\u0259rd\u0259n bir v\u0259 ya bir ne\xE7\u0259si yanl\u0131\u015Fd\u0131r.","be":"\u0410\u0434\u0437\u0456\u043D \u0430\u0431\u043E \u043D\u0435\u043A\u0430\u043B\u044C\u043A\u0456 \u043F\u0430\u0437\u043D\u0430\u0447\u0430\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u044F\u045E \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C.","bg":"\u0415\u0434\u043D\u0430 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u0447\u0435 \u043E\u0442 \u0437\u0430\u0434\u0430\u0434\u0435\u043D\u0438\u0442\u0435 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0438 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","bs":"Jedna ili vi\u0161e datih vrijednosti nisu validne.","ca":"Un o m\xE9s dels valors facilitats s\xF3n incorrectes.","cs":"N\u011Bkter\xE9 z uveden\xFDch hodnot jsou neplatn\xE9.","cy":"Mae un neu fwy o'r gwerthoedd a roddwyd yn annilys.","da":"En eller flere af de angivne v\xE6rdier er ugyldige.","de":"Einer oder mehrere der angegebenen Werte sind ung\xFCltig.","el":"\u039C\u03B9\u03B1 \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B5\u03C2 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B5\u03C2.","en":"One or more of the given values is invalid.","es":"Uno o m\xE1s de los valores indicados no son v\xE1lidos.","et":"\xDCks v\xF5i rohkem v\xE4\xE4rtustest on vigane.","eu":"Emandako balioetatik gutxienez bat ez da egokia.","fa":"\u06CC\u06A9 \u06CC\u0627 \u0686\u0646\u062F \u0645\u0642\u062F\u0627\u0631 \u062F\u0627\u062F\u0647 \u0634\u062F\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Yksi tai useampi annetuista arvoista on virheellinen.","gl":"Un ou m\xE1is dos valores indicados non son v\xE1lidos.","he":"\u05D0\u05D7\u05D3 \u05D0\u05D5 \u05D9\u05D5\u05EA\u05E8 \u05DE\u05D4\u05E2\u05E8\u05DB\u05D9\u05DD \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Jedna ili vi\u0161e danih vrijednosti nije ispravna.","hu":"A megadott \xE9rt\xE9kek k\xF6z\xFCl legal\xE1bb egy \xE9rv\xE9nytelen.","hy":"\u0544\u0565\u056F \u056F\u0561\u0574 \u0561\u057E\u0565\u056C\u056B \u057F\u0580\u057E\u0561\u056E \u0561\u0580\u056A\u0565\u0584\u0576\u0565\u0580\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0565\u0576\u0589","id":"Satu atau lebih nilai yang diberikan tidak sah.","it":"Uno o pi\xF9 valori inseriti non sono validi.","ja":"\u7121\u52B9\u306A\u9078\u629E\u80A2\u304C\u542B\u307E\u308C\u3066\u3044\u307E\u3059\u3002","lb":"Een oder m\xE9i vun de W\xE4erter ass ong\xEBlteg.","lt":"Viena ar daugiau \u012Fvest\u0173 reik\u0161mi\u0173 yra netinkamos.","lv":"Viena vai vair\u0101kas no dotaj\u0101m v\u0113rt\u012Bb\u0101m ir neder\u012Bgas.","mk":"\u0415\u0434\u043D\u0430 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435 \u043E\u0434 \u0434\u0430\u0434\u0435\u043D\u0438\u0442\u0435 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 \u043D\u0435 \u0441\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0438.","mn":"\u04E8\u0433\u04E9\u0433\u0434\u0441\u04E9\u043D \u043D\u044D\u0433 \u044D\u0441\u0432\u044D\u043B \u043D\u044D\u0433\u044D\u044D\u0441 \u043E\u043B\u043E\u043D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1015\u1031\u1038\u1011\u102C\u1038\u101E\u1031\u102C\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1010\u1005\u103A\u1001\u102F (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1010\u1005\u103A\u1001\u102F\u1011\u1000\u103A\u1015\u102D\u102F\u104D\u1019\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u1015\u102B\u104B","nb":"En eller flere av de oppgitte verdiene er ugyldige.","nl":"E\xE9n of meer van de ingegeven waarden zijn ongeldig.","nn":"Ein eller fleire av dei opplyste verdiane er ugyldige.","no":"En eller flere av de oppgitte verdiene er ugyldige.","pl":"Jedna lub wi\u0119cej z podanych warto\u015Bci jest nieprawid\u0142owa.","pt":"Um ou mais dos valores introduzidos n\xE3o s\xE3o v\xE1lidos.","pt_BR":"Um ou mais valores informados s\xE3o inv\xE1lidos.","ro":"Una sau mai multe dintre valorile furnizate sunt invalide.","ru":"\u041E\u0434\u043D\u043E \u0438\u043B\u0438 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"Niektor\xE9 z uveden\xFDch hodn\xF4t s\xFA neplatn\xE9.","sl":"Ena ali ve\u010D podanih vrednosti ni veljavnih.","sq":"Nj\xEB apo m\xEB shum\xEB nga vlerat e dh\xEBna jan\xEB t\xEB pavlefshme.","sr_Cyrl":"\u0408\u0435\u0434\u043D\u0430 \u0438\u043B\u0438 \u0432\u0438\u0448\u0435 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 \u0458\u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","sr_Latn":"Jedna ili vi\u0161e vrednosti nisu validne.","sv":"Ett eller fler av de angivna v\xE4rdena \xE4r ogiltigt.","th":"\u0E21\u0E35\u0E1A\u0E32\u0E07\u0E04\u0E48\u0E32\u0E17\u0E35\u0E48\u0E2A\u0E48\u0E07\u0E21\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Isa o higit pang mga halaga na binigay ay hindi balido.","tr":"Verilen de\u011Ferlerden bir veya daha fazlas\u0131 ge\xE7ersiz.","uk":"\u041E\u0434\u043D\u0435 \u0430\u0431\u043E \u043A\u0456\u043B\u044C\u043A\u0430 \u0437\u0430\u0434\u0430\u043D\u0438\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u044C \u0454 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0456.","ur":"\u062F\u06CC \u06AF\u0626\u06CC \u0648\u064A\u0644\u064A\u0648\u0630 \u0645\u06CC\u06BA \u0633\u06D2 \u0627\u06CC\u06A9 \u06CC\u0627 \u0632\u06CC\u0627\u062F\u06BE \u0648\u064A\u0644\u064A\u0648\u0630 \u063A\u0644\u0637 \u06C1\u06CC\u06BA","uz":"Belgilangan qiymatlarning bir yoki bir nechtasi yaroqsiz.","vi":"M\u1ED9t ho\u1EB7c nhi\u1EC1u gi\xE1 tr\u1ECB \u0111\u01B0\u1EE3c ch\u1ECDn kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u7ED9\u5B9A\u7684\u503C\u65E0\u6548\u3002","zh_TW":"\u4E00\u500B\u6216\u8005\u591A\u500B\u7D66\u5B9A\u7684\u503C\u7121\u6548\u3002"}}};var THIS_FIELD_WAS_NOT_EXPECTED={"id":"This field was not expected.","translations":{"validators":{"fr":"Ce champ n'a pas \xE9t\xE9 pr\xE9vu.","af":"Die veld is nie verwag nie.","ar":"\u0644\u0645 \u064A\u0643\u0646 \u0645\u0646 \u0627\u0644\u0645\u062A\u0648\u0642\u0639 \u0647\u0630\u0627 \u0627\u0644\u0645\u062C\u0627\u0644.","az":"Bu sah\u0259 g\xF6zl\u0259nilmirdi.","be":"\u0413\u044D\u0442\u0430 \u043F\u043E\u043B\u0435 \u043D\u0435 \u0447\u0430\u043A\u0430\u0435\u0446\u0446\u0430.","bg":"\u041F\u043E\u043B\u0435\u0442\u043E \u043D\u0435 \u0441\u0435 \u0435 \u043E\u0447\u0430\u043A\u0432\u0430\u043B\u043E.","bs":"Ovo polje nije o\u010Dekivano.","ca":"Aquest camp no s'esperava.","cs":"Toto pole nebylo o\u010Dek\xE1v\xE1no.","cy":"Nid oedd disgwyl y maes hwn.","da":"Feltet blev ikke forventet.","de":"Dieses Feld wurde nicht erwartet.","el":"\u0391\u03C5\u03C4\u03CC \u03C4\u03BF \u03C0\u03B5\u03B4\u03AF\u03BF \u03B4\u03B5\u03BD \u03AE\u03C4\u03B1\u03BD \u03B1\u03BD\u03B1\u03BC\u03B5\u03BD\u03CC\u03BC\u03B5\u03BD\u03BF.","en":"This field was not expected.","es":"Este campo no se esperaba.","et":"See v\xE4li ei olnud oodatud.","eu":"Eremu hau ez zen espero.","fi":"T\xE4t\xE4 kentt\xE4\xE4 ei odotettu.","gl":"Este campo non era esperado.","he":"\u05E9\u05D3\u05D4 \u05D6\u05D4 \u05DC\u05D0 \u05D4\u05D9\u05D4 \u05E6\u05E4\u05D5\u05D9","hr":"Ovo polje nije o\u010Dekivano.","hu":"Nem v\xE1rt mez\u0151.","hy":"\u0531\u0575\u057D \u0564\u0561\u0577\u057F\u0568 \u0579\u056B \u057D\u057A\u0561\u057D\u057E\u0578\u0582\u0574\u0589","id":"Ruas ini tidak diharapkan.","it":"Questo campo non \xE8 stato previsto.","ja":"\u3053\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u306F\u4E88\u671F\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3067\u3057\u305F\u3002","lb":"D'Feld gouf net erwaart.","lt":"Nebuvo tikimasi \u0160is laukas.","lv":"\u0160is lauks netika gaid\u012Bts.","mk":"\u041E\u0432\u0430 \u043F\u043E\u043B\u0435 \u043D\u0435 \u0431\u0435\u0448\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430\u043D\u043E.","mn":"\u042D\u043D\u044D \u0442\u0430\u043B\u0431\u0430\u0440 \u043D\u044C \u0445\u04AF\u043B\u044D\u044D\u0433\u0434\u044D\u0436 \u0431\u0430\u0439\u0441\u0430\u043D \u044E\u043C.","my":"\u1024\u1000\u103D\u1000\u103A\u101C\u1015\u103A\u1000\u102D\u102F\u1019\u1019\u103B\u103E\u1031\u102C\u103A\u101C\u1004\u1037\u103A\u1011\u102C\u1038\u1015\u102B\u104B","nb":"Dette feltet var ikke forventet.","nl":"Dit veld werd niet verwacht.","nn":"Dette feltet var ikkje forventa.","no":"Dette feltet var ikke forventet.","pl":"Tego pola si\u0119 nie spodziewano.","pt":"Este campo n\xE3o era esperado.","pt_BR":"Este campo n\xE3o era esperado.","ro":"Acest c\xE2mp nu era de a\u015Fteptat.","ru":"\u042D\u0442\u043E \u043F\u043E\u043B\u0435 \u043D\u0435 \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C.","sk":"Toto pole sa neo\u010Dak\xE1va.","sl":"To polje ni bilo pri\u010Dakovati.","sq":"Kjo fush\xEB nuk pritej.","sr_Cyrl":"\u041E\u0432\u043E \u043F\u043E\u0459\u0435 \u043D\u0438\u0458\u0435 \u0431\u0438\u043B\u043E \u043E\u0447\u0435\u043A\u0438\u0432\u0430\u043D\u043E.","sr_Latn":"Ovo polje nije bilo o\u010Dekivano.","sv":"Det h\xE4r f\xE4ltet f\xF6rv\xE4ntades inte.","th":"\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E21\u0E35\u0E1F\u0E34\u0E25\u0E14\u0E4C\u0E19\u0E35\u0E49","tl":"Ang larangang ito ay hindi inaasahan.","tr":"Bu alan beklenen olmad\u0131.","uk":"\u0426\u0435 \u043F\u043E\u043B\u0435 \u043D\u0435 \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F.","ur":"\u0627\u0633 \u0641\u06CC\u0644\u0688 \u06A9\u06CC \u062A\u0648\u0642\u0639 \u0646\u06C1\u06CC\u06BA \u062A\u06BE\u06CC","uz":"Ushbu maydon kutilmagan edi.","vi":"L\u0129nh v\u1EF1c n\xE0y kh\xF4ng \u0111\u01B0\u1EE3c d\u1EF1 ki\u1EBFn.","zh_CN":"\u6B64\u5B57\u6BB5\u662F\u591A\u4F59\u7684\u3002","zh_TW":"\u6B64\u5B57\u6BB5\u662F\u6C92\u6709\u9810\u6599\u5230\u3002"}}};var THIS_FIELD_IS_MISSING={"id":"This field is missing.","translations":{"validators":{"fr":"Ce champ est manquant.","af":"Hierdie veld ontbreek.","ar":"\u0647\u0630\u0627 \u0627\u0644\u0645\u062C\u0627\u0644 \u0645\u0641\u0642\u0648\u062F.","az":"Bu sah\u0259 \u0259ksikdir.","be":"\u0413\u044D\u0442\u0430 \u043F\u043E\u043B\u0435 \u0430\u0434\u0441\u0443\u0442\u043D\u0456\u0447\u0430\u0435.","bg":"\u041F\u043E\u043B\u0435\u0442\u043E \u043B\u0438\u043F\u0441\u0432\u0430.","bs":"Ovo polje nedostaje.","ca":"Aquest camp est\xE0 desaparegut.","cs":"Toto pole chyb\xED.","cy":"Mae'r maes hwn ar goll.","da":"Dette felt mangler.","de":"Dieses Feld fehlt.","el":"\u039B\u03B5\u03AF\u03C0\u03B5\u03B9 \u03B1\u03C5\u03C4\u03CC \u03C4\u03BF \u03C0\u03B5\u03B4\u03AF\u03BF.","en":"This field is missing.","es":"Este campo falta.","et":"See v\xE4li on puudu.","eu":"Eremu hau falta da.","fi":"T\xE4m\xE4 kentt\xE4 puuttuu.","gl":"Este campo falta.","he":"\u05E9\u05D3\u05D4 \u05D6\u05D4 \u05D7\u05E1\u05E8.","hr":"Ovo polje nedostaje.","hu":"Ez a mez\u0151 hi\xE1nyzik.","hy":"\u0531\u0575\u057D \u0564\u0561\u0577\u057F\u0568 \u0562\u0561\u0581\u0561\u056F\u0561\u0575\u0578\u0582\u0574 \u0567\u0589","id":"Ruas ini hilang.","it":"Questo campo \xE8 mancante.","ja":"\u3053\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u306F\u3001\u6B20\u843D\u3057\u3066\u3044\u307E\u3059\u3002","lb":"D'Feld feelt.","lt":"\u0160iame lauke yra ding\u0119s.","lv":"\u0160is lauks ir pazudis.","mk":"\u041E\u0432\u0430 \u043F\u043E\u043B\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0438\u0433\u0430.","mn":"\u042D\u043D\u044D \u0442\u0430\u043B\u0431\u0430\u0440 \u043D\u044C \u0430\u043B\u0433\u0430 \u0431\u043E\u043B\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1000\u103D\u1000\u103A\u101C\u1015\u103A\u1000\u102D\u102F\u1019\u1019\u103B\u103E\u1031\u102C\u103A\u101C\u1004\u1037\u103A\u1011\u102C\u1038\u1015\u102B\u104B","nb":"Dette feltet mangler.","nl":"Dit veld ontbreekt.","nn":"Dette feltet mangler.","no":"Dette feltet mangler.","pl":"Tego pola brakuje.","pt":"Este campo est\xE1 faltando.","pt_BR":"Este campo est\xE1 ausente.","ro":"Acest c\xE2mp este lips\u0103.","ru":"\u042D\u0442\u043E \u043F\u043E\u043B\u0435 \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442.","sk":"Toto pole ch\xFDba.","sl":"To polje manjka.","sq":"Kjo fush\xEB mungon.","sr_Cyrl":"\u041E\u0432\u043E \u043F\u043E\u0459\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u0458\u0435.","sr_Latn":"Ovo polje nedostaje.","sv":"Det h\xE4r f\xE4ltet saknas.","th":"\u0E1F\u0E34\u0E25\u0E14\u0E4C\u0E19\u0E35\u0E49\u0E2B\u0E32\u0E22\u0E44\u0E1B","tl":"Ang patlang na ito ay nawawala.","tr":"Bu alan, eksik","uk":"\u0426\u0435 \u043F\u043E\u043B\u0435 \u043D\u0435 \u0432\u0438\u0441\u0442\u0430\u0447\u0430\u0454.","ur":"\u06CC\u06C1 \u0641\u06CC\u0644\u0688 \u063A\u0627\u0626\u0628 \u06C1\u06D2","uz":"Bu maydon majvud emas.","vi":"L\u0129nh v\u1EF1c n\xE0y b\u1ECB thi\u1EBFu.","zh_CN":"\u6B64\u5B57\u6BB5\u7F3A\u5931\u3002","zh_TW":"\u6B64\u5B57\u6BB5\u7F3A\u5931\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_DATE={"id":"This value is not a valid date.","translations":{"validators":{"fr":"Cette valeur n'est pas une date valide.","af":"Hierdie waarde is nie 'n geldige datum nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u062A\u0627\u0631\u064A\u062E\u0627 \u0635\u0627\u0644\u062D\u0627.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir tarix deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0430\u0439 \u0434\u0430\u0442\u0430\u0439.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u0430.","bs":"Ova vrijednost nije ispravan datum.","ca":"Aquest valor no \xE9s una data v\xE0lida.","cs":"Tato hodnota nen\xED platn\xE9 datum.","cy":"Nid yw'r gwerth yn ddyddiad dilys.","da":"V\xE6rdien er ikke en gyldig dato.","de":"Dieser Wert entspricht keiner g\xFCltigen Datumsangabe.","el":"\u0397 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1.","en":"This value is not a valid date.","es":"Este valor no es una fecha v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne kuup\xE4ev.","eu":"Balio hau ez da data egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u062A\u0627\u0631\u06CC\u062E \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei ole kelvollinen p\xE4iv\xE4m\xE4\xE4r\xE4.","gl":"Este valor non \xE9 unha data v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05EA\u05D0\u05E8\u05D9\u05DA \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravan datum.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes d\xE1tum.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057D\u056D\u0561\u056C \u0561\u0574\u057D\u0561\u0569\u056B\u057E \u0567\u0589","id":"Nilai ini bukan merupakan tanggal yang sah.","it":"Questo valore non \xE8 una data valida.","ja":"\u6709\u52B9\u306A\u65E5\u4ED8\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kenger g\xEBlteger Datumsangab.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra data.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bgs datums.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0434\u0430\u0442\u0443\u043C.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 date \u0442\u04E9\u0440\u04E9\u043B \u0431\u0430\u0439\u043D\u0430 .","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u103A\u101B\u1000\u103A\u1005\u103D\u1032\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig dato.","nl":"Deze waarde is geen geldige datum.","nn":"Verdien er ikkje ein gyldig dato.","no":"Verdien er ikke en gyldig dato.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 dat\u0105.","pt":"Este valor n\xE3o \xE9 uma data v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma data v\xE1lida.","ro":"Aceast\u0103 valoare nu reprezint\u0103 o dat\u0103 valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E\u0439 \u0434\u0430\u0442\u043E\u0439.","sk":"Tato hodnota nem\xE1 platn\xFD form\xE1t d\xE1tumu.","sl":"Ta vrednost ni veljaven datum.","sq":"Kjo vler\xEB nuk \xEBsht\xEB dat\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0434\u0430\u0442\u0443\u043C.","sr_Latn":"Vrednost nije validan datum.","sv":"V\xE4rdet \xE4r inte ett giltigt datum.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi balidong petsa.","tr":"Bu de\u011Fer do\u011Fru bir tarih bi\xE7imi de\u011Fildir.","uk":"\u0414\u0430\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0432\u0456\u0440\u043D\u043E\u044E \u0434\u0430\u0442\u043E\u044E.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Ushbu sana noto'g'ri.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ng\xE0y h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684\u65E5\u671F\uFF08date\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684\u65E5\u671F\uFF08date\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_DATETIME={"id":"This value is not a valid datetime.","translations":{"validators":{"fr":"Cette valeur n'est pas une date valide.","af":"Hierdie waarde is nie 'n geldige datum en tyd nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u062A\u0627\u0631\u064A\u062E\u0627 \u0648 \u0648\u0642\u062A\u0627 \u0635\u0627\u0644\u062D\u0627.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir tarixsaat deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0430\u0439 \u0434\u0430\u0442\u0430\u0439 i \u0447\u0430\u0441\u043E\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u0430 \u0438 \u0447\u0430\u0441.","bs":"Ova vrijednost nije ispravnog datum-vrijeme (datetime) formata.","ca":"Aquest valor no \xE9s una data i hora v\xE0lida.","cs":"Tato hodnota nen\xED platn\xE9 datum s \u010Dasov\xFDm \xFAdajem.","cy":"Nid yw'r gwerth yn datetime dilys.","da":"V\xE6rdien er ikke et gyldigt tidspunkt.","de":"Dieser Wert entspricht keiner g\xFCltigen Datums- und Zeitangabe.","el":"\u0397 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1 \u03BA\u03B1\u03B9 \u03CE\u03C1\u03B1.","en":"This value is not a valid datetime.","es":"Este valor no es una fecha y hora v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne kuup\xE4ev ja kellaeg.","eu":"Balio hau ez da data-ordu egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u062A\u0627\u0631\u06CC\u062E \u0648 \u0632\u0645\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei ole kelvollinen p\xE4iv\xE4m\xE4\xE4r\xE4 ja kellonaika.","gl":"Este valor non \xE9 unha data e hora v\xE1lidas.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05EA\u05D0\u05E8\u05D9\u05DA \u05D5\u05E9\u05E2\u05D4 \u05D7\u05D5\u05E7\u05D9\u05D9\u05DD.","hr":"Ova vrijednost nije ispravnog datum-vrijeme formata.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes id\u0151pont.","hy":"\u0531\u0574\u057D\u0561\u0569\u057E\u056B \u0587 \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u056B \u0561\u0580\u056A\u0565\u0584\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Nilai ini bukan merupakan tanggal dan waktu yang sah.","it":"Questo valore non \xE8 una data e ora valida.","ja":"\u6709\u52B9\u306A\u65E5\u6642\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kenger g\xEBlteger Datums- an Z\xE4itangab.","lt":"\u0160i reik\u0161m\u0117 nera data ir laikas.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bgs datums un laiks","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0434\u0430\u0442\u0443\u043C \u0438 \u0432\u0440\u0435\u043C\u0435.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0446\u0430\u0433 \u0442\u04E9\u0440\u04E9\u043B \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u103A \u101B\u1000\u103A\u1005\u103D\u1032/\u1021\u1001\u103B\u102D\u1014\u103A \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig dato\/tid.","nl":"Deze waarde is geen geldige datum en tijd.","nn":"Verdien er ikkje ein gyldig dato og tid.","no":"Verdien er ikke en gyldig dato\/tid.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 dat\u0105 i czasem.","pt":"Este valor n\xE3o \xE9 uma data-hora v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma data e hora v\xE1lida.","ro":"Aceast\u0103 valoare nu reprezint\u0103 o dat\u0103 \u0219i or\u0103 valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u0430\u0442\u044B \u0438 \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"T\xE1to hodnota nem\xE1 platn\xFD form\xE1t d\xE1tumu a \u010Dasu.","sl":"Ta vrednost ni veljaven datum in \u010Das.","sq":"Kjo vler\xEB nuk \xEBsht\xEB dat\xEB-koh\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0434\u0430\u0442\u0443\u043C-\u0432\u0440\u0435\u043C\u0435.","sr_Latn":"Vrednost nije validno vreme.","sv":"V\xE4rdet \xE4r inte ett giltigt datum med tid.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E41\u0E25\u0E30\u0E40\u0E27\u0E25\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong petsa\/oras.","tr":"Bu de\u011Fer do\u011Fru bir tarihsaat bi\xE7imi de\u011Fildir.","uk":"\u0414\u0430\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0434\u0430\u0442\u0438 \u0442\u0430 \u0447\u0430\u0441\u0443 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E \u0648\u0642\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Sana va vaqt qiymati noto'g'ri.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ng\xE0y th\xE1ng h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684\u65E5\u671F\u65F6\u95F4\uFF08datetime\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684\u65E5\u671F\u6642\u9593\uFF08datetime\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_EMAIL_ADDRESS={"id":"This value is not a valid email address.","translations":{"validators":{"fr":"Cette valeur n'est pas une adresse email valide.","af":"Hierdie waarde is nie 'n geldige e-pos adres nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0639\u0646\u0648\u0627\u0646 \u0628\u0631\u064A\u062F \u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A \u0635\u062D\u064A\u062D.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir e-po\xE7t adresi deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B\u043C \u0430\u0434\u0440\u0430\u0441\u0430\u043C \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430\u0439 \u043F\u043E\u0448\u0442\u044B.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u043C\u0435\u0439\u043B \u0430\u0434\u0440\u0435\u0441.","bs":"Ova vrijednost nije ispravna e-mail adresa.","ca":"Aquest valor no \xE9s una adre\xE7a d'email v\xE0lida.","cs":"Tato hodnota nen\xED platn\xE1 e-mailov\xE1 adresa.","cy":"Nid yw'r gwerth yn gyfeiriad ebost dilys.","da":"V\xE6rdien er ikke en gyldig e-mailadresse.","de":"Dieser Wert ist keine g\xFCltige E-Mail-Adresse.","el":"\u0397 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF email.","en":"This value is not a valid email address.","es":"Este valor no es una direcci\xF3n de email v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne e-maili aadress.","eu":"Balio hau ez da posta elektroniko egoki bat.","fa":"\u0627\u06CC\u0646 \u06CC\u06A9 \u0622\u062F\u0631\u0633 \u0631\u0627\u06CC\u0627\u0646\u0627\u0645\u0647 (\u0627\u06CC\u0645\u06CC\u0644) \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei ole kelvollinen s\xE4hk\xF6postiosoite.","gl":"Este valor non \xE9 unha direcci\xF3n de correo electr\xF3nico v\xE1lida.","he":"\u05DB\u05EA\u05D5\u05D1\u05EA \u05D4\u05DE\u05D9\u05D9\u05DC \u05D0\u05D9\u05E0\u05D4 \u05EA\u05E7\u05D9\u05E0\u05D4.","hr":"Ova vrijednost nije ispravna e-mail adresa.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes e-mail c\xEDm.","hy":"\u0531\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u056C\u058A\u0583\u0578\u057D\u057F\u056B \u0561\u0580\u056A\u0565\u0584\u0589","id":"Nilai ini bukan alamat surel yang sah.","it":"Questo valore non \xE8 un indirizzo email valido.","ja":"\u6709\u52B9\u306A\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg Email-Adress.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkamas el. pa\u0161to adresas.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bga e-pasta adrese.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0437\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430.","mn":"\u0418-\u043C\u0430\u0439\u043B \u0445\u0430\u044F\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u103A \u1021\u102E\u1038\u1019\u1031\u1038\u101C\u102D\u1015\u103A\u1005\u102C \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig e-postadresse.","nl":"Deze waarde is geen geldig e-mailadres.","nn":"Verdien er ikkje ei gyldig e-postadresse.","no":"Verdien er ikke en gyldig e-postadresse.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym adresem email.","pt":"Este valor n\xE3o \xE9 um endere\xE7o de e-mail v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um endere\xE7o de e-mail v\xE1lido.","ro":"Aceast\u0103 valoare nu reprezint\u0103 o adres\u0103 de e-mail valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"T\xE1to hodnota nie je platn\xE1 emailov\xE1 adresa.","sl":"Ta vrednost ni veljaven e-po\u0161tni naslov.","sq":"Kjo vler\xEB nuk \xEBsht\xEB adres\xEB email-i e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u0441\u043A\u0435 \u043F\u043E\u0448\u0442\u0435.","sr_Latn":"Vrednost nije validna adresa elektronske po\u0161te.","sv":"V\xE4rdet \xE4r inte en giltig e-postadress.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi balidong address ng email.","tr":"Bu de\u011Fer do\u011Fru bir e-mail adresi de\u011Fildir.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0430\u0434\u0440\u0435\u0441\u0438 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0457 \u043F\u043E\u0448\u0442\u0438 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0627\u06CC \u0645\u06CC\u0644 \u0627\u06CC\u0688\u0631\u06CC\u0633 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Elektron pochta manzili noto'g'ri.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 email h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684\u90AE\u4EF6\u5730\u5740\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684\u90F5\u4EF6\u5730\u5740\u3002"}}};var THE_FILE_COULD_NOT_BE_FOUND={"id":"The file could not be found.","translations":{"validators":{"fr":"Le fichier n'a pas \xE9t\xE9 trouv\xE9.","af":"Die l\xEAer kon nie gevind word nie.","ar":"\u0644\u0627 \u064A\u0645\u0643\u0646 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0645\u0644\u0641.","az":"Fayl tap\u0131lmad\u0131.","be":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0437\u043D\u043E\u0439\u0434\u0437\u0435\u043D.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u043D\u0435 \u0431\u0435\u0448\u0435 \u043E\u0442\u043A\u0440\u0438\u0442.","bs":"Ova datoteka ne mo\u017Ee biti prona\u0111ena.","ca":"No s'ha pogut trobar l'arxiu.","cs":"Soubor nebyl nalezen.","cy":"Ni ddarganfyddwyd y ffeil.","da":"Filen kunne ikke findes.","de":"Die Datei wurde nicht gefunden.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B4\u03B5 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B2\u03C1\u03B5\u03B8\u03B5\u03AF.","en":"The file could not be found.","es":"No se pudo encontrar el archivo.","et":"Faili ei leita.","eu":"Ezin izan da fitxategia aurkitu.","fa":"\u0641\u0627\u06CC\u0644 \u06CC\u0627\u0641\u062A \u0646\u0634\u062F.","fi":"Tiedostoa ei l\xF6ydy.","gl":"Non se puido atopar o arquivo.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0.","hr":"Datoteka ne mo\u017Ee biti prona\u0111ena.","hu":"A f\xE1jl nem tal\xE1lhat\xF3.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u056B \u0563\u057F\u0576\u057E\u0565\u056C\u0589","id":"Berkas tidak dapat ditemukan.","it":"Non \xE8 stato possibile trovare il file.","ja":"\u30D5\u30A1\u30A4\u30EB\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002","lb":"De Fichier gouf net fonnt.","lt":"Byla nerasta.","lv":"Fails nav atrasts.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u043D\u0435 \u0435 \u043D\u0430\u0458\u0434\u0435\u043D\u0430.","mn":"\u0424\u0430\u0439\u043B \u043E\u043B\u0434\u0441\u043E\u043D\u0433\u04AF\u0439.","my":"\u1016\u102D\u102F\u1004\u103A\u101B\u103E\u102C\u1019\u1010\u103D\u1031\u1037\u1015\u102B\u104B","nb":"Filen kunne ikke finnes.","nl":"Het bestand kon niet gevonden worden.","nn":"Fila er ikkje funnen.","no":"Filen kunne ikke finnes.","pl":"Plik nie m\xF3g\u0142 zosta\u0107 odnaleziony.","pt":"O arquivo n\xE3o p\xF4de ser encontrado.","pt_BR":"O arquivo n\xE3o foi encontrado.","ro":"Fi\u0219ierul nu a putut fi g\u0103sit.","ru":"\u0424\u0430\u0439\u043B \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043D\u0430\u0439\u0434\u0435\u043D.","sk":"S\xFAbor sa nena\u0161iel.","sl":"Datoteke ni mogo\u010De najti.","sq":"File nuk mund t\xEB gjindej.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043F\u0440\u043E\u043D\u0430\u0452\u0435\u043D\u0430.","sr_Latn":"Datoteka ne mo\u017Ee biti prona\u0111ena.","sv":"Filen kunde inte hittas.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E44\u0E1F\u0E25\u0E4C","tl":"Ang file na ito ay hindi makita.","tr":"Dosya bulunamad\u0131.","uk":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E.","ur":"\u0641\u0627\u0626\u0644 \u0646\u06C1\u06CC\u06BA \u0645\u0644 \u0633\u06A9\u06CC","uz":"Fayl topilmadi.","vi":"T\u1EADp tin kh\xF4ng t\xECm th\u1EA5y.","zh_CN":"\u6587\u4EF6\u672A\u627E\u5230\u3002","zh_TW":"\u627E\u4E0D\u5230\u6A94\u6848\u3002"}}};var THE_FILE_IS_NOT_READABLE={"id":"The file is not readable.","translations":{"validators":{"fr":"Le fichier n'est pas lisible.","af":"Die l\xEAer kan nie gelees word nie.","ar":"\u0627\u0644\u0645\u0644\u0641 \u063A\u064A\u0631 \u0642\u0627\u0628\u0644 \u0644\u0644\u0642\u0631\u0627\u0621\u0629.","az":"Fayl oxunabil\u0259n deyil.","be":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0447\u044B\u0442\u0430\u0435\u0446\u0446\u0430.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u0440\u043E\u0447\u0435\u0442\u0435\u043D.","bs":"Ova datoteka nije \u010Ditljiva.","ca":"No es pot llegir l'arxiu.","cs":"Soubor je ne\u010Diteln\xFD.","cy":"Ni ellir darllen y ffeil.","da":"Filen kan ikke l\xE6ses.","de":"Die Datei ist nicht lesbar.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BD\u03B1\u03B3\u03BD\u03CE\u03C3\u03B9\u03BC\u03BF.","en":"The file is not readable.","es":"No se puede leer el archivo.","et":"Fail ei ole loetav.","eu":"Fitxategia ez da irakurgarria.","fa":"\u0641\u0627\u06CC\u0644 \u0642\u0627\u0628\u0644 \u062E\u0648\u0627\u0646\u062F\u0646 \u0646\u06CC\u0633\u062A.","fi":"Tiedostoa ei voi lukea.","gl":"O arquivo non se pode ler.","he":"\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E7\u05E8\u05D5\u05D0 \u05D0\u05EA \u05D4\u05E7\u05D5\u05D1\u05E5.","hr":"Datoteka nije \u010Ditljiva.","hu":"A f\xE1jl nem olvashat\xF3.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0561\u0576\u0568\u0576\u0569\u0565\u057C\u0576\u0565\u056C\u056B \u0567\u0589","id":"Berkas tidak dapat dibaca.","it":"Il file non \xE8 leggibile.","ja":"\u30D5\u30A1\u30A4\u30EB\u3092\u8AAD\u307F\u8FBC\u3081\u307E\u305B\u3093\u3002","lb":"De Fichier ass net liesbar.","lt":"Negalima nuskaityti bylos.","lv":"Fails nav las\u0101ms.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0440\u043E\u0447\u0438\u0442\u0430\u043D\u0430.","mn":"\u0424\u0430\u0439\u043B \u0443\u043D\u0448\u0438\u0433\u0434\u0430\u0445\u0443\u0439\u0446 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u1000\u102D\u102F \u1016\u1010\u103A\u104D\u1019\u101B\u1015\u102B\u104B","nb":"Filen er ikke lesbar.","nl":"Het bestand is niet leesbaar.","nn":"Fila kan ikkje lesast.","no":"Filen er ikke lesbar.","pl":"Nie mo\u017Cna odczyta\u0107 pliku.","pt":"O arquivo n\xE3o p\xF4de ser lido.","pt_BR":"O arquivo n\xE3o pode ser lido.","ro":"Fi\u0219ierul nu poate fi citit.","ru":"\u0424\u0430\u0439\u043B \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0440\u043E\u0447\u0438\u0442\u0430\u043D.","sk":"S\xFAbor nie je \u010Ditate\u013En\xFD.","sl":"Datoteke ni mogo\u010De prebrati.","sq":"File nuk \xEBsht\xEB i lexuesh\xEBm.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0438\u0458\u0435 \u0447\u0438\u0442\u0459\u0438\u0432\u0430.","sr_Latn":"Datoteka nije \u010Ditljiva.","sv":"Filen \xE4r inte l\xE4sbar.","th":"\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E21\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E2A\u0E16\u0E32\u0E19\u0E30\u0E17\u0E35\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E48\u0E32\u0E19\u0E44\u0E14\u0E49","tl":"Ang file na ito ay hindi mabasa.","tr":"Dosya okunabilir de\u011Fil.","uk":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0447\u0438\u0442\u0430\u0454\u0442\u044C\u0441\u044F.","ur":"\u0641\u0627\u0626\u0644 \u067E\u0691\u06BE\u0646\u06D2 \u06A9\u06D2 \u0642\u0627\u0628\u0644 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Faylni o'qib bo'lmadi.","vi":"T\u1EADp tin kh\xF4ng th\u1EC3 \u0111\u1ECDc \u0111\u01B0\u1EE3c.","zh_CN":"\u6587\u4EF6\u4E0D\u53EF\u8BFB\u3002","zh_TW":"\u7121\u6CD5\u8B80\u53D6\u6A94\u6848\u3002"}}};var THE_FILE_IS_TOO_LARGE_SIZE_SUFFIX_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX={"id":"The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.","translations":{"validators":{"fr":"Le fichier est trop volumineux ({{ size }} {{ suffix }}). Sa taille ne doit pas d\xE9passer {{ limit }} {{ suffix }}.","af":"Die l\xEAer is te groot ({{ size }} {{ suffix }}). Toegelaat maksimum grootte is {{ limit }} {{ suffix }}.","ar":"\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 ({{ size }} {{ suffix }}).\u0627\u0642\u0635\u0649 \u0645\u0633\u0627\u062D\u0647 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627 ({{ limit }} {{ suffix }}).","az":"Fayl \xE7ox b\xF6y\xFCkd\xFCr ({{ size }} {{ suffix }}). \u0130caz\u0259 veril\u0259n maksimum fayl \xF6l\xE7\xFCs\xFC {{ limit }} {{ suffix }}.","be":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456 ({{ size }} {{ suffix }}). \u041C\u0430\u043A\u0441\u0456\u043C\u0430\u043B\u044C\u043D\u0430 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B \u043F\u0430\u043C\u0435\u0440 {{ limit }} {{ suffix }}.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C ({{ size }} {{ suffix }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0438\u044F\u0442 \u0440\u0430\u0437\u043C\u0435\u0440 \u0435 {{ limit }} {{ suffix }}.","bs":"Ova datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","ca":"L'arxiu \xE9s massa gran ({{ size }} {{ suffix }}). La grand\xE0ria m\xE0xima permesa \xE9s {{ limit }} {{ suffix }}.","cs":"Soubor je p\u0159\xEDli\u0161 velk\xFD ({{ size }} {{ suffix }}). Maxim\xE1ln\xED povolen\xE1 velikost souboru je {{ limit }} {{ suffix }}.","cy":"Mae'r ffeil yn rhy fawr ({{ size }} {{ suffix }}). Yr uchafswm \xE2 ganiateir yw {{ limit }} {{ suffix }}.","da":"Filen er for stor ({{ size }} {{ suffix }}). Maksimale tilladte st\xF8rrelse er {{ limit }} {{ suffix }}.","de":"Die Datei ist zu gro\xDF ({{ size }} {{ suffix }}). Die maximal zul\xE4ssige Gr\xF6\xDFe betr\xE4gt {{ limit }} {{ suffix }}.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF ({{ size }} {{ suffix }}). \u03A4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ limit }} {{ suffix }}.","en":"The file is too large ({{ size }} {{ suffix }}). Allowed maximum size is {{ limit }} {{ suffix }}.","es":"El archivo es demasiado grande ({{ size }} {{ suffix }}). El tama\xF1o m\xE1ximo permitido es {{ limit }} {{ suffix }}.","et":"Fail on liiga suur ({{ size }} {{ suffix }}). Suurim lubatud suurus on {{ limit }} {{ suffix }}.","eu":"Fitxategia handiegia da ({{ size }} {{ suffix }}). Baimendutako tamaina handiena {{ limit }} {{ suffix }} da.","fa":"\u0641\u0627\u06CC\u0644 \u0628\u06CC\u0634 \u0627\u0632 \u0627\u0646\u062F\u0627\u0632\u0647 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A({{ size }} {{ suffix }}). \u0628\u06CC\u0634\u06CC\u0646\u0647 (\u062D\u062F\u0627\u06A9\u062B\u0631) \u0627\u0646\u062F\u0627\u0632\u0647 \u0645\u062C\u0627\u0632 \u0628\u0631\u0627\u0628\u0631 \u0628\u0627 {{ limit }} {{ suffix }} \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Tiedostonkoko ({{ size }} {{ suffix }}) on liian iso. Suurin sallittu tiedostonkoko on {{ limit }} {{ suffix }}.","gl":"O arquivo \xE9 demasiado grande ({{ size }} {{ suffix }}). O tama\xF1o m\xE1ximo permitido \xE9 {{ limit }} {{ suffix }}.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9 ({{ size }} {{ suffix }}). \u05D4\u05D2\u05D5\u05D3\u05DC \u05D4\u05DE\u05E8\u05D1\u05D9 \u05D4\u05DE\u05D5\u05EA\u05E8 \u05D4\u05D5\u05D0 {{ limit }} {{ suffix }}.","hr":"Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","hu":"A f\xE1jl t\xFAl nagy ({{ size }} {{ suffix }}). A legnagyobb megengedett m\xE9ret {{ limit }} {{ suffix }}.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567 ({{ size }} {{ suffix }}): \u0544\u0561\u0584\u057D\u056B\u0574\u0561\u056C \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u0565\u056C\u056B \u0579\u0561\u0583\u057D\u0568\u055D {{ limit }} {{ suffix }}\u0589","id":"Ukuran berkas terlalu besar ({{ size }} {{ suffix }}). Ukuran maksimum yang diizinkan adalah {{ limit }} {{ suffix }}.","it":"Il file \xE8 troppo grande ({{ size }} {{ suffix }}). La dimensione massima consentita \xE8 {{ limit }} {{ suffix }}.","ja":"\u30D5\u30A1\u30A4\u30EB\u306E\u30B5\u30A4\u30BA\u304C\u5927\u304D\u3059\u304E\u307E\u3059({{ size }} {{ suffix }})\u3002\u6709\u52B9\u306A\u6700\u5927\u30B5\u30A4\u30BA\u306F{{ limit }} {{ suffix }}\u3067\u3059\u3002","lb":"De Fichier ass ze grouss ({{ size }} {{ suffix }}). D\xE9i zougeloosse Maximalgr\xE9isst bedr\xE9it {{ limit }} {{ suffix }}.","lt":"Byla yra per didel\u0117 ({{ size }} {{ suffix }}). Maksimalus dydis {{ limit }} {{ suffix }}.","lv":"Fails ir p\u0101r\u0101k liels ({{ size }} {{ suffix }}). At\u013Cautais maksim\u0101lais izm\u0113rs ir {{ limit }} {{ suffix }}.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C\u0430 ({{ size }} {{ suffix }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0433\u043E\u043B\u0435\u043C\u0438\u043D\u0430 \u0435 {{ limit }} {{ suffix }}.","mn":"\u0424\u0430\u0439\u043B \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430 ({{ size }} {{ suffix }}). \u0417\u04E9\u0432\u0448\u04E9\u04E9\u0440\u04E9\u0433\u0434\u04E9\u0445 \u0434\u044D\u044D\u0434 \u0445\u044D\u043C\u0436\u044D\u044D  {{ limit }} {{ suffix }} \u0431\u0430\u0439\u043D\u0430.","my":"\u1016\u102D\u102F\u1004\u103A\u1021\u101B\u103D\u101A\u103A\u1021\u1005\u102C\u1038 \u1021\u101C\u103D\u1014\u103A\u1000\u103C\u102E\u1038\u1014\u1031\u101E\u100A\u103A ({{ size }} {{ suffix }}). \u1001\u103D\u1004\u103A\u1037\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u1031\u102C \u1021\u1019\u103B\u102C\u1038\u1006\u102F\u1036\u1038 \u1016\u102D\u102F\u1004\u103A\u1006\u102D\u102F\u1012\u103A\u101E\u100A\u103A {{ limit }} {{ suffix }} \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Filen er for stor ({{ size }} {{ suffix }}). Tilatte maksimale st\xF8rrelse {{ limit }} {{ suffix }}.","nl":"Het bestand is te groot ({{ size }} {{ suffix }}). Toegestane maximum grootte is {{ limit }} {{ suffix }}.","nn":"Fila er for stor ({{ size }} {{ suffix }}). Maksimal storleik er {{ limit }} {{ suffix }}.","no":"Filen er for stor ({{ size }} {{ suffix }}). Tilatte maksimale st\xF8rrelse {{ limit }} {{ suffix }}.","pl":"Plik jest za du\u017Cy ({{ size }} {{ suffix }}). Maksymalny dozwolony rozmiar to {{ limit }} {{ suffix }}.","pt":"O arquivo \xE9 muito grande ({{ size }} {{ suffix }}). O tamanho m\xE1ximo permitido \xE9 de {{ limit }} {{ suffix }}.","pt_BR":"O arquivo \xE9 muito grande ({{ size }} {{ suffix }}). O tamanho m\xE1ximo permitido \xE9 {{ limit }} {{ suffix }}.","ro":"Fi\u0219ierul este prea mare ({{ size }} {{ suffix }}). Dimensiunea maxim\u0103 permis\u0103 este {{ limit }} {{ suffix }}.","ru":"\u0424\u0430\u0439\u043B \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439 ({{ size }} {{ suffix }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0440\u0430\u0437\u043C\u0435\u0440 {{ limit }} {{ suffix }}.","sk":"S\xFAbor je pr\xEDli\u0161 ve\u013Ek\xFD ({{ size }} {{ suffix }}). Maxim\xE1lna povolen\xE1 ve\u013Ekos\u0165 je {{ limit }} {{ suffix }}.","sl":"Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u010Dja dovoljena velikost je {{ limit }} {{ suffix }}.","sq":"File \xEBsht\xEB shum\xEB i madh ({{ size }} {{ suffix }}). Madh\xEBsia maksimale e lejuar \xEBsht\xEB {{ limit }} {{ suffix }}.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430 ({{ size }} {{ suffix }}). \u041D\u0430\u0458\u0432\u0435\u045B\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0432\u0435\u043B\u0438\u0447\u0438\u043D\u0430 \u0458\u0435 {{ limit }} {{ suffix }}.","sr_Latn":"Datoteka je prevelika ({{ size }} {{ suffix }}). Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","sv":"Filen \xE4r f\xF6r stor ({{ size }} {{ suffix }}). St\xF6rsta till\xE5tna storlek \xE4r {{ limit }} {{ suffix }}.","th":"\u0E44\u0E1F\u0E25\u0E4C\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19 ({{ size }} {{ suffix }}) \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E2B\u0E0D\u0E48\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E44\u0E14\u0E49\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19 {{ limit }} {{ suffix }}","tl":"Ang file na ito ay masyadong malaki ({{ size }} {{ suffix }}). Ang pinakamalaking sukat {{ limit }} {{ suffix }}.","tr":"Dosya \xE7ok b\xFCy\xFCk ({{ size }} {{ suffix }}). \u0130zin verilen en b\xFCy\xFCk dosya boyutu {{ limit }} {{ suffix }}.","uk":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0438\u0439 ({{ size }} {{ suffix }}). \u0414\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438\u0439 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0438\u0439 \u0440\u043E\u0437\u043C\u0456\u0440 {{ limit }} {{ suffix }}.","ur":"{{ suffix }} {{ limit }} \u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u0633\u0627\u0626\u0632 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u06C1\u06D2 {{ suffix }}) ({{ size }} \u0641\u0627\u0626\u0644 \u0628\u06C1\u062A \u0628\u0691\u06CC \u06C1\u06D2","uz":"Fayl hajmi katta ({{ size }} {{ suffix }}). Maksimal ruxsat etilgan hajim {{ limit }} {{ suffix }}.","vi":"T\u1EADp tin qu\xE1 l\u1EDBn ({{ size }} {{ suffix }}). K\xEDch th\u01B0\u1EDBc t\u1ED1i \u0111a cho ph\xE9p {{ limit }} {{ suffix }}.","zh_CN":"\u6587\u4EF6\u592A\u5927 ({{ size }} {{ suffix }})\u3002\u6587\u4EF6\u5927\u5C0F\u4E0D\u53EF\u4EE5\u8D85\u8FC7 {{ limit }} {{ suffix }} \u3002","zh_TW":"\u6A94\u6848\u592A\u5927 ({{ size }} {{ suffix }})\u3002\u6A94\u6848\u5927\u5C0F\u4E0D\u53EF\u4EE5\u8D85\u904E {{ limit }} {{ suffix }} \u3002"}}};var THE_MIME_TYPE_OF_THE_FILE_IS_INVALID_TYPE_ALLOWED_MIME_TYPES_ARE_TYPES={"id":"The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.","translations":{"validators":{"fr":"Le type du fichier est invalide ({{ type }}). Les types autoris\xE9s sont {{ types }}.","af":"Die MIME-tipe van die l\xEAer is ongeldig ({{ type }}). Toegelaat MIME-tipes is {{ types }}.","ar":"\u0646\u0648\u0639 \u0627\u0644\u0645\u0644\u0641 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D ({{ type }}). \u0627\u0644\u0627\u0646\u0648\u0627\u0639 \u0627\u0644\u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627 \u0647\u0649 {{ types }}.","az":"Fayl\u0131n mime tipi yanl\u0131\u015Fdr ({{ type }}). \u0130caz\u0259 veril\u0259n mime tipl\u0259ri {{ types }}.","be":"MIME-\u0442\u044B\u043F \u0444\u0430\u0439\u043B\u0443 \u043D\u0435\u043A\u0430\u0440\u044D\u043A\u0442\u044B ({{ type }}). \u0414\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B\u044F MIME-\u0442\u044B\u043F\u044B \u0444\u0430\u0439\u043B\u0443 {{ types }}.","bg":"Mime \u0442\u0438\u043F\u0430 \u043D\u0430 \u0444\u0430\u0439\u043B\u0430 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D ({{ type }}). \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438 mime \u0442\u0438\u043F\u043E\u0432\u0435 \u0441\u0430 {{ types }}.","bs":"Mime tip datoteke nije ispravan ({{ type }}). Dozvoljeni mime tipovi su {{ types }}.","ca":"El tipus mime de l'arxiu no \xE9s v\xE0lid ({{ type }}). Els tipus mime v\xE0lids s\xF3n {{ types }}.","cs":"Neplatn\xFD mime typ souboru ({{ type }}). Povolen\xE9 mime typy soubor\u016F jsou {{ types }}.","cy":"Nid yw math mime y ffeil yn ddilys ({{ type }}). Dyma'r mathau \xE2 ganiateir {{ types }}.","da":"Filens MIME-type er ugyldig ({{ type }}). Tilladte MIME-typer er {{ types }}.","de":"Der Dateityp ist ung\xFCltig ({{ type }}). Erlaubte Dateitypen sind {{ types }}.","el":"\u039F \u03C4\u03CD\u03C0\u03BF\u03C2 mime \u03C4\u03BF\u03C5 \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF\u03C5 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 ({{ type }}). \u039F\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03B9 \u03C4\u03CD\u03C0\u03BF\u03B9 mime \u03B5\u03AF\u03BD\u03B1\u03B9 {{ types }}.","en":"The mime type of the file is invalid ({{ type }}). Allowed mime types are {{ types }}.","es":"El tipo mime del archivo no es v\xE1lido ({{ type }}). Los tipos mime v\xE1lidos son {{ types }}.","et":"Faili sisut\xFC\xFCp on vigane ({{ type }}). Lubatud sisut\xFC\xFCbid on {{ types }}.","eu":"Fitxategiaren mime mota ez da egokia ({{ type }}). Hauek dira baimendutako mime motak: {{ types }}.","fa":"\u0646\u0648\u0639 mime \u0627\u06CC\u0646 \u0641\u0627\u06CC\u0644 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A({{ type }}). \u0627\u0646\u0648\u0627\u0639 mime \u0645\u062C\u0627\u0632 {{ types }} \u0647\u0633\u062A\u0646\u062F.","fi":"Tiedostotyyppi ({{ type }}) on virheellinen. Sallittuja tiedostotyyppej\xE4 ovat {{ types }}.","gl":"O tipo mime do arquivo non \xE9 v\xE1lido ({{ type }}). Os tipos mime v\xE1lidos son {{ types }}.","he":"\u05E1\u05D5\u05D2 MIME \u05E9\u05DC \u05D4\u05E7\u05D5\u05D1\u05E5 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9 ({{ type }}). \u05DE\u05D5\u05EA\u05E8\u05D9\u05DD \u05E1\u05D5\u05D2\u05D9 MIME {{ types }}.","hr":"Mime tip datoteke nije ispravan ({{ type }}). Dozvoljeni mime tipovi su {{ types }}.","hu":"A f\xE1jl MIME t\xEDpusa \xE9rv\xE9nytelen ({{ type }}). Az enged\xE9lyezett MIME t\xEDpusok: {{ types }}.","hy":"MIME-\u057F\u0565\u057D\u0561\u056F\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567 \u0567({{ type }}): \u0546\u056B\u0577\u0584\u0565\u0580\u056B \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u0565\u056C\u056B MIME-\u057F\u0565\u057D\u0561\u056F\u0576\u0565\u0580\u0576 \u0565\u0576: {{ types }}\u0589","id":"Jenis berkas ({{ type }}) tidak sah. Jenis berkas yang diizinkan adalah {{ types }}.","it":"Il mime type del file non \xE8 valido ({{ type }}). I tipi permessi sono {{ types }}.","ja":"\u30D5\u30A1\u30A4\u30EB\u306EMIME\u30BF\u30A4\u30D7\u304C\u7121\u52B9\u3067\u3059({{ type }})\u3002\u6709\u52B9\u306AMIME\u30BF\u30A4\u30D7\u306F{{ types }}\u3067\u3059\u3002","lb":"Den Typ vum Fichier ass ong\xEBlteg ({{ type }}). Erlaabten Type sinn {{ types }}.","lt":"Netinkamas bylos tipas (mime type) ({{ type }}). Galimi byl\u0173 tipai {{ types }}.","lv":"Faila mime tips nav der\u012Bgs ({{ type }}). At\u013Cautie mime tipi ir {{ types }}.","mk":"\u041C\u0438\u043C\u0435 \u0442\u0438\u043F\u043E\u0442 \u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ({{ type }}). \u0414\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438\u0442\u0435 \u043C\u0438\u043C\u0435 \u0442\u0438\u043F\u043E\u0432\u0438 \u0441\u0435 {{ types }}.","mn":"\u0424\u0430\u0439\u043B\u044B\u043D MIME-\u0442\u04E9\u0440\u04E9\u043B \u043D\u044C \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430 ({{ type }}). \u0417\u04E9\u0432\u0448\u04E9\u04E9\u0440\u04E9\u0433\u0434\u04E9\u0445 MIME-\u0442\u04E9\u0440\u043B\u04AF\u04AF\u0434 {{ types }}.","my":"\u1016\u102D\u102F\u1004\u103A\u104F mime \u1021\u1019\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u1019\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u1015\u102B ({{ type }})\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u1031\u102C mime \u1021\u1019\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u1019\u103B\u102C\u1038\u1019\u103E\u102C {{ types }}.","nb":"Mimetypen av filen er ugyldig ({{ type }}). Tilatte mimetyper er {{ types }}.","nl":"Het mime type van het bestand is ongeldig ({{ type }}). Toegestane mime types zijn {{ types }}.","nn":"Mime-typen av fila er ugyldig ({{ type }}). Tillatne mime-typar er {{ types }}.","no":"Mimetypen av filen er ugyldig ({{ type }}). Tilatte mimetyper er {{ types }}.","pl":"Nieprawid\u0142owy typ mime pliku ({{ type }}). Dozwolone typy mime to {{ types }}.","pt":"O tipo mime do arquivo \xE9 inv\xE1lido ({{ type }}). Os tipos mime permitidos s\xE3o {{ types }}.","pt_BR":"O tipo mime do arquivo \xE9 inv\xE1lido ({{ type }}). Os tipos mime permitidos s\xE3o {{ types }}.","ro":"Tipul fi\u0219ierului este invalid ({{ type }}). Tipurile permise de fi\u0219iere sunt ({{ types }}).","ru":"MIME-\u0442\u0438\u043F \u0444\u0430\u0439\u043B\u0430 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C ({{ type }}). \u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B MIME-\u0442\u0438\u043F\u044B \u0444\u0430\u0439\u043B\u043E\u0432 {{ types }}.","sk":"S\xFAbor typu ({{ type }}) nie je podporovan\xFD. Podporovan\xE9 typy s\xFA {{ types }}.","sl":"Mime tip datoteke je neveljaven ({{ type }}). Dovoljeni mime tipi so {{ types }}.","sq":"Lloji mime i file-it \xEBsht\xEB i pavlefsh\xEBm ({{ type }}). Llojet mime t\xEB lejuara jan\xEB {{ types }}.","sr_Cyrl":"\u041C\u0438\u043C\u0435 \u0442\u0438\u043F \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D ({{ type }}). \u0414\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0438 \u043C\u0438\u043C\u0435 \u0442\u0438\u043F\u043E\u0432\u0438 \u0441\u0443 {{ types }}.","sr_Latn":"MIME tip datoteke nije validan ({{ type }}). Dozvoljeni MIME tipovi su {{ types }}.","sv":"Filens MIME-typ ({{ type }}) \xE4r ogiltig. De till\xE5tna typerna \xE4r {{ types }}.","th":"Mime type \u0E02\u0E2D\u0E07\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 ({{ type }}) Mime types \u0E17\u0E35\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E04\u0E37\u0E2D {{ types }}","tl":"Ang uri ng file ng mime ay hindi balido ({{ type }}). Ang mga pinapayagang uri ng mime ay ang  {{ types }}.","tr":"Dosyan\u0131n mime tipi ge\xE7ersiz ({{ type }}). \u0130zin verilen mime tipleri {{ types }}.","uk":"MIME-\u0442\u0438\u043F \u0444\u0430\u0439\u043B\u0443 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u0439 ({{ type }}). \u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0456 MIME-\u0442\u0438\u043F\u0438 \u0444\u0430\u0439\u043B\u0456\u0432 {{ types }}.","ur":"\u06C1\u06CC\u06BA {{ types }} \u0645\u0627\u0626\u06CC\u0645 \u06A9\u06CC \u0642\u0633\u0645\u06CC\u06BA ({{ type }}) \u0641\u0627\u0626\u0644 \u06A9\u06CC \u0645\u0627\u06C2\u064A\u0645 \u0642\u0633\u0645 \u063A\u0644\u0637 \u06C1\u06D2","uz":"Faylning MIME turi noto'g'ri ({{ type }}). Ruxsat etilgan MIME turlar {{ types }}.","vi":"Ki\u1EC3u mime c\u1EE7a t\u1EADp tin kh\xF4ng h\u1EE3p l\u1EC7 ({{ type }}). Ki\u1EC3u h\u1EE3p l\u1EC7 l\xE0 {{ types }}.","zh_CN":"\u65E0\u6548\u7684\u6587\u4EF6\u7C7B\u578B ({{ type }}) \u3002\u5141\u8BB8\u7684\u6587\u4EF6\u7C7B\u578B\u6709 {{ types }} \u3002","zh_TW":"\u7121\u6548\u7684\u6A94\u6848\u985E\u578B ({{ type }}) \u3002\u5141\u8A31\u7684\u6A94\u6848\u985E\u578B\u6709 {{ types }} \u3002"}}};var THIS_VALUE_SHOULD_BE_LIMIT_OR_LESS={"id":"This value should be {{ limit }} or less.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre inf\xE9rieure ou \xE9gale \xE0 {{ limit }}.","af":"Hierdie waarde moet {{ limit }} of minder wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u0627\u0648 \u0627\u0642\u0644.","az":"Bu d\u0259y\u0259r {{ limit }} v\u0259 ya alt\u0131nda olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C {{ limit }} \u0430\u0431\u043E \u043C\u0435\u043D\u0448.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 {{ limit }} \u0438\u043B\u0438 \u043F\u043E-\u043C\u0430\u043B\u043A\u043E.","bs":"Ova vrijednost bi trebalo da bude {{ limit }} ili manje.","ca":"Aquest valor hauria de ser {{ limit }} o menys.","cs":"Tato hodnota mus\xED b\xFDt {{ limit }} nebo m\xE9n\u011B.","cy":"Dylai'r gwerth hwn fod yn {{ limit }} neu lai.","da":"V\xE6rdien skal v\xE6re {{ limit }} eller mindre.","de":"Dieser Wert sollte kleiner oder gleich {{ limit }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ limit }} \u03AE \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF.","en":"This value should be {{ limit }} or less.","es":"Este valor deber\xEDa ser {{ limit }} o menos.","et":"V\xE4\xE4rtus peaks olema {{ limit }} v\xF5i v\xE4hem.","eu":"Balio hau gehienez {{ limit }} izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06A9\u0648\u0686\u06A9\u062A\u0631 \u0648 \u06CC\u0627 \u0645\u0633\u0627\u0648\u06CC {{ limit }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla {{ limit }} tai v\xE4hemm\xE4n.","gl":"Este valor deber\xEDa ser {{ limit }} ou menos.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05DB\u05DC \u05D4\u05D9\u05D5\u05EA\u05E8.","hr":"Ova vrijednost treba biti {{ limit }} ili manje.","hu":"Ez az \xE9rt\xE9k legfeljebb {{ limit }} lehet.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B {{ limit }} \u056F\u0561\u0574 \u0583\u0578\u0584\u0580\u0589","id":"Nilai ini harus {{ limit }} atau kurang.","it":"Questo valore dovrebbe essere {{ limit }} o inferiore.","ja":"{{ limit }}\u4EE5\u4E0B\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert soll m\xE9i kleng oder gl\xE4ich {{ limit }} sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti {{ limit }} arba ma\u017Eiau.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt ne vair\u0101k k\u0101 {{ limit }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 {{ limit }} \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430  {{ limit }} \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ limit }} (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) {{ limit }} \u1011\u1000\u103A\u1014\u100A\u103A\u1038\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien m\xE5 v\xE6re {{ limit }} tegn lang eller mindre.","nl":"Deze waarde moet {{ limit }} of minder zijn.","nn":"Verdien m\xE5 vere {{ limit }} eller mindre.","no":"Verdien m\xE5 v\xE6re {{ limit }} tegn lang eller mindre.","pl":"Ta warto\u015B\u0107 powinna wynosi\u0107 {{ limit }} lub mniej.","pt":"Este valor deveria ser {{ limit }} ou menor.","pt_BR":"Este valor deve ser {{ limit }} ou menos.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie cel mult {{ limit }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C {{ limit }} \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.","sk":"T\xE1to hodnota by mala by\u0165 {{ limit }} alebo menej.","sl":"Ta vrednost bi morala biti {{ limit }} ali manj.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB {{ limit }} ose m\xEB pak.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ limit }} \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.","sr_Latn":"Vrednost bi trebalo da bude {{ limit }} ili manje.","sv":"V\xE4rdet ska vara {{ limit }} eller mindre.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E40\u0E1B\u0E47\u0E19 {{ limit }} \u0E2B\u0E23\u0E37\u0E2D\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang halaga nito ay dapat na {{ limit }} or maliit pa.","tr":"Bu de\u011Fer {{ limit }} ve alt\u0131nda olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 {{ limit }} \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.","ur":"\u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ limit }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ limit }} ga teng yoki kam bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i b\u1EB1ng ho\u1EB7c nh\u1ECF h\u01A1n {{ limit }}.","zh_CN":"\u8FD9\u4E2A\u53D8\u91CF\u7684\u503C\u5E94\u8BE5\u5C0F\u4E8E\u6216\u7B49\u4E8E {{ limit }}\u3002","zh_TW":"\u9019\u500B\u8B8A\u6578\u7684\u503C\u61C9\u8A72\u5C0F\u65BC\u6216\u7B49\u65BC {{ limit }}\u3002"}}};var THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_LESS_THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_LESS={"id":"This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.","translations":{"validators":{"fr":"Cette cha\xEEne est trop longue. Elle doit avoir au maximum {{ limit }} caract\xE8re.|Cette cha\xEEne est trop longue. Elle doit avoir au maximum {{ limit }} caract\xE8res.","af":"Hierdie waarde is te lank. Dit moet {{ limit }} karakter of minder wees.|Hierdie waarde is te lank. Dit moet {{ limit }} karakters of minder wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0648\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0637\u0648\u064A\u0644\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0642\u0644.","az":"Bu d\u0259y\u0259r \xE7ox uzundur. {{ limit }} v\u0259 ya daha az simvol olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0430\u0435. \u042F\u043D\u043E \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B \u0430\u0431\u043E \u043C\u0435\u043D\u0448.|\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0430\u0435. \u042F\u043D\u043E \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E \u0430\u0431\u043E \u043C\u0435\u043D\u0448.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0434\u044A\u043B\u0433\u0430. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B.|\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0434\u044A\u043B\u0433\u0430. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430.","bs":"Ova vrijednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karakter ili manje.|Ova vrijednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karaktera ili manje.|Ova vrijednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karaktera ili manje.","ca":"Aquest valor \xE9s massa llarg. Hauria de tenir {{ limit }} car\xE0cter o menys.|Aquest valor \xE9s massa llarg. Hauria de tenir {{ limit }} car\xE0cters o menys.","cs":"Tato hodnota je p\u0159\xEDli\u0161 dlouh\xE1. Mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} znak.|Tato hodnota je p\u0159\xEDli\u0161 dlouh\xE1. Mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} znaky.|Tato hodnota je p\u0159\xEDli\u0161 dlouh\xE1. Mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} znak\u016F.","cy":"Mae'r gwerth hwn rhy hir. Dylai gynnwys {{ limit }} nodyn cyfrifiadurol neu lai.","da":"V\xE6rdien er for lang. Den m\xE5 h\xF8jst indeholde {{ limit }} tegn.","de":"Diese Zeichenkette ist zu lang. Sie sollte h\xF6chstens {{ limit }} Zeichen haben.|Diese Zeichenkette ist zu lang. Sie sollte h\xF6chstens {{ limit }} Zeichen haben.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03B7. \u0398\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1 \u03AE \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03B7. \u0398\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2 \u03AE \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03BF.","en":"This value is too long. It should have {{ limit }} character or less.|This value is too long. It should have {{ limit }} characters or less.","es":"Este valor es demasiado largo. Deber\xEDa tener {{ limit }} car\xE1cter o menos.|Este valor es demasiado largo. Deber\xEDa tener {{ limit }} caracteres o menos.","et":"V\xE4\xE4rtus on liiga pikk. Pikkus peaks olema {{ limit }} t\xE4hem\xE4rki v\xF5i v\xE4hem.","eu":"Balio hau luzeegia da. Gehienez karaktere {{ limit }} eduki beharko luke.|Balio hau luzeegia da. Gehienez {{ limit }} karaktere eduki beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0633\u06CC\u0627\u0631 \u0637\u0648\u0644\u0627\u0646\u06CC \u0627\u0633\u062A. \u0628\u0627\u06CC\u062F \u062F\u0627\u0631\u0627\u06CC {{limit}} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F. | \u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0633\u06CC\u0627\u0631 \u0637\u0648\u0644\u0627\u0646\u06CC \u0627\u0633\u062A. \u0628\u0627\u06CC\u062F \u062F\u0627\u0631\u0627\u06CC {{limit}} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F.","fi":"Liian pitk\xE4 sy\xF6te. Sy\xF6te saa olla enint\xE4\xE4n yhden merkin.|Liian pitk\xE4 sy\xF6te. Sy\xF6te saa olla enint\xE4\xE4n {{ limit }} merkki\xE4.","gl":"Este valor \xE9 demasiado longo. Deber\xEDa ter {{ limit }} car\xE1cter ou menos.|Este valor \xE9 demasiado longo. Deber\xEDa ter {{ limit }} caracteres ou menos.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05E8\u05D5\u05DA \u05DE\u05D9\u05D3\u05D9. \u05D4\u05D5\u05D0 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05DB\u05DC \u05D4\u05D9\u05D5\u05EA\u05E8.|\u05D4\u05E2\u05E8\u05DA \u05D0\u05E8\u05D5\u05DA \u05DE\u05D9\u05D3\u05D9. \u05D4\u05D5\u05D0 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05DB\u05DC \u05D4\u05D9\u05D5\u05EA\u05E8.","hr":"Ova vrijednost je preduga\u010Dka. Treba imati {{ limit }} znakova ili manje.","hu":"Ez az \xE9rt\xE9k t\xFAl hossz\xFA. Legfeljebb {{ limit }} karaktert tartalmazhat.|Ez az \xE9rt\xE9k t\xFAl hossz\xFA. Legfeljebb {{ limit }} karaktert tartalmazhat.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0565\u0580\u056F\u0561\u0580 \u0567: \u054A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B {{ limit }} \u056F\u0561\u0574 \u0561\u057E\u0565\u056C \u057D\u056B\u0574\u057E\u0578\u056C\u0576\u0565\u0580\u0589","id":"Nilai ini terlalu panjang. Seharusnya {{ limit }} karakter atau kurang.","it":"Questo valore \xE8 troppo lungo. Dovrebbe essere al massimo di {{ limit }} carattere.|Questo valore \xE8 troppo lungo. Dovrebbe essere al massimo di {{ limit }} caratteri.","ja":"\u5024\u304C\u9577\u3059\u304E\u307E\u3059\u3002{{ limit }}\u6587\u5B57\u4EE5\u5185\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBs Zeecheketten ass ze laang. Se sollt h\xE9chstens {{ limit }} Zeechen hunn.","lt":"Per didelis simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017Eiau simboli\u0173.|Per didelis simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017Eiau simboli\u0173.|Per didelis simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba ma\u017Eiau simboli\u0173.","lv":"\u0160\u012Bs v\u0113rt\u012Bbas garums ir 0 rakstz\u012Bmju.|\u0160\u012B v\u0113rt\u012Bba ir p\u0101r\u0101k gara. Tai b\u016Btu j\u0101b\u016Bt ne vair\u0101k k\u0101 {{ limit }} rakstz\u012Bmei.|\u0160\u012B v\u0113rt\u012Bba ir p\u0101r\u0101k gara. Tai b\u016Btu j\u0101b\u016Bt ne vair\u0101k k\u0101 {{ limit }} rakstz\u012Bm\u0113m.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.|\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438 \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0443\u0440\u0442 \u0431\u0430\u0439\u043D\u0430. {{ limit }} \u0442\u044D\u043C\u0434\u044D\u0433\u0442\u0438\u0439\u043D \u0443\u0440\u0442\u0442\u0430\u0439 \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u101C\u103D\u1014\u103A\u101B\u103E\u100A\u103A\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B \u104E\u1004\u103A\u1038\u1010\u103D\u1004\u103A\u1021\u1000\u1039\u1001\u101B\u102C {{ limit }} (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u104E\u1004\u103A\u1038\u1011\u1000\u103A\u1014\u100A\u103A\u1038\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B | \u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u101C\u103D\u1014\u103A\u101B\u103E\u100A\u103A\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B \u104E\u1004\u103A\u1038\u1010\u103D\u1004\u103A\u1021\u1000\u1039\u1001\u101B\u102C {{limit}} \u1001\u102F\u1014\u103E\u1004\u1037\u103A\u1021\u1011\u1000\u103A\u101B\u103E\u102D\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Verdien er for lang. Den m\xE5 ha {{ limit }} tegn eller mindre.","nl":"Deze waarde is te lang. Hij mag maximaal {{ limit }} teken bevatten.|Deze waarde is te lang. Hij mag maximaal {{ limit }} tekens bevatten.","nn":"Verdien er for lang. Den m\xE5 vere {{ limit }} bokstavar eller mindre.","no":"Verdien er for lang. Den m\xE5 ha {{ limit }} tegn eller mindre.","pl":"Ta warto\u015B\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\xF3w.|Ta warto\u015B\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\xF3w.|Ta warto\u015B\u0107 jest zbyt d\u0142uga. Powinna mie\u0107 {{ limit }} lub mniej znak\xF3w.","pt":"O valor \xE9 muito longo. Deveria ter {{ limit }} caracteres ou menos.","pt_BR":"Este valor \xE9 muito longo. Deve ter {{ limit }} caractere ou menos.|Este valor \xE9 muito longo. Deve ter {{ limit }} caracteres ou menos.","ro":"Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} caracter.|Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} caractere.|Aceast\u0103 valoare este prea lung\u0103. Ar trebui s\u0103 aib\u0103 maxim {{ limit }} de caractere.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.","sk":"T\xE1to hodnota obsahuje viac znakov ako je povolen\xE9. Mala by obsahova\u0165 najviac {{ limit }} znak.|T\xE1to hodnota obsahuje viac znakov ako je povolen\xE9. Mala by obsahova\u0165 najviac {{ limit }} znaky.|T\xE1to hodnota obsahuje viac znakov ako je povolen\xE9. Mala by obsahova\u0165 najviac {{ limit }} znakov.","sl":"Ta vrednost je predolga. Morala bi imeti {{ limit }} znak ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znaka ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znake ali manj.|Ta vrednost je predolga. Morala bi imeti {{ limit }} znakov ali manj.","sq":"Kjo vler\xEB \xEBsht\xEB shum\xEB e gjat\xEB. Duhet t\xEB p\xEBrmbaj {{ limit }} karakter ose m\xEB pak.|Kjo vler\xEB \xEBsht\xEB shum\xEB e gjat\xEB. Duhet t\xEB p\xEBrmbaj {{ limit }} karaktere ose m\xEB pak.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u0434\u0443\u0433\u0430\u0447\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.","sr_Latn":"Vrednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karakter ili manje.|Vrednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karaktera ili manje.|Vrednost je preduga\u010Dka. Trebalo bi da ima {{ limit }} karaktera ili manje.","sv":"V\xE4rdet \xE4r f\xF6r l\xE5ngt. Det ska ha {{ limit }} tecken eller f\xE4rre.|V\xE4rdet \xE4r f\xF6r l\xE5ngt. Det ska ha {{ limit }} tecken eller f\xE4rre.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E22\u0E32\u0E27\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35\u0E41\u0E04\u0E48 {{ limit }} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E2B\u0E23\u0E37\u0E2D\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang halaga nito ay masyadong mahaba. Ito ay dapat na {{ limit }} karakter o maliit pa.|Ang halaga nito ay masyadong mahaba. Ito ay dapat na {{ limit }} mga karakter o maliit pa.","tr":"Bu de\u011Fer \xE7ok uzun. {{ limit }} karakter veya daha az olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443 \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.","ur":"\u062D\u0631\u0648\u0641 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u06D2 \u0686\u0627\u06C1\u0626\u06CC\u06BA {{ limit }} \u062D\u0631\u0641 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0628\u06C1\u062A \u0644\u0645\u0628\u06CC \u06C1\u06D2\u06D4 \u0627\u0633 \u0645\u06CC\u06BA{{ limit }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0628\u06C1\u062A \u0644\u0645\u0628\u06CC \u06C1\u06D2\u06D4 \u0627\u0633 \u0645\u06CC\u06BA","uz":"Qiymat juda uzun. {{ limit }} ga teng yoki kam bo'lishi kerak.|Qiymat juda uzun. {{ limit }} yoki undan kam belgidan iborat bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB qu\xE1 d\xE0i. Ph\u1EA3i b\u1EB1ng ho\u1EB7c \xEDt h\u01A1n {{ limit }} k\xED t\u1EF1.|Gi\xE1 tr\u1ECB qu\xE1 d\xE0i. Ph\u1EA3i b\u1EB1ng ho\u1EB7c \xEDt h\u01A1n {{ limit }} k\xED t\u1EF1.","zh_CN":"\u5B57\u7B26\u4E32\u592A\u957F\uFF0C\u957F\u5EA6\u4E0D\u53EF\u8D85\u8FC7 {{ limit }} \u4E2A\u5B57\u7B26\u3002","zh_TW":"\u5B57\u4E32\u592A\u9577\uFF0C\u9577\u5EA6\u4E0D\u53EF\u8D85\u904E {{ limit }} \u500B\u5B57\u5143\u3002"}}};var THIS_VALUE_SHOULD_BE_LIMIT_OR_MORE={"id":"This value should be {{ limit }} or more.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre sup\xE9rieure ou \xE9gale \xE0 {{ limit }}.","af":"Hierdie waarde moet {{ limit }} of meer wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u0627\u0648 \u0627\u0643\u062B\u0631.","az":"Bu d\u0259y\u0259r {{ limit }} veya daha fazla olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C {{ limit }} \u0430\u0431\u043E \u0431\u043E\u043B\u044C\u0448.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 {{ limit }} \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u0447\u0435.","bs":"Ova vrijednost bi trebalo da bude {{ limit }} ili vi\u0161e.","ca":"Aquest valor hauria de ser {{ limit }} o m\xE9s.","cs":"Tato hodnota mus\xED b\xFDt {{ limit }} nebo v\xEDce.","cy":"Dylai'r gwerth hwn fod yn {{ limit }} neu fwy.","da":"V\xE6rdien skal v\xE6re {{ limit }} eller mere.","de":"Dieser Wert sollte gr\xF6\xDFer oder gleich {{ limit }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ limit }} \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF.","en":"This value should be {{ limit }} or more.","es":"Este valor deber\xEDa ser {{ limit }} o m\xE1s.","et":"V\xE4\xE4rtus peaks olema {{ limit }} v\xF5i rohkem.","eu":"Balio hau gutxienez {{ limit }} izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u0632\u0631\u06AF\u062A\u0631 \u0648 \u06CC\u0627 \u0645\u0633\u0627\u0648\u06CC {{ limit }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla {{ limit }} tai enemm\xE4n.","gl":"Este valor deber\xEDa ser {{ limit }} ou m\xE1is.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05E4\u05D7\u05D5\u05EA.","hr":"Ova vrijednost treba biti {{ limit }} ili vi\u0161e.","hu":"Ez az \xE9rt\xE9k legal\xE1bb {{ limit }} kell, hogy legyen.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F \u0567 \u056C\u056B\u0576\u056B {{ limit }} \u056F\u0561\u0574 \u0577\u0561\u057F\u0589","id":"Nilai ini harus {{ limit }} atau lebih.","it":"Questo valore dovrebbe essere {{ limit }} o superiore.","ja":"{{ limit }}\u4EE5\u4E0A\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt m\xE9i grouss oder gl\xE4ich {{ limit }} sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti {{ limit }} arba daugiau.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt ne maz\u0101k k\u0101 {{ limit }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 {{ limit }} \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ limit }} \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0438\u0445 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{limit}} (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1011\u102D\u102F\u1037\u1011\u1000\u103A\u1015\u102D\u102F\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Verdien m\xE5 v\xE6re {{ limit }} eller mer.","nl":"Deze waarde moet {{ limit }} of meer zijn.","nn":"Verdien m\xE5 vere {{ limit }} eller meir.","no":"Verdien m\xE5 v\xE6re {{ limit }} eller mer.","pl":"Ta warto\u015B\u0107 powinna wynosi\u0107 {{ limit }} lub wi\u0119cej.","pt":"Este valor deveria ser {{ limit }} ou mais.","pt_BR":"Este valor deve ser {{ limit }} ou mais.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie cel pu\u021Bin {{ limit }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C {{ limit }} \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.","sk":"T\xE1to hodnota by mala by\u0165 viac ako {{ limit }}.","sl":"Ta vrednost bi morala biti {{ limit }} ali ve\u010D.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB {{ limit }} ose m\xEB shum\xEB.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ limit }} \u0438\u043B\u0438 \u0432\u0438\u0448\u0435.","sr_Latn":"Vrednost bi trebalo da bude {{ limit }} ili vi\u0161e.","sv":"V\xE4rdet ska vara {{ limit }} eller mer.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35 {{ limit }} \u0E2B\u0E23\u0E37\u0E2D\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang halaga nito ay dapat na {{ limit }} o mas marami pa.","tr":"Bu de\u011Fer {{ limit }} veya daha fazla olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 {{ limit }} \u0430\u0431\u043E \u0431\u0456\u043B\u044C\u0448\u0435.","ur":"\u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ limit }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ limit }} yoki undan ortiq bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i l\u1EDBn h\u01A1n ho\u1EB7c b\u1EB1ng {{ limit }}.","zh_CN":"\u8BE5\u53D8\u91CF\u7684\u503C\u5E94\u8BE5\u5927\u4E8E\u6216\u7B49\u4E8E {{ limit }}\u3002","zh_TW":"\u8A72\u8B8A\u6578\u7684\u503C\u61C9\u8A72\u5927\u65BC\u6216\u7B49\u65BC {{ limit }}\u3002"}}};var THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_MORE_THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_MORE={"id":"This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.","translations":{"validators":{"fr":"Cette cha\xEEne est trop courte. Elle doit avoir au minimum {{ limit }} caract\xE8re.|Cette cha\xEEne est trop courte. Elle doit avoir au minimum {{ limit }} caract\xE8res.","af":"Hierdie waarde is te kort. Dit moet {{ limit }} karakter of meer wees.|Hierdie waarde is te kort. Dit moet {{ limit }} karakters of meer wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0648\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0642\u0635\u064A\u0631\u0629 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 {{ limit }} \u062D\u0631\u0641 \u0627\u0648 \u0627\u0643\u062B\u0631.","az":"Bu d\u0259y\u0259r \xE7ox q\u0131sad\u0131r. {{ limit }} v\u0259 ya daha \xE7ox simvol olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0430\u0435. \u042F\u043D\u043E \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C \u043F\u0440\u044B\u043D\u0430\u043C\u0441\u0456 {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B.|\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043A\u0430\u0440\u043E\u0442\u043A\u0430\u0435. \u042F\u043D\u043E \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C \u043F\u0440\u044B\u043D\u0430\u043C\u0441\u0456 {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B.|\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430.","bs":"Ova vrijednost je prekratka. Trebalo bi da ima {{ limit }} karakter ili vi\u0161e.|Ova vrijednost je prekratka. Trebalo bi da ima {{ limit }} karaktera ili vi\u0161e.|Ova vrijednost je prekratka. Trebalo bi da ima {{ limit }} karaktera ili vi\u0161e.","ca":"Aquest valor \xE9s massa curt. Hauria de tenir {{ limit }} car\xE0cters o m\xE9s.","cs":"Tato hodnota je p\u0159\xEDli\u0161 kr\xE1tk\xE1. Mus\xED obsahovat minim\xE1ln\u011B {{ limit }} znak.|Tato hodnota je p\u0159\xEDli\u0161 kr\xE1tk\xE1. Mus\xED obsahovat minim\xE1ln\u011B {{ limit }} znaky.|Tato hodnota je p\u0159\xEDli\u0161 kr\xE1tk\xE1. Mus\xED obsahovat minim\xE1ln\u011B {{ limit }} znak\u016F.","cy":"Mae'r gwerth hwn yn rhy fyr. Dylai gynnwys {{ limit }} nodyn cyfrifiadurol neu fwy.","da":"V\xE6rdien er for kort. Den skal indeholde mindst {{ limit }} tegn.","de":"Diese Zeichenkette ist zu kurz. Sie sollte mindestens {{ limit }} Zeichen haben.|Diese Zeichenkette ist zu kurz. Sie sollte mindestens {{ limit }} Zeichen haben.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03AE. \u0398\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1 \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03AE. \u0398\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2 \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03BF.","en":"This value is too short. It should have {{ limit }} character or more.|This value is too short. It should have {{ limit }} characters or more.","es":"Este valor es demasiado corto. Deber\xEDa tener {{ limit }} car\xE1cter o m\xE1s.|Este valor es demasiado corto. Deber\xEDa tener {{ limit }} caracteres o m\xE1s.","et":"V\xE4\xE4rtus on liiga l\xFChike. Pikkus peaks  olema {{ limit }} t\xE4hem\xE4rki v\xF5i rohkem.","eu":"Balio hau motzegia da. Karaktere {{ limit }} gutxienez eduki beharko luke.|Balio hau motzegia da. Gutxienez {{ limit }} karaktere eduki beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u06CC\u0634 \u0627\u0632 \u0627\u0646\u062F\u0627\u0632\u0647 \u06A9\u0648\u062A\u0627\u0647 \u0627\u0633\u062A. \u0628\u0627\u06CC\u062F {{ limit }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u0628\u06CC\u0634\u062A\u0631 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F.|\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u06CC\u0634 \u0627\u0632 \u0627\u0646\u062F\u0627\u0632\u0647 \u06A9\u0648\u062A\u0627\u0647 \u0627\u0633\u062A. \u0628\u0627\u06CC\u062F {{ limit }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u0628\u06CC\u0634\u062A\u0631 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F.","fi":"Liian lyhyt sy\xF6te. Sy\xF6tteen tulee olla v\xE4hint\xE4\xE4n yhden merkin.|Liian lyhyt sy\xF6te. Sy\xF6tteen tulee olla v\xE4hint\xE4\xE4n {{ limit }} merkki\xE4.","gl":"Este valor \xE9 demasiado curto. Deber\xEDa ter {{ limit }} car\xE1cter ou m\xE1is.|Este valor \xE9 demasiado corto. Deber\xEDa ter {{ limit }} caracteres ou m\xE1is.","he":"\u05D4\u05E2\u05E8\u05DA \u05E7\u05E6\u05E8 \u05DE\u05D9\u05D3\u05D9. \u05D4\u05D5\u05D0 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05E4\u05D7\u05D5\u05EA.|\u05D4\u05E2\u05E8\u05DA \u05E7\u05E6\u05E8 \u05DE\u05D9\u05D3\u05D9. \u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD \u05DC\u05E4\u05D7\u05D5\u05EA.","hr":"Ova vrijednost je prekratka. Treba imati {{ limit }} znakova ili vi\u0161e.","hu":"Ez az \xE9rt\xE9k t\xFAl r\xF6vid. Legal\xE1bb {{ limit }} karaktert kell tartalmaznia.|Ez az \xE9rt\xE9k t\xFAl r\xF6vid. Legal\xE1bb {{ limit }} karaktert kell tartalmaznia.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u056F\u0561\u0580\u0573 \u0567: \u054A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B {{ limit }} \u056F\u0561\u0574 \u0561\u057E\u0565\u056C\u056B \u057D\u056B\u0574\u057E\u0578\u056C\u0576\u0565\u0580\u0589","id":"Nilai ini terlalu pendek. Seharusnya {{ limit }} karakter atau lebih.","it":"Questo valore \xE8 troppo corto. Dovrebbe essere almeno di {{ limit }} carattere.|Questo valore \xE8 troppo corto. Dovrebbe essere almeno di {{ limit }} caratteri.","ja":"\u5024\u304C\u77ED\u3059\u304E\u307E\u3059\u3002{{ limit }}\u6587\u5B57\u4EE5\u4E0A\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBs Zeecheketten ass ze kuerz. Se sollt mindestens {{ limit }} Zeechen hunn.","lt":"Per ma\u017Eas simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.|Per ma\u017Eas simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.|Per ma\u017Eas simboli\u0173 skai\u010Dius. Turi susidaryti i\u0161 {{ limit }} arba daugiau simboli\u0173.","lv":"\u0160\u012Bs v\u0113rt\u012Bbas garums ir 0 rakstz\u012Bmju.|\u0160\u012B v\u0113rt\u012Bba ir p\u0101r\u0101k \u012Bsa. Tai b\u016Btu j\u0101b\u016Bt ne maz\u0101k k\u0101 {{ limit }} rakstz\u012Bmei.|\u0160\u012B v\u0113rt\u012Bba ir p\u0101r\u0101k \u012Bsa. Tai b\u016Btu j\u0101b\u016Bt ne maz\u0101k k\u0101 {{ limit }} rakstz\u012Bm\u0113m.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435.|\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0431\u043E\u0433\u0438\u043D\u043E \u0431\u0430\u0439\u043D\u0430. {{ limit }} \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u044D\u0441\u0432\u044D\u043B \u0438\u0445 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u101C\u103D\u1014\u103A\u1010\u102D\u102F\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B \u104E\u1004\u103A\u1038\u1010\u103D\u1004\u103A\u1021\u1000\u1039\u1001\u101B\u102C {{limit}} (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1011\u102D\u102F\u1037\u1011\u1000\u103A\u1015\u102D\u102F\u101B\u103E\u102D\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B | \u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1010\u102D\u102F\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B \u104E\u1004\u103A\u1038\u1010\u103D\u1004\u103A\u1021\u1000\u1039\u1001\u101B\u102C {{limit}} \u101C\u102F\u1036\u1038\u1014\u103E\u1004\u1037\u103A\u1021\u1011\u1000\u103A\u101B\u103E\u102D\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Verdien er for kort. Den m\xE5 ha {{ limit }} tegn eller flere.","nl":"Deze waarde is te kort. Hij moet tenminste {{ limit }} teken bevatten.|Deze waarde is te kort. Hij moet tenminste {{ limit }} tekens bevatten.","nn":"Verdien er for kort. Den m\xE5 ha {{ limit }} teikn eller fleire.","no":"Verdien er for kort. Den m\xE5 ha {{ limit }} tegn eller flere.","pl":"Ta warto\u015B\u0107 jest zbyt kr\xF3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\xF3w.|Ta warto\u015B\u0107 jest zbyt kr\xF3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\xF3w.|Ta warto\u015B\u0107 jest zbyt kr\xF3tka. Powinna mie\u0107 {{ limit }} lub wi\u0119cej znak\xF3w.","pt":"O valor \xE9 muito curto. Deveria de ter {{ limit }} caractere ou mais.|O valor \xE9 muito curto. Deveria de ter {{ limit }} caracteres ou mais.","pt_BR":"Este valor \xE9 muito curto. Deve ter {{ limit }} caractere ou mais.|Este valor \xE9 muito curto. Deve ter {{ limit }} caracteres ou mais.","ro":"Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} caracter.|Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} caractere.|Aceast\u0103 valoare este prea scurt\u0103. Ar trebui s\u0103 aib\u0103 minim {{ limit }} de caractere.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043A\u043E\u0440\u043E\u0442\u043A\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443 \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043A\u043E\u0440\u043E\u0442\u043A\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043A\u043E\u0440\u043E\u0442\u043A\u043E\u0435. \u0414\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.","sk":"T\xE1to hodnota je pr\xEDli\u0161 kr\xE1tka. Mus\xED obsahova\u0165 minim\xE1lne {{ limit }} znak.|T\xE1to hodnota je pr\xEDli\u0161 kr\xE1tka. Mus\xED obsahova\u0165 minim\xE1lne {{ limit }} znaky.|T\xE1to hodnota je pr\xEDli\u0161 kr\xE1tka. Minim\xE1lny po\u010Det znakov je {{ limit }}.","sl":"Ta vrednost je prekratka. Morala bi imeti {{ limit }} znak ali ve\u010D.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znaka ali ve\u010D.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znake ali ve\u010D.|Ta vrednost je prekratka. Morala bi imeti {{ limit }} znakov ali ve\u010D.","sq":"Kjo vler\xEB \xEBsht\xEB shum\xEB e shkurt\xEBr. Duhet t\xEB p\xEBrmbaj {{ limit }} karakter ose m\xEB shum\xEB.|Kjo vler\xEB \xEBsht\xEB shum\xEB e shkurt\xEBr. Duhet t\xEB p\xEBrmbaj {{ limit }} karaktere ose m\xEB shum\xEB.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043B\u0438 \u0432\u0438\u0448\u0435.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u0438\u043B\u0438 \u0432\u0438\u0448\u0435.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u043A\u0430. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u0438\u043B\u0438 \u0432\u0438\u0448\u0435.","sr_Latn":"Vrednost je prekratka. Trebalo bi da ima {{ limit }} karakter ili vi\u0161e.|Vrednost je prekratka. Trebalo bi da ima {{ limit }} karaktera ili vi\u0161e.|Vrednost je prekratka. Trebalo bi da ima {{ limit }} karaktera ili vi\u0161e.","sv":"V\xE4rdet \xE4r f\xF6r kort. Det ska ha {{ limit }} tecken eller mer.|V\xE4rdet \xE4r f\xF6r kort. Det ska ha {{ limit }} tecken eller mer.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E2A\u0E31\u0E49\u0E19\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35 {{ limit }} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E2B\u0E23\u0E37\u0E2D\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang halaga nito ay masyadong maliit. Ito ay dapat na {{ limit }} karakter o marami pa.|Ang halaga nito ay masyadong maliit. Ito ay dapat na {{ limit }} mga karakter o marami pa.","tr":"Bu de\u011Fer \xE7ok k\u0131sa. {{ limit }} karakter veya daha fazla olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443 \u0430\u0431\u043E \u0431\u0456\u043B\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0430\u0431\u043E \u0431\u0456\u043B\u044C\u0448\u0435.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0435. \u041F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0435 {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C \u0430\u0431\u043E \u0431\u0456\u043B\u044C\u0448\u0435.","ur":"\u062D\u0631\u0648\u0641 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u06D2 \u0686\u0627\u06C1\u0626\u06CC\u06BA {{ limit }} \u062D\u0631\u0641 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u06CC \u06C1\u06D2\u06D4 \u0627\u0633 \u0645\u06CC\u06BA{{ limit }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0628\u06C1\u062A \u0645\u062E\u062A\u0635\u0631 \u06C1\u06D2\u06D4 \u0627\u0633 \u0645\u06CC\u06BA","uz":"Qiymat juda qisqa. {{ limit }} ta yoki undan ortiq belgidan iborat bo'lishi kerak.|Qiymat juda qisqa. {{ limit }} yoki undan ko'p belgidan iborat bo'lishi kerak","vi":"Gi\xE1 tr\u1ECB qu\xE1 ng\u1EAFn. Ph\u1EA3i h\u01A1n ho\u1EB7c b\u1EB1ng {{ limit }} k\xED t\u1EF1.|Gi\xE1 tr\u1ECB qu\xE1 ng\u1EAFn. Ph\u1EA3i h\u01A1n ho\u1EB7c b\u1EB1ng {{ limit }} k\xED t\u1EF1.","zh_CN":"\u5B57\u7B26\u4E32\u592A\u77ED\uFF0C\u957F\u5EA6\u4E0D\u53EF\u5C11\u4E8E {{ limit }} \u4E2A\u5B57\u7B26\u3002","zh_TW":"\u5B57\u4E32\u592A\u77ED\uFF0C\u9577\u5EA6\u4E0D\u53EF\u5C11\u65BC {{ limit }} \u500B\u5B57\u5143\u3002"}}};var THIS_VALUE_SHOULD_NOT_BE_BLANK={"id":"This value should not be blank.","translations":{"validators":{"fr":"Cette valeur ne doit pas \xEAtre vide.","af":"Hierdie waarde moet nie leeg wees nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0644\u0627 \u062A\u0643\u0648\u0646 \u0641\u0627\u0631\u063A\u0629.","az":"Bu d\u0259y\u0259r bo\u015F olmamal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043F\u0443\u0441\u0442\u044B\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u0430.","bs":"Ova vrijednost ne bi trebalo da bude prazna.","ca":"Aquest valor no hauria d'estar buit.","cs":"Tato hodnota nesm\xED b\xFDt pr\xE1zdn\xE1.","cy":"Ni ddylai'r gwerth hwn fod yn wag.","da":"V\xE6rdien m\xE5 ikke v\xE6re blank.","de":"Dieser Wert sollte nicht leer sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03B5\u03BD\u03AE.","en":"This value should not be blank.","es":"Este valor no deber\xEDa estar vac\xEDo.","et":"V\xE4\xE4rtus ei tohiks olla t\xFChi.","eu":"Balio hau ez litzateke hutsik egon behar.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0646\u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F.","fi":"Kentt\xE4 ei voi olla tyhj\xE4.","gl":"Este valor non deber\xEDa estar baleiro.","he":"\u05D4\u05E2\u05E8\u05DA \u05DC\u05D0 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7.","hr":"Ova vrijednost ne bi trebala biti prazna.","hu":"Ez az \xE9rt\xE9k nem lehet \xFCres.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u057A\u0565\u057F\u0584 \u0567 \u0564\u0561\u057F\u0561\u0580\u056F \u056C\u056B\u0576\u056B\u0589","id":"Nilai ini tidak boleh kosong.","it":"Questo valore non dovrebbe essere vuoto.","ja":"\u7A7A\u3067\u3042\u3063\u3066\u306F\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt net eidel sinn.","lt":"\u0160i reik\u0161m\u0117 negali b\u016Bti tu\u0161\u010Dia.","lv":"\u0160ai v\u0113rt\u012Bbai nav j\u0101b\u016Bt tuk\u0161ai.","mk":"\u041E\u0432\u0430 \u043F\u043E\u043B\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u043E.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0445\u043E\u043E\u0441\u043E\u043D \u0431\u0430\u0439\u0436 \u0431\u043E\u043B\u043E\u0445\u0433\u04AF\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1000\u103D\u1000\u103A\u101C\u1015\u103A\u1019\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u1015\u102B\u104B","nb":"Verdien kan ikke v\xE6re blank.","nl":"Deze waarde mag niet leeg zijn.","nn":"Verdien kan ikkje vere blank.","no":"Verdien kan ikke v\xE6re blank.","pl":"Ta warto\u015B\u0107 nie powinna by\u0107 pusta.","pt":"Este valor n\xE3o deveria ser branco/vazio.","pt_BR":"Este valor n\xE3o deve ser vazio.","ro":"Aceast\u0103 valoare nu ar trebui s\u0103 fie goal\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 vyplnen\xE1.","sl":"Ta vrednost ne bi smela biti prazna.","sq":"Kjo vler\xEB nuk duhet t\xEB jet\xEB e zbraz\xEBt.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043F\u0440\u0430\u0437\u043D\u0430.","sr_Latn":"Vrednost ne bi trebalo da bude prazna.","sv":"V\xE4rdet kan inte vara tomt.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E27\u0E48\u0E32\u0E07","tl":"Ang halaga na ito ay dapat na may laman.","tr":"Bu de\u011Fer bo\u015F b\u0131rak\u0131lmamal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043F\u0443\u0441\u0442\u0438\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062E\u0627\u0644\u06CC \u0646\u06C1\u06CC\u06BA \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymatni bo'sh kirtish mumkin emas.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p \u0111\u1EC3 tr\u1ED1ng.","zh_CN":"\u8BE5\u53D8\u91CF\u4E0D\u5E94\u4E3A\u7A7A\u3002","zh_TW":"\u8A72\u8B8A\u6578\u4E0D\u61C9\u70BA\u7A7A\u767D\u3002"}}};var THIS_VALUE_SHOULD_NOT_BE_NULL={"id":"This value should not be null.","translations":{"validators":{"fr":"Cette valeur ne doit pas \xEAtre nulle.","af":"Hierdie waarde moet nie nul wees nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0644\u0627 \u062A\u0643\u0648\u0646 \u0641\u0627\u0631\u063A\u0629.","az":"Bu d\u0259y\u0259r bo\u015F olmamal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C null.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 null.","bs":"Ova vrijednost ne bi trebalo da bude null.","ca":"Aquest valor no hauria de ser null.","cs":"Tato hodnota nesm\xED b\xFDt null.","cy":"Ni ddylai'r gwerth hwn fod yn null.","da":"V\xE6rdien m\xE5 ikke v\xE6re tom (null).","de":"Dieser Wert sollte nicht null sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B7\u03B4\u03B5\u03BD\u03B9\u03BA\u03AE.","en":"This value should not be null.","es":"Este valor no deber\xEDa ser nulo.","et":"V\xE4\xE4rtus ei tohiks olla 'null'.","eu":"Balio hau ez litzateke nulua izan behar.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0646\u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei voi olla null.","gl":"Este valor non deber\xEDa ser null.","he":"\u05D4\u05E2\u05E8\u05DA \u05DC\u05D0 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7.","hr":"Ova vrijednost ne bi trebala biti null.","hu":"Ez az \xE9rt\xE9k nem lehet null.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B null\u0589","id":"Nilai ini tidak boleh 'null'.","it":"Questo valore non dovrebbe essere nullo.","ja":"null\u3067\u3042\u3063\u3066\u306F\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst sollt keen Null-W\xE4ert sinn.","lt":"\u0160i reik\u0161m\u0117 negali b\u016Bti null.","lv":"\u0160ai v\u0113rt\u012Bbai nav j\u0101b\u016Bt null.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043D\u0438\u0448\u0442\u043E (null).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 null \u0431\u0430\u0439\u0436 \u0431\u043E\u043B\u043E\u0445\u0433\u04AF\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A null \u1019\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u1015\u102B\u104B","nb":"Verdien kan ikke v\xE6re tom (null).","nl":"Deze waarde mag niet null zijn.","nn":"Verdien kan ikkje vere tom (null).","no":"Verdien kan ikke v\xE6re tom (null).","pl":"Ta warto\u015B\u0107 nie powinna by\u0107 nullem.","pt":"Este valor n\xE3o deveria ser nulo.","pt_BR":"Este valor n\xE3o deve ser nulo.","ro":"Aceast\u0103 valoare nu ar trebui s\u0103 fie nul\u0103 (null).","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C null.","sk":"T\xE1to hodnota by nemala by\u0165 null.","sl":"Ta vrednost ne bi smela biti nedefinirana (null).","sq":"Kjo vler\xEB nuk duhet t\xEB jet\xEB null.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 null.","sr_Latn":"Vrednost ne bi trebalo da bude prazna.","sv":"V\xE4rdet kan inte vara null.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32 null","tl":"Meron dapt itong halaga.","tr":"Bu de\u011Fer bo\u015F b\u0131rak\u0131lmamal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 null.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062E\u0627\u0644\u06CC \u0646\u06C1\u06CC\u06BA \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat null bo'lmasligi kerak.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p r\u1ED7ng.","zh_CN":"\u8BE5\u53D8\u91CF\u4E0D\u5E94\u4E3A null \u3002","zh_TW":"\u8A72\u503C\u4E0D\u61C9\u70BA null \u3002"}}};var THIS_VALUE_SHOULD_BE_NULL={"id":"This value should be null.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre nulle.","af":"Hierdie waarde moet nul wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0641\u0627\u0631\u063A\u0629.","az":"Bu d\u0259y\u0259r bo\u015F olmamal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C null.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 null.","bs":"Ova vrijednost bi trebalo da bude null.","ca":"Aquest valor hauria de ser null.","cs":"Tato hodnota mus\xED b\xFDt null.","cy":"Dylai'r gwerth fod yn null.","da":"V\xE6rdien skal v\xE6re tom (null).","de":"Dieser Wert sollte null sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B7\u03B4\u03B5\u03BD\u03B9\u03BA\u03AE.","en":"This value should be null.","es":"Este valor deber\xEDa ser nulo.","et":"V\xE4\xE4rtus peaks olema 'null'.","eu":"Balio hau nulua izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062E\u0627\u0644\u06CC \u0628\u0627\u0634\u062F.","fi":"Annetun arvon tulee olla null.","gl":"Este valor deber\xEDa ser null.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05E8\u05D9\u05E7.","hr":"Ova vrijednost treba biti null.","hu":"Ennek az \xE9rt\xE9knek nullnak kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B null\u0589","id":"Nilai ini harus 'null'.","it":"Questo valore dovrebbe essere nullo.","ja":"null\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst sollt keen Null-W\xE4ert sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti null.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt null.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043D\u0438\u0448\u0442\u043E (null).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 null \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A null \u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re tom (null).","nl":"Deze waarde moet null zijn.","nn":"Verdien m\xE5 vere tom (null).","no":"Verdien skal v\xE6re tom (null).","pl":"Ta warto\u015B\u0107 powinna by\u0107 nullem.","pt":"Este valor deveria ser nulo.","pt_BR":"Este valor deve ser nulo.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie nul\u0103 (null).","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C null.","sk":"T\xE1to hodnota by mala by\u0165 null.","sl":"Ta vrednost bi morala biti nedefinirana (null).","sq":"Kjo vler\xEB duhet t\xEB jet\xEB null.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 null.","sr_Latn":"Vrednost bi trebalo da bude prazna.","sv":"V\xE4rdet ska vara null.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32 null","tl":"Wala dapat itong halaga.","tr":"Bu de\u011Fer bo\u015F b\u0131rak\u0131lmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 null.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062E\u0627\u0644\u06CC \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat null bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i r\u1ED7ng.","zh_CN":"\u8BE5\u53D8\u91CF\u5E94\u4E3A\u7A7A null \u3002","zh_TW":"\u8A72\u503C\u61C9\u70BA null \u3002"}}};var THIS_VALUE_IS_NOT_VALID={"id":"This value is not valid.","translations":{"validators":{"fr":"Cette valeur n'est pas valide.","af":"Hierdie waarde is nie geldig nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043D\u0435 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430.","bs":"Ova vrijednost nije ispravna.","ca":"Aquest valor no \xE9s v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE1.","cy":"Nid yw'r gwerth hwn yn ddilys.","da":"V\xE6rdien er ikke gyldig.","de":"Dieser Wert ist nicht g\xFCltig.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7.","en":"This value is not valid.","es":"Este valor no es v\xE1lido.","et":"V\xE4\xE4rtus on vigane.","eu":"Balio hau ez da egokia.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Virheellinen arvo.","gl":"Este valor non \xE9 v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravna.","hu":"Ez az \xE9rt\xE9k nem \xE9rv\xE9nyes.","hy":"\u0531\u0576\u057E\u0561\u057E\u0565\u0580 \u0561\u0580\u056A\u0565\u0584\u0589","id":"Nilai ini tidak sah.","it":"Questo valore non \xE8 valido.","ja":"\u6709\u52B9\u306A\u5024\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass net g\xEBlteg.","lt":"Netinkama reik\u0161m\u0117.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bga.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ugyldig.","nl":"Deze waarde is niet geldig.","nn":"Verdien er ikkje gyldig.","no":"Verdien er ugyldig.","pl":"Ta warto\u015B\u0107 jest nieprawid\u0142owa.","pt":"Este valor n\xE3o \xE9 v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 v\xE1lido.","ro":"Aceast\u0103 valoare nu este valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"T\xE1to hodnota nie je platn\xE1.","sl":"Ta vrednost ni veljavna.","sq":"Kjo vler\xEB nuk \xEBsht\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430.","sr_Latn":"Vrednost nije validna.","sv":"V\xE4rdet \xE4r inte giltigt.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi balido ang halagang ito.","tr":"Bu de\u011Fer ge\xE7erli de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Qiymat noto'g'ri.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u53D8\u91CF\u503C\u65E0\u6548 \u3002","zh_TW":"\u7121\u6548\u7684\u6578\u503C \u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_TIME={"id":"This value is not a valid time.","translations":{"validators":{"fr":"Cette valeur n'est pas une heure valide.","af":"Hierdie waarde is nie 'n geldige tyd nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0648\u0642\u062A \u0635\u062D\u064A\u062D.","az":"Bu d\u0259y\u0259r do\u011Fru bir saat deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C \u0447\u0430\u0441\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","bs":"Ova vrijednost nije ispravno vrijeme.","ca":"Aquest valor no \xE9s una hora v\xE0lida.","cs":"Tato hodnota nen\xED platn\xFD \u010Dasov\xFD \xFAdaj.","cy":"Nid yw'r gwerth hwn yn amser dilys.","da":"V\xE6rdien er ikke et gyldigt klokkesl\xE6t.","de":"Dieser Wert entspricht keiner g\xFCltigen Zeitangabe.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03CE\u03C1\u03B1.","en":"This value is not a valid time.","es":"Este valor no es una hora v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne aeg.","eu":"Balio hau ez da ordu egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0632\u0645\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei ole kelvollinen kellonaika.","gl":"Este valor non \xE9 unha hora v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05D6\u05DE\u05DF \u05EA\u05E7\u05D9\u05DF.","hr":"Ova vrijednost nije ispravno vrijeme.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes id\u0151pont.","hy":"\u053A\u0561\u0574\u0561\u0576\u0561\u056F\u056B \u0561\u0580\u056A\u0565\u0584\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Nilai ini bukan merupakan waktu yang sah.","it":"Questo valore non \xE8 un'ora valida.","ja":"\u6709\u52B9\u306A\u6642\u523B\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kenger g\xEBlteger Z\xE4itangab.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra laikas.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bgs laiks.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0446\u0430\u0433 \u0442\u04E9\u0440\u04E9\u043B \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1021\u1001\u103B\u102D\u1014\u103A\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig tid.","nl":"Deze waarde is geen geldige tijd.","nn":"Verdien er ikkje ei gyldig tidseining.","no":"Verdien er ikke en gyldig tid.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym czasem.","pt":"Este valor n\xE3o \xE9 uma hora v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma hora v\xE1lida.","ro":"Aceast\u0103 valoare nu reprezint\u0103 o or\u0103 valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"Tato hodnota nem\xE1 spr\xE1vny form\xE1t \u010Dasu.","sl":"Ta vrednost ni veljaven \u010Das.","sq":"Kjo vler\xEB nuk \xEBsht\xEB koh\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","sr_Latn":"Vrednost nije validno vreme.","sv":"V\xE4rdet \xE4r inte en giltig tid.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E40\u0E27\u0E25\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong oras.","tr":"Bu de\u011Fer do\u011Fru bir saat de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0447\u0430\u0441\u0443 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0648\u0642\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Vaqt noto'g'ri.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 th\u1EDDi gian h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684\u65F6\u95F4\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684\u6642\u9593\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_URL={"id":"This value is not a valid URL.","translations":{"validators":{"fr":"Cette valeur n'est pas une URL valide.","af":"Hierdie waarde is nie 'n geldige URL nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0631\u0627\u0628\u0637 \u0627\u0644\u0643\u062A\u0631\u0648\u0646\u0649 \u0635\u062D\u064A\u062D.","az":"Bu d\u0259y\u0259r do\u011Fru bir URL de\u011Fil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C URL-\u0430\u0434\u0440\u0430\u0441\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D URL.","bs":"Ova vrijednost nije ispravan URL.","ca":"Aquest valor no \xE9s una URL v\xE0lida.","cs":"Tato hodnota nen\xED platn\xE1 URL adresa.","cy":"Nid yw'r gwerth hwn yn URL dilys.","da":"V\xE6rdien er ikke en gyldig URL.","de":"Dieser Wert ist keine g\xFCltige URL.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF URL.","en":"This value is not a valid URL.","es":"Este valor no es una URL v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne URL.","eu":"Balio hau ez da baliabideen kokatzaile uniforme (URL) egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0634\u0627\u0645\u0644 \u06CC\u06A9 URL \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Annettu arvo ei ole kelvollinen URL-osoite.","gl":"Este valor non \xE9 unha URL v\xE1lida.","he":"\u05D6\u05D0\u05EA \u05D0\u05D9\u05E0\u05D4 \u05DB\u05EA\u05D5\u05D1\u05EA \u05D0\u05EA\u05E8 \u05EA\u05E7\u05D9\u05E0\u05D4.","hr":"Ova vrijednost nije ispravan URL.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes URL.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568  URL  \u0579\u0567\u0589","id":"Nilai ini bukan URL yang sah.","it":"Questo valore non \xE8 un URL valido.","ja":"\u6709\u52B9\u306AURL\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg URL.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkamas interneto adresas.","lv":"\u0160\u012B v\u0113rt\u012Bba ir neder\u012Bgs URL.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D URL.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 URL \u0431\u0430\u0439\u043D\u0430 .","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C URL \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig URL.","nl":"Deze waarde is geen geldige URL.","nn":"Verdien er ikkje ein gyldig URL.","no":"Verdien er ikke en gyldig URL.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym adresem URL.","pt":"Este valor n\xE3o \xE9 um URL v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 uma URL v\xE1lida.","ro":"Aceast\u0103 valoare nu reprezint\u0103 un URL (link) valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C URL.","sk":"T\xE1to hodnota nie je platnou URL adresou.","sl":"Ta vrednost ni veljaven URL.","sq":"Kjo vler\xEB nuk \xEBsht\xEB URL e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D URL.","sr_Latn":"Vrednost nije validan URL.","sv":"V\xE4rdet \xE4r inte en giltig URL.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07 URL \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi ito isang balidong URL.","tr":"Bu de\u011Fer do\u011Fru bir URL de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F URL \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 URL \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A","uz":"URL noto'g'ri","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 \u0111\u1ECBa ch\u1EC9 URL h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684 URL \u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684 URL \u3002"}}};var THE_TWO_VALUES_SHOULD_BE_EQUAL={"id":"The two values should be equal.","translations":{"validators":{"fr":"Les deux valeurs doivent \xEAtre identiques.","af":"Die twee waardes moet gelyk wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u062A\u0627\u0646 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646\u0627 \u0645\u062A\u0633\u0627\u0648\u064A\u062A\u0627\u0646.","az":"\u0130ki d\u0259y\u0259r eyni olmal\u0131d\u0131r.","be":"\u0410\u0431\u043E\u0434\u0432\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0456 \u043F\u0430\u0432\u0456\u043D\u043D\u044B \u0431\u044B\u0446\u044C \u0430\u0434\u043D\u043E\u043B\u044C\u043A\u0430\u0432\u044B\u043C\u0456.","bg":"\u0414\u0432\u0435\u0442\u0435 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0438 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0430\u0442 \u0440\u0430\u0432\u043D\u0438.","bs":"Obje vrijednosti bi trebalo da budu jednake.","ca":"Els dos valors haurien de ser iguals.","cs":"Tyto dv\u011B hodnoty mus\xED b\xFDt stejn\xE9.","cy":"Rhaid i'r ddau werth fod yn gyfystyr a'u gilydd.","da":"De to v\xE6rdier skal v\xE6re ens.","de":"Die beiden Werte sollten identisch sein.","el":"\u039F\u03B9 \u03B4\u03CD\u03BF \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AF\u03B4\u03B9\u03B5\u03C2.","en":"The two values should be equal.","es":"Los dos valores deber\xEDan ser iguales.","et":"V\xE4\xE4rtused peaksid olema v\xF5rdsed.","eu":"Bi balioak berdinak izan beharko lirateke.","fa":"\u062F\u0648 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u0627 \u06CC\u06A9\u062F\u06CC\u06AF\u0631 \u0628\u0631\u0627\u0628\u0631 \u0628\u0627\u0634\u0646\u062F.","fi":"Kahden annetun arvon tulee olla samat.","gl":"Os dous valores deber\xEDan ser iguais.","he":"\u05E9\u05E0\u05D9 \u05D4\u05E2\u05E8\u05DB\u05D9\u05DD \u05E6\u05E8\u05D9\u05DB\u05D9\u05DD \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05D5\u05D5\u05D9\u05DD.","hr":"Obje vrijednosti trebaju biti jednake.","hu":"A k\xE9t \xE9rt\xE9knek azonosnak kell lennie.","hy":"\u0535\u0580\u056F\u0578\u0582 \u0561\u0580\u056A\u0565\u0584\u0576\u0565\u0580\u0568 \u057A\u0565\u057F\u0584 \u0567 \u0576\u0578\u0582\u0575\u0576\u0568 \u056C\u056B\u0576\u0565\u0576\u0589","id":"Isi keduanya harus sama.","it":"I due valori dovrebbero essere uguali.","ja":"2\u3064\u306E\u5024\u304C\u540C\u3058\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"B\xE9id W\xE4erter sollten identesch sinn.","lt":"Abi reik\u0161m\u0117s turi b\u016Bti identi\u0161kos.","lv":"Ab\u0101m v\u0113rt\u012Bb\u0101m j\u0101b\u016Bt vien\u0101dam.","mk":"\u0414\u0432\u0435\u0442\u0435 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0435 \u0435\u0434\u043D\u0430\u043A\u0432\u0438.","mn":"\u0425\u043E\u0451\u0440 \u0443\u0442\u0433\u0443\u0443\u0434 \u0438\u0436\u0438\u043B \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1014\u103E\u1005\u103A\u1001\u102F\u101E\u100A\u103A \u1010\u1030\u100A\u102E\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdiene skal v\xE6re identiske.","nl":"De twee waarden moeten gelijk zijn.","nn":"Dei to verdiane m\xE5 vere like.","no":"Verdiene skal v\xE6re identiske.","pl":"Obie warto\u015Bci powinny by\u0107 r\xF3wne.","pt":"Os dois valores deveriam ser iguais.","pt_BR":"Os dois valores devem ser iguais.","ro":"Cele dou\u0103 valori ar trebui s\u0103 fie egale.","ru":"\u041E\u0431\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u044B \u0431\u044B\u0442\u044C \u043E\u0434\u0438\u043D\u0430\u043A\u043E\u0432\u044B\u043C\u0438.","sk":"Tieto dve hodnoty by mali by\u0165 rovnak\xE9.","sl":"Ti dve vrednosti bi morali biti enaki.","sq":"K\xEBto dy vlera duhet t\xEB jen\xEB t\xEB barabarta.","sr_Cyrl":"\u041E\u0431\u0435 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0443 \u0458\u0435\u0434\u043D\u0430\u043A\u0435.","sr_Latn":"Obe vrednosti bi trebalo da budu jednake.","sv":"De tv\xE5 v\xE4rdena m\xE5ste vara lika.","th":"\u0E04\u0E48\u0E32\u0E17\u0E31\u0E49\u0E07\u0E2A\u0E2D\u0E07\u0E04\u0E48\u0E32\u0E04\u0E27\u0E23\u0E08\u0E30\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E19","tl":"Ang dalwang halaga ay dapat magkapareha.","tr":"\u0130ki de\u011Fer e\u015Fit olmal\u0131d\u0131r.","uk":"\u041E\u0431\u0438\u0434\u0432\u0430 \u0437\u0430\u043D\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0456 \u0431\u0443\u0442\u0438 \u043E\u0434\u0438\u043D\u0430\u043A\u043E\u0432\u0438\u043C\u0438.","ur":"\u062F\u0648\u0646\u0648\u06BA \u0648\u064A\u0644\u064A\u0648\u0630 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u0626\u06CC\u06BA","uz":"Ikkala qiymat ham bir xil bo'lishi kerak.","vi":"Hai gi\xE1 tr\u1ECB ph\u1EA3i b\u1EB1ng nhau.","zh_CN":"\u8FD9\u4E24\u4E2A\u53D8\u91CF\u7684\u503C\u5E94\u8BE5\u76F8\u7B49\u3002","zh_TW":"\u9019\u5169\u500B\u8B8A\u6578\u7684\u503C\u61C9\u8A72\u76F8\u7B49\u3002"}}};var THE_FILE_IS_TOO_LARGE_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX={"id":"The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.","translations":{"validators":{"fr":"Le fichier est trop volumineux. Sa taille ne doit pas d\xE9passer {{ limit }} {{ suffix }}.","af":"Die l\xEAer is te groot. Toegelaat maksimum grootte is {{ limit }} {{ suffix }}.","ar":"\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064A\u0631 \u062C\u062F\u0627. \u0627\u0642\u0635\u0649 \u0645\u0633\u0627\u062D\u0647 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627 {{ limit }} {{ suffix }}.","az":"Fayl \xE7ox b\xF6y\xFCkd\xFCr. \u0130caz\u0259 veril\u0259n \u0259n b\xF6y\xFCk fayl \xF6l\xE7\xFCs\xFC {{ limit }} {{ suffix }}.","be":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456. \u041C\u0430\u043A\u0441\u0456\u043C\u0430\u043B\u044C\u043D\u0430 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B \u043F\u0430\u043C\u0435\u0440 {{ limit }} {{ suffix }}.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C. \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438\u044F\u0442 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u0435\u043D \u0440\u0430\u0437\u043C\u0435\u0440 \u0435 {{ limit }} {{ suffix }}.","bs":"Ova datoteka je prevelika. Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","ca":"L'arxiu \xE9s massa gran. El tamany m\xE0xim perm\xE9s \xE9s {{ limit }} {{ suffix }}.","cs":"Soubor je p\u0159\xEDli\u0161 velk\xFD. Maxim\xE1ln\xED povolen\xE1 velikost souboru je {{ limit }} {{ suffix }}.","cy":"Mae'r ffeil yn rhy fawr. Yr uchafswm \xE2 ganiateir yw {{ limit }} {{ suffix }}.","da":"Filen er for stor. Den maksimale st\xF8rrelse er {{ limit }} {{ suffix }}.","de":"Die Datei ist zu gro\xDF. Die maximal zul\xE4ssige Gr\xF6\xDFe betr\xE4gt {{ limit }} {{ suffix }}.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF. \u03A4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ limit }} {{ suffix }}.","en":"The file is too large. Allowed maximum size is {{ limit }} {{ suffix }}.","es":"El archivo es demasiado grande. El tama\xF1o m\xE1ximo permitido es {{ limit }} {{ suffix }}.","et":"Fail on liiga suur. Maksimaalne lubatud suurus on {{ limit }} {{ suffix }}.","eu":"Fitxategia handiegia da. Baimendutako tamaina handiena {{ limit }} {{ suffix }} da.","fa":"\u0641\u0627\u06CC\u0644 \u0628\u06CC\u0634 \u0627\u0632 \u0627\u0646\u062F\u0627\u0632\u0647 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A. \u0628\u06CC\u0634\u06CC\u0646\u0647 (\u062D\u062F\u0627\u06A9\u062B\u0631) \u0627\u0646\u062F\u0627\u0632\u0647 \u0645\u062C\u0627\u0632 {{ limit }} {{ suffix }} \u0627\u0633\u062A.","fi":"Annettu tiedosto on liian iso. Suurin sallittu tiedostokoko on {{ limit }} {{ suffix }}.","gl":"O arquivo \xE9 demasiado grande. O tama\xF1o m\xE1ximo permitido \xE9 {{ limit }} {{ suffix }}.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9. \u05D4\u05D2\u05D5\u05D3\u05DC \u05D4\u05DE\u05E8\u05D1\u05D9 \u05D4\u05DE\u05D5\u05EA\u05E8 \u05D4\u05D5\u05D0 {{ limit }} {{ suffix }}.","hr":"Ova datoteka je prevelika. Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","hu":"A f\xE1jl t\xFAl nagy. A megengedett maxim\xE1lis m\xE9ret: {{ limit }} {{ suffix }}.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567: \u0544\u0561\u0584\u057D\u056B\u0574\u0561\u056C \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u0565\u056C\u056B \u0579\u0561\u0583\u057D\u0568 {{ limit }} {{ suffix }} \u0567\u0589","id":"Ukuran berkas terlalu besar. Ukuran maksimum yang diizinkan adalah {{ limit }} {{ suffix }}.","it":"Il file \xE8 troppo grande. La dimensione massima \xE8 {{ limit }} {{ suffix }}.","ja":"\u30D5\u30A1\u30A4\u30EB\u306E\u30B5\u30A4\u30BA\u304C\u5927\u304D\u3059\u304E\u307E\u3059\u3002\u6709\u52B9\u306A\u6700\u5927\u30B5\u30A4\u30BA\u306F{{ limit }} {{ suffix }}\u3067\u3059\u3002","lb":"De fichier ass ze grouss. D\xE9i maximal Gr\xE9isst dierf {{ limit }} {{ suffix }} net depass\xE9ieren.","lt":"Byla yra per didel\u0117. Maksimalus dydis yra {{ limit }} {{ suffix }}.","lv":"Fails ir p\u0101r\u0101k liels. At\u013Cautais maksim\u0101lais izm\u0113rs ir {{ limit }} {{ suffix }}.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C\u0430. \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0433\u043E\u043B\u0435\u043C\u0438\u043D\u0430 \u0435 {{ limit }} {{ suffix }}.","mn":"\u0424\u0430\u0439\u043B \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430. \u0417\u04E9\u0432\u0448\u04E9\u04E9\u0440\u04E9\u0433\u0434\u04E9\u0445 \u0434\u044D\u044D\u0434 \u0445\u044D\u043C\u0436\u044D\u044D \u043D\u044C {{ limit }} {{ suffix }} \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u101E\u100A\u103A \u1021\u101C\u103D\u1014\u103A\u1000\u103C\u102E\u1038\u101E\u100A\u103A\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u100A\u1037\u103A\u1021\u1019\u103B\u102C\u1038\u1006\u102F\u1036\u1038\u1016\u102D\u102F\u1004\u103A\u1021\u101B\u103D\u101A\u103A\u1021\u1005\u102C\u1038\u101E\u100A\u103A {{ limit }} {{ suffix }} \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Filen er for stor. Den maksimale st\xF8rrelsen er {{ limit }} {{ suffix }}.","nl":"Het bestand is te groot. Toegestane maximum grootte is {{ limit }} {{ suffix }}.","nn":"Fila er for stor. Den maksimale storleiken er {{ limit }} {{ suffix }}.","no":"Filen er for stor. Den maksimale st\xF8rrelsen er {{ limit }} {{ suffix }}.","pl":"Plik jest za du\u017Cy. Maksymalny dozwolony rozmiar to {{ limit }} {{ suffix }}.","pt":"O arquivo \xE9 muito grande. O tamanho m\xE1ximo permitido \xE9 de {{ limit }} {{ suffix }}.","pt_BR":"O arquivo \xE9 muito grande. O tamanho m\xE1ximo permitido \xE9 de {{ limit }} {{ suffix }}.","ro":"Fi\u0219ierul este prea mare. M\u0103rimea maxim\u0103 permis\u0103 este {{ limit }} {{ suffix }}.","ru":"\u0424\u0430\u0439\u043B \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439. \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0440\u0430\u0437\u043C\u0435\u0440 {{ limit }} {{ suffix }}.","sk":"S\xFAbor je pr\xEDli\u0161 ve\u013Ek\xFD. Maxim\xE1lna povolen\xE1 ve\u013Ekos\u0165 je {{ limit }} {{ suffix }}.","sl":"Datoteka je prevelika. Najve\u010Dja dovoljena velikost je {{ limit }} {{ suffix }}.","sq":"Ky file \xEBsht\xEB shum\xEB i madh. Madh\xEBsia maksimale e lejuar \xEBsht\xEB {{ limit }} {{ suffix }}.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430. \u041D\u0430\u0458\u0432\u0435\u045B\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0432\u0435\u043B\u0438\u0447\u0438\u043D\u0430 \u0458\u0435 {{ limit }} {{ suffix }}.","sr_Latn":"Datoteka je prevelika. Najve\u0107a dozvoljena veli\u010Dina je {{ limit }} {{ suffix }}.","sv":"Filen \xE4r f\xF6r stor. Till\xE5ten maximal storlek \xE4r {{ limit }} {{ suffix }}.","th":"\u0E02\u0E19\u0E32\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E19\u0E32\u0E14\u0E43\u0E2B\u0E0D\u0E48\u0E44\u0E14\u0E49\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19 {{ limit }} {{ suffix }}","tl":"Ang file ay masyadong malaki. Ang pinapayagan halaga lamang ay {{ limit}} {{ suffix }}.","tr":"Dosya \xE7ok b\xFCy\xFCk. \u0130zin verilen en b\xFCy\xFCk dosya boyutu {{ limit }} {{ suffix }}.","uk":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0438\u0439. \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0438\u0439 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u0439 \u0440\u043E\u0437\u043C\u0456\u0440 {{ limit }} {{ suffix }}.","ur":"{{ suffix }} {{ limit }} \u0641\u0627\u0626\u0644 \u0628\u06C1\u062A \u0628\u0691\u06CC \u06C1\u06D2\u06D4 \u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u0633\u0627\u0626\u0632 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u06C1\u06D2","uz":"Fayl hajmi katta. Maksimal ruxsat berilgan hajim {{ limit }} {{ suffix }}.","vi":"T\u1EADp tin qu\xE1 l\u1EDBn. K\xEDch th\u01B0\u1EDBc t\u1ED1i \u0111a cho ph\xE9p l\xE0 {{ limit }} {{ suffix }}.","zh_CN":"\u6587\u4EF6\u592A\u5927\uFF0C\u6587\u4EF6\u5927\u5C0F\u4E0D\u53EF\u4EE5\u8D85\u8FC7 {{ limit }} {{ suffix }}\u3002 ","zh_TW":"\u6A94\u6848\u592A\u5927\uFF0C\u6A94\u6848\u5927\u5C0F\u4E0D\u53EF\u4EE5\u8D85\u904E {{ limit }} {{ suffix }}\u3002 "}}};var THE_FILE_IS_TOO_LARGE={"id":"The file is too large.","translations":{"validators":{"fr":"Le fichier est trop volumineux.","af":"Die l\xEAer is te groot.","ar":"\u0627\u0644\u0645\u0644\u0641 \u0643\u0628\u064A\u0631 \u062C\u062F\u0627.","az":"Fayl \xE7ox b\xF6y\xFCkd\xFCr.","be":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C.","bs":"Ova datoteka je prevelika.","ca":"L'arxiu \xE9s massa gran.","cs":"Soubor je p\u0159\xEDli\u0161 velk\xFD.","cy":"Mae'r ffeil yn rhy fawr.","da":"Filen er for stor.","de":"Die Datei ist zu gro\xDF.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF.","en":"The file is too large.","es":"El archivo es demasiado grande.","et":"Fail on liiga suur.","eu":"Fitxategia handiegia da.","fa":"\u0641\u0627\u06CC\u0644 \u0628\u06CC\u0634 \u0627\u0632 \u0627\u0646\u062F\u0627\u0632\u0647 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A.","fi":"Tiedosto on liian iso.","gl":"O arquivo \xE9 demasiado grande.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9.","hr":"Ova datoteka je prevelika.","hu":"A f\xE1jl t\xFAl nagy.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567\u0589","id":"Ukuran berkas terlalu besar.","it":"Il file \xE8 troppo grande.","ja":"\u30D5\u30A1\u30A4\u30EB\u306E\u30B5\u30A4\u30BA\u304C\u5927\u304D\u3059\u304E\u307E\u3059\u3002","lb":"De Fichier ass ze grouss.","lt":"Byla per didel\u0117.","lv":"Fails ir p\u0101r\u0101k liels.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C\u0430.","mn":"\u0424\u0430\u0439\u043B \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u101E\u100A\u103A \u1021\u101C\u103D\u1014\u103A\u1000\u103C\u102E\u1038\u101E\u100A\u103A\u104B","nb":"Filen er for stor.","nl":"Het bestand is te groot.","nn":"Fila er for stor.","no":"Filen er for stor.","pl":"Plik jest za du\u017Cy.","pt":"O ficheiro \xE9 muito grande.","pt_BR":"O arquivo \xE9 muito grande.","ro":"Fi\u0219ierul este prea mare.","ru":"\u0424\u0430\u0439\u043B \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439.","sk":"S\xFAbor je pr\xEDli\u0161 ve\u013Ek\xFD.","sl":"Datoteka je prevelika.","sq":"Ky file \xEBsht\xEB shum\xEB i madh.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430.","sr_Latn":"Datoteka je prevelika.","sv":"Filen \xE4r f\xF6r stor.","th":"\u0E02\u0E19\u0E32\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B","tl":"Ang file na ito ay masyadong malaki.","tr":"Dosya \xE7ok b\xFCy\xFCk.","uk":"\u0424\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0438\u0439.","ur":"\u0641\u0627\u0626\u0644 \u0628\u06C1\u062A \u0628\u0691\u06CC \u06C1\u06D2","uz":"Fayl hajmi katta.","vi":"T\u1EADp tin qu\xE1 l\u1EDBn.","zh_CN":"\u6587\u4EF6\u592A\u5927\u3002","zh_TW":"\u6A94\u6848\u592A\u5927\u3002"}}};var THE_FILE_COULD_NOT_BE_UPLOADED={"id":"The file could not be uploaded.","translations":{"validators":{"fr":"Le t\xE9l\xE9chargement de ce fichier est impossible.","af":"Die l\xEAer kan nie opgelaai word nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0627\u0633\u062A\u0642\u0628\u0627\u0644 \u0627\u0644\u0645\u0644\u0641.","az":"Fayl y\xFCkl\u0259n\u0259bilmir.","be":"\u041D\u0435\u043C\u0430\u0433\u0447\u044B\u043C\u0430 \u0437\u0430\u043F\u0430\u043C\u043F\u0430\u0432\u0430\u0446\u044C \u0444\u0430\u0439\u043B.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043A\u0430\u0447\u0435\u043D.","bs":"Ova datoteka ne mo\u017Ee biti prenijeta (uploaded).","ca":"No es pot pujar l'arxiu.","cs":"Soubor se nepoda\u0159ilo nahr\xE1t.","cy":"Methwyd ag uwchlwytho'r ffeil.","da":"Filen kunne ikke uploades.","de":"Die Datei konnte nicht hochgeladen werden.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B4\u03B5 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B1\u03BD\u03AD\u03B2\u03B5\u03B9.","en":"The file could not be uploaded.","es":"No se pudo subir el archivo.","et":"Faili ei saa \xFCles laadida.","eu":"Ezin izan da fitxategia igo.","fa":"\u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC \u0641\u0627\u06CC\u0644 \u0628\u0627 \u0634\u06A9\u0633\u062A \u0645\u0648\u0627\u062C\u0647 \u06AF\u0631\u062F\u06CC\u062F.","fi":"Tiedoston siirto ep\xE4onnistui.","gl":"No se puido cargar o arquivo.","he":"\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E2\u05DC\u05D5\u05EA \u05D0\u05EA \u05D4\u05E7\u05D5\u05D1\u05E5.","hr":"Ova datoteka ne mo\u017Ee biti prenesena.","hu":"A f\xE1jl nem t\xF6lthet\u0151 fel.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u056B \u056F\u0561\u0580\u0578\u0572 \u0562\u0565\u057C\u0576\u057E\u0565\u056C\u0589","id":"Berkas tidak dapat diunggah.","it":"Il file non pu\xF2 essere caricato.","ja":"\u30D5\u30A1\u30A4\u30EB\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002","lb":"De Fichier konnt net eropgeluede ginn.","lt":"Byla negali b\u016Bti \u012Fkelta.","lv":"Failu nevar\u0113ja aug\u0161upiel\u0101d\u0113t.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0434\u0438\u0433\u043D\u0430\u0442\u0430.","mn":"\u0424\u0430\u0439\u043B upload \u0445\u0438\u0439\u0433\u0434\u0441\u044D\u043D\u0433\u04AF\u0439.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u1000\u102D\u102F\u1010\u1004\u103A\u104D\u1019\u101B\u1015\u102B\u104B","nb":"Filen kunne ikke lastes opp.","nl":"Het bestand kon niet worden ge\xFCpload.","nn":"Fila kunne ikkje bli lasta opp.","no":"Filen kunne ikke lastes opp.","pl":"Plik nie m\xF3g\u0142 by\u0107 wgrany.","pt":"N\xE3o foi poss\xEDvel carregar o ficheiro.","pt_BR":"O arquivo n\xE3o pode ser enviado.","ro":"Fi\u0219ierul nu a putut fi \xEEnc\u0103rcat.","ru":"\u0424\u0430\u0439\u043B \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D.","sk":"S\xFAbor sa nepodarilo nahra\u0165.","sl":"Datoteke ni bilo mogo\u010De nalo\u017Eiti.","sq":"Ky file nuk mund t\xEB ngarkohet.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043E\u0442\u043F\u0440\u0435\u043C\u0459\u0435\u043D\u0430.","sr_Latn":"Datoteka ne mo\u017Ee biti otpremljena.","sv":"Filen kunde inte laddas upp.","th":"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49","tl":"Ang file na ito ay hindi ma-upload.","tr":"Dosya y\xFCklenemiyor.","uk":"\u0424\u0430\u0439\u043B \u043D\u0435 \u043C\u043E\u0436\u043B\u0438\u0432\u043E \u0437\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0438\u0442\u0438.","ur":"\u0641\u0627\u0626\u0644 \u0627\u067E \u0644\u0648\u0688 \u0646\u06C1\u06CC\u06BA \u06C1\u0648 \u0633\u06A9\u06CC","uz":"Faylni yuklab bo'lmadi.","vi":"T\u1EADp tin kh\xF4ng th\u1EC3 t\u1EA3i l\xEAn.","zh_CN":"\u65E0\u6CD5\u4E0A\u4F20\u6B64\u6587\u4EF6\u3002","zh_TW":"\u7121\u6CD5\u4E0A\u50B3\u6B64\u6A94\u6848\u3002"}}};var THIS_VALUE_SHOULD_BE_A_VALID_NUMBER={"id":"This value should be a valid number.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre un nombre.","af":"Hierdie waarde moet 'n geldige nommer wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0631\u0642\u0645.","az":"Bu d\u0259y\u0259r r\u0259q\u0259m olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043B\u0456\u043A\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u043E\u043C\u0435\u0440.","bs":"Ova vrijednost bi trebalo da bude ispravan broj.","ca":"Aquest valor hauria de ser un nombre v\xE0lid.","cs":"Tato hodnota mus\xED b\xFDt \u010D\xEDslo.","cy":"Dylai'r gwerth hwn fod yn rif dilys.","da":"V\xE6rdien skal v\xE6re et gyldigt tal.","de":"Dieser Wert sollte eine g\xFCltige Zahl sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03BD\u03B1\u03C2 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2.","en":"This value should be a valid number.","es":"Este valor deber\xEDa ser un n\xFAmero v\xE1lido.","et":"V\xE4\xE4rtus peaks olema korrektne number.","eu":"Balio hau zenbaki egoki bat izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06CC\u06A9 \u0639\u062F\u062F \u0645\u0639\u062A\u0628\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla numero.","gl":"Este valor deber\xEDa ser un n\xFAmero v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05E1\u05E4\u05E8 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost treba biti ispravan broj.","hu":"Ennek az \xE9rt\xE9knek \xE9rv\xE9nyes sz\xE1mnak kell lennie.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0569\u056B\u057E\u0589","id":"Nilai ini harus angka yang sah.","it":"Questo valore dovrebbe essere un numero.","ja":"\u6709\u52B9\u306A\u6570\u5B57\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt eng g\xEBlteg Zuel sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti skai\u010Dius.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt der\u012Bgam skaitlim.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0431\u0440\u043E\u0458.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0437\u04E9\u0432\u0445\u04E9\u043D \u0442\u043E\u043E \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u1036\u1015\u102B\u1010\u103A\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re et gyldig tall.","nl":"Deze waarde moet een geldig getal zijn.","nn":"Verdien m\xE5 vere eit gyldig tal.","no":"Verdien skal v\xE6re et gyldig tall.","pl":"Ta warto\u015B\u0107 powinna by\u0107 prawid\u0142ow\u0105 liczb\u0105.","pt":"Este valor deveria ser um n\xFAmero v\xE1lido.","pt_BR":"Este valor deve ser um n\xFAmero v\xE1lido.","ro":"Aceast\u0103 valoare nu reprezint\u0103 un num\u0103r valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0447\u0438\u0441\u043B\u043E\u043C.","sk":"T\xE1to hodnota by mala by\u0165 \u010D\xEDslo.","sl":"Ta vrednost bi morala biti veljavna \u0161tevilka.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB num\xEBr i vlefsh\xEBm.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0431\u0440\u043E\u0458.","sr_Latn":"Vrednost bi trebalo da bude validan broj.","sv":"V\xE4rdet ska vara ett giltigt nummer.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halaga nito ay dapat na wastong numero.","tr":"Bu de\u011Fer ge\xE7erli bir rakam olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u043C \u0447\u0438\u0441\u043B\u043E\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0646\u0645\u0628\u0631 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat raqam bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i l\xE0 con s\u1ED1.","zh_CN":"\u8BE5\u503C\u5E94\u8BE5\u4E3A\u6709\u6548\u7684\u6570\u5B57\u3002","zh_TW":"\u8A72\u503C\u61C9\u8A72\u70BA\u6709\u6548\u7684\u6578\u5B57\u3002"}}};var THIS_FILE_IS_NOT_A_VALID_IMAGE={"id":"This file is not a valid image.","translations":{"validators":{"fr":"Ce fichier n'est pas une image valide.","af":"Hierdie l\xEAer is nie 'n geldige beeld nie.","ar":"\u0647\u0630\u0627 \u0627\u0644\u0645\u0644\u0641 \u0644\u064A\u0633 \u0635\u0648\u0631\u0629 \u0635\u062D\u064A\u062D\u0629.","az":"Bu fayl d\xFCzg\xFCn bir \u015F\u0259kil deyil.","be":"\u0413\u044D\u0442\u044B \u0444\u0430\u0439\u043B \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0439 \u0432\u044B\u044F\u0432\u0430\u0439.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435.","bs":"Ova datoteka nije validna slika.","ca":"L'arxiu no \xE9s una imatge v\xE0lida.","cs":"Tento soubor nen\xED obr\xE1zek.","cy":"Nid yw'r ffeil hon yn ddelwedd dilys.","da":"Filen er ikke gyldigt billede.","de":"Diese Datei ist kein g\xFCltiges Bild.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B4\u03B5\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03B5\u03AF \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1.","en":"This file is not a valid image.","es":"El archivo no es una imagen v\xE1lida.","et":"Fail ei ole korrektne pilt.","eu":"Fitxategi hau ez da irudi egoki bat.","fa":"\u0627\u06CC\u0646 \u0641\u0627\u06CC\u0644 \u06CC\u06A9 \u062A\u0635\u0648\u06CC\u0631 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Tiedosto ei ole kelvollinen kuva.","gl":"O arquivo non \xE9 unha imaxe v\xE1lida.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05D4\u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05EA\u05DE\u05D5\u05E0\u05D4 \u05EA\u05E7\u05D9\u05E0\u05D4.","hr":"Ova datoteka nije ispravna slika.","hu":"Ez a f\xE1jl nem egy \xE9rv\xE9nyes k\xE9p.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0576\u056F\u0561\u0580\u056B \u057E\u0561\u057E\u0565\u0580 \u0586\u0578\u0580\u0574\u0561\u057F \u0579\u0567\u0589","id":"Berkas ini tidak termasuk citra.","it":"Questo file non \xE8 una immagine valida.","ja":"\u30D5\u30A1\u30A4\u30EB\u304C\u753B\u50CF\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse Fichier ass kee g\xEBltegt Bild.","lt":"Byla n\u0117ra paveiksl\u0117lis.","lv":"\u0160is fails nav der\u012Bgs att\u0113ls.","mk":"\u041E\u0432\u0430\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u043B\u0438\u043A\u0430.","mn":"\u0424\u0430\u0439\u043B \u0437\u0443\u0440\u0430\u0433 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1013\u102B\u1010\u103A\u1015\u102F\u1036\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Denne filen er ikke et gyldig bilde.","nl":"Dit bestand is geen geldige afbeelding.","nn":"Fila er ikkje eit gyldig bilete.","no":"Denne filen er ikke et gyldig bilde.","pl":"Ten plik nie jest obrazem.","pt":"Este ficheiro n\xE3o \xE9 uma imagem.","pt_BR":"Este arquivo n\xE3o \xE9 uma imagem v\xE1lida.","ro":"Acest fi\u0219ier nu este o imagine valid\u0103.","ru":"\u0424\u0430\u0439\u043B \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C \u0444\u043E\u0440\u043C\u0430\u0442\u043E\u043C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F.","sk":"Tento s\xFAbor nie je obr\xE1zok.","sl":"Ta datoteka ni veljavna slika.","sq":"Ky file nuk \xEBsht\xEB imazh i vlefsh\xEBm.","sr_Cyrl":"\u041E\u0432\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u043B\u0438\u043A\u0430.","sr_Latn":"Ova datoteka nije validna slika.","sv":"Filen \xE4r ingen giltig bild.","th":"\u0E44\u0E1F\u0E25\u0E4C\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E44\u0E1F\u0E25\u0E4C\u0E23\u0E39\u0E1B\u0E20\u0E32\u0E1E","tl":"Ang file na ito ay hindi wastong imahe.","tr":"Bu dosya ge\xE7erli bir resim de\u011Fildir.","uk":"\u0426\u0435\u0439 \u0444\u0430\u0439\u043B \u043D\u0435 \u0454 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u043C \u0444\u043E\u0440\u043C\u0430\u0442\u043E\u043C \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F.","ur":"\u06CC\u06C1 \u0641\u0627\u0626\u0644 \u062F\u0631\u0633\u062A \u062A\u0635\u0648\u06CC\u0631 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Fayl yaroqli rasm formati emas.","vi":"T\u1EADp tin kh\xF4ng ph\u1EA3i l\xE0 h\xECnh \u1EA3nh h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u6587\u4EF6\u4E0D\u662F\u6709\u6548\u7684\u56FE\u7247\u3002","zh_TW":"\u8A72\u6A94\u6848\u4E0D\u662F\u6709\u6548\u7684\u5716\u7247\u3002"}}};var THIS_IS_NOT_A_VALID_IP_ADDRESS={"id":"This is not a valid IP address.","translations":{"validators":{"fr":"Cette adresse IP n'est pas valide.","af":"Hierdie is nie 'n geldige IP-adres nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0639\u0646\u0648\u0627\u0646 \u0631\u0642\u0645\u0649 \u0635\u062D\u064A\u062D.","az":"Bu d\xFCzg\xFCn bir IP adresi deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C IP-\u0430\u0434\u0440\u0430\u0441\u0430\u043C.","bg":"\u0422\u043E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D IP \u0430\u0434\u0440\u0435\u0441.","bs":"Ovo nije ispravna IP adresa.","ca":"Aix\xF2 no \xE9s una adre\xE7a IP v\xE0lida.","cs":"Toto nen\xED platn\xE1 IP adresa.","cy":"Nid yw hwn yn gyfeiriad IP dilys.","da":"Dette er ikke en gyldig IP-adresse.","de":"Dies ist keine g\xFCltige IP-Adresse.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 IP.","en":"This is not a valid IP address.","es":"Esto no es una direcci\xF3n IP v\xE1lida.","et":"IP aadress pole korrektne.","eu":"Honako hau ez da IP helbide egoki bat.","fa":"\u0627\u06CC\u0646 \u0622\u062F\u0631\u0633 IP \u0645\u0639\u062A\u0628\u0631 \u0646\u06CC\u0633\u062A.","fi":"T\xE4m\xE4 ei ole kelvollinen IP-osoite.","gl":"Isto non \xE9 unha direcci\xF3n IP v\xE1lida.","he":"\u05D6\u05D5 \u05D0\u05D9\u05E0\u05D4 \u05DB\u05EA\u05D5\u05D1\u05EA IP \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Ovo nije ispravna IP adresa.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes IP c\xEDm.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 IP \u0570\u0561\u057D\u0581\u0565 \u0579\u0567\u0589","id":"Ini bukan alamat IP yang sah.","it":"Questo valore non \xE8 un indirizzo IP valido.","ja":"\u6709\u52B9\u306AIP\u30A2\u30C9\u30EC\u30B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst ass keng g\xEBlteg IP-Adress.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkamas IP adresas.","lv":"\u0160\u012B nav der\u012Bga IP adrese.","mk":"\u041E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 IP \u0430\u0434\u0440\u0435\u0441\u0430.","mn":"IP \u0445\u0430\u044F\u0433 \u0437\u04E9\u0432 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u104E\u1004\u103A\u1038\u101E\u100A\u103A\u1010\u101B\u102C\u1038\u101D\u1004\u103A IP \u101C\u102D\u1015\u103A\u1005\u102C\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Dette er ikke en gyldig IP adresse.","nl":"Dit is geen geldig IP-adres.","nn":"Dette er ikkje ei gyldig IP-adresse.","no":"Dette er ikke en gyldig IP adresse.","pl":"To nie jest prawid\u0142owy adres IP.","pt":"Este endere\xE7o de IP n\xE3o \xE9 v\xE1lido.","pt_BR":"Este n\xE3o \xE9 um endere\xE7o de IP v\xE1lido.","ro":"Aceast\u0103 valoare nu este o adres\u0103 IP valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C IP \u0430\u0434\u0440\u0435\u0441\u043E\u043C.","sk":"Toto nie je platn\xE1 IP adresa.","sl":"To ni veljaven IP naslov.","sq":"Kjo adres\xEB IP nuk \xEBsht\xEB e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0418\u041F \u0430\u0434\u0440\u0435\u0441\u0430.","sr_Latn":"Ovo nije validna IP adresa.","sv":"Det h\xE4r \xE4r inte en giltig IP-adress.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07 IP \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ito ay hindi wastong IP address.","tr":"Bu ge\xE7erli bir IP adresi de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435\u043A\u043E\u0440\u0435\u043A\u0442\u043D\u0430 IP \u0430\u0434\u0440\u0435\u0441\u0430.","ur":"\u0627\u06CC\u0688\u0631\u06CC\u0633 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 IP \u06CC\u06C1 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A","uz":"Ip manzil noto'g'ri.","vi":"\u0110\u1ECBa ch\u1EC9 IP kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684IP\u5730\u5740\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684IP\u5730\u5740\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_LANGUAGE={"id":"This value is not a valid language.","translations":{"validators":{"fr":"Cette langue n'est pas valide.","af":"Hierdie waarde is nie 'n geldige taal nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0644\u063A\u0629 \u0635\u062D\u064A\u062D\u0629.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir dil deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C \u043C\u043E\u0432\u0430\u0439.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0435\u0437\u0438\u043A.","bs":"Ova vrijednost nije validan jezik.","ca":"Aquest valor no \xE9s un idioma v\xE0lid.","cs":"Tento jazyk neexistuje.","cy":"Nid yw'r gwerth hwn yn iaith ddilys.","da":"V\xE6rdien er ikke et gyldigt sprog.","de":"Dieser Wert entspricht keiner g\xFCltigen Sprache.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03BC\u03B9\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B3\u03BB\u03CE\u03C3\u03C3\u03B1.","en":"This value is not a valid language.","es":"Este valor no es un idioma v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne keel.","eu":"Balio hau ez da hizkuntza egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0632\u0628\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen kieli.","gl":"Este valor non \xE9 un idioma v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E9\u05E4\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Ova vrijednost nije ispravan jezik.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes nyelv.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 \u056C\u0565\u0566\u0578\u0582 \u0579\u0567\u0589","id":"Nilai ini bukan bahasa yang sah.","it":"Questo valore non \xE8 una lingua valida.","ja":"\u6709\u52B9\u306A\u8A00\u8A9E\u540D\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kenger g\xEBlteger Sprooch.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkama kalba.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bga valoda.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0458\u0430\u0437\u0438\u043A.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 \u0445\u044D\u043B \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1018\u102C\u101E\u102C\u1005\u1000\u102C\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke et gyldig spr\xE5k.","nl":"Deze waarde is geen geldige taal.","nn":"Verdien er ikkje eit gyldig spr\xE5k.","no":"Verdien er ikke et gyldig spr\xE5k.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym j\u0119zykiem.","pt":"Este valor n\xE3o \xE9 uma linguagem v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 um idioma v\xE1lido.","ro":"Aceast\u0103 valoare nu reprezint\u0103 o limb\u0103 corect\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C \u044F\u0437\u044B\u043A\u043E\u043C.","sk":"Tento jazyk neexistuje.","sl":"Ta vrednost ni veljaven jezik.","sq":"Kjo vler\xEB nuk \xEBsht\xEB gjuh\xEB e vlefshme.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0458\u0435\u0437\u0438\u043A.","sr_Latn":"Vrednost nije validan jezik.","sv":"V\xE4rdet \xE4r inte ett giltigt spr\xE5k.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E29\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halaga na ito ay hindi balidong wika.","tr":"Bu de\u011Fer ge\xE7erli bir lisan de\u011Fil.","uk":"\u0426\u0435 \u043D\u0435\u043A\u043E\u0440\u0435\u043A\u0442\u043D\u0430 \u043C\u043E\u0432\u0430.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0632\u0628\u0627\u0646 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Noto'g'ri til.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ng\xF4n ng\u1EEF h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u8BED\u8A00\u540D\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u8A9E\u8A00\u540D\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_LOCALE={"id":"This value is not a valid locale.","translations":{"validators":{"fr":"Ce param\xE8tre r\xE9gional n'est pas valide.","af":"Hierdie waarde is nie 'n geldige land instelling nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0645\u0648\u0642\u0639 \u0635\u062D\u064A\u062D.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir dil deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0439 \u043B\u0430\u043A\u0430\u043B\u043B\u044E.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F.","bs":"Ova vrijednost nije validna regionalna oznaka.","ca":"Aquest valor no \xE9s una localitzaci\xF3 v\xE0lida.","cs":"Tato lokalizace neexistuje.","cy":"Nid yw'r gwerth hwn yn locale dilys.","da":"V\xE6rdien er ikke en gyldig lokalitet.","de":"Dieser Wert entspricht keinem g\xFCltigen Gebietsschema.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC \u03C4\u03BF\u03C0\u03BF\u03B8\u03B5\u03C3\u03AF\u03B1\u03C2.","en":"This value is not a valid locale.","es":"Este valor no es una localizaci\xF3n v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne asukohakeel.","eu":"Balio hau ez da kokapen egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0645\u062D\u0644 (locale) \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen kieli- ja alueasetus (locale).","gl":"Este valor non \xE9 unha localizaci\xF3n v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05D0\u05D6\u05D5\u05E8 \u05EA\u05E7\u05E3.","hr":"Ova vrijednost nije ispravana regionalna oznaka.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes ter\xFCleti be\xE1ll\xEDt\xE1s.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u056B \u0570\u0561\u0576\u0564\u056B\u057D\u0561\u0576\u0578\u0582\u0574 \u057E\u0561\u057E\u0565\u0580 \u057F\u0565\u0572\u0561\u0575\u0576\u0561\u0581\u0578\u0582\u0574\u0589","id":"Nilai ini bukan lokal yang sah.","it":"Questo valore non \xE8 una impostazione regionale valida.","ja":"\u6709\u52B9\u306A\u30ED\u30B1\u30FC\u30EB\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kengem g\xEBltege Gebittsschema.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkama lokal\u0117.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bga lokaliz\u0101cija.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0458\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 \u0431\u0430\u0439\u0440\u0448\u0438\u043B \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1018\u102C\u101E\u102C\u1015\u103C\u1014\u103A\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig lokalitet.","nl":"Deze waarde is geen geldige locale.","nn":"Verdien er ikkje ein gyldig lokalitet (spr\xE5k/region).","no":"Verdien er ikke en gyldig lokalitet.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 lokalizacj\u0105.","pt":"Este valor n\xE3o \xE9 um 'locale' v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 uma localidade v\xE1lida.","ro":"Aceast\u0103 valoare nu reprezint\u0103 un dialect (o limb\u0103) corect.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0439 \u043B\u043E\u043A\u0430\u043B\u044C\u044E.","sk":"T\xE1to lokaliz\xE1cia neexistuje.","sl":"Ta vrednost ni veljavna lokalnost.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nje locale i vlefsh\xEBm.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u043B\u043E\u043A\u0430\u043B.","sr_Latn":"Vrednost nije validna me\u0111unarodna oznaka jezika.","sv":"V\xE4rdet \xE4r inte en giltig plats.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04 (Locale) \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ito ay isang hindi wastong locale na halaga.","tr":"Bu de\u011Fer ge\xE7erli bir yer de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435\u043A\u043E\u0440\u0435\u043A\u0442\u043D\u0430 \u043B\u043E\u043A\u0430\u043B\u0456\u0437\u0430\u0446\u0456\u044F.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0645\u0642\u0627\u0645 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Ushbu qiymat mahalliy qiymat emas.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 m\u1ED9t b\u1EA3n \u0111\u1ECBa \u0111\u1ECBa ph\u01B0\u01A1ng h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u533A\u57DF\u503C\uFF08locale\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u5340\u57DF\u503C\uFF08locale\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_COUNTRY={"id":"This value is not a valid country.","translations":{"validators":{"fr":"Ce pays n'est pas valide.","af":"Hierdie waarde is nie 'n geldige land nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0628\u0644\u062F\u0627 \u0635\u0627\u0644\u062D\u0627.","az":"Bu d\u0259y\u0259r d\xFCzg\xFCn bir \xF6lk\u0259 deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0439 \u043A\u0440\u0430\u0456\u043D\u0430\u0439.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u044A\u0440\u0436\u0430\u0432\u0430.","bs":"Ova vrijednost nije validna dr\u017Eava.","ca":"Aquest valor no \xE9s un pa\xEDs v\xE0lid.","cs":"Tato zem\u011B neexistuje.","cy":"Nid yw'r gwerth hwn yn wlad dilys.","da":"V\xE6rdien er ikke et gyldigt land.","de":"Dieser Wert entspricht keinem g\xFCltigen Land.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03BC\u03B9\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03C7\u03CE\u03C1\u03B1.","en":"This value is not a valid country.","es":"Este valor no es un pa\xEDs v\xE1lido.","et":"V\xE4\xE4rtus pole olemasolev riik.","eu":"Balio hau ez da herrialde egoki bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u06A9\u0634\u0648\u0631 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen maa.","gl":"Este valor non \xE9 un pa\xEDs v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05D0\u05E8\u05E5 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Ova vrijednost nije ispravna dr\u017Eava.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes orsz\xE1g.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0565\u0580\u056F\u056B\u0580\u0589","id":"Nilai ini bukan negara yang sah.","it":"Questo valore non \xE8 una nazione valida.","ja":"\u6709\u52B9\u306A\u56FD\u540D\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht kengem g\xEBltege Land.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkama \u0161alis.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bga valsts.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0437\u0435\u043C\u0458\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0431\u043E\u0434\u0438\u0442 \u0443\u043B\u0441 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u102D\u102F\u1004\u103A\u1004\u1036\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke et gyldig navn p\xE5 land.","nl":"Deze waarde is geen geldig land.","nn":"Verdien er ikkje eit gyldig land.","no":"Verdien er ikke et gyldig navn p\xE5 land.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 nazw\u0105 kraju.","pt":"Este valor n\xE3o \xE9 um Pa\xEDs v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um pa\xEDs v\xE1lido.","ro":"Aceast\u0103 valoare nu este o \u021Bar\u0103 valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0439 \u0441\u0442\u0440\u0430\u043D\u043E\u0439.","sk":"T\xE1to krajina neexistuje.","sl":"Ta vrednost ni veljavna dr\u017Eava.","sq":"Kjo vler\xEB nuk \xEBsht\xEB shtet i vlefsh\xEBm.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0437\u0435\u043C\u0459\u0430.","sr_Latn":"Vrednost nije validna dr\u017Eava.","sv":"V\xE4rdet \xE4r inte ett giltigt land.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"ng halaga na ito ay hindi wastong bansa.","tr":"Bu de\u011Fer ge\xE7erli bir \xFClke de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435\u043A\u043E\u0440\u0435\u043A\u0442\u043D\u0430 \u043A\u0440\u0430\u0457\u043D\u0430.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0645\u0644\u06A9 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Mamlakat qiymati noto'g'ri.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 qu\u1ED1c gia h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u56FD\u5BB6\u540D\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u570B\u5BB6\u540D\u3002"}}};var THIS_VALUE_IS_ALREADY_USED={"id":"This value is already used.","translations":{"validators":{"fr":"Cette valeur est d\xE9j\xE0 utilis\xE9e.","af":"Hierdie waarde word reeds gebruik.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0645\u0633\u062A\u062E\u062F\u0645\u0629 \u0628\u0627\u0644\u0641\u0639\u0644.","az":"Bu d\u0259y\u0259r hal-haz\u0131rda istifad\u0259d\u0259dir.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u045E\u0436\u043E \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u0435\u0446\u0446\u0430.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0432\u0435\u0447\u0435 \u0435 \u0432 \u0443\u043F\u043E\u0442\u0440\u0435\u0431\u0430.","bs":"Ova vrijednost je ve\u0107 upotrebljena.","ca":"Aquest valor ja s'ha utilitzat.","cs":"Tato hodnota je ji\u017E pou\u017E\xEDv\xE1na.","cy":"Mae'r gwerth hwn eisoes yn cael ei ddefnyddio.","da":"V\xE6rdien er allerede i brug.","de":"Dieser Wert wird bereits verwendet.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF\u03C4\u03B1\u03B9 \u03AE\u03B4\u03B7.","en":"This value is already used.","es":"Este valor ya se ha utilizado.","et":"V\xE4\xE4rtust on juba kasutatud.","eu":"Balio hau jadanik erabilia izan da.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0642\u0628\u0644\u0627\u064B \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0634\u062F\u0647 \u0627\u0633\u062A.","fi":"Arvo on jo k\xE4ytetty.","gl":"Este valor xa est\xE1 a ser empregado.","he":"\u05D4\u05E2\u05E8\u05DA \u05DB\u05D1\u05E8 \u05D1\u05E9\u05D9\u05DE\u05D5\u05E9.","hr":"Ova vrijednost je ve\u0107 iskori\u0161tena.","hu":"Ez az \xE9rt\xE9k m\xE1r haszn\xE1latban van.","hy":"\u0531\u0575\u0564 \u0561\u0580\u056A\u0565\u0584\u0576 \u0561\u0580\u0564\u0565\u0576 \u0585\u0563\u057F\u0561\u0563\u0578\u0580\u056E\u057E\u0578\u0582\u0574 \u0567\u0589","id":"Nilai ini sudah digunakan.","it":"Questo valore \xE8 gi\xE0 stato utilizzato.","ja":"\u65E2\u306B\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059\u3002","lb":"D\xEBse W\xE4ert g\xEBtt scho benotzt.","lt":"\u0160i reik\u0161m\u0117 jau yra naudojama.","lv":"\u0160\u012B v\u0113rt\u012Bba jau tiek izmantota.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0432\u0435\u045C\u0435 \u0441\u0435 \u043A\u043E\u0440\u0438\u0441\u0442\u0438.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0430\u043B\u044C \u0445\u044D\u0434\u0438\u0439\u043D\u044D\u044D \u0445\u044D\u0440\u044D\u0433\u043B\u044D\u0433\u0434\u0441\u044D\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1015\u103C\u102E\u1038\u101E\u102C\u1038\u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Verdien er allerede brukt.","nl":"Deze waarde wordt al gebruikt.","nn":"Verdien er allereie i bruk.","no":"Verdien er allerede brukt.","pl":"Ta warto\u015B\u0107 jest ju\u017C wykorzystywana.","pt":"Este valor j\xE1 est\xE1 a ser usado.","pt_BR":"Este valor j\xE1 est\xE1 sendo usado.","ro":"Aceast\u0103 valoare este folosit\u0103 deja.","ru":"\u042D\u0442\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0443\u0436\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F.","sk":"T\xE1to hodnota sa u\u017E pou\u017E\xEDva.","sl":"Ta vrednost je \u017Ee uporabljena.","sq":"Kjo vler\xEB \xEBsht\xEB tashm\xEB n\xEB p\xEBrdorim.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0458\u0435 \u0432\u0435\u045B \u0438\u0441\u043A\u043E\u0440\u0438\u0448\u045B\u0435\u043D\u0430.","sr_Latn":"Vrednost je ve\u0107 iskori\u0161\u0107ena.","sv":"V\xE4rdet anv\xE4nds redan.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E16\u0E39\u0E01\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27","tl":"Ang halaga na ito ay ginamit na.","tr":"Bu de\u011Fer \u015Fu anda kullan\u0131mda.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0432\u0436\u0435 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0454\u0442\u044C\u0441\u044F.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u067E\u06C1\u0644\u06D2 \u06C1\u06CC \u0627\u0633\u062A\u0639\u0645\u0627\u0644 \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06D2","uz":"Ushbu qiymat allaqachon ishlatilgan.","vi":"Gi\xE1 tr\u1ECB \u0111\xE3 \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng.","zh_CN":"\u8BE5\u503C\u5DF2\u7ECF\u88AB\u4F7F\u7528\u3002","zh_TW":"\u8A72\u503C\u5DF2\u7D93\u88AB\u4F7F\u7528\u3002"}}};var THE_SIZE_OF_THE_IMAGE_COULD_NOT_BE_DETECTED={"id":"The size of the image could not be detected.","translations":{"validators":{"fr":"La taille de l'image n'a pas pu \xEAtre d\xE9tect\xE9e.","af":"Die grootte van die beeld kon nie opgespoor word nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0645\u0639\u0631\u0641\u0629 \u062D\u062C\u0645 \u0627\u0644\u0635\u0648\u0631\u0629.","az":"\u015E\u0259klin \xF6l\xE7\xFCs\xFC hesablana bilmir.","be":"\u041D\u0435\u043C\u0430\u0433\u0447\u044B\u043C\u0430 \u0432\u044B\u0437\u043D\u0430\u0447\u044B\u0446\u044C \u043F\u0430\u043C\u0435\u0440 \u0432\u044B\u044F\u0432\u044B.","bg":"\u0420\u0430\u0437\u043C\u0435\u0440\u0430 \u043D\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D.","bs":"Nije mogu\u0107e otkriti veli\u010Dinu ove slike.","ca":"No s'ha pogut determinar la grand\xE0ria de la imatge.","cs":"Nepoda\u0159ily se zjistit rozm\u011Bry obr\xE1zku.","cy":"Methwyd \xE2 darganfod maint y ddelwedd.","da":"St\xF8rrelsen p\xE5 billedet kunne ikke detekteres.","de":"Die Gr\xF6\xDFe des Bildes konnte nicht ermittelt werden.","el":"\u03A4\u03BF \u03BC\u03AD\u03B3\u03B5\u03B8\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B4\u03B5\u03BD \u03AE\u03C4\u03B1\u03BD \u03B4\u03C5\u03BD\u03B1\u03C4\u03CC \u03BD\u03B1 \u03B1\u03BD\u03B9\u03C7\u03BD\u03B5\u03C5\u03B8\u03B5\u03AF.","en":"The size of the image could not be detected.","es":"No se pudo determinar el tama\xF1o de la imagen.","et":"Pildi suurust polnud v\xF5imalik tuvastada.","eu":"Ezin izan da irudiaren tamaina detektatu.","fa":"\u0627\u0646\u062F\u0627\u0632\u0647 \u062A\u0635\u0648\u06CC\u0631 \u0642\u0627\u0628\u0644 \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuvan kokoa ei tunnistettu.","gl":"Non se puido determinar o tama\xF1o da imaxe.","he":"\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05E7\u05D1\u05D5\u05E2 \u05D0\u05EA \u05D2\u05D5\u05D3\u05DC \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4.","hr":"Veli\u010Dina slike se ne mo\u017Ee odrediti.","hu":"A k\xE9p m\xE9ret\xE9t nem lehet meg\xE1llap\xEDtani.","hy":"\u0546\u056F\u0561\u0580\u056B \u0579\u0561\u0583\u057D\u0565\u0580\u0568 \u0579\u057D\u057F\u0561\u0581\u057E\u0565\u0581 \u0578\u0580\u0578\u0577\u0565\u056C\u0589","id":"Ukuran dari citra tidak bisa dideteksi.","it":"La dimensione dell'immagine non pu\xF2 essere determinata.","ja":"\u753B\u50CF\u306E\u30B5\u30A4\u30BA\u304C\u691C\u51FA\u3067\u304D\u307E\u305B\u3093\u3002","lb":"D'Gr\xE9isst vum Bild konnt net detekt\xE9iert ginn.","lt":"Nepavyko nustatyti nuotraukos dyd\u017Eio.","lv":"Nevar noteikt att\u0113la izm\u0113ru.","mk":"\u0413\u043E\u043B\u0435\u043C\u0438\u043D\u0430\u0442\u0430 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0441\u0435 \u0434\u0435\u0442\u0435\u043A\u0442\u0438\u0440\u0430.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u0445\u044D\u043C\u0436\u044D\u044D \u0442\u043E\u0433\u0442\u043E\u043E\u0433\u0434\u043E\u0436 \u0447\u0430\u0434\u0441\u0430\u043D\u0433\u04AF\u0439.","my":"\u1013\u102B\u1010\u103A\u1015\u102F\u1036\u1021\u101B\u103D\u101A\u103A\u1021\u1005\u102C\u1038\u1000\u102D\u102F\u101B\u103E\u102C\u1019\u1010\u103D\u1031\u1037\u1015\u102B\u104B","nb":"Bildest\xF8rrelsen kunne ikke oppdages.","nl":"De grootte van de afbeelding kon niet bepaald worden.","nn":"Storleiken p\xE5 biletet kunne ikkje oppdagast.","no":"Bildest\xF8rrelsen kunne ikke oppdages.","pl":"Nie mo\u017Cna wykry\u0107 rozmiaru obrazka.","pt":"O tamanho da imagem n\xE3o foi detetado.","pt_BR":"O tamanho da imagem n\xE3o pode ser detectado.","ro":"M\u0103rimea imaginii nu a putut fi detectat\u0103.","ru":"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C \u0440\u0430\u0437\u043C\u0435\u0440 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F.","sk":"Nepodarilo sa zisti\u0165 rozmery obr\xE1zku.","sl":"Velikosti slike ni bilo mogo\u010De zaznati.","sq":"Madh\xEBsia e imazhit nuk mund t\xEB zbulohet.","sr_Cyrl":"\u0412\u0435\u043B\u0438\u0447\u0438\u043D\u0430 \u0441\u043B\u0438\u043A\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043E\u0434\u0440\u0435\u0452\u0435\u043D\u0430.","sr_Latn":"Veli\u010Dina slike ne mo\u017Ee biti odre\u0111ena.","sv":"Det gick inte att fastst\xE4lla storleken p\xE5 bilden.","th":"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E15\u0E23\u0E27\u0E08\u0E2A\u0E2D\u0E1A\u0E02\u0E19\u0E32\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E44\u0E14\u0E49","tl":"Ang sukat ng imahe ay hindi madetect.","tr":"Resmin boyutu saptanam\u0131yor.","uk":"\u041D\u0435 \u0432\u0434\u0430\u043B\u043E\u0441\u044F \u0432\u0438\u0437\u043D\u0430\u0447\u0438\u0442\u0438 \u0440\u043E\u0437\u043C\u0456\u0440 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F.","ur":"\u062A\u0635\u0648\u06CC\u0631 \u06A9\u06D2 \u0633\u0627\u0626\u0632 \u06A9\u0627 \u067E\u062A\u06C1 \u0646\u06C1\u06CC\u06BA \u0686\u0644 \u0633\u06A9\u0627","uz":"Rasm o'lchamini aniqlab bo'lmadi.","vi":"K\xEDch th\u01B0\u1EDBc c\u1EE7a h\xECnh \u1EA3nh kh\xF4ng th\u1EC3 x\xE1c \u0111\u1ECBnh.","zh_CN":"\u4E0D\u80FD\u89E3\u6790\u56FE\u7247\u5927\u5C0F\u3002","zh_TW":"\u4E0D\u80FD\u89E3\u6790\u5716\u7247\u5927\u5C0F\u3002"}}};var THE_IMAGE_WIDTH_IS_TOO_BIG_WIDTH_PX_ALLOWED_MAXIMUM_WIDTH_IS_MAX_WIDTH_PX={"id":"The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.","translations":{"validators":{"fr":"La largeur de l'image est trop grande ({{ width }}px). La largeur maximale autoris\xE9e est de {{ max_width }}px.","af":"Die beeld breedte is te groot ({{ width }}px). Toegelaat maksimum breedte is {{ max_width }}px.","ar":"\u0639\u0631\u0636 \u0627\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 ({{ width }}px). \u0627\u0642\u0635\u0649 \u0639\u0631\u0636 \u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648{{ max_width }}px.","az":"\u015E\u0259klin geni\u015Fliyi \xE7ox b\xF6y\xFCkd\xFCr ({{ width }}px). \u0130caz\u0259 veril\u0259n \u0259n b\xF6y\xFCk geni\u015Flik {{ max_width }}px.","be":"\u0413\u044D\u0442\u0430 \u0432\u044B\u044F\u0432\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0430\u044F ({{ width }}px). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0430\u043A\u0441\u0456\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0448\u044B\u0440\u044B\u043D\u044F {{ max_width }}px.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0448\u0438\u0440\u043E\u043A\u043E ({{ width }}px). \u0428\u0438\u0440\u043E\u0447\u0438\u043D\u0430\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C {{ max_width }}px.","bs":"\u0160irina slike je prevelika ({{ width }}px). Najve\u0107a dozvoljena \u0161irina je {{ max_width }}px.","ca":"L'ampl\xE0ria de la imatge \xE9s massa gran ({{ width }}px). L'ampl\xE0ria m\xE0xima permesa s\xF3n {{ max_width }}px.","cs":"Obr\xE1zek je p\u0159\xEDli\u0161 \u0161irok\xFD ({{ width }}px). Maxim\xE1ln\xED povolen\xE1 \u0161\xED\u0159ka obr\xE1zku je {{ max_width }}px.","cy":"Mae lled y ddelwedd yn rhy fawr ({{ width }}px). Y lled mwyaf \xE2 ganiateir yw {{ max_width }}px.","da":"Billedet er for bredt ({{ width }}px). St\xF8rste tilladte bredde er {{ max_width }}px.","de":"Die Bildbreite ist zu gro\xDF ({{ width }}px). Die maximal zul\xE4ssige Breite betr\xE4gt {{ max_width }}px.","el":"\u03A4\u03BF \u03C0\u03BB\u03AC\u03C4\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF ({{ width }}px). \u03A4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03C0\u03BB\u03AC\u03C4\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ max_width }}px.","en":"The image width is too big ({{ width }}px). Allowed maximum width is {{ max_width }}px.","es":"El ancho de la imagen es demasiado grande ({{ width }}px). El ancho m\xE1ximo permitido es de {{ max_width }}px.","et":"Pilt on liiga lai ({{ width }}px). Suurim lubatud laius on {{ max_width }}px.","eu":"Irudiaren zabalera handiegia da ({{ width }}px). Onartutako gehienezko zabalera {{ max_width }}px dira.","fa":"\u0639\u0631\u0636 \u062A\u0635\u0648\u06CC\u0631 \u0628\u0633\u06CC\u0627\u0631 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A({{ width }}px). \u0628\u06CC\u0634\u06CC\u0646\u0647 (\u062D\u062F\u0627\u06A9\u062B\u0631) \u0639\u0631\u0636 \u0645\u062C\u0627\u0632 {{ max_width }}px \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuva on liian leve\xE4 ({{ width }} px). Leveyden tulee olla enint\xE4\xE4n {{ max_width }} px.","gl":"A largura da imaxe \xE9 demasiado grande ({{ width }}px). A largura m\xE1xima permitida son {{ max_width }}px.","he":"\u05E8\u05D5\u05D7\u05D1 \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9 ({{ width }}px). \u05D4\u05E8\u05D5\u05D7\u05D1 \u05D4\u05DE\u05E7\u05E1\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D5\u05D0 {{ max_width }}px.","hr":"\u0160irina slike je prevelika ({{ width }}px). Najve\u0107a dozvoljena \u0161irina je {{ max_width }}px.","hu":"A k\xE9p sz\xE9less\xE9ge t\xFAl nagy ({{ width }}px). A megengedett legnagyobb sz\xE9less\xE9g {{ max_width }}px.","hy":"\u0546\u056F\u0561\u0580\u056B \u056C\u0561\u0575\u0576\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567({{ width }}px). \u0544\u0561\u0584\u057D\u056B\u0574\u0561\u056C \u0579\u0561\u0583\u0576 \u0567 {{ max_width }}px\u0589","id":"Lebar citra terlalu besar ({{ width }}px). Ukuran lebar maksimum adalah {{ max_width }}px.","it":"La larghezza dell'immagine \xE8 troppo grande ({{ width }}px). La larghezza massima \xE8 di {{ max_width }}px.","ja":"\u753B\u50CF\u306E\u5E45\u304C\u5927\u304D\u3059\u304E\u307E\u3059({{ width }}\u30D4\u30AF\u30BB\u30EB)\u3002{{ max_width }}\u30D4\u30AF\u30BB\u30EB\u307E\u3067\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'Breet vum Bild ass ze grouss ({{ width }}px). D\xE9i erlaabte maximal Breet ass {{ max_width }}px.","lt":"Nuotraukos plotis per didelis ({{ width }}px). Maksimalus leid\u017Eiamas plotis yra {{ max_width }}px.","lv":"Att\u0113la platums ir p\u0101r\u0101k liels ({{ width }}px). At\u013Cautais maksim\u0101lais platums ir {{ max_width }}px.","mk":"\u0428\u0438\u0440\u0438\u043D\u0430\u0442\u0430 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u0433\u043E\u043B\u0435\u043C\u0430 ({{ width }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 \u0435 {{ max_width }}px.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u04E9\u0440\u0433\u04E9\u043D \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430 ({{ width }}px). \u04E8\u0440\u0433\u04E9\u043D \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0438\u0445\u0434\u044D\u044D {{ max_width }}px \u0431\u0430\u0439\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0442\u043E\u0439.","my":"\u1015\u102F\u1036\u104F\u1021\u101C\u103B\u102C\u1038\u101E\u100A\u103A \u1000\u103C\u102E\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A ({{ width }}px)\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u100A\u1037\u103A\u1021\u1019\u103B\u102C\u1038\u1006\u102F\u1036\u1038\u1021\u101C\u103B\u102C\u1038\u101E\u100A\u103A {{max_width}}px \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildebredden er for stor ({{ width }} piksler). Tillatt maksimumsbredde er {{ max_width }} piksler.","nl":"De afbeelding is te breed ({{ width }}px). De maximaal toegestane breedte is {{ max_width }}px.","nn":"Biletbreidda er for stor, ({{ width }} pikslar). Tillaten maksimumsbreidde er {{ max_width }} pikslar.","no":"Bildebredden er for stor ({{ width }} piksler). Tillatt maksimumsbredde er {{ max_width }} piksler.","pl":"Szeroko\u015B\u0107 obrazka jest zbyt du\u017Ca ({{ width }}px). Maksymalna dopuszczalna szeroko\u015B\u0107 to {{ max_width }}px.","pt":"A largura da imagem ({{ width }}px) \xE9 muito grande. A largura m\xE1xima da imagem \xE9: {{ max_width }}px.","pt_BR":"A largura da imagem \xE9 muito grande ({{ width }}px). A largura m\xE1xima permitida \xE9 de {{ max_width }}px.","ro":"L\u0103\u021Bimea imaginii este prea mare ({{ width }}px). L\u0103\u021Bimea maxim\u0103 permis\u0103 este de {{ max_width }}px.","ru":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0432\u0435\u043B\u0438\u043A\u0430 ({{ width }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0448\u0438\u0440\u0438\u043D\u0430 {{ max_width }}px.","sk":"Obr\xE1zok je pr\xEDli\u0161 \u0161irok\xFD ({{ width }}px). Maxim\xE1lna povolen\xE1 \u0161\xEDrka obr\xE1zku je {{ max_width }}px.","sl":"\u0160irina slike je pre\u0161iroka ({{ width }}px). Najve\u010Dja dovoljena \u0161irina je {{ max_width }}px.","sq":"Gjer\xEBsia e imazhit \xEBsht\xEB shum\xEB e madhe ({{ width }}px). Gjer\xEBsia maksimale e lejuar \xEBsht\xEB {{ max_width }}px.","sr_Cyrl":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430 ({{ width }}px). \u041D\u0430\u0458\u0435\u045B\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 \u0458\u0435 {{ max_width }}px.","sr_Latn":"\u0160irina slike je prevelika ({{ width }} piksela). Najve\u0107a dozvoljena \u0161irina je {{ max_width }} piksela.","sv":"Bildens bredd \xE4r f\xF6r stor ({{ width }}px). Till\xE5ten maximal bredd \xE4r {{ max_width }}px.","th":"\u0E04\u0E27\u0E32\u0E21\u0E01\u0E27\u0E49\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E40\u0E01\u0E34\u0E19\u0E02\u0E19\u0E32\u0E14 ({{ width }}px) \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E01\u0E27\u0E49\u0E32\u0E07\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 {{ max_width }}px","tl":"Ang lapad ng imahe ay masyadong malaki ({{ width }}px). Ang pinapayagang lapay ay {{ max_width }}px.","tr":"Resmin geni\u015Fli\u011Fi \xE7ok b\xFCy\xFCk ({{ width }}px). \u0130zin verilen en b\xFCy\xFCk geni\u015Flik {{ max_width }}px.","uk":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0430 ({{ width }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 {{ max_width }}px.","ur":"\u06C1\u06D2 {{ max_width }}px \u0627\u062C\u0627\u0632\u062A \u062F\u06CC \u06AF\u0626\u06CC \u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F \u0686\u0648\u0691\u0627\u0626\u06CC ({{ width }}px) \u062A\u0635\u0648\u06CC\u0631 \u06A9\u06CC \u0686\u0648\u0691\u0627\u0626\u06CC \u0628\u06C1\u062A \u0628\u0691\u06CC \u06C1\u06D2","uz":"Rasm kengligi juda katta ({{ width }}px). Maksimal ruxsat etilgan kenglik {{ max_width }}px.","vi":"Chi\u1EC1u r\u1ED9ng c\u1EE7a h\xECnh qu\xE1 l\u1EDBn ({{ width }}px). Chi\u1EC1u r\u1ED9ng t\u1ED1i \u0111a ph\u1EA3i l\xE0 {{ max_width }}px.","zh_CN":"\u56FE\u7247\u592A\u5BBD ({{ width }}px)\uFF0C\u6700\u5927\u5BBD\u5EA6\u4E3A {{ max_width }}px \u3002","zh_TW":"\u5716\u7247\u592A\u5BEC ({{ width }}px)\uFF0C\u6700\u5927\u5BEC\u5EA6\u70BA {{ max_width }}px \u3002"}}};var THE_IMAGE_WIDTH_IS_TOO_SMALL_WIDTH_PX_MINIMUM_WIDTH_EXPECTED_IS_MIN_WIDTH_PX={"id":"The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.","translations":{"validators":{"fr":"La largeur de l'image est trop petite ({{ width }}px). La largeur minimale attendue est de {{ min_width }}px.","af":"Die beeld breedte is te klein ({{ width }}px). Minimum breedte verwag is {{ min_width }}px.","ar":"\u0639\u0631\u0636 \u0627\u0644\u0635\u0648\u0631\u0629 \u0635\u063A\u064A\u0631 \u062C\u062F\u0627 ({{ width }}px). \u0627\u0642\u0644 \u0639\u0631\u0636 \u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648{{ min_width }}px.","az":"\u015E\u0259klin geni\u015Fliyi \xE7ox ki\xE7ikdir ({{ width }}px). \u018Fn az {{ min_width }}px olmal\u0131d\u0131r.","be":"\u0413\u044D\u0442\u0430 \u0432\u044B\u044F\u0432\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u0430\u044F ({{ width }}px). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0448\u044B\u0440\u044B\u043D\u044F {{ min_width }}px.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u0442\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u0430 \u0448\u0438\u0440\u043E\u0447\u0438\u043D\u0430 ({{ width }}px). \u0428\u0438\u0440\u043E\u0447\u0438\u043D\u0430\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0438\u043D\u0438\u043C\u0443\u043C {{ min_width }}px.","bs":"\u0160irina slike je premala ({{ width }}px). Najmanja dozvoljena \u0161irina je {{ min_width }}px.","ca":"L'ampl\xE0ria de la imatge \xE9s massa petita ({{ width }}px). L'ampl\xE0ria m\xEDnima requerida s\xF3n {{ min_width }}px.","cs":"Obr\xE1zek je p\u0159\xEDli\u0161 \xFAzk\xFD ({{ width }}px). Minim\xE1ln\xED \u0161\xED\u0159ka mus\xED b\xFDt {{ min_width }}px.","cy":"Mae lled y ddelwedd yn rhy fach ({{ width }}px). Y lled lleiaf \xE2 ganiateir yw {{ min_width }}px.","da":"Billedet er for smalt ({{ width }}px). Mindste forventede bredde er {{ min_width }}px.","de":"Die Bildbreite ist zu gering ({{ width }}px). Die erwartete Mindestbreite betr\xE4gt {{ min_width }}px.","el":"\u03A4\u03BF \u03C0\u03BB\u03AC\u03C4\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC ({{ width }}px). \u03A4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03C0\u03BB\u03AC\u03C4\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ min_width }}px.","en":"The image width is too small ({{ width }}px). Minimum width expected is {{ min_width }}px.","es":"El ancho de la imagen es demasiado peque\xF1o ({{ width }}px). El ancho m\xEDnimo requerido es {{ min_width }}px.","et":"Pilt on liiga kitsas ({{ width }}px). V\xE4him lubatud laius on {{ min_width }}px.","eu":"Irudiaren zabalera txikiegia da ({{ width }}px). Onartutako gutxieneko zabalera {{ min_width }}px dira.","fa":"\u0639\u0631\u0636 \u062A\u0635\u0648\u06CC\u0631 \u0628\u0633\u06CC\u0627\u0631 \u06A9\u0648\u0686\u06A9 \u0627\u0633\u062A({{ width }}px). \u06A9\u0645\u06CC\u0646\u0647 (\u062D\u062F\u0627\u0642\u0644) \u0639\u0631\u0636 \u0645\u0648\u0631\u062F \u0627\u0646\u062A\u0638\u0627\u0631 {{ min_width }}px \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuva on liian kapea ({{ width }} px). Leveyden tulee olla v\xE4hint\xE4\xE4n {{ min_width }} px.","gl":"A largura da imaxe \xE9 demasiado pequena ({{ width }}px). A largura m\xEDnima requerida son {{ min_width }}px.","he":"\u05E8\u05D5\u05D7\u05D1 \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05E7\u05D8\u05DF \u05DE\u05D3\u05D9 ({{ width }}px). \u05D4\u05E8\u05D5\u05D7\u05D1 \u05D4\u05DE\u05D9\u05E0\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D5\u05D0 {{ min_width }}px.","hr":"\u0160irina slike je premala ({{ width }}px). Najmanja dozvoljena \u0161irina je {{ min_width }}px.","hu":"A k\xE9p sz\xE9less\xE9ge t\xFAl kicsi ({{ width }}px). Az elv\xE1rt legkisebb sz\xE9less\xE9g {{ min_width }}px.","hy":"\u0546\u056F\u0561\u0580\u056B \u056C\u0561\u0575\u0576\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0583\u0578\u0584\u0580 \u0567 ({{ width }}px). \u0544\u056B\u0576\u056B\u0574\u0561\u056C \u0579\u0561\u0583\u0576 \u0567 {{ min_ width }}px\u0589","id":"Lebar citra terlalu kecil ({{ width }}px). Ukuran lebar minimum yang diharapkan adalah {{ min_width }}px.","it":"La larghezza dell'immagine \xE8 troppo piccola ({{ width }}px). La larghezza minima \xE8 di {{ min_width }}px.","ja":"\u753B\u50CF\u306E\u5E45\u304C\u5C0F\u3055\u3059\u304E\u307E\u3059({{ width }}\u30D4\u30AF\u30BB\u30EB)\u3002{{ min_width }}\u30D4\u30AF\u30BB\u30EB\u4EE5\u4E0A\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'Breet vum Bild ass ze kleng ({{ width }}px). D\xE9i minimal Breet ass {{ min_width }}px.","lt":"Nuotraukos plotis per ma\u017Eas ({{ width }}px). Minimalus leid\u017Eiamas plotis yra {{ min_width }}px.","lv":"Att\u0113la platums ir p\u0101r\u0101k mazs ({{ width }}px). Minim\u0101lais sagaid\u0101mais platums ir {{ min_width }}px.","mk":"\u0428\u0438\u0440\u0438\u043D\u0430\u0442\u0430 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u0430\u043B\u0430 ({{ width }}px). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 \u0435 {{ min_width }}px.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u04E9\u0440\u0433\u04E9\u043D \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0436\u0438\u0436\u0438\u0433 \u0431\u0430\u0439\u043D\u0430 ({{ width }}px). \u04E8\u0440\u0433\u04E9\u043D \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 {{ min_width }}px \u0431\u0430\u0439\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0442\u043E\u0439.","my":"\u1015\u102F\u1036\u104F\u1021\u101C\u103B\u102C\u1038\u101E\u100A\u103A \u101E\u1031\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A ({{ width }}px)\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u100A\u1037\u103A\u1021\u1014\u100A\u103A\u1038\u1006\u102F\u1036\u1038\u1021\u101C\u103B\u102C\u1038\u101E\u100A\u103A {{max_width}}px \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildebredden er for liten ({{ width }} piksler). Forventet minimumsbredde er {{ min_width }} piksler.","nl":"De afbeelding is niet breed genoeg ({{ width }}px). De minimaal verwachte breedte is {{ min_width }}px.","nn":"Biletbreidda er for liten, ({{ width }} pikslar). Forventa minimumsbreidde er {{ min_width }} pikslar.","no":"Bildebredden er for liten ({{ width }} piksler). Forventet minimumsbredde er {{ min_width }} piksler.","pl":"Szeroko\u015B\u0107 obrazka jest zbyt ma\u0142a ({{ width }}px). Oczekiwana minimalna szeroko\u015B\u0107 to {{ min_width }}px.","pt":"A largura da imagem ({{ width }}px) \xE9 muito pequena. A largura min\xEDma da imagem \xE9 de: {{ min_width }}px.","pt_BR":"A largura da imagem \xE9 muito pequena ({{ width }}px). A largura m\xEDnima esperada \xE9 de {{ min_width }}px.","ro":"L\u0103\u021Bimea imaginii este prea mic\u0103 ({{ width }}px). L\u0103\u021Bimea minim\u0103 permis\u0103 este de {{ min_width }}px.","ru":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0430 ({{ width }}px). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0448\u0438\u0440\u0438\u043D\u0430 {{ min_width }}px.","sk":"Obr\xE1zok je pr\xEDli\u0161 \xFAzky ({{ width }}px). Minim\xE1lna \u0161\xEDrka obr\xE1zku by mala by\u0165 {{ min_width }}px.","sl":"\u0160irina slike je premajhna ({{ width }}px). Najmanj\u0161a predvidena \u0161irina je {{ min_width }}px.","sq":"Gjer\xEBsia e imazhit \xEBsht\xEB shum\xEB e vog\xEBl ({{ width }}px). Gjer\xEBsia minimale e pritur \xEBsht\xEB {{ min_width }}px.","sr_Cyrl":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u043C\u0430\u043B\u0430 ({{ width }}px). \u041D\u0430\u0458\u043C\u0430\u045A\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 \u0458\u0435 {{ min_width }}px.","sr_Latn":"\u0160irina slike je premala ({{ width }} piksela). Najmanja dozvoljena \u0161irina je {{ min_width }} piksela.","sv":"Bildens bredd \xE4r f\xF6r liten ({{ width }}px). Minsta f\xF6rv\xE4ntade bredd \xE4r {{ min_width }}px.","th":"\u0E04\u0E27\u0E32\u0E21\u0E01\u0E27\u0E49\u0E32\u0E07\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E15\u0E48\u0E33\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B ({{ width }}px) \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E04\u0E27\u0E32\u0E21\u0E01\u0E27\u0E49\u0E32\u0E07\u0E44\u0E21\u0E48\u0E15\u0E48\u0E33\u0E01\u0E27\u0E48\u0E32 {{ min_width }}px","tl":"Ang lapad ng imahe ay masyadong maliit ({{ width }}px). Ang pinakamaliit na pinapayagang lapad ay {{ min_width }}px.","tr":"Resmin geni\u015Fli\u011Fi \xE7ok k\xFC\xE7\xFCk ({{ width }}px). En az {{ min_width }}px olmal\u0131d\u0131r.","uk":"\u0428\u0438\u0440\u0438\u043D\u0430 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0430 ({{ width }}px). \u041C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430 \u0448\u0438\u0440\u0438\u043D\u0430 {{ min_width }}px.","ur":"\u06C1\u06D2 {{ min_width }}px \u06A9\u0645 \u0627\u0632 \u06A9\u0645 \u0686\u0648\u0691\u0627\u0626\u06CC \u0645\u062A\u0648\u0642\u0639({{ width }}px) \u062A\u0635\u0648\u06CC\u0631 \u06A9\u06CC \u0686\u0648\u0691\u0627\u0626\u06CC \u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u06CC \u06C1\u06D2","uz":"Rasm kengligi juda kichkina ({{ width }}px). Minimal ruxsat etilgan kenglik {{ min_width }}px.","vi":"Chi\u1EC1u r\u1ED9ng c\u1EE7a h\xECnh qu\xE1 th\u1EA5p ({{ width }}px). Chi\u1EC1u r\u1ED9ng t\u1ED1i thi\u1EC3u ph\u1EA3i l\xE0 {{ min_width }}px.","zh_CN":"\u56FE\u7247\u5BBD\u5EA6\u4E0D\u591F ({{ width }}px)\uFF0C\u6700\u5C0F\u5BBD\u5EA6\u4E3A {{ min_width }}px \u3002","zh_TW":"\u5716\u7247\u5BEC\u5EA6\u4E0D\u5920 ({{ width }}px)\uFF0C\u6700\u5C0F\u5BEC\u5EA6\u70BA {{ min_width }}px \u3002"}}};var THE_IMAGE_HEIGHT_IS_TOO_BIG_HEIGHT_PX_ALLOWED_MAXIMUM_HEIGHT_IS_MAX_HEIGHT_PX={"id":"The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.","translations":{"validators":{"fr":"La hauteur de l'image est trop grande ({{ height }}px). La hauteur maximale autoris\xE9e est de {{ max_height }}px.","af":"Die beeld hoogte is te groot ({{ height }}px). Toegelaat maksimum hoogte is {{ max_height }}px.","ar":"\u0637\u0648\u0644 \u0627\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 ({{ height }}px). \u0627\u0642\u0635\u0649 \u0637\u0648\u0644 \u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648{{ max_height }}px.","az":"\u015E\u0259klin y\xFCks\u0259kliyi \xE7ox b\xF6y\xFCkd\xFCr ({{ height }}px). \u0130caz\u0259 veril\u0259n \u0259n b\xF6y\xFCk y\xFCks\u0259klik {{ max_height }}px.","be":"\u0413\u044D\u0442\u044B \u0432\u044B\u044F\u0432\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0430\u044F ({{ width }}px). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0430\u043A\u0441\u0456\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0432\u044B\u0448\u044B\u043D\u044F {{ max_width }}px.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C\u0430 \u0432\u0438\u0441\u043E\u0447\u0438\u043D\u0430 ({{ height }}px). \u0412\u0438\u0441\u043E\u0447\u0438\u043D\u0430\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0430\u043A\u0441\u0438\u043C\u0443\u043C {{ max_height }}px.","bs":"Du\u017Eina slike je prevelika ({{ height }}px). Najve\u0107a dozvoljena du\u017Eina je {{ max_height }}px.","ca":"L'altura de la imatge \xE9s massa gran ({{ height }}px). L'altura m\xE0xima permesa s\xF3n {{ max_height }}px.","cs":"Obr\xE1zek je p\u0159\xEDli\u0161 vysok\xFD ({{ height }}px). Maxim\xE1ln\xED povolen\xE1 v\xFD\u0161ka obr\xE1zku je {{ max_height }}px.","cy":"Mae uchder y ddelwedd yn rhy fawr ({{ width }}px). Yr uchder mwyaf \xE2 ganiateir yw {{ max_height }}px.","da":"Billedet er for h\xF8jt ({{ height }}px). St\xF8rste tilladte h\xF8jde er {{ max_height }}px.","de":"Die Bildh\xF6he ist zu gro\xDF ({{ height }}px). Die maximal zul\xE4ssige H\xF6he betr\xE4gt {{ max_height }}px.","el":"\u03A4\u03BF \u03CD\u03C8\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF ({{ height }}px). \u03A4\u03BF \u03BC\u03AD\u03B3\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03CD\u03C8\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ max_height }}px.","en":"The image height is too big ({{ height }}px). Allowed maximum height is {{ max_height }}px.","es":"La altura de la imagen es demasiado grande ({{ height }}px). La altura m\xE1xima permitida es de {{ max_height }}px.","et":"Pilt on liiga pikk ({{ height }}px). Lubatud suurim pikkus on {{ max_height }}px.","eu":"Irudiaren altuera handiegia da ({{ height }}px). Onartutako gehienezko altuera {{ max_height }}px dira.","fa":"\u0627\u0631\u062A\u0641\u0627\u0639 \u062A\u0635\u0648\u06CC\u0631 \u0628\u0633\u06CC\u0627\u0631 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A({{ height }}px). \u0628\u06CC\u0634\u06CC\u0646\u0647 (\u062D\u062F\u0627\u06A9\u062B\u0631) \u0627\u0631\u062A\u0641\u0627\u0639 \u0645\u062C\u0627\u0632 {{ max_height }}px \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuva on liian korkea ({{ width }} px). Korkeuden tulee olla enint\xE4\xE4n {{ max_width }} px.","gl":"A altura da imaxe \xE9 demasiado grande ({{ height }}px). A altura m\xE1xima permitida son {{ max_height }}px.","he":"\u05D2\u05D5\u05D1\u05D4 \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9 ({{ height }}px). \u05D4\u05D2\u05D5\u05D1\u05D4 \u05D4\u05DE\u05E7\u05E1\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D5\u05D0 {{ max_height }}px.","hr":"Visina slike je prevelika ({{ height }}px). Najve\u0107a dozvoljena visina je {{ max_height }}px.","hu":"A k\xE9p magass\xE1ga t\xFAl nagy ({{ height }}px). A megengedett legnagyobb magass\xE1g {{ max_height }}px.","hy":"\u0546\u056F\u0561\u0580\u056B \u0562\u0561\u0580\u0571\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567 ({{ height }}px). \u0544\u0561\u0584\u057D\u056B\u0574\u0561\u056C \u0579\u0561\u0583\u0576 \u0567 {{ max_height }}px\u0589","id":"Tinggi citra terlalu besar ({{ height }}px). Ukuran tinggi maksimum adalah {{ max_height }}px.","it":"L'altezza dell'immagine \xE8 troppo grande ({{ height }}px). L'altezza massima \xE8 di {{ max_height }}px.","ja":"\u753B\u50CF\u306E\u9AD8\u3055\u304C\u5927\u304D\u3059\u304E\u307E\u3059({{ height }}\u30D4\u30AF\u30BB\u30EB)\u3002{{ max_height }}\u30D4\u30AF\u30BB\u30EB\u307E\u3067\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'H\xE9icht vum Bild ass ze grouss ({{ height }}px). D\xE9i erlaabte maximal H\xE9icht ass {{ max_height }}px.","lt":"Nuotraukos auk\u0161tis per didelis ({{ height }}px). Maksimalus leid\u017Eiamas auk\u0161tis yra {{ max_height }}px.","lv":"Att\u0113la augstums ir p\u0101r\u0101k liels ({{ height }}px). At\u013Cautais maksim\u0101lais augstums ir {{ max_height }}px.","mk":"\u0412\u0438\u0441\u0438\u043D\u0430\u0442\u0430 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u0433\u043E\u043B\u0435\u043C\u0430 ({{ height }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0432\u0438\u0441\u0438\u043D\u0430 \u0435 {{ max_height }}px.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u04E9\u043D\u0434\u04E9\u0440 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430 ({{ height }}px). \u04E8\u043D\u0434\u04E9\u0440 \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0438\u0445\u0434\u044D\u044D {{ max_height }}px \u0431\u0430\u0439\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0442\u043E\u0439.","my":"\u1015\u102F\u1036\u104F\u1021\u1014\u1036\u101E\u100A\u103A \u1000\u103C\u102E\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A ({{ height }}px)\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u100A\u1037\u103A\u1021\u1019\u103B\u102C\u1038\u1006\u102F\u1036\u1038\u1021\u1014\u1036\u101E\u100A\u103A {{max_height}}px \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildeh\xF8yden er for stor ({{ height }} piksler). Tillatt maksimumsh\xF8yde er {{ max_height }} piksler.","nl":"De afbeelding is te hoog ({{ height }}px). De maximaal toegestane hoogte is {{ max_height }}px.","nn":"Bileth\xF8gda er for stor, ({{ height }} pikslar). Tillaten maksimumsh\xF8gde er {{ max_height }} pikslar.","no":"Bildeh\xF8yden er for stor ({{ height }} piksler). Tillatt maksimumsh\xF8yde er {{ max_height }} piksler.","pl":"Wysoko\u015B\u0107 obrazka jest zbyt du\u017Ca ({{ height }}px). Maksymalna dopuszczalna wysoko\u015B\u0107 to {{ max_height }}px.","pt":"A altura da imagem ({{ height }}px) \xE9 muito grande. A altura m\xE1xima da imagem \xE9 de: {{ max_height }}px.","pt_BR":"A altura da imagem \xE9 muito grande ({{ height }}px). A altura m\xE1xima permitida \xE9 de {{ max_height }}px.","ro":"\xCEn\u0103l\u021Bimea imaginii este prea mare ({{ height }}px). \xCEn\u0103l\u021Bimea maxim\u0103 permis\u0103 este de {{ max_height }}px.","ru":"\u0412\u044B\u0441\u043E\u0442\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0432\u0435\u043B\u0438\u043A\u0430 ({{ height }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0432\u044B\u0441\u043E\u0442\u0430 {{ max_height }}px.","sk":">Obr\xE1zok je pr\xEDli\u0161 vysok\xFD ({{ height }}px). Maxim\xE1lna povolen\xE1 v\xFD\u0161ka obr\xE1zku je {{ max_height }}px.","sl":"Vi\u0161ina slike je prevelika ({{ height }}px). Najve\u010Dja dovoljena vi\u0161ina je {{ max_height }}px.","sq":"Gjat\xEBsia e imazhit \xEBsht\xEB shum\xEB e madhe ({{ height }}px). Gjat\xEBsia maksimale e lejuar \xEBsht\xEB {{ max_height }}px.","sr_Cyrl":"\u0412\u0438\u0441\u0438\u043D\u0430 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430 ({{ height }}px). \u041D\u0430\u0458\u0435\u045B\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0432\u0438\u0441\u0438\u043D\u0430 \u0458\u0435 {{ max_height }}px.","sr_Latn":"Visina slike je prevelika ({{ height }} piksela). Najve\u0107a dozvoljena visina je {{ max_height }} piksela.","sv":"Bildens h\xF6jd \xE4r f\xF6r stor ({{ height }}px). Till\xE5ten maximal bredd \xE4r {{ max_height }}px.","th":"\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E39\u0E07\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E40\u0E01\u0E34\u0E19\u0E02\u0E19\u0E32\u0E14 ({{ height }}px) \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E2A\u0E39\u0E07\u0E44\u0E14\u0E49\u0E21\u0E32\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14 {{ max_height }}px","tl":"Ang haba ng imahe ay masyadong mataas ({{ height }}px). Ang pinakmataas na haba ay {{ max_height }}px.","tr":"Resmin y\xFCksekli\u011Fi \xE7ok b\xFCy\xFCk ({{ height }}px). \u0130zin verilen en b\xFCy\xFCk y\xFCkseklik {{ max_height }}px.","uk":"\u0412\u0438\u0441\u043E\u0442\u0430 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0430 ({{ height }}px). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430 \u0432\u0438\u0441\u043E\u0442\u0430 {{ max_height }}px.","ur":"\u06C1\u06D2 {{ max_height }}px \u0627\u062C\u0627\u0632\u062A \u062F\u06CC \u06AF\u0626\u06CC \u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F \u0627\u0648\u0646\u0686\u0627\u0626\u06CC ({{ height }}px) \u062A\u0635\u0648\u06CC\u0631 \u06A9\u06CC \u0627\u0648\u0646\u0686\u0627\u0626\u06CC \u0628\u06C1\u062A \u0628\u0691\u06CC \u06C1\u06D2","uz":"Rasm bo'yi juda katta ({{ height }}px). Maksimal ruxsat etilgan balandlik {{ max_height }}px.","vi":"Chi\u1EC1u cao c\u1EE7a h\xECnh qu\xE1 cao ({{ height }}px). Chi\u1EC1u cao t\u1ED1i \u0111a ph\u1EA3i l\xE0 {{ max_height }}px.","zh_CN":"\u56FE\u7247\u592A\u9AD8 ({{ height }}px)\uFF0C\u6700\u5927\u9AD8\u5EA6\u4E3A {{ max_height }}px \u3002","zh_TW":"\u5716\u7247\u592A\u9AD8 ({{ height }}px)\uFF0C\u6700\u5927\u9AD8\u5EA6\u70BA {{ max_height }}px \u3002"}}};var THE_IMAGE_HEIGHT_IS_TOO_SMALL_HEIGHT_PX_MINIMUM_HEIGHT_EXPECTED_IS_MIN_HEIGHT_PX={"id":"The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.","translations":{"validators":{"fr":"La hauteur de l'image est trop petite ({{ height }}px). La hauteur minimale attendue est de {{ min_height }}px.","af":"Die beeld hoogte is te klein ({{ height }}px). Minimum hoogte verwag is {{ min_height }}px.","ar":"\u0637\u0648\u0644 \u0627\u0644\u0635\u0648\u0631\u0629 \u0635\u063A\u064A\u0631 \u062C\u062F\u0627 ({{ height }}px). \u0627\u0642\u0644 \u0637\u0648\u0644 \u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648{{ min_height }}px.","az":"\u015E\u0259klin y\xFCks\u0259kliyi \xE7ox ki\xE7ikdir ({{ height }}px). \u018Fn az {{ min_height }}px olmal\u0131d\u0131r.","be":"\u0413\u044D\u0442\u0430 \u0432\u044B\u044F\u0432\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u0430\u044F ({{ width }}px). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0432\u044B\u0448\u044B\u043D\u044F {{ min_width }}px.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u0442\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u0430 \u0432\u0438\u0441\u043E\u0447\u0438\u043D\u0430 ({{ height }}px). \u0412\u0438\u0441\u043E\u0447\u0438\u043D\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0438\u043D\u0438\u043C\u0443\u043C {{ min_height }}px.","bs":"Du\u017Eina slike je premala ({{ height }}px). Najmanja dozvoljena du\u017Eina je {{ min_height }}px.","ca":"L'altura de la imatge \xE9s massa petita ({{ height }}px). L'altura m\xEDnima requerida s\xF3n {{ min_height }}px.","cs":"Obr\xE1zek je p\u0159\xEDli\u0161 n\xEDzk\xFD ({{ height }}px). Minim\xE1ln\xED v\xFD\u0161ka obr\xE1zku mus\xED b\xFDt {{ min_height }}px.","cy":"Mae uchder y ddelwedd yn rhy fach ({{ width }}px). Yr uchder lleiaf \xE2 ganiateir yw {{ min_height }}px.","da":"Billedet er for lavt ({{ height }}px). Mindste forventede h\xF8jde er {{ min_height }}px.","de":"Die Bildh\xF6he ist zu gering ({{ height }}px). Die erwartete Mindesth\xF6he betr\xE4gt {{ min_height }}px.","el":"\u03A4\u03BF \u03CD\u03C8\u03BF\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03CC ({{ height }}px). \u03A4\u03BF \u03B5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03CC \u03CD\u03C8\u03BF\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 {{ min_height }}px.","en":"The image height is too small ({{ height }}px). Minimum height expected is {{ min_height }}px.","es":"La altura de la imagen es demasiado peque\xF1a ({{ height }}px). La altura m\xEDnima requerida es de {{ min_height }}px.","et":"Pilt pole piisavalt pikk ({{ height }}px). Lubatud v\xE4him pikkus on {{ min_height }}px.","eu":"Irudiaren altuera txikiegia da ({{ height }}px). Onartutako gutxieneko altuera {{ min_height }}px dira.","fa":"\u0627\u0631\u062A\u0641\u0627\u0639 \u062A\u0635\u0648\u06CC\u0631 \u0628\u0633\u06CC\u0627\u0631 \u06A9\u0648\u0686\u06A9 \u0627\u0633\u062A({{ height }}px). \u06A9\u0645\u06CC\u0646\u0647 (\u062D\u062F\u0627\u0642\u0644) \u0627\u0631\u062A\u0641\u0627\u0639 \u0645\u0648\u0631\u062F \u0627\u0646\u062A\u0638\u0627\u0631 {{ min_height }}px \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuva on liian matala ({{ height }} px). Korkeuden tulee olla v\xE4hint\xE4\xE4n {{ min_height }} px.","gl":"A altura da imaxe \xE9 demasiado pequena ({{ height }}px). A altura m\xEDnima requerida son {{ min_height }}px.","he":"\u05D2\u05D5\u05D1\u05D4 \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05E7\u05D8\u05DF \u05DE\u05D3\u05D9 ({{ height }}px). \u05D4\u05D2\u05D5\u05D1\u05D4 \u05D4\u05DE\u05D9\u05E0\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D5\u05D0 {{ min_height }}px.","hr":"Visina slike je premala ({{ height }}px). Najmanja dozvoljena visina je {{ min_height }}px.","hu":"A k\xE9p magass\xE1ga t\xFAl kicsi ({{ height }}px). Az elv\xE1rt legkisebb magass\xE1g {{ min_height }}px.","hy":"\u0546\u056F\u0561\u0580\u056B \u0562\u0561\u0580\u0571\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0583\u0578\u0584\u0580 \u0567 ({{ height }}px). \u0544\u056B\u0576\u056B\u0574\u0561\u056C \u0579\u0561\u0583\u0576 \u0567 {{ min_height }}px\u0589","id":"Tinggi citra terlalu kecil ({{ height }}px). Ukuran tinggi minimum yang diharapkan adalah {{ min_height }}px.","it":"L'altezza dell'immagine \xE8 troppo piccola ({{ height }}px). L'altezza minima \xE8 di {{ min_height }}px.","ja":"\u753B\u50CF\u306E\u9AD8\u3055\u304C\u5C0F\u3055\u3059\u304E\u307E\u3059({{ height }}\u30D4\u30AF\u30BB\u30EB)\u3002{{ min_height }}\u30D4\u30AF\u30BB\u30EB\u4EE5\u4E0A\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'H\xE9icht vum Bild ass ze kleng ({{ height }}px). D\xE9i minimal H\xE9icht ass {{ min_height }}px.","lt":"Nuotraukos auk\u0161tis per ma\u017Eas ({{ height }}px). Minimalus leid\u017Eiamas auk\u0161tis yra {{ min_height }}px.","lv":"Att\u0113la augstums ir p\u0101r\u0101k mazs ({{ height }}px). Minim\u0101lais sagaid\u0101mais augstums ir {{ min_height }}px.","mk":"\u0412\u0438\u0441\u0438\u043D\u0430\u0442\u0430 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u0430\u043B\u0430 ({{ height }}px). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430 \u0432\u0438\u0441\u0438\u043D\u0430 \u0435 {{ min_height }}px.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u04E9\u043D\u0434\u04E9\u0440 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0436\u0438\u0436\u0438\u0433 \u0431\u0430\u0439\u043D\u0430 ({{ height }}px). \u04E8\u043D\u0434\u04E9\u0440 \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 {{ min_height }}px \u0431\u0430\u0439\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0442\u043E\u0439.","my":"\u1015\u102F\u1036\u104F\u1021\u1014\u1036\u101E\u100A\u103A \u101E\u1031\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A ({{ height }}px)\u104B \u1001\u103D\u1004\u1037\u103A\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u100A\u1037\u103A\u1021\u1014\u100A\u103A\u1038\u1006\u102F\u1036\u1038\u1021\u1014\u1036\u101E\u100A\u103A {{min_height}}px \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildeh\xF8yden er for liten ({{ height }} piksler). Forventet minimumsh\xF8yde er {{ min_height }} piksler.","nl":"De afbeelding is niet hoog genoeg ({{ height }}px). De minimaal verwachte hoogte is {{ min_height }}px.","nn":"Billeth\xF8gda er for l\xE5g, ({{ height }} pikslar). Forventa minimumsh\xF8gde er {{ min_height }} pikslar.","no":"Bildeh\xF8yden er for liten ({{ height }} piksler). Forventet minimumsh\xF8yde er {{ min_height }} piksler.","pl":"Wysoko\u015B\u0107 obrazka jest zbyt ma\u0142a ({{ height }}px). Oczekiwana minimalna wysoko\u015B\u0107 to {{ min_height }}px.","pt":"A altura da imagem ({{ height }}px) \xE9 muito pequena. A altura min\xEDma da imagem \xE9 de: {{ min_height }}px.","pt_BR":"A altura da imagem \xE9 muito pequena ({{ height }}px). A altura m\xEDnima esperada \xE9 de {{ min_height }}px.","ro":"\xCEn\u0103l\u021Bimea imaginii este prea mic\u0103 ({{ height }}px). \xCEn\u0103l\u021Bimea minim\u0103 permis\u0103 este de {{ min_height }}px.","ru":"\u0412\u044B\u0441\u043E\u0442\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0430 ({{ height }}px). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0432\u044B\u0441\u043E\u0442\u0430 {{ min_height }}px.","sk":"Obr\xE1zok je pr\xEDli\u0161 n\xEDzky ({{ height }}px). Minim\xE1lna v\xFD\u0161ka obr\xE1zku by mala by\u0165 {{ min_height }}px.","sl":"Vi\u0161ina slike je premajhna ({{ height }}px). Najmanj\u0161a predvidena vi\u0161ina je {{ min_height }}px.","sq":"Gjat\xEBsia e imazhit \xEBsht\xEB shum\xEB e vog\xEBl ({{ height }}px). Gjat\xEBsia minimale e pritur \xEBsht\xEB {{ min_height }}px.","sr_Cyrl":"\u0412\u0438\u0441\u0438\u043D\u0430 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u043C\u0430\u043B\u0430 ({{ height }}px). \u041D\u0430\u0458\u043C\u0430\u045A\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0432\u0438\u0441\u0438\u043D\u0430 \u0458\u0435 {{ min_height }}px.","sr_Latn":"Visina slike je premala ({{ height }} piksela). Najmanja dozvoljena visina je {{ min_height }} piksela.","sv":"Bildens h\xF6jd \xE4r f\xF6r liten ({{ height }}px). Minsta f\xF6rv\xE4ntade h\xF6jd \xE4r {{ min_height }}px.","th":"\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E39\u0E07\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E40\u0E25\u0E47\u0E01\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B ({{ height }}px) \u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E04\u0E27\u0E32\u0E21\u0E2A\u0E39\u0E07\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E15\u0E48\u0E33\u0E01\u0E27\u0E48\u0E32 {{ min_height }}px","tl":"Ang haba ng imahe ay masyadong maliit ({{ height }}px). Ang inaasahang haba ay {{ min_height }}px.","tr":"Resmin y\xFCksekli\u011Fi \xE7ok k\xFC\xE7\xFCk ({{ height }}px). En az {{ min_height }}px olmal\u0131d\u0131r.","uk":"\u0412\u0438\u0441\u043E\u0442\u0430 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0430 ({{ height }}px). \u041C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u043E \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430 \u0432\u0438\u0441\u043E\u0442\u0430 {{ min_height }}px.","ur":"\u06C1\u06D2 {{ min_height }}px  \u0645\u062A\u0648\u0642\u0639 \u06A9\u0645 \u0627\u0632 \u06A9\u0645 \u0627\u0648\u0646\u0686\u0627\u0626\u06CC ({{ height }}px) \u062A\u0635\u0648\u06CC\u0631 \u06A9\u06CC \u0627\u0648\u0646\u0686\u0627\u0626\u06CC \u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u06CC \u06C1\u06D2","uz":"Rasm bo'yi juda kichkina ({{ height }}px). Minimal ruxsat etilgan balandlik {{ min_height }}px.","vi":"Chi\u1EC1u cao c\u1EE7a h\xECnh qu\xE1 th\u1EA5p ({{ height }}px). Chi\u1EC1u cao t\u1ED1i thi\u1EC3u ph\u1EA3i l\xE0 {{ min_height }}px.","zh_CN":"\u56FE\u7247\u9AD8\u5EA6\u4E0D\u591F ({{ height }}px)\uFF0C\u6700\u5C0F\u9AD8\u5EA6\u4E3A {{ min_height }}px \u3002","zh_TW":"\u5716\u7247\u9AD8\u5EA6\u4E0D\u5920 ({{ height }}px)\uFF0C\u6700\u5C0F\u9AD8\u5EA6\u70BA {{ min_height }}px \u3002"}}};var THIS_VALUE_SHOULD_BE_THE_USER_S_CURRENT_PASSWORD={"id":"This value should be the user's current password.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre le mot de passe actuel de l'utilisateur.","af":"Hierdie waarde moet die huidige wagwoord van die gebruiker wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0643\u0644\u0645\u0629 \u0633\u0631 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0627\u0644\u062D\u0627\u0644\u064A\u0629.","az":"Bu d\u0259y\u0259r istifad\u0259\xE7inin haz\u0131rk\u0131 parolu olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0446\u044F\u043F\u0435\u0440\u0430\u0448\u043D\u0456\u043C \u043F\u0430\u0440\u043E\u043B\u0435\u043C \u043A\u0430\u0440\u044B\u0441\u0442\u0430\u043B\u044C\u043D\u0456\u043A\u0430.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0442\u0435\u043A\u0443\u0449\u0430\u0442\u0430 \u043F\u043E\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043B\u0441\u043A\u0430 \u043F\u0430\u0440\u043E\u043B\u0430.","bs":"Ova vrijednost bi trebalo da bude trenutna korisni\u010Dka lozinka.","ca":"Aquest valor hauria de ser la contrasenya actual de l'usuari.","cs":"Tato hodnota mus\xED b\xFDt aktu\xE1ln\xED heslo u\u017Eivatele.","cy":"Dylaid bod y gwerth hwn yn gyfrinair presenol y defnyddiwr.","da":"V\xE6rdien skal v\xE6re brugerens nuv\xE6rende adgangskode.","de":"Dieser Wert sollte dem aktuellen Benutzerpasswort entsprechen.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BF \u03C4\u03C1\u03AD\u03C7\u03C9\u03BD \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2.","en":"This value should be the user's current password.","es":"Este valor deber\xEDa ser la contrase\xF1a actual del usuario.","et":"V\xE4\xE4rtus peaks olema kasutaja kehtiv salas\xF5na.","eu":"Balio hau uneko erabiltzailearen pasahitza izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0631\u0645\u0632\u0639\u0628\u0648\u0631 \u0641\u0639\u0644\u06CC \u06A9\u0627\u0631\u0628\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla k\xE4ytt\xE4j\xE4n t\xE4m\xE4nhetkinen salasana.","gl":"Este valor deber\xEDa ser a contrasinal actual do usuario.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05E1\u05D9\u05E1\u05DE\u05EA \u05D4\u05DE\u05E9\u05EA\u05DE\u05E9 \u05D4\u05E0\u05D5\u05DB\u05D7\u05D9.","hr":"Ova vrijednost treba biti trenutna korisni\u010Dka lozinka.","hu":"Ez az \xE9rt\xE9k a felhaszn\xE1l\xF3 jelenlegi jelszav\xE1val kell megegyezzen.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0585\u0563\u057F\u0561\u0563\u0578\u0580\u056E\u0578\u0572\u056B \u0576\u0565\u0580\u056F\u0561 \u056E\u0561\u056E\u056F\u0561\u0563\u056B\u0580\u0568\u0589","id":"Nilai ini harus kata sandi pengguna saat ini.","it":"Questo valore dovrebbe essere la password attuale dell'utente.","ja":"\u30E6\u30FC\u30B6\u30FC\u306E\u73FE\u5728\u306E\u30D1\u30B9\u30EF\u30FC\u30C9\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt dem aktuelle Benotzerpasswuert entspriechen.","lt":"\u0160i reik\u0161m\u0117 turi sutapti su dabartiniu naudotojo slapta\u017Eod\u017Eiu.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt lietot\u0101ja pa\u0161reiz\u0113jai parolei.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0441\u0435\u0433\u0430\u0448\u043D\u0430\u0442\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430 \u043D\u0430 \u043A\u043E\u0440\u0438\u0441\u043D\u0438\u043A\u043E\u0442.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0445\u044D\u0440\u044D\u0433\u043B\u044D\u0433\u0447\u0438\u0439\u043D \u043E\u0434\u043E\u043E\u0433\u0438\u0439\u043D \u043D\u0443\u0443\u0446 \u04AF\u0433 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u101E\u1030\u104F \u101C\u1000\u103A\u101B\u103E\u102D\u1005\u1000\u102C\u1038\u101D\u103E\u1000\u103A\u1016\u103C\u1005\u103A\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re brukerens sitt n\xE5v\xE6rende passord.","nl":"Deze waarde moet het huidige wachtwoord van de gebruiker zijn.","nn":"Verdien m\xE5 vere brukaren sitt noverande passord.","no":"Verdien skal v\xE6re brukerens sitt n\xE5v\xE6rende passord.","pl":"Ta warto\u015B\u0107 powinna by\u0107 aktualnym has\u0142em u\u017Cytkownika.","pt":"Este valor deveria ser a senha atual do usu\xE1rio.","pt_BR":"Este valor deve ser a senha atual do usu\xE1rio.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie parola curent\u0103 a utilizatorului.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u043C \u043F\u0430\u0440\u043E\u043B\u0435\u043C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F.","sk":"T\xE1to hodnota by mala by\u0165 aktu\xE1lne heslo pou\u017E\xEDvate\u013Ea.","sl":"Ta vrednost bi morala biti trenutno uporabnikovo geslo.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB fjal\xEBkalimi aktual i p\xEBrdoruesit.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0442\u0440\u0435\u043D\u0443\u0442\u043D\u0430 \u043A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430.","sr_Latn":"Vrednost bi trebalo da bude trenutna korisni\u010Dka lozinka.","sv":"V\xE4rdet ska vara anv\xE4ndarens nuvarande l\xF6senord.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E40\u0E1B\u0E47\u0E19\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E1B\u0E31\u0E08\u0E08\u0E38\u0E1A\u0E31\u0E19\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49","tl":"Ang halagang ito ay dapat na password ng kasalukuyang gumagamit.","tr":"Bu de\u011Fer kullan\u0131c\u0131n\u0131n \u015Fu anki \u015Fifresi olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u043E\u0442\u043E\u0447\u043D\u0438\u043C \u043F\u0430\u0440\u043E\u043B\u0435\u043C \u043A\u043E\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0635\u0627\u0631\u0641 \u06A9\u0627 \u0645\u0648\u062C\u0648\u062F\u06C1 \u067E\u0627\u0633 \u0648\u0631\u0688 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat joriy foydalanuvchi paroli bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i l\xE0 m\u1EADt kh\u1EA9u hi\u1EC7n t\u1EA1i c\u1EE7a ng\u01B0\u1EDDi d\xF9ng.","zh_CN":"\u8BE5\u53D8\u91CF\u7684\u503C\u5E94\u4E3A\u7528\u6237\u5F53\u524D\u7684\u5BC6\u7801\u3002","zh_TW":"\u8A72\u8B8A\u6578\u7684\u503C\u61C9\u70BA\u7528\u6236\u76EE\u524D\u7684\u5BC6\u78BC\u3002"}}};var THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTER_THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTERS={"id":"This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.","translations":{"validators":{"fr":"Cette cha\xEEne doit avoir exactement {{ limit }} caract\xE8re.|Cette cha\xEEne doit avoir exactement {{ limit }} caract\xE8res.","af":"Hierdie waarde moet presies {{ limit }} karakter wees.|Hierdie waarde moet presies {{ limit }} karakters wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0648\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0641 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u062D\u0631\u0641 \u0641\u0642\u0637.","az":"Bu d\u0259y\u0259r tam olaraq {{ limit }} simvol olmald\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B.|\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C {{ limit }} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B.|\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430.","bs":"Ova vrijednost bi trebalo da ima ta\u010Dno {{ limit }} karakter.|Ova vrijednost bi trebalo da ima ta\u010Dno {{ limit }} karaktera.","ca":"Aquest valor hauria de tenir exactament {{ limit }} car\xE0cter.|Aquest valor hauria de tenir exactament {{ limit }} car\xE0cters.","cs":"Tato hodnota mus\xED m\xEDt p\u0159esn\u011B {{ limit }} znak.|Tato hodnota mus\xED m\xEDt p\u0159esn\u011B {{ limit }} znaky.|Tato hodnota mus\xED m\xEDt p\u0159esn\u011B {{ limit }} znak\u016F.","cy":"Dylai'r gwerth hwn fod yn union {{ limit }} nodyn cyfrifiadurol o hyd.","da":"V\xE6rdien skal v\xE6re p\xE5 pr\xE6cis {{ limit }} tegn.","de":"Dieser Wert sollte genau {{ limit }} Zeichen lang sein.|Dieser Wert sollte genau {{ limit }} Zeichen lang sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03B1\u03BA\u03C1\u03B9\u03B2\u03CE\u03C2 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03B1\u03BA\u03C1\u03B9\u03B2\u03CE\u03C2 {{ limit }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2.","en":"This value should have exactly {{ limit }} character.|This value should have exactly {{ limit }} characters.","es":"Este valor deber\xEDa tener exactamente {{ limit }} car\xE1cter.|Este valor deber\xEDa tener exactamente {{ limit }} caracteres.","et":"V\xE4\xE4rtus peaks olema t\xE4pselt {{ limit }} t\xE4hem\xE4rk pikk.|V\xE4\xE4rtus peaks olema t\xE4pselt {{ limit }} t\xE4hem\xE4rki pikk.","eu":"Balio honek zehazki karaktere {{ limit }} izan beharko luke.|Balio honek zehazki {{ limit }} karaktere izan beharko lituzke.","fa":" \u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062F\u0642\u06CC\u0642\u0627 {{ limit }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F.| \u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062F\u0642\u06CC\u0642\u0627 {{ limit }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla tasan yhden merkin pituinen.|Arvon tulee olla tasan {{ limit }} merkin pituinen.","gl":"Este valor deber\xEDa ter exactamente {{ limit }} car\xE1cter.|Este valor deber\xEDa ter exactamente {{ limit }} caracteres.","he":"\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05D1\u05D3\u05D9\u05D5\u05E7 {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD.|\u05D4\u05E2\u05E8\u05DA \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05D1\u05D3\u05D9\u05D5\u05E7 {{ limit }} \u05EA\u05D5\u05D5\u05D9\u05DD.","hr":"Ova vrijednost treba imati to\u010Dno {{ limit }} znakova.","hu":"Ennek az \xE9rt\xE9knek pontosan {{ limit }} karaktert kell tartalmaznia.|Ennek az \xE9rt\xE9knek pontosan {{ limit }} karaktert kell tartalmaznia.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u0578\u0582\u0576\u0565\u0576\u0561 \u0573\u056B\u0577\u057F {{ limit }} \u057D\u056B\u0574\u057E\u0578\u056C\u0576\u0565\u0580\u0589","id":"Nilai ini harus memiliki tepat {{ limit }} karakter.","it":"Questo valore dovrebbe contenere esattamente {{ limit }} carattere.|Questo valore dovrebbe contenere esattamente {{ limit }} caratteri.","ja":"\u3061\u3087\u3046\u3069{{ limit }}\u6587\u5B57\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt exakt {{ limit }} Buschtaf hunn.|D\xEBse W\xE4ert sollt exakt {{ limit }} Buschtawen hunn.","lt":"\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simbol\u012F.|\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simbolius.|\u0160i reik\u0161m\u0117 turi tur\u0117ti lygiai {{ limit }} simboli\u0173.","lv":"\u0160\u012Bs v\u0113rt\u012Bbas garums ir 0 rakstz\u012Bmju.|\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt tie\u0161i {{ limit }} rakstz\u012Bmei.|\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt tie\u0161i {{ limit }} rakstz\u012Bm\u0113m.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440.|\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u044F\u0433 {{ limit }} \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.|\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u044F\u0433 {{ limit }} \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1005\u102C\u101C\u102F\u1036\u1038 {{limit}} \u1021\u1010\u102D\u1021\u1000\u103B\u101B\u103E\u102D\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re n\xF8yaktig {{ limit }} tegn.","nl":"Deze waarde moet exact {{ limit }} teken lang zijn.|Deze waarde moet exact {{ limit }} tekens lang zijn.","nn":"Verdien m\xE5 vere n\xF8yaktig {{ limit }} teikn.","no":"Verdien skal v\xE6re n\xF8yaktig {{ limit }} tegn.","pl":"Ta warto\u015B\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znak.|Ta warto\u015B\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znaki.|Ta warto\u015B\u0107 powinna mie\u0107 dok\u0142adnie {{ limit }} znak\xF3w.","pt":"Este valor deve possuir exatamente {{ limit }} caracteres.","pt_BR":"Este valor deve ter exatamente {{ limit }} caractere.|Este valor deve ter exatamente {{ limit }} caracteres.","ro":"Aceast\u0103 valoare trebuie s\u0103 con\u021Bin\u0103 exact {{ limit }} caracter.|Aceast\u0103 valoare trebuie s\u0103 con\u021Bin\u0103 exact {{ limit }} caractere.|Aceast\u0103 valoare trebuie s\u0103 con\u021Bin\u0103 exact {{ limit }} de caractere.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C.|\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C.","sk":"T\xE1to hodnota by mala ma\u0165 presne {{ limit }} znak.|T\xE1to hodnota by mala ma\u0165 presne {{ limit }} znaky.|T\xE1to hodnota by mala ma\u0165 presne {{ limit }} znakov.","sl":"Ta vrednost bi morala imeti to\u010Dno {{ limit }} znak.|Ta vrednost bi morala imeti to\u010Dno {{ limit }} znaka.|Ta vrednost bi morala imeti to\u010Dno {{ limit }} znake.|Ta vrednost bi morala imeti to\u010Dno {{ limit }} znakov.","sq":"Kjo vler\xEB duhet t\xEB ket\xEB sakt\xEBsisht {{ limit }} karakter.|Kjo vler\xEB duhet t\xEB ket\xEB sakt\xEBsisht {{ limit }} karaktere.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430.|\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430.","sr_Latn":"Vrednost bi trebalo da ima ta\u010Dno {{ limit }} karakter.|Vrednost bi trebalo da ima ta\u010Dno {{ limit }} karaktera.|Vrednost bi trebalo da ima ta\u010Dno {{ limit }} karaktera.","sv":"V\xE4rdet ska ha exakt {{ limit }} tecken.|V\xE4rdet ska ha exakt {{ limit }} tecken.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E22\u0E32\u0E27 {{ limit }} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23","tl":"Ang halagang ito ay dapat na eksakto sa {{ limit}} karakter.|Ang halagang ito ay dapat na eksakto sa {{ limit }} mga karakter.","tr":"Bu de\u011Fer tam olarak {{ limit }} karakter olmald\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u0438\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0438\u043C {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0443.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u0438\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0438\u043C {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C.|\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u0438\u043D\u043E \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043D\u0438\u043C {{ limit }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430\u043C.","ur":"\u062D\u0631\u0648\u0641 \u06C1\u0648\u0646\u06D2 \u0686\u0627\u06C1\u0626\u06CC\u06BA {{ limit }} \u062D\u0631\u0641 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u0627\u0633 \u0648\u064A\u0644\u064A\u0648 \u0645\u06CC\u06BA \u0628\u0627\u0644\u06A9\u0644 {{ limit }} \u0627\u0633 \u0648\u064A\u0644\u064A\u0648 \u0645\u06CC\u06BA \u0628\u0627\u0644\u06A9\u0644","uz":"Qiymat {{ limit }} ta belgidan iborat bo'lishi kerak.|Qiymat {{ limit }} belgidan iborat bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i c\xF3 ch\xEDnh x\xE1c {{ limit }} k\xED t\u1EF1.|Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i c\xF3 ch\xEDnh x\xE1c {{ limit }} k\xED t\u1EF1.","zh_CN":"\u8BE5\u53D8\u91CF\u5E94\u4E3A {{ limit }} \u4E2A\u5B57\u7B26\u3002","zh_TW":"\u8A72\u8B8A\u6578\u61C9\u70BA {{ limit }} \u500B\u5B57\u5143\u3002"}}};var THE_FILE_WAS_ONLY_PARTIALLY_UPLOADED={"id":"The file was only partially uploaded.","translations":{"validators":{"fr":"Le fichier a \xE9t\xE9 partiellement transf\xE9r\xE9.","af":"Die l\xEAer is slegs gedeeltelik opgelaai.","ar":"\u062A\u0645 \u0627\u0633\u062A\u0642\u0628\u0627\u0644 \u062C\u0632\u0621 \u0645\u0646 \u0627\u0644\u0645\u0644\u0641 \u0641\u0642\u0637.","az":"Fayl qism\u0259n y\xFCkl\u0259ndi.","be":"\u0424\u0430\u0439\u043B \u0431\u044B\u045E \u0437\u0430\u043F\u0430\u043C\u043F\u0430\u0432\u0430\u043D\u044B \u0442\u043E\u043B\u044C\u043A\u0456 \u0447\u0430\u0441\u0442\u043A\u043E\u0432\u0430.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u0435 \u043A\u0430\u0447\u0435\u043D \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u043E.","bs":"Datoteka je samo djelimi\u010Dno prenijeta (uploaded).","ca":"L'arxiu va ser nom\xE9s pujat parcialment.","cs":"Byla nahr\xE1na jen \u010D\xE1st souboru.","cy":"Dim ond rhan o'r ffeil ag uwchlwythwyd.","da":"Filen blev kun delvist uploadet.","de":"Die Datei wurde nur teilweise hochgeladen.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B4\u03B5\u03BD \u03B1\u03BD\u03AD\u03B2\u03B7\u03BA\u03B5 \u03BF\u03BB\u03CC\u03BA\u03BB\u03B7\u03C1\u03BF.","en":"The file was only partially uploaded.","es":"El archivo se carg\xF3 solo parcialmente.","et":"Fail ei laetud t\xE4ielikult \xFCles.","eu":"Fitxategiaren zati bat bakarrik igo da.","fa":"\u0641\u0627\u06CC\u0644 \u0628\u0647 \u0635\u0648\u0631\u062A \u062C\u0632\u0626\u06CC \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC \u06AF\u0631\u062F\u06CC\u062F\u0647 \u0627\u0633\u062A.","fi":"Tiedosto ladattiin vain osittain.","gl":"O arquivo foi s\xF3 subido parcialmente.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05D4\u05D5\u05E2\u05DC\u05D4 \u05D1\u05D0\u05D5\u05E4\u05DF \u05D7\u05DC\u05E7\u05D9.","hr":"Datoteka je samo djelomi\u010Dno prenesena.","hu":"A f\xE1jl csak r\xE9szben lett felt\xF6ltve.","hy":"\u0546\u056B\u0577\u0584\u056B \u0574\u0561\u057D\u0576\u0561\u056F\u056B \u0562\u0565\u057C\u0576\u0574\u0561\u0576 \u057D\u056D\u0561\u056C\u0589","id":"Berkas hanya terunggah sebagian.","it":"Il file \xE8 stato caricato solo parzialmente.","ja":"\u30D5\u30A1\u30A4\u30EB\u306E\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306F\u5B8C\u5168\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"De Fichier gouf just deelweis eropgelueden.","lt":"Failas buvo tik dalinai \u012Fkeltas.","lv":"Fails bija tikai da\u013C\u0113ji aug\u0161upiel\u0101d\u0113ts.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u0441\u0430\u043C\u043E \u0434\u0435\u043B\u0443\u043C\u043D\u043E \u043F\u043E\u0434\u0438\u0433\u043D\u0430\u0442\u0430.","mn":"\u0424\u0430\u0439\u043B\u044B\u043D \u0437\u04E9\u0432\u0445\u04E9\u043D \u0445\u0430\u0433\u0430\u0441 \u043D\u044C upload \u0445\u0438\u0439\u0433\u0434\u0441\u044D\u043D.","my":"\u1024\u1016\u102D\u102F\u1004\u103A\u101E\u100A\u103A\u1010\u1005\u103A\u1005\u102D\u1010\u103A\u1010\u1005\u103A\u1015\u102D\u102F\u1004\u103A\u1038\u101E\u102C upload \u1010\u1004\u103A\u1001\u1032\u1037\u101E\u100A\u103A\u104B","nb":"Filen var kun delvis opplastet.","nl":"Het bestand is slechts gedeeltelijk ge\xFCpload.","nn":"Fila vart berre delvis lasta opp.","no":"Filen var kun delvis opplastet.","pl":"Plik zosta\u0142 wgrany tylko cz\u0119\u015Bciowo.","pt":"S\xF3 foi enviada uma parte do arquivo.","pt_BR":"O arquivo foi enviado apenas parcialmente.","ro":"Fi\u0219ierul a fost \xEEnc\u0103rcat par\u021Bial.","ru":"\u0424\u0430\u0439\u043B \u0431\u044B\u043B \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D \u0442\u043E\u043B\u044C\u043A\u043E \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u043E.","sk":"Bola nahran\xE1 len \u010Das\u0165 s\xFAboru.","sl":"Datoteka je bila le delno nalo\u017Eena.","sq":"Ky file \xEBsht\xEB ngarkuar pjes\xEBrisht.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u0458\u0435 \u0441\u0430\u043C\u043E \u043F\u0430\u0440\u0446\u0438\u0458\u0430\u043B\u043D\u043E \u043E\u0442\u043F\u0440\u0435\u043C\u0459\u0435\u043D\u0430.","sr_Latn":"Datoteka je samo parcijalno otpremljena.","sv":"Filen laddades bara upp delvis.","th":"\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E44\u0E1F\u0E25\u0E4C\u0E44\u0E14\u0E49\u0E40\u0E1E\u0E35\u0E22\u0E07\u0E1A\u0E32\u0E07\u0E2A\u0E48\u0E27\u0E19\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang file na ito ay kahalating na upload lamang.","tr":"Dosya sadece k\u0131smen y\xFCklendi.","uk":"\u0424\u0430\u0439\u043B \u0431\u0443\u0432 \u0437\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u0438\u0439 \u043B\u0438\u0448\u0435 \u0447\u0430\u0441\u0442\u043A\u043E\u0432\u043E.","ur":"\u0641\u0627\u0626\u0644 \u0635\u0631\u0641 \u062C\u0632\u0648\u06CC \u0637\u0648\u0631 \u067E\u0631 \u0627\u067E \u0644\u0648\u0688 \u06A9\u06CC \u06AF\u0626\u06CC \u062A\u06BE\u06CC","uz":"Fayl faqat qisman yuklangan.","vi":"T\u1EADp tin ch\u1EC9 \u0111\u01B0\u1EE3c t\u1EA3i l\xEAn m\u1ED9t ph\u1EA7n.","zh_CN":"\u8BE5\u6587\u4EF6\u7684\u4E0A\u4F20\u4E0D\u5B8C\u6574\u3002","zh_TW":"\u8A72\u6A94\u6848\u7684\u4E0A\u50B3\u4E0D\u5B8C\u6574\u3002"}}};var NO_FILE_WAS_UPLOADED={"id":"No file was uploaded.","translations":{"validators":{"fr":"Aucun fichier n'a \xE9t\xE9 transf\xE9r\xE9.","af":"Geen l\xEAer is opgelaai nie.","ar":"\u0644\u0645 \u064A\u062A\u0645 \u0627\u0631\u0633\u0627\u0644 \u0627\u0649 \u0645\u0644\u0641.","az":"Fayl y\xFCkl\u0259nm\u0259di.","be":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0431\u044B\u045E \u0437\u0430\u043F\u0430\u043C\u043F\u0430\u0432\u0430\u043D\u044B.","bg":"\u0424\u0430\u0439\u043B\u044A\u0442 \u043D\u0435 \u0431\u0435\u0448\u0435 \u043A\u0430\u0447\u0435\u043D.","bs":"Nijedna datoteka nije prenijeta (uploaded).","ca":"Cap arxiu va ser pujat.","cs":"\u017D\xE1dn\xFD soubor nebyl nahr\xE1n.","cy":"Ni uwchlwythwyd unrhyw ffeil.","da":"Ingen fil blev uploadet.","de":"Es wurde keine Datei hochgeladen.","el":"\u0394\u03B5\u03BD \u03B1\u03BD\u03AD\u03B2\u03B7\u03BA\u03B5 \u03BA\u03B1\u03BD\u03AD\u03BD\u03B1 \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF.","en":"No file was uploaded.","es":"No se subi\xF3 ning\xFAn archivo.","et":"\xDChtegi faili ei laetud \xFCles.","eu":"Ez da fitxategirik igo.","fa":"\u0647\u06CC\u0686 \u0641\u0627\u06CC\u0644\u06CC \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC \u0646\u0634\u062F.","fi":"Tiedostoa ei ladattu.","gl":"Non se subiu ning\xFAn arquivo.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05DC\u05D0 \u05D4\u05D5\u05E2\u05DC\u05D4.","hr":"Niti jedna datoteka nije prenesena.","hu":"Nem lett f\xE1jl felt\xF6ltve.","hy":"\u0546\u056B\u0577\u0584\u0568 \u0579\u056B \u0562\u0565\u057C\u0576\u057E\u0565\u056C\u0589","id":"Tidak ada berkas terunggah.","it":"Nessun file \xE8 stato caricato.","ja":"\u30D5\u30A1\u30A4\u30EB\u304C\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"Et gouf kee Fichier eropgelueden.","lt":"Nebuvo \u012Fkelta joki\u0173 fail\u0173.","lv":"Fails netika aug\u0161upiel\u0101d\u0113ts.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u043D\u0435 \u0435 \u043F\u043E\u0434\u0438\u0433\u043D\u0430\u0442\u0430.","mn":"\u042F\u043C\u0430\u0440 \u0447 \u0444\u0430\u0439\u043B upload \u0445\u0438\u0439\u0433\u0434\u0441\u044D\u043D\u0433\u04AF\u0439.","my":"\u1019\u100A\u103A\u101E\u100A\u103A\u1037 \u1016\u102D\u102F\u1004\u103A\u1019\u103B\u103E upload \u1019\u101C\u102F\u1015\u103A\u1001\u1032\u1037\u1015\u102B\u104B","nb":"Ingen fil var lastet opp.","nl":"Er is geen bestand ge\xFCpload.","nn":"Inga fil vart lasta opp.","no":"Ingen fil var lastet opp.","pl":"\u017Baden plik nie zosta\u0142 wgrany.","pt":"Nenhum arquivo foi enviado.","pt_BR":"Nenhum arquivo foi enviado.","ro":"Nu a fost \xEEnc\u0103rcat nici un fi\u0219ier.","ru":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0431\u044B\u043B \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D.","sk":"\u017Diadny s\xFAbor nebol nahran\xFD.","sl":"Nobena datoteka ni bila nalo\u017Eena.","sq":"Nuk \xEBsht\xEB ngarkuar ndonj\xEB file.","sr_Cyrl":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0438\u0458\u0435 \u043E\u0442\u043F\u0440\u0435\u043C\u0459\u0435\u043D\u0430.","sr_Latn":"Datoteka nije otpremljena.","sv":"Ingen fil laddades upp.","th":"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E44\u0E1F\u0E25\u0E4C\u0E43\u0E14\u0E16\u0E39\u0E01\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14","tl":"Walang na upload na file.","tr":"Hi\xE7bir dosya y\xFCklenmedi.","uk":"\u0424\u0430\u0439\u043B \u043D\u0435 \u0431\u0443\u0432 \u0437\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u0438\u0439.","ur":"\u06A9\u0648\u0626\u06CC \u0641\u0627\u0626\u0644 \u0627\u067E \u0644\u0648\u0688 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC \u06AF\u0626\u06CC","uz":"Fayl yuklanmagan.","vi":"T\u1EADp tin kh\xF4ng \u0111\u01B0\u1EE3c t\u1EA3i l\xEAn.","zh_CN":"\u6CA1\u6709\u4E0A\u4F20\u4EFB\u4F55\u6587\u4EF6\u3002","zh_TW":"\u6C92\u6709\u4E0A\u50B3\u4EFB\u4F55\u6A94\u6848\u3002"}}};var NO_TEMPORARY_FOLDER_WAS_CONFIGURED_IN_PHP_INI={"id":"No temporary folder was configured in php.ini.","translations":{"validators":{"fr":"Aucun r\xE9pertoire temporaire n'a \xE9t\xE9 configur\xE9 dans le php.ini, ou le r\xE9pertoire configur\xE9 n'existe pas.","af":"Geen tydelike l\xEAer is ingestel in php.ini nie.","ar":"\u0644\u0645 \u064A\u062A\u0645 \u062A\u0647\u064A\u0626\u0629 \u062D\u0627\u0641\u0638\u0629 \u0645\u0624\u0642\u062A\u0629 \u0641\u0649 \u0645\u0644\u0641 php.ini.","az":"php.ini'd\u0259 m\xFCv\u0259qq\u0259ti qovluq qura\u015Fd\u0131r\u0131lmay\u0131b.","be":"\u0423 php.ini \u043D\u0435 \u0431\u044B\u043B\u0430 \u043D\u0430\u043B\u0430\u0436\u0430\u043D\u0430 \u0447\u0430\u0441\u043E\u0432\u0430\u044F \u043F\u0430\u043F\u043A\u0430, \u0430\u0431\u043E \u0447\u0430\u0441\u043E\u0432\u0430\u044F \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u0456\u0441\u043D\u0443\u0435.","bg":"\u041D\u0435 \u0435 \u043F\u043E\u0441\u043E\u0447\u0435\u043D\u0430 \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438\u044F \u0437\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u0438 \u0444\u0430\u0439\u043B\u043E\u0432\u0435 \u0432 php.ini.","bs":"Privremeni direktorijum nije konfigurisan u datoteci php.ini.","ca":"Cap carpeta temporal va ser configurada en php.ini.","cs":"V php.ini nen\xED nastavena cesta k adres\xE1\u0159i pro do\u010Dasn\xE9 soubory.","cy":"Nid oes ffolder dros-dro wedi'i gosod yn php.ini.","da":"Ingen midlertidig mappe er konfigureret i php.ini.","de":"Es wurde kein tempor\xE4rer Ordner in der php.ini konfiguriert oder der tempor\xE4re Ordner existiert nicht.","el":"\u039A\u03B1\u03BD\u03AD\u03BD\u03B1\u03C2 \u03C0\u03C1\u03BF\u03C3\u03C9\u03C1\u03B9\u03BD\u03CC\u03C2 \u03C6\u03AC\u03BA\u03B5\u03BB\u03BF\u03C2 \u03B4\u03B5\u03BD \u03AD\u03C7\u03B5\u03B9 \u03C1\u03C5\u03B8\u03BC\u03B9\u03C3\u03C4\u03B5\u03AF \u03C3\u03C4\u03BF php.ini.","en":"No temporary folder was configured in php.ini, or the configured folder does not exist.","es":"Ninguna carpeta temporal fue configurada en php.ini o la carpeta configurada no existe.","et":"\xDChtegi ajutist kausta polnud php.ini-s seadistatud.","eu":"Ez da aldi baterako karpetarik konfiguratu php.ini fitxategian.","fa":"\u067E\u0648\u0634\u0647 \u0645\u0648\u0642\u062A\u06CC \u062F\u0631 php.ini \u067E\u06CC\u06A9\u0631\u0628\u0646\u062F\u06CC \u0646\u06AF\u0631\u062F\u06CC\u062F\u0647 \u0627\u0633\u062A.","fi":"V\xE4liaikaishakemistoa ei ole asetettu php.ini-tiedostossa.","gl":"Ningunha carpeta temporal foi configurada en php.ini, ou a carpeta non existe.","he":"\u05DC\u05D0 \u05D4\u05D5\u05D2\u05D3\u05E8\u05D4 \u05EA\u05D9\u05E7\u05D9\u05D9\u05D4 \u05D6\u05DE\u05E0\u05D9\u05EA \u05D1 php.ini.","hr":"U php.ini datoteci nije konfiguriran privremeni direktorij.","hu":"Nincs ideiglenes k\xF6nyvt\xE1r be\xE1ll\xEDtva a php.ini-ben.","hy":"php.ini \u0576\u056B\u0577\u0584\u0578\u0582\u0574 \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0561\u057E\u0578\u0580 \u057A\u0561\u0576\u0561\u056F \u0576\u0577\u057E\u0561\u056E \u0579\u0567\u0589","id":"Direktori sementara tidak dikonfiguasi pada php.ini.","it":"Nessuna cartella temporanea \xE8 stata configurata nel php.ini.","ja":"php.ini\u3067\u4E00\u6642\u30D5\u30A9\u30EB\u30C0\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"Et gouf keen tempor\xE4ren Dossier an der php.ini konfigur\xE9iert oder den tempor\xE4ren Dossier exist\xE9iert net.","lt":"N\u0117ra sukonfiguruoto jokio laikino katalogo php.ini faile.","lv":"Pagaidu mape php.ini fail\u0101 nav nokonfigur\u0113ta.","mk":"\u041D\u0438\u0442\u0443 \u0435\u0434\u043D\u0430 \u043F\u0440\u0438\u0432\u0440\u0435\u043C\u0435\u043D\u0430 \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u0435 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0438\u0440\u0430\u043D\u0430 \u0432\u043E php.ini.","mn":"php.ini \u0434\u044D\u044D\u0440 \u0442\u04AF\u0440 \u0437\u0443\u0443\u0440\u044B\u043D \u0445\u0430\u0432\u0442\u0441\u044B\u0433 \u0442\u043E\u0445\u0438\u0440\u0443\u0443\u043B\u0430\u0430\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430, \u044D\u0441\u0432\u044D\u043B \u0442\u043E\u0445\u0438\u0440\u0443\u0443\u043B\u0441\u0430\u043D \u0445\u0430\u0432\u0442\u0430\u0441 \u0431\u0430\u0439\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"php.ini \u1010\u103D\u1004\u103A\u101A\u102C\u101A\u102E\u1016\u102D\u102F\u1004\u103A\u1010\u103D\u1032\u1000\u102D\u102F\u1015\u103C\u1004\u103A\u1006\u1004\u103A\u1011\u102C\u1038\u1001\u103C\u1004\u103A\u1038\u1019\u101B\u103E\u102D\u1015\u102B\u104A","nb":"Den midlertidige mappen (tmp) er ikke konfigurert i php.ini.","nl":"Er is geen tijdelijke map geconfigureerd in php.ini, of de gespecificeerde map bestaat niet.","nn":"F\xF8rebels mappe (tmp) er ikkje konfigurert i php.ini.","no":"Den midlertidige mappen (tmp) er ikke konfigurert i php.ini.","pl":"Nie skonfigurowano folderu tymczasowego w php.ini lub skonfigurowany folder nie istnieje.","pt":"N\xE3o existe uma pasta tempor\xE1ria configurada no arquivo php.ini.","pt_BR":"Nenhum diret\xF3rio tempor\xE1rio foi configurado no php.ini.","ro":"Nu este configurat nici un director temporar in php.ini.","ru":"\u041D\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u0430\u044F \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438\u044F \u0432 php.ini.","sk":"V php.ini nie je nastaven\xE1 cesta k address\xE1ru pre do\u010Dasn\xE9 s\xFAbory.","sl":"Za\u010Dasna mapa ni nastavljena v php.ini.","sq":"Asnj\xEB folder i p\xEBrkohsh\xEBm nuk \xEBsht\xEB konfiguruar n\xEB php.ini.","sr_Cyrl":"\u041F\u0440\u0438\u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0438\u0458\u0443\u043C \u043D\u0438\u0458\u0435 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0438\u0441\u0430\u043D \u0443 php.ini.","sr_Latn":"Privremeni direktorijum nije konfigurisan u php.ini.","sv":"Det finns ingen tempor\xE4r mapp konfigurerad i php.ini.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E01\u0E32\u0E23\u0E15\u0E31\u0E49\u0E07\u0E04\u0E48\u0E32\u0E42\u0E1F\u0E25\u0E40\u0E14\u0E2D\u0E23\u0E4C\u0E0A\u0E31\u0E48\u0E27\u0E04\u0E23\u0E32\u0E27 (temporary folder) \u0E43\u0E19 php.ini","tl":"Walang temporaryong folder ang naayos sa php.ini.","tr":"php.ini i\xE7erisinde ge\xE7ici dizin tan\u0131mlanmad\u0131.","uk":"\u041D\u0435 \u043D\u0430\u043B\u0430\u0448\u0442\u043E\u0432\u0430\u043D\u0430 \u0442\u0438\u043C\u0447\u0430\u0441\u043E\u0432\u0430 \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0456\u044F \u0432 php.ini.","ur":"\u0645\u06CC\u06BA \u06A9\u0648\u0626\u06CC \u0639\u0627\u0631\u0636\u06CC \u0641\u0648\u0644\u0688\u0631 \u06A9\u0646\u0641\u06CC\u06AF\u0631 \u0646\u06C1\u06CC\u06BA \u06A9\u06CC\u0627 \u06AF\u06CC\u0627\u060C \u06CC\u0627 \u06A9\u0646\u0641\u06CC\u06AF\u0631\u0688 \u0641\u0648\u0644\u0688\u0631 \u0645\u0648\u062C\u0648\u062F \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 php.ini","uz":"php.ini da vaqtinchalik katalog sozlanmagan.","vi":"Th\u01B0 m\u1EE5c t\u1EA1m kh\xF4ng \u0111\u01B0\u1EE3c \u0111\u1ECBnh ngh\u0129a trong php.ini.","zh_CN":"php.ini \u91CC\u6CA1\u6709\u914D\u7F6E\u4E34\u65F6\u6587\u4EF6\u76EE\u5F55\u3002","zh_TW":"php.ini \u88E1\u6C92\u6709\u914D\u7F6E\u81E8\u6642\u76EE\u9304\u3002"}}};var CANNOT_WRITE_TEMPORARY_FILE_TO_DISK={"id":"Cannot write temporary file to disk.","translations":{"validators":{"fr":"Impossible d'\xE9crire le fichier temporaire sur le disque.","af":"Kan nie tydelike l\xEAer skryf op skyf nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0643\u062A\u0627\u0628\u0629 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u0645\u0624\u0642\u062A.","az":"M\xFCv\u0259qq\u0259ti fayl disk\u0259 yaz\u0131la bilmir.","be":"\u041D\u0435\u043C\u0430\u0433\u0447\u044B\u043C\u0430 \u0437\u0430\u043F\u0456\u0441\u0430\u0446\u044C \u0447\u0430\u0441\u043E\u0432\u044B \u0444\u0430\u0439\u043B \u043D\u0430 \u0434\u044B\u0441\u043A.","bg":"\u041D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0437\u0430\u043F\u0438\u0448\u0435 \u0432\u0440\u0435\u043C\u0435\u043D\u0435\u043D \u0444\u0430\u0439\u043B \u043D\u0430 \u0434\u0438\u0441\u043A\u0430.","bs":"Privremenu datoteku nije mogu\u0107e upisati na disk.","ca":"No es va poder escriure l'arxiu temporal en el disc.","cs":"Do\u010Dasn\xFD soubor se nepoda\u0159ilo zapsat na disk.","cy":"Methwyd ag ysgrifennu'r ffeil dros-dro ar ddisg.","da":"Kan ikke skrive midlertidig fil til disk.","de":"Kann die tempor\xE4re Datei nicht speichern.","el":"\u0391\u03B4\u03C5\u03BD\u03B1\u03BC\u03AF\u03B1 \u03B5\u03B3\u03B3\u03C1\u03B1\u03C6\u03AE\u03C2 \u03C0\u03C1\u03BF\u03C3\u03C9\u03C1\u03B9\u03BD\u03BF\u03CD \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF\u03C5 \u03C3\u03C4\u03BF \u03B4\u03AF\u03C3\u03BA\u03BF.","en":"Cannot write temporary file to disk.","es":"No se pudo escribir el archivo temporal en el disco.","et":"Ajutist faili ei saa kettale kirjutada.","eu":"Ezin izan da aldi baterako fitxategia diskoan idatzi.","fa":"\u0641\u0627\u06CC\u0644 \u0645\u0648\u0642\u062A\u06CC \u0631\u0627 \u0646\u0645\u06CC\u200C\u062A\u0648\u0627\u0646 \u062F\u0631 \u062F\u06CC\u0633\u06A9 \u0646\u0648\u0634\u062A.","fi":"V\xE4liaikaistiedostoa ei voitu kirjoittaa levylle.","gl":"Non se puido escribir o arquivo temporal no disco.","he":"\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05DC\u05DB\u05EA\u05D5\u05D1 \u05E7\u05D5\u05D1\u05E5 \u05D6\u05DE\u05E0\u05D9 \u05DC\u05D3\u05D9\u05E1\u05E7.","hr":"Ne mogu zapisati privremenu datoteku na disk.","hu":"Az ideiglenes f\xE1jl nem \xEDrhat\xF3 a lemezre.","hy":"\u053A\u0561\u0574\u0561\u0576\u0561\u056F\u0561\u057E\u0578\u0580 \u0576\u056B\u0577\u0584\u0568 \u0570\u0576\u0561\u0580\u0561\u057E\u0578\u0580 \u0579\u0567 \u0563\u0580\u0565\u056C \u057D\u056F\u0561\u057E\u0561\u057C\u0561\u056F\u056B \u057E\u0580\u0561\u0589","id":"Tidak dapat menuliskan berkas sementara ke dalam media penyimpanan.","it":"Impossibile scrivere il file temporaneo sul disco.","ja":"\u4E00\u6642\u30D5\u30A1\u30A4\u30EB\u3092\u30C7\u30A3\u30B9\u30AF\u306B\u66F8\u304D\u8FBC\u3080\u3053\u3068\u304C\u3067\u304D\u307E\u305B\u3093\u3002","lb":"Den tempor\xE4re Fichier kann net gesp\xE4ichert ginn.","lt":"Nepavyko i\u0161saugoti laikino failo.","lv":"Nevar ierakst\u012Bt pagaidu failu uz diska.","mk":"\u041D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043D\u0430\u043F\u0438\u0448\u0435 \u043F\u0440\u0438\u0432\u0440\u0435\u043C\u0435\u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0430 \u0434\u0438\u0441\u043A\u043E\u0442.","mn":"\u0422\u04AF\u0440 \u0437\u0443\u0443\u0440\u044B\u043D \u0444\u0430\u0439\u043B\u044B\u0433 \u0434\u0438\u0441\u043A \u0440\u0443\u0443 \u0431\u0438\u0447\u0438\u0436 \u0431\u043E\u043B\u043E\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"\u101A\u102C\u101B\u102E\u1016\u102D\u102F\u1004\u103A\u1000\u102D\u102F disk \u1019\u101B\u1031\u1038\u1014\u102D\u102F\u1004\u103A\u1015\u102B\u104B","nb":"Kan ikke skrive midlertidig fil til disk.","nl":"Kan het tijdelijke bestand niet wegschrijven op disk.","nn":"Kan ikkje skrive f\xF8rebels fil til disk.","no":"Kan ikke skrive midlertidig fil til disk.","pl":"Nie mo\u017Cna zapisa\u0107 pliku tymczasowego na dysku.","pt":"N\xE3o foi poss\xEDvel escrever os arquivos tempor\xE1rios no disco.","pt_BR":"N\xE3o foi poss\xEDvel escrever o arquivo tempor\xE1rio no disco.","ro":"Nu a fost posibil\u0103 scrierea fi\u0219ierului temporar pe disk.","ru":"\u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0437\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0439 \u0444\u0430\u0439\u043B \u043D\u0430 \u0434\u0438\u0441\u043A.","sk":"Do\u010Dasn\xFD s\xFAbor sa nepodarilo zap\xEDsa\u0165 na disk.","sl":"Za\u010Dasne datoteke ni bilo mogo\u010De zapisati na disk.","sq":"Nuk mund t\xEB shkruhet file i p\xEBrkohsh\xEBm n\xEB disk.","sr_Cyrl":"\u041D\u0435\u043C\u043E\u0433\u0443\u045B\u0435 \u043F\u0438\u0441\u0430\u045A\u0435 \u043F\u0440\u0438\u0432\u0440\u0435\u043C\u0435\u043D\u0435 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435 \u043D\u0430 \u0434\u0438\u0441\u043A.","sr_Latn":"Nemogu\u0107e pisanje privremene datoteke na disk.","sv":"Kan inte skriva tempor\xE4r fil till disken.","th":"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E40\u0E02\u0E35\u0E22\u0E19\u0E44\u0E1F\u0E25\u0E4C\u0E0A\u0E31\u0E48\u0E27\u0E04\u0E23\u0E32\u0E27 (temporary file) \u0E25\u0E07\u0E14\u0E34\u0E2A\u0E01\u0E4C\u0E44\u0E14\u0E49","tl":"Temporaryong hindi  makasulat ng file sa disk.","tr":"Ge\xE7ici dosya diske yaz\u0131lam\u0131yor.","uk":"\u041D\u0435\u043C\u043E\u0436\u043B\u0438\u0432\u043E \u0437\u0430\u043F\u0438\u0441\u0430\u0442\u0438 \u0442\u0438\u043C\u0447\u0430\u0441\u043E\u0432\u0438\u0439 \u0444\u0430\u0439\u043B \u043D\u0430 \u0434\u0438\u0441\u043A.","ur":"\u0639\u0627\u0631\u0636\u06CC \u0641\u0627\u0626\u0644 \u06A9\u0648 \u0688\u0633\u06A9 \u067E\u0631 \u0646\u06C1\u06CC\u06BA \u0644\u06A9\u06BE\u0627 \u062C\u0627 \u0633\u06A9\u062A\u0627","uz":"Diskka vaqtinchalik faylni yozib bo'lmadi.","vi":"Kh\xF4ng th\u1EC3 ghi t\u1EADp tin t\u1EA1m ra \u0111\u0129a.","zh_CN":"\u4E34\u65F6\u6587\u4EF6\u5199\u5165\u78C1\u76D8\u5931\u8D25\u3002","zh_TW":"\u66AB\u5B58\u6A94\u5BEB\u5165\u78C1\u789F\u5931\u6557\u3002"}}};var A_PHP_EXTENSION_CAUSED_THE_UPLOAD_TO_FAIL={"id":"A PHP extension caused the upload to fail.","translations":{"validators":{"fr":"Une extension PHP a emp\xEAch\xE9 le transfert du fichier.","af":"'n PHP-uitbreiding veroorsaak die oplaai van die l\xEAer om te misluk.","ar":"\u0627\u062D\u062F \u0627\u0636\u0627\u0641\u0627\u062A PHP \u062A\u0633\u0628\u0628\u062A \u0641\u0649 \u0641\u0634\u0644 \u0627\u0633\u062A\u0642\u0628\u0627\u0644 \u0627\u0644\u0645\u0644\u0641.","az":"Bir PHP \u0259lav\u0259si fayl\u0131n y\xFCkl\u0259nm\u0259sin\u0259 mane oldu.","be":"\u041F\u0430\u0448\u044B\u0440\u044D\u043D\u043D\u0435 PHP \u0432\u044B\u043A\u043B\u0456\u043A\u0430\u043B\u0430 \u043F\u0430\u043C\u044B\u043B\u043A\u0443 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0456.","bg":"PHP \u0440\u0430\u0437\u0448\u0438\u0440\u0435\u043D\u0438\u0435 \u043F\u0440\u0435\u0434\u0438\u0437\u0432\u0438\u043A\u0430 \u043F\u0440\u0435\u043A\u044A\u0441\u0432\u0430\u043D\u0435 \u043D\u0430 \u043A\u0430\u0447\u0432\u0430\u043D\u0435\u0442\u043E.","bs":"Prenos datoteke nije uspio zbog PHP ekstenzije.","ca":"Una extensi\xF3 de PHP va fer que la pujada fallara.","cs":"Roz\u0161\xED\u0159en\xED PHP zabr\xE1nilo nahr\xE1n\xED souboru.","cy":"Methwyd ag uwchlwytho oherwydd ategyn PHP.","da":"En PHP-udvidelse for\xE5rsagede fejl i upload.","de":"Eine PHP-Erweiterung verhinderte den Upload.","el":"\u039C\u03B9\u03B1 \u03B5\u03C0\u03AD\u03BA\u03C4\u03B1\u03C3\u03B7 PHP \u03C0\u03C1\u03BF\u03BA\u03AC\u03BB\u03B5\u03C3\u03B5 \u03B1\u03B4\u03C5\u03BD\u03B1\u03BC\u03AF\u03B1 \u03B1\u03BD\u03B5\u03B2\u03AC\u03C3\u03BC\u03B1\u03C4\u03BF\u03C2.","en":"A PHP extension caused the upload to fail.","es":"Una extensi\xF3n de PHP provoc\xF3 que la carga fallara.","et":"PHP laiendi t\xF5ttu eba\xF5nnestus faili \xFCleslaadimine.","eu":"PHP luzapen batek igoeraren hutsa eragin du.","fa":"\u06CC\u06A9 \u0627\u0641\u0632\u0648\u0646\u0647 PHP \u0628\u0627\u0639\u062B \u0634\u062F \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC \u0646\u0627\u0645\u0648\u0641\u0642 \u0628\u0627\u0634\u062F.","fi":"PHP-laajennoksen vuoksi tiedoston lataus ep\xE4onnistui.","gl":"Unha extensi\xF3n de PHP provocou que a subida fallara.","he":"\u05E1\u05D9\u05D5\u05DE\u05EA PHP \u05D2\u05E8\u05DD \u05DC\u05D4\u05E2\u05DC\u05D0\u05D4 \u05DC\u05D4\u05D9\u05DB\u05E9\u05DC.","hr":"Prijenos datoteke nije uspio zbog PHP ekstenzije.","hu":"Egy PHP b\u0151v\xEDtm\xE9ny miatt a felt\xF6lt\xE9s nem siker\xFClt.","hy":"PHP \u0586\u0578\u0580\u0574\u0561\u057F\u0568 \u0564\u0561\u0580\u0571\u0565\u056C \u0567 \u0562\u0565\u057C\u0576\u0574\u0561\u0576 \u0579\u0570\u0561\u057B\u0578\u0572\u0574\u0561\u0576 \u057A\u0561\u057F\u0573\u0561\u057C\u0589","id":"Sebuah ekstensi PHP menyebabkan kegagalan unggah.","it":"Un'estensione PHP ha causato il fallimento del caricamento.","ja":"PHP\u62E1\u5F35\u306B\u3088\u3063\u3066\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002","lb":"Eng PHP-Erweiderung huet den Upload verh\xEBnnert.","lt":"PHP pl\u0117tinys sutrukd\u0117 failo \u012Fk\u0117lim\u0105 ir jis nepavyko.","lv":"PHP papla\u0161in\u0101jums izrais\u012Bja aug\u0161upiel\u0101des neizdo\u0161anos.","mk":"PHP \u0435\u043A\u0441\u0442\u0435\u043D\u0437\u0438\u0458\u0430\u0442\u0430 \u043F\u0440\u0435\u0434\u0438\u0437\u0432\u0438\u043A\u0430 \u043F\u043E\u0434\u0438\u0433\u043D\u0443\u0432\u0430\u045A\u0435\u0442\u043E \u0434\u0430 \u0431\u0438\u0434\u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u043E.","mn":"PHP extension \u043D\u044C upload -\u0433 \u0430\u043C\u0436\u0438\u043B\u0442\u0433\u04AF\u0439 \u0431\u043E\u043B\u0433\u043E\u043E\u0434 \u0431\u0430\u0439\u043D\u0430.","my":"PHP extension \u1010\u1005\u103A\u1001\u102F\u1000\u103C\u1031\u102C\u1004\u103A\u1037 upload \u1010\u1004\u103A\u104D\u1019\u101B\u1014\u102D\u102F\u1004\u103A\u1015\u102B\u104B","nb":"En PHP-utvidelse for\xE5rsaket en feil under opplasting.","nl":"De upload is mislukt vanwege een PHP-extensie.","nn":"Ei PHP-udviding for\xE5rsaka feil under opplasting.","no":"En PHP-utvidelse for\xE5rsaket en feil under opplasting.","pl":"Rozszerzenie PHP spowodowa\u0142o b\u0142\u0105d podczas wgrywania.","pt":"Uma extens\xE3o PHP causou a falha no envio.","pt_BR":"Uma extens\xE3o PHP fez com que o envio falhasse.","ro":"O extensie PHP a prevenit \xEEnc\u0103rcarea cu succes a fi\u0219ierului.","ru":"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u0438\u0435 PHP \u0432\u044B\u0437\u0432\u0430\u043B\u043E \u043E\u0448\u0438\u0431\u043A\u0443 \u043F\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0435.","sk":"Roz\u0161\xEDrenie PHP zabr\xE1nilo nahraniu s\xFAboru.","sl":"PHP raz\u0161iritev je vzrok, da nalaganje ni uspelo.","sq":"Nj\xEB ekstension i PHP-s\xEB shkaktoi d\xEBshtimin e ngarkimit.","sr_Cyrl":"PHP \u0435\u043A\u0441\u0442\u0435\u043D\u0437\u0438\u0458\u0430 \u0458\u0435 \u043F\u0440\u043E\u0443\u0437\u0440\u043E\u043A\u043E\u0432\u0430\u043B\u0430 \u043D\u0435\u0443\u0441\u043F\u0435\u0445 \u043E\u0442\u043F\u0440\u0435\u043C\u0430\u045A\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435.","sr_Latn":"PHP ekstenzija je prouzrokovala neuspeh otpremanja datoteke.","sv":"En PHP extension gjorde att uppladdningen misslyckades.","th":"PHP extension \u0E17\u0E33\u0E43\u0E2B\u0E49\u0E01\u0E32\u0E23\u0E2D\u0E31\u0E1B\u0E42\u0E2B\u0E25\u0E14\u0E21\u0E35\u0E1B\u0E31\u0E0D\u0E2B\u0E32","tl":"Ang dahilan ng pagkabigo ng pagupload ng files ay isang extension ng PHP.","tr":"Bir PHP eklentisi dosyan\u0131n y\xFCklemesini ba\u015Far\u0131s\u0131z k\u0131ld\u0131.","uk":"\u0420\u043E\u0437\u0448\u0438\u0440\u0435\u043D\u043D\u044F PHP \u0432\u0438\u043A\u043B\u0438\u043A\u0430\u043B\u043E \u043F\u043E\u043C\u0438\u043B\u043A\u0443 \u043F\u0440\u0438 \u0437\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u043D\u0456.","ur":"\u067E\u06CC \u0627\u06CC\u0686 \u067E\u06CC \u06A9\u06CC \u062A\u0648\u0633\u06CC\u0639 \u06A9\u06CC \u0648\u062C\u06C1 \u0633\u06D2 \u0627\u067E \u0644\u0648\u0688 \u0646\u0627\u06A9\u0627\u0645 \u06C1\u0648 \u06AF\u06CC\u0627","uz":"PHP kengaytmasi yuklash paytida xatolik yuz berdi.","vi":"M\u1ED9t PHP extension \u0111\xE3 ph\xE1 h\u1ECFng qu\xE1 tr\xECnh t\u1EA3i l\xEAn c\u1EE7a t\u1EADp tin.","zh_CN":"\u67D0\u4E2A PHP \u6269\u5C55\u9020\u6210\u4E0A\u4F20\u5931\u8D25\u3002","zh_TW":"\u67D0\u500B PHP \u64F4\u5C55\u9020\u6210\u4E0A\u50B3\u5931\u6557\u3002"}}};var THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_MORE_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_MORE={"id":"This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.","translations":{"validators":{"fr":"Cette collection doit contenir {{ limit }} \xE9l\xE9ment ou plus.|Cette collection doit contenir {{ limit }} \xE9l\xE9ments ou plus.","af":"Hierdie versameling moet {{ limit }} element of meer bevat.|Hierdie versameling moet {{ limit }} elemente of meer bevat.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0643\u062B\u0631.","az":"Bu kolleksiyada {{ limit }} v\u0259 ya daha \xE7ox element olmal\u0131d\u0131r.","be":"\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \u043F\u0440\u044B\u043D\u0430\u043C\u0441\u0456 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \u043F\u0440\u044B\u043D\u0430\u043C\u0441\u0456 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E.","bg":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043F\u043E\u043D\u0435 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430.","bs":"Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.","ca":"Aquesta col\xB7lecci\xF3 ha de contenir {{ limit }} element o m\xE9s.|Aquesta col\xB7lecci\xF3 ha de contenir {{ limit }} elements o m\xE9s.","cs":"Tato kolekce mus\xED obsahovat minim\xE1ln\u011B {{ limit }} prvek.|Tato kolekce mus\xED obsahovat minim\xE1ln\u011B {{ limit }} prvky.|Tato kolekce mus\xED obsahovat minim\xE1ln\u011B {{ limit }} prvk\u016F.","cy":"Dylai'r casgliad hwn gynnwys {{ limit }} elfen neu fwy.","da":"Denne samling skal indeholde mindst \xE9t element.|Denne samling skal indeholde mindst {{ limit }} elementer.","de":"Diese Sammlung sollte {{ limit }} oder mehr Elemente beinhalten.|Diese Sammlung sollte {{ limit }} oder mehr Elemente beinhalten.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03BF \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B1.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1 \u03AE \u03C0\u03B5\u03C1\u03B9\u03C3\u03C3\u03CC\u03C4\u03B5\u03C1\u03B1.","en":"This collection should contain {{ limit }} element or more.|This collection should contain {{ limit }} elements or more.","es":"Esta colecci\xF3n debe contener {{ limit }} elemento o m\xE1s.|Esta colecci\xF3n debe contener {{ limit }} elementos o m\xE1s.","et":"Kogumikus peaks olema v\xE4hemalt {{ limit }} element.|Kogumikus peaks olema v\xE4hemalt {{ limit }} elementi.","eu":"Bilduma honek gutxienez elementu {{ limit }} eduki beharko luke.|Bilduma honek gutxienez {{ limit }} elementu eduki beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u06CC\u0627 \u0628\u06CC\u0634\u062A\u0631 \u0628\u0627\u0634\u062F.|\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u06CC\u0627 \u0628\u06CC\u0634\u062A\u0631 \u0628\u0627\u0634\u062F.","fi":"T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla v\xE4hint\xE4\xE4n yksi elementti.|T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla v\xE4hint\xE4\xE4n {{ limit }} elementti\xE4.","gl":"Esta colecci\xF3n debe conter {{ limit }} elemento ou m\xE1is.|Esta colecci\xF3n debe conter {{ limit }} elementos ou m\xE1is.","he":"\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D0\u05D5 \u05D9\u05D5\u05EA\u05E8.|\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D0\u05D5 \u05D9\u05D5\u05EA\u05E8.","hr":"Ova kolekcija treba sadr\u017Eavati {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba sadr\u017Eavati {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija treba sadr\u017Eavati {{ limit }} ili vi\u0161e elemenata.","hu":"Ennek a gy\u0171jtem\xE9nynek legal\xE1bb {{ limit }} elemet kell tartalmaznia.|Ennek a gy\u0171jtem\xE9nynek legal\xE1bb {{ limit }} elemet kell tartalmaznia.","hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B {{ limit }} \u056F\u0561\u0574 \u0561\u057E\u0565\u056C\u056B \u057F\u0561\u0580\u0580\u0565\u0580\u0589|\u0531\u0575\u057D \u0570\u0561\u057E\u0565\u056C\u057E\u0561\u056E\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0580\u0578\u0582\u0576\u0561\u056F\u056B limit }} \u057F\u0561\u0580\u0580 \u056F\u0561\u0574 \u0561\u057E\u0565\u056C\u056B\u0576\u0589|\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0580\u0578\u0582\u0576\u0561\u056F\u056B {{ limit }} \u057F\u0561\u0580\u0580\u0565\u0580\u056B\u0576 \u056F\u0561\u0574 \u0561\u057E\u0565\u056C\u056B\u0589","id":"Kumpulan ini harus memiliki {{ limit }} elemen atau lebih.","it":"Questa collezione dovrebbe contenere almeno {{ limit }} elemento.|Questa collezione dovrebbe contenere almeno {{ limit }} elementi.","ja":"{{ limit }}\u500B\u4EE5\u4E0A\u306E\u8981\u7D20\u3092\u542B\u3093\u3067\u306A\u3051\u308C\u3070\u3044\u3051\u307E\u305B\u3093\u3002","lb":"D\xEBs Sammlung sollt {{ limit }} oder m\xE9i Elementer hunn.","lt":"S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba daugiau \u012Fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba daugiau \u012Fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba daugiau \u012Fra\u0161\u0173.","lv":"\u0160is kr\u0101jums satur 0 elementu.|\u0160im kr\u0101jumam j\u0101satur vismaz {{ limit }} elementu.|\u0160im kr\u0101jumam j\u0101satur vismaz {{ limit }} elementus.","mk":"\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435.|\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438 \u0438\u043B\u0438 \u043F\u043E\u0432\u0435\u045C\u0435.","mn":"\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 {{ limit }} \u0431\u0430 \u0442\u04AF\u04AF\u043D\u044D\u044D\u0441 \u0434\u044D\u044D\u0448 \u0442\u043E\u043E\u043D\u044B \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.|\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 {{ limit }} \u0431\u0430 \u0442\u04AF\u04AF\u043D\u044D\u044D\u0441 \u0434\u044D\u044D\u0448 \u0442\u043E\u043E\u043D\u044B \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024 collection \u1010\u103D\u1004\u103A {{limit}} element (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1011\u102D\u102F\u1037\u1011\u1000\u103A\u1019\u1015\u102D\u102F\u101E\u1004\u1037\u103A\u1015\u102B\u104B","nb":"Denne samlingen m\xE5 inneholde {{ limit }} element eller flere.|Denne samlingen m\xE5 inneholde {{ limit }} elementer eller flere.","nl":"Deze collectie moet {{ limit }} element of meer bevatten.|Deze collectie moet {{ limit }} elementen of meer bevatten.","nn":"Denne samlinga m\xE5 innehalde {{ limit }} element eller meir.|Denne samlinga m\xE5 innehalde {{ limit }} element eller meir.","no":"Denne samlingen m\xE5 inneholde {{ limit }} element eller flere.|Denne samlingen m\xE5 inneholde {{ limit }} elementer eller flere.","pl":"Ten zbi\xF3r powinien zawiera\u0107 {{ limit }} lub wi\u0119cej element\xF3w.","pt":"Esta cole\xE7\xE3o deve conter {{ limit }} elemento ou mais.|Esta cole\xE7\xE3o deve conter {{ limit }} elementos ou mais.","pt_BR":"Esta cole\xE7\xE3o deve conter {{ limit }} elemento ou mais.|Esta cole\xE7\xE3o deve conter {{ limit }} elementos ou mais.","ro":"Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel pu\u021Bin {{ limit }} element.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel pu\u021Bin {{ limit }} elemente.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel pu\u021Bin {{ limit }} de elemente.","ru":"\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0438\u043B\u0438 \u0431\u043E\u043B\u044C\u0448\u0435.","sk":"T\xE1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvok alebo viac.|T\xE1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvky alebo viac.|T\xE1to kolekcia by mala obsahova\u0165 aspo\u0148 {{ limit }} prvkov alebo viac.","sl":"Ta zbirka bi morala vsebovati {{ limit }} element ali ve\u010D.|Ta zbirka bi morala vsebovati {{ limit }} elementa ali ve\u010D.|Ta zbirka bi morala vsebovati {{ limit }} elemente ali ve\u010D.|Ta zbirka bi morala vsebovati {{ limit }} elementov ali ve\u010D.","sq":"Ky koleksion duhet t\xEB p\xEBrmbaj\xEB {{ limit }} element ose m\xEB shum\xEB.|Ky koleksion duhet t\xEB p\xEBrmbaj\xEB {{ limit }} elemente ose m\xEB shum\xEB.","sr_Cyrl":"\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u0432\u0438\u0448\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u0432\u0438\u0448\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u0432\u0438\u0448\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.","sr_Latn":"Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili vi\u0161e elemenata.","sv":"Den h\xE4r samlingen ska inneh\xE5lla {{ limit }} element eller mer.|Den h\xE4r samlingen ska inneh\xE5lla {{ limit }} element eller mer.","th":"\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E44\u0E1B\u0E14\u0E49\u0E27\u0E22\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22 {{ limit }} \u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01","tl":"Ang koleksyon na ito ay dapat magkaroon ng {{ limit }} elemento o marami pa.|Ang koleksyon na ito ay dapat magkaroon ng {{ limit }} mga elemento o marami pa.","tr":"Bu derlem {{ limit }} veya daha \xE7ok eleman i\xE7ermelidir.","uk":"\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0447\u0438 \u0431\u0456\u043B\u044C\u0448\u0435.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0447\u0438 \u0431\u0456\u043B\u044C\u0448\u0435.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432 \u0447\u0438 \u0431\u0456\u043B\u044C\u0448\u0435.","ur":"\u0639\u0646\u0627\u0635\u0631 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{ limit }  \u0639\u0646\u0635\u0631 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA {{ limit }} \u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA","uz":"Ushbu to'plam {{ limit }} ta yoki undan ko'p narsalarni o'z ichiga olishi kerak.|Ushbu to'plam {{ limit }} yoki undan ortiq narsalarni o'z ichiga olishi kerak.","vi":"Danh s\xE1ch ph\u1EA3i ch\u1EE9a {{ limit }} th\xE0nh ph\u1EA7n ho\u1EB7c nhi\u1EC1u h\u01A1n.|Danh s\xE1ch ph\u1EA3i ch\u1EE9a {{ limit }} th\xE0nh ph\u1EA7n ho\u1EB7c nhi\u1EC1u h\u01A1n.","zh_CN":"\u8BE5\u96C6\u5408\u6700\u5C11\u5E94\u5305\u542B {{ limit }} \u4E2A\u5143\u7D20\u3002","zh_TW":"\u8A72\u96C6\u5408\u6700\u5C11\u61C9\u5305\u542B {{ limit }} \u500B\u5143\u7D20\u3002"}}};var THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_LESS_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_LESS={"id":"This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.","translations":{"validators":{"fr":"Cette collection doit contenir {{ limit }} \xE9l\xE9ment ou moins.|Cette collection doit contenir {{ limit }} \xE9l\xE9ments ou moins.","af":"Hierdie versameling moet {{ limit }} element of minder bevat.|Hierdie versameling moet {{ limit }} elemente of meer bevat.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0627\u0648 \u0627\u0642\u0644.","az":"Bu kolleksiyada {{ limit }} v\u0259 ya daha az element olmal\u0131d\u0131r.","be":"\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C {{ limit }} \u0430\u0431\u043E \u043C\u0435\u043D\u0448 \u044D\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C {{ limit }} \u0430\u0431\u043E \u043C\u0435\u043D\u0448 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E.","bg":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0430\u0439-\u043C\u043D\u043E\u0433\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430.","bs":"Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.","ca":"Aquesta col\xB7lecci\xF3 ha de contenir {{ limit }} element o menys.|Aquesta col\xB7lecci\xF3 ha de contenir {{ limit }} elements o menys.","cs":"Tato kolekce mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} prvek.|Tato kolekce mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} prvky.|Tato kolekce mus\xED obsahovat maxim\xE1ln\u011B {{ limit }} prvk\u016F.","cy":"Dylai'r casgliad hwn gynnwys {{ limit }} elfen neu lai.","da":"Denne samling skal indeholde h\xF8jst \xE9t element.|Denne samling skal indeholde h\xF8jst {{ limit }} elementer.","de":"Diese Sammlung sollte {{ limit }} oder weniger Elemente beinhalten.|Diese Sammlung sollte {{ limit }} oder weniger Elemente beinhalten.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AFo \u03AE \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03B1.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1 \u03AE \u03BB\u03B9\u03B3\u03CC\u03C4\u03B5\u03C1\u03B1.","en":"This collection should contain {{ limit }} element or less.|This collection should contain {{ limit }} elements or less.","es":"Esta colecci\xF3n debe contener {{ limit }} elemento o menos.|Esta colecci\xF3n debe contener {{ limit }} elementos o menos.","et":"Kogumikus peaks olema \xFClimalt {{ limit }} element.|Kogumikus peaks olema \xFClimalt {{ limit }} elementi.","eu":"Bilduma honek gehienez elementu {{ limit }} eduki beharko luke.|Bilduma honek gehienez {{ limit }} elementu eduki beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F.|\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F.","fi":"T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla enint\xE4\xE4n yksi elementti.|T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla enint\xE4\xE4n {{ limit }} elementti\xE4.","gl":"Esta colecci\xF3n debe conter {{ limit }} elemento ou menos.|Esta colecci\xF3n debe conter {{ limit }} elementos ou menos.","he":"\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D0\u05D5 \u05E4\u05D7\u05D5\u05EA.|\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05D4\u05DB\u05D9\u05DC {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D0\u05D5 \u05E4\u05D7\u05D5\u05EA.","hr":"Ova kolekcija treba sadr\u017Eavati {{ limit }} ili manje elemenata.|Ova kolekcija treba sadr\u017Eavati {{ limit }} ili manje elemenata.|Ova kolekcija treba sadr\u017Eavati {{ limit }} ili manje elemenata.","hu":"Ez a gy\u0171jtem\xE9ny legfeljebb {{ limit }} elemet tartalmazhat.|Ez a gy\u0171jtem\xE9ny legfeljebb {{ limit }} elemet tartalmazhat.","hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B {{ limit }} \u057F\u0561\u0580\u0580\u0565\u0580 \u056F\u0561\u0574 \u0584\u056B\u0579\u0589|\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B {{ limit }} \u057F\u0561\u0580\u0580 \u056F\u0561\u0574 \u0584\u056B\u0579\u0589|\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B {{ limit }} \u057F\u0561\u0580\u0580\u0565\u0580 \u056F\u0561\u0574 \u0584\u056B\u0579\u0589","id":"Kumpulan ini harus memiliki kurang dari {{ limit }} elemen.","it":"Questa collezione dovrebbe contenere massimo {{ limit }} elemento.|Questa collezione dovrebbe contenere massimo {{ limit }} elementi.","ja":"\u8981\u7D20\u306F{{ limit }}\u500B\u307E\u3067\u3067\u3059\u3002","lb":"D\xEBs Sammlung sollt {{ limit }} oder manner Elementer hunn.","lt":"S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba ma\u017Eiau \u012Fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba ma\u017Eiau \u012Fra\u0161\u0173.|S\u0105ra\u0161e turi b\u016Bti {{ limit }} arba ma\u017Eiau \u012Fra\u0161\u0173.","lv":"\u0160is kr\u0101jums satur 0 elementu.|\u0160im kr\u0101jumam j\u0101satur ne vair\u0101k k\u0101 {{ limit }} elementu.|\u0160im kr\u0101jumam j\u0101satur ne vair\u0101k k\u0101 {{ limit }} elementus.","mk":"\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.|\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438 \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.","mn":"\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 {{ limit }} \u0431\u0430 \u0442\u04AF\u04AF\u043D\u044D\u044D\u0441 \u0434\u043E\u043E\u0448 \u0442\u043E\u043E\u043D\u044B \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.|\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 {{ limit }} \u0431\u0430 \u0442\u04AF\u04AF\u043D\u044D\u044D\u0441 \u0434\u043E\u043E\u0448 \u0442\u043E\u043E\u043D\u044B \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024 collection \u1010\u103D\u1004\u103A {{limit}} element (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u104E\u1004\u103A\u1038\u1011\u1000\u103A\u1014\u100A\u103A\u1038\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Denne samlingen m\xE5 inneholde {{ limit }} element eller f\xE6rre.|Denne samlingen m\xE5 inneholde {{ limit }} elementer eller f\xE6rre.","nl":"Deze collectie moet {{ limit }} element of minder bevatten.|Deze collectie moet {{ limit }} elementen of minder bevatten.","nn":"Denne samlinga m\xE5 innehalde {{ limit }} element eller f\xE6rre.|Denne samlinga m\xE5 innehalde {{ limit }} element eller f\xE6rre.","no":"Denne samlingen m\xE5 inneholde {{ limit }} element eller f\xE6rre.|Denne samlingen m\xE5 inneholde {{ limit }} elementer eller f\xE6rre.","pl":"Ten zbi\xF3r powinien zawiera\u0107 {{ limit }} lub mniej element\xF3w.","pt":"Esta cole\xE7\xE3o deve conter {{ limit }} elemento ou menos.|Esta cole\xE7\xE3o deve conter {{ limit }} elementos ou menos.","pt_BR":"Esta cole\xE7\xE3o deve conter {{ limit }} elemento ou menos.|Esta cole\xE7\xE3o deve conter {{ limit }} elementos ou menos.","ro":"Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel mult {{ limit }} element.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel mult {{ limit }} elemente.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 cel mult {{ limit }} de elemente.","ru":"\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.","sk":"T\xE1to kolekcia by mala maxim\xE1lne {{ limit }} prvok.|T\xE1to kolekcia by mala obsahova\u0165 maxim\xE1lne {{ limit }} prvky.|T\xE1to kolekcia by mala obsahova\u0165 maxim\xE1lne {{ limit }} prvkov.","sl":"Ta zbirka bi morala vsebovati {{ limit }} element ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elementa ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elemente ali manj.|Ta zbirka bi morala vsebovati {{ limit }} elementov ali manj.","sq":"Ky koleksion duhet t\xEB p\xEBrmbaj\xEB {{ limit }} element ose m\xEB pak.|Ky koleksion duhet t\xEB p\xEBrmbaj\xEB {{ limit }} elemente ose m\xEB pak.","sr_Cyrl":"\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u043C\u0430\u045A\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u043C\u0430\u045A\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 {{ limit }} \u0438\u043B\u0438 \u043C\u0430\u045A\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.","sr_Latn":"Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.|Ova kolekcija bi trebalo da sadr\u017Ei {{ limit }} ili manje elemenata.","sv":"Den h\xE4r samlingen ska inneh\xE5lla {{ limit }} element eller mindre.|Den h\xE4r samlingen ska inneh\xE5lla {{ limit }} element eller mindre.","th":"\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E21\u0E35\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E40\u0E01\u0E34\u0E19 {{ limit }}","tl":"Ang koleksyon na ito ay dapat magkaroon ng {{ limit }} elemento o maliit pa.|Ang koleksyon na ito ay dapat magkaroon ng {{ limit }} mga elemento o maliit pa.","tr":"Bu derlem {{ limit }} veya daha az eleman i\xE7ermelidir.","uk":"\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0447\u0438 \u043C\u0435\u043D\u0448\u0435.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430 \u0447\u0438 \u043C\u0435\u043D\u0448\u0435.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0447\u0438 \u043C\u0435\u043D\u0448\u0435.","ur":"\u0639\u0646\u0627\u0635\u0631 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{ limit } \u0639\u0646\u0635\u0631 \u06CC\u0627 \u0627\u0633 \u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA {{ limit }} \u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA","uz":"Ushbu to'plam {{ limit }} ta yoki undan kam narsalarni o'z ichiga olishi kerak.|Ushbu to'plamda {{ limit }} yoki undan kam element bo'lishi kerak.","vi":"Danh s\xE1ch ph\u1EA3i ch\u1EE9a {{ limit }} th\xE0nh ph\u1EA7n ho\u1EB7c \xEDt h\u01A1n.|Danh s\xE1ch ph\u1EA3i ch\u1EE9a {{ limit }} th\xE0nh ph\u1EA7n ho\u1EB7c \xEDt h\u01A1n.","zh_CN":"\u8BE5\u96C6\u5408\u6700\u591A\u5305\u542B {{ limit }} \u4E2A\u5143\u7D20\u3002","zh_TW":"\u8A72\u96C6\u5408\u6700\u591A\u5305\u542B {{ limit }} \u500B\u5143\u7D20\u3002"}}};var THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENT_THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENTS={"id":"This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.","translations":{"validators":{"fr":"Cette collection doit contenir exactement {{ limit }} \xE9l\xE9ment.|Cette collection doit contenir exactement {{ limit }} \xE9l\xE9ments.","af":"Hierdie versameling moet presies {{ limit }} element bevat.|Hierdie versameling moet presies {{ limit }} elemente bevat.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0627\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.|\u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 {{ limit }} \u0639\u0646\u0635\u0631 \u0641\u0642\u0637.","az":"Bu kolleksiyada tam olaraq {{ limit }} element olmal\u0131d\u0131r.","be":"\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \u0440\u043E\u045E\u043D\u0430 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \u0440\u043E\u045E\u043D\u0430 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E.","bg":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430.","bs":"Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} element.|Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} elementa.|Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} elemenata.","ca":"Aquesta col\xB7lecci\xF3 ha de contenir exactament {{ limit }} element.|Aquesta col\xB7lecci\xF3 ha de contenir exactament {{ limit }} elements.","cs":"Tato kolekce mus\xED obsahovat p\u0159esn\u011B {{ limit }} prvek.|Tato kolekce mus\xED obsahovat p\u0159esn\u011B {{ limit }} prvky.|Tato kolekce mus\xED obsahovat p\u0159esn\u011B {{ limit }} prvk\u016F.","cy":"Dylai'r casgliad hwn gynnwys union {{ limit }} elfen.","da":"Denne samling skal indeholde pr\xE6cis \xE9t element.|Denne samling skal indeholde pr\xE6cis {{ limit }} elementer.","de":"Diese Sammlung sollte genau {{ limit }} Element beinhalten.|Diese Sammlung sollte genau {{ limit }} Elemente beinhalten.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 \u03B1\u03BA\u03C1\u03B9\u03B2\u03CE\u03C2 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AFo.|\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 \u03B1\u03BA\u03C1\u03B9\u03B2\u03CE\u03C2 {{ limit }} \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1.","en":"This collection should contain exactly {{ limit }} element.|This collection should contain exactly {{ limit }} elements.","es":"Esta colecci\xF3n debe contener exactamente {{ limit }} elemento.|Esta colecci\xF3n debe contener exactamente {{ limit }} elementos.","et":"Kogumikus peaks olema t\xE4pselt {{ limit }} element.|Kogumikus peaks olema t\xE4pselt {{ limit }}|elementi.","eu":"Bilduma honek zehazki elementu {{ limit }} eduki beharko luke.|Bilduma honek zehazki {{ limit }} elementu eduki beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062F\u0642\u06CC\u0642\u0627 \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u0628\u0627\u0634\u062F.|\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062F\u0642\u06CC\u0642\u0627 \u062D\u0627\u0648\u06CC {{ limit }} \u0639\u0646\u0635\u0631 \u0628\u0627\u0634\u062F.","fi":"T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla tasan yksi elementti.|T\xE4ss\xE4 ryhm\xE4ss\xE4 tulee olla tasan {{ limit }} elementti\xE4.","gl":"Esta colecci\xF3n debe conter exactamente {{ limit }} elemento.|Esta colecci\xF3n debe conter exactamente {{ limit }} elementos.","he":"\u05D4\u05D0\u05D5\u05E1\u05E3 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC \u05D1\u05D3\u05D9\u05D5\u05E7 {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD.|\u05D4\u05D0\u05D5\u05E1\u05E3 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC \u05D1\u05D3\u05D9\u05D5\u05E7 {{ limit }} \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD.","hr":"Ova kolekcija treba sadr\u017Eavati to\u010Dno {{ limit }} element.|Ova kolekcija treba sadr\u017Eavati to\u010Dno {{ limit }} elementa.|Ova kolekcija treba sadr\u017Eavati to\u010Dno {{ limit }} elemenata.","hu":"Ennek a gy\u0171jtem\xE9nynek pontosan {{ limit }} elemet kell tartalmaznia.|Ennek a gy\u0171jtem\xE9nynek pontosan {{ limit }} elemet kell tartalmaznia.","hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B \u0578\u0582\u0572\u056B\u0572 {{ limit }} \u057F\u0561\u0580\u0580\u0589|\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B \u0578\u0582\u0572\u056B\u0572 {{ limit }} \u057F\u0561\u0580\u0580\u0565\u0580\u0589|\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0578\u0582\u0580\u0561\u056F\u056B {{ limit }} \u057F\u0561\u0580\u0580\u0565\u0580\u0589","id":"Kumpulan ini harus memiliki tepat {{ limit }} elemen.","it":"Questa collezione dovrebbe contenere esattamente {{ limit }} elemento.|Questa collezione dovrebbe contenere esattamente {{ limit }} elementi.","ja":"\u8981\u7D20\u306F\u3061\u3087\u3046\u3069{{ limit }}\u500B\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBs Sammlung sollt exakt {{ limit }} Element hunn.|D\xEBs Sammlung sollt exakt {{ limit }} Elementer hunn.","lt":"S\u0105ra\u0161e turi b\u016Bti lygiai {{ limit }} \u012Fra\u0161as.|S\u0105ra\u0161e turi b\u016Bti lygiai {{ limit }} \u012Fra\u0161ai.|S\u0105ra\u0161e turi b\u016Bti lygiai {{ limit }} \u012Fra\u0161\u0173.","lv":"\u0160is kr\u0101jums satur 0 elementu.|\u0160im kr\u0101jumam j\u0101satur tie\u0161i {{ limit }} elementu.|\u0160im kr\u0101jumam j\u0101satur tie\u0161i {{ limit }} elementus.","mk":"\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 \u0442\u043E\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438.","mn":"\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 \u044F\u0433 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.|\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 \u044F\u0433 {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1005\u102F\u1005\u100A\u103A\u1038\u1019\u103E\u102F\u1010\u103D\u1004\u103A {{limit}} element \u1021\u1010\u102D\u1021\u1000\u103B\u1015\u102B\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Denne samlingen m\xE5 inneholde n\xF8yaktig {{ limit }} element.|Denne samlingen m\xE5 inneholde n\xF8yaktig {{ limit }} elementer.","nl":"Deze collectie moet exact {{ limit }} element bevatten.|Deze collectie moet exact {{ limit }} elementen bevatten.","nn":"Denne samlinga m\xE5 innehalde n\xF8yaktig {{ limit }} element.|Denne samlinga m\xE5 innehalde n\xF8yaktig {{ limit }} element.","no":"Denne samlingen m\xE5 inneholde n\xF8yaktig {{ limit }} element.|Denne samlingen m\xE5 inneholde n\xF8yaktig {{ limit }} elementer.","pl":"Ten zbi\xF3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} element.|Ten zbi\xF3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} elementy.|Ten zbi\xF3r powinien zawiera\u0107 dok\u0142adnie {{ limit }} element\xF3w.","pt":"Esta cole\xE7\xE3o deve conter exatamente {{ limit }} elemento.|Esta cole\xE7\xE3o deve conter exatamente {{ limit }} elementos.","pt_BR":"Esta cole\xE7\xE3o deve conter exatamente {{ limit }} elemento.|Esta cole\xE7\xE3o deve conter exatamente {{ limit }} elementos.","ro":"Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 {{ limit }} element.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 {{ limit }} elemente.|Aceast\u0103 colec\u021Bie trebuie s\u0103 con\u021Bin\u0103 {{ limit }} de elemente.","ru":"\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0440\u043E\u0432\u043D\u043E {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0440\u043E\u0432\u043D\u043E {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430.|\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0440\u043E\u0432\u043D\u043E {{ limit }} \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432.","sk":"T\xE1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvok.|T\xE1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvky.|T\xE1to kolekcia by mala obsahova\u0165 presne {{ limit }} prvkov.","sl":"Ta zbirka bi morala vsebovati to\u010Dno {{ limit }} element.|Ta zbirka bi morala vsebovati to\u010Dno {{ limit }} elementa.|Ta zbirka bi morala vsebovati to\u010Dno {{ limit }} elemente.|Ta zbirka bi morala vsebovati to\u010Dno {{ limit }} elementov.","sq":"Ky koleksion duhet t\xEB p\xEBrmbaj\xEB sakt\xEBsisht {{ limit }} element.|Ky koleksion duhet t\xEB p\xEBrmbaj\xEB sakt\xEBsisht {{ limit }} elemente.","sr_Cyrl":"\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430.|\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0442\u0430\u0447\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430.","sr_Latn":"Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} element.|Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} elementa.|Ova kolekcija bi trebalo da sadr\u017Ei ta\u010Dno {{ limit }} elemenata.","sv":"Den h\xE4r samlingen ska inneh\xE5lla exakt {{ limit }} element.|Den h\xE4r samlingen ska inneh\xE5lla exakt {{ limit }} element.","th":"\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35 {{ limit }} \u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang koleksyong ito ay magkaroon ng eksaktong {{ limit }} elemento.|Ang koleksyong ito ay magkaroon ng eksaktong {{ limit }} mga elemento.","tr":"Bu derlem {{ limit }} eleman i\xE7ermelidir.","uk":"\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0430.|\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u0440\u0456\u0432\u043D\u043E {{ limit }} \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432.","ur":"\u0639\u0646\u0635\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{ limit }}  \u0639\u0646\u0635\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4|\u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06D2 \u0645\u06CC\u06BA \u0628\u0627\u0644\u06A9\u0644 {{ limit }} \u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA \u0628\u0627\u0644\u06A9\u0644","uz":"Ushbu to'plam to'liq {{ limit }} narsani o'z ichiga olishi kerak.|Ushbu to'plamda to'liq {{ limit }} ta ma'lumotlar bo'lishi kerak.","vi":"Danh s\xE1ch ph\u1EA3i ch\u1EE9a ch\xEDnh x\xE1c {{ limit }} th\xE0nh ph\u1EA7n.|Danh s\xE1ch ph\u1EA3i ch\u1EE9a ch\xEDnh x\xE1c {{ limit }} th\xE0nh ph\u1EA7n.","zh_CN":"\u8BE5\u96C6\u5408\u5E94\u5305\u542B {{ limit }} \u4E2A\u5143\u7D20 element \u3002","zh_TW":"\u8A72\u96C6\u5408\u61C9\u5305\u542B {{ limit }} \u500B\u5143\u7D20 element \u3002"}}};var INVALID_CARD_NUMBER={"id":"Invalid card number.","translations":{"validators":{"fr":"Num\xE9ro de carte invalide.","af":"Ongeldige kredietkaart nommer.","ar":"\u0631\u0642\u0645 \u0627\u0644\u0628\u0637\u0627\u0642\u0647 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D.","az":"Yanl\u0131\u015F kart n\xF6mr\u0259si.","be":"\u041D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B \u043D\u0443\u043C\u0430\u0440 \u043A\u0430\u0440\u0442\u044B.","bg":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u043E\u043C\u0435\u0440 \u043D\u0430 \u043A\u0430\u0440\u0442\u0430.","bs":"Broj kartice je neispravan.","ca":"N\xFAmero de targeta inv\xE0lid.","cs":"Neplatn\xE9 \u010D\xEDslo karty.","cy":"Nid oedd rhif y cerdyn yn ddilys.","da":"Ugyldigt kortnummer.","de":"Ung\xFCltige Kartennummer.","el":"\u039C\u03B7 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2 \u03BA\u03AC\u03C1\u03C4\u03B1\u03C2.","en":"Invalid card number.","es":"N\xFAmero de tarjeta inv\xE1lido.","et":"Vigane kaardi number.","eu":"Txartel zenbaki baliogabea.","fa":"\u0634\u0645\u0627\u0631\u0647 \u06A9\u0627\u0631\u062A \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Virheellinen korttinumero.","gl":"N\xFAmero de tarxeta non v\xE1lido.","he":"\u05DE\u05E1\u05E4\u05E8 \u05D4\u05DB\u05E8\u05D8\u05D9\u05E1 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Neispravan broj kartice.","hu":"\xC9rv\xE9nytelen k\xE1rtyasz\xE1m.","hy":"\u0554\u0561\u0580\u057F\u056B \u057D\u056D\u0561\u056C \u0570\u0561\u0574\u0561\u0580:","id":"Nomor kartu tidak sah.","it":"Numero di carta non valido.","ja":"\u7121\u52B9\u306A\u30AB\u30FC\u30C9\u756A\u53F7\u3067\u3059\u3002","lb":"Ong\xEBlteg Kaartennummer.","lt":"Klaidingas kortel\u0117s numeris.","lv":"Neder\u012Bgs kartes numurs.","mk":"\u0411\u0440\u043E\u0458\u043E\u0442 \u043D\u0430 \u043A\u0430\u0440\u0442\u0438\u0447\u043A\u0430\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D.","mn":"\u041A\u0430\u0440\u0442\u044B\u043D \u0434\u0443\u0433\u0430\u0430\u0440 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1000\u1012\u103A\u1014\u1036\u1015\u102B\u1010\u103A\u1019\u1019\u103E\u1014\u103A\u1015\u102B\u104B","nb":"Ugyldig kortnummer.","nl":"Ongeldig creditcardnummer.","nn":"Ugyldig kortnummer.","no":"Ugyldig kortnummer.","pl":"Nieprawid\u0142owy numer karty.","pt":"N\xFAmero de cart\xE3o inv\xE1lido.","pt_BR":"N\xFAmero de cart\xE3o inv\xE1lido.","ro":"Num\u0103rul card invalid.","ru":"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0430\u0440\u0442\u044B.","sk":"Neplatn\xE9 \u010D\xEDslo karty.","sl":"Neveljavna \u0161tevilka kartice.","sq":"Num\xEBr karte i pavlefsh\xEBm.","sr_Cyrl":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0431\u0440\u043E\u0458 \u043A\u0430\u0440\u0442\u0438\u0446\u0435.","sr_Latn":"Broj kartice nije validan.","sv":"Ogiltigt kortnummer.","th":"\u0E2B\u0E21\u0E32\u0E22\u0E40\u0E25\u0E02\u0E1A\u0E31\u0E15\u0E23\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi wastong numero ng kard.","tr":"Ge\xE7ersiz kart numaras\u0131.","uk":"\u041D\u0435\u0432\u0456\u0440\u043D\u0438\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0430\u0440\u0442\u0438.","ur":"\u063A\u0644\u0637 \u06A9\u0627\u0631\u0688 \u0646\u0645\u0628\u0631","uz":"Kata raqami noto'g'ri.","vi":"S\u1ED1 th\u1EBB kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u65E0\u6548\u7684\u4FE1\u7528\u5361\u53F7\u3002","zh_TW":"\u7121\u6548\u7684\u4FE1\u7528\u5361\u865F\u3002"}}};var UNSUPPORTED_CARD_TYPE_OR_INVALID_CARD_NUMBER={"id":"Unsupported card type or invalid card number.","translations":{"validators":{"fr":"Type de carte non support\xE9 ou num\xE9ro invalide.","af":"Nie-ondersteunde tipe kaart of ongeldige kredietkaart nommer.","ar":"\u0646\u0648\u0639 \u0627\u0644\u0628\u0637\u0627\u0642\u0647 \u063A\u064A\u0631 \u0645\u062F\u0639\u0648\u0645 \u0627\u0648 \u0627\u0644\u0631\u0642\u0645 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D.","az":"D\u0259st\u0259kl\u0259nm\u0259y\u0259n kart tipi v\u0259 ya yanl\u0131\u015F kart n\xF6mr\u0259si.","be":"\u0422\u044B\u043F \u043A\u0430\u0440\u0442\u044B \u043D\u0435 \u043F\u0430\u0434\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0435\u0446\u0446\u0430 \u0430\u0431\u043E \u043D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B \u043D\u0443\u043C\u0430\u0440 \u043A\u0430\u0440\u0442\u044B.","bg":"\u041D\u0435\u043F\u043E\u0434\u0434\u044A\u0440\u0436\u0430\u043D \u0442\u0438\u043F \u043A\u0430\u0440\u0442\u0430 \u0438\u043B\u0438 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043D\u043E\u043C\u0435\u0440 \u043D\u0430 \u043A\u0430\u0440\u0442\u0430.","bs":"Tip kartice nije podr\u017Ean ili je broj kartice neispravan.","ca":"Tipus de targeta no suportada o n\xFAmero de targeta inv\xE0lid.","cs":"Nepodporovan\xFD typ karty nebo neplatn\xE9 \u010D\xEDslo karty.","cy":"Unai ni dderbynir y math yna o gerdyn, neu nid yw rhif y cerdyn yn ddilys.","da":"Ikke-underst\xF8ttet korttype eller ugyldigt kortnummer.","de":"Nicht unterst\xFCtzter Kartentyp oder ung\xFCltige Kartennummer.","el":"\u039C\u03B7 \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03B9\u03B6\u03CC\u03BC\u03B5\u03BD\u03BF\u03C2 \u03C4\u03CD\u03C0\u03BF\u03C2 \u03BA\u03AC\u03C1\u03C4\u03B1\u03C2 \u03AE \u03BC\u03B7 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC\u03C2 \u03BA\u03AC\u03C1\u03C4\u03B1\u03C2.","en":"Unsupported card type or invalid card number.","es":"Tipo de tarjeta no soportado o n\xFAmero de tarjeta inv\xE1lido.","et":"Kaardi t\xFC\xFCpi ei toetata v\xF5i kaardi number on vigane.","eu":"Txartel mota onartezina edo txartel zenbaki baliogabea.","fa":"\u0646\u0648\u0639 \u06A9\u0627\u0631\u062A \u067E\u0634\u062A\u06CC\u0628\u0627\u0646\u06CC \u0646\u0645\u06CC\u200C\u0634\u0648\u062F \u0648 \u06CC\u0627 \u0634\u0645\u0627\u0631\u0647 \u06A9\u0627\u0631\u062A \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"T\xE4t\xE4 korttityyppi\xE4 ei tueta tai korttinumero on virheellinen.","gl":"Tipo de tarxeta non soportado ou n\xFAmero de tarxeta non v\xE1lido.","he":"\u05E1\u05D5\u05D2 \u05D4\u05DB\u05E8\u05D8\u05D9\u05E1 \u05D0\u05D9\u05E0\u05D5 \u05E0\u05EA\u05DE\u05DA \u05D0\u05D5 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9.","hr":"Tip kartice nije podr\u017Ean ili je broj kartice neispravan.","hu":"Nem t\xE1mogatott k\xE1rtyat\xEDpus vagy \xE9rv\xE9nytelen k\xE1rtyasz\xE1m.","hy":"\u0549\u057D\u057A\u0561\u057D\u0561\u0580\u056F\u057E\u0578\u0572 \u056F\u0561\u0574 \u057D\u056D\u0561\u056C \u0584\u0561\u0580\u057F\u056B \u0570\u0561\u0574\u0561\u0580:","id":"Jenis kartu tidak didukung atau nomor kartu tidak sah.","it":"Tipo di carta non supportato o numero non valido.","ja":"\u672A\u5BFE\u5FDC\u306E\u30AB\u30FC\u30C9\u7A2E\u985E\u53C8\u306F\u7121\u52B9\u306A\u30AB\u30FC\u30C9\u756A\u53F7\u3067\u3059\u3002","lb":"Net \xEBnnerst\xEBtzte Kaartentyp oder ong\xEBlteg Kaartennummer.","lt":"Kortel\u0117s tipas nepalaikomas arba klaidingas kortel\u0117s numeris.","lv":"Neatbalst\u012Bts kartes tips vai neder\u012Bgs kartes numurs.","mk":"\u041D\u0435\u043F\u043E\u0434\u0434\u0440\u0436\u0430\u043D \u0442\u0438\u043F \u043D\u0430 \u043A\u0430\u0440\u0442\u0438\u0447\u043A\u0430 \u0438\u043B\u0438 \u0431\u0440\u043E\u0458\u043E\u0442 \u043D\u0430 \u043A\u0430\u0440\u0442\u0438\u0447\u043A\u0430\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D.","mn":"\u0414\u044D\u043C\u0436\u0438\u0433\u0434\u044D\u044D\u0433\u04AF\u0439 \u043A\u0430\u0440\u0442\u044B\u043D \u0442\u04E9\u0440\u04E9\u043B \u044D\u0441\u0432\u044D\u043B \u043A\u0430\u0440\u0442\u044B\u043D \u0434\u0443\u0433\u0430\u0430\u0440 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1000\u1012\u103A\u1021\u1019\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u1019\u1019\u103E\u1014\u103A\u1015\u102B (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1000\u1012\u103A\u1014\u1036\u1015\u102B\u1010\u103A\u1019\u1019\u103E\u1014\u103A\u1015\u102B\u104B","nb":"Korttypen er ikke st\xF8ttet eller kortnummeret er ugyldig.","nl":"Niet-ondersteund type creditcard of ongeldig nummer.","nn":"Korttypen er ikkje st\xF8tta, eller kortnummeret er ugyldig.","no":"Korttypen er ikke st\xF8ttet eller kortnummeret er ugyldig.","pl":"Nieobs\u0142ugiwany rodzaj karty lub nieprawid\u0142owy numer karty.","pt":"Tipo de cart\xE3o n\xE3o suportado ou n\xFAmero de cart\xE3o inv\xE1lido.","pt_BR":"Tipo de cart\xE3o n\xE3o suportado ou n\xFAmero de cart\xE3o inv\xE1lido.","ro":"Tipul sau num\u0103rul cardului nu sunt valide.","ru":"\u041D\u0435\u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043C\u044B\u0439 \u0442\u0438\u043F \u0438\u043B\u0438 \u043D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0430\u0440\u0442\u044B.","sk":"Nepodporovan\xFD typ karty alebo neplatn\xE9 \u010D\xEDslo karty.","sl":"Nepodprti tip kartice ali neveljavna \u0161tevilka kartice.","sq":"Lloj karte i papranuar ose num\xEBr karte i pavlefsh\xEBm.","sr_Cyrl":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0431\u0440\u043E\u0458 \u043A\u0430\u0440\u0442\u0438\u0446\u0435 \u0438\u043B\u0438 \u0442\u0438\u043F \u043A\u0430\u0440\u0442\u0438\u0446\u0435 \u043D\u0438\u0458\u0435 \u043F\u043E\u0434\u0440\u0436\u0430\u043D.","sr_Latn":"Tip kartice nije podr\u017Ean ili broj kartice nije validan.","sv":"Ok\xE4nd korttyp eller ogiltigt kortnummer.","th":"\u0E44\u0E21\u0E48\u0E23\u0E39\u0E49\u0E08\u0E31\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E2D\u0E07\u0E1A\u0E31\u0E15\u0E23 \u0E2B\u0E23\u0E37\u0E2D\u0E2B\u0E21\u0E32\u0E22\u0E40\u0E25\u0E02\u0E1A\u0E31\u0E15\u0E23\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi supportadong uri ng kard o hindi wastong numero ng kard.","tr":"Desteklenmeyen kart tipi veya ge\xE7ersiz kart numaras\u0131.","uk":"\u041D\u0435\u043F\u0456\u0434\u0442\u0440\u0438\u043C\u0443\u0432\u0430\u043D\u0438\u0439 \u0442\u0438\u043F \u043A\u0430\u0440\u0442\u0438 \u0430\u0431\u043E \u043D\u0435\u0432\u0456\u0440\u043D\u0438\u0439 \u043D\u043E\u043C\u0435\u0440 \u043A\u0430\u0440\u0442\u0438.","ur":"\u063A\u06CC\u0631 \u062A\u0639\u0627\u0648\u0646 \u06CC\u0627\u0641\u062A\u06C1 \u06A9\u0627\u0631\u0688 \u06A9\u06CC \u0642\u0633\u0645 \u06CC\u0627 \u063A\u0644\u0637 \u06A9\u0627\u0631\u0688 \u0646\u0645\u0628\u0631","uz":"Qo'llab-quvvatlanmaydigan karta turi yoki yaroqsiz karta raqami.","vi":"Th\u1EBB kh\xF4ng \u0111\u01B0\u1EE3c h\u1ED7 tr\u1EE3 ho\u1EB7c s\u1ED1 th\u1EBB kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u4E0D\u652F\u6301\u7684\u4FE1\u7528\u5361\u7C7B\u578B\u6216\u65E0\u6548\u7684\u4FE1\u7528\u5361\u53F7\u3002","zh_TW":"\u4E0D\u652F\u63F4\u7684\u4FE1\u7528\u5361\u985E\u578B\u6216\u7121\u6548\u7684\u4FE1\u7528\u5361\u865F\u3002"}}};var THIS_IS_NOT_A_VALID_INTERNATIONAL_BANK_ACCOUNT_NUMBER_IBAN={"id":"This is not a valid International Bank Account Number (IBAN).","translations":{"validators":{"fr":"Le num\xE9ro IBAN (International Bank Account Number) saisi n'est pas valide.","af":"Hierdie is nie 'n geldige Internationale Bank Rekening Nommer (IBAN) nie.","ar":"\u0627\u0644\u0631\u0642\u0645 IBAN (\u0631\u0642\u0645 \u0627\u0644\u062D\u0633\u0627\u0628 \u0627\u0644\u0645\u0635\u0631\u0641\u064A \u0627\u0644\u062F\u0648\u0644\u064A) \u0627\u0644\u0630\u064A \u062A\u0645 \u0625\u062F\u062E\u0627\u0644\u0647 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D.","az":"Bu d\u0259y\u0259r do\u011Fru bir Beyn\u0259lxalq Bank Hesap N\xF6mr\u0259si (IBAN) deyil.","be":"\u041D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B \u043C\u0456\u0436\u043D\u0430\u0440\u043E\u0434\u043D\u044B \u043D\u0443\u043C\u0430\u0440 \u0431\u0430\u043D\u043A\u0430\u045E\u0441\u043A\u0430\u0433\u0430 \u0440\u0430\u0445\u0443\u043D\u043A\u0443 (IBAN).","bg":"\u0422\u043E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u041C\u0435\u0436\u0434\u0443\u043D\u0430\u0440\u043E\u0434\u0435\u043D \u043D\u043E\u043C\u0435\u0440 \u043D\u0430 \u0431\u0430\u043D\u043A\u043E\u0432\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 (IBAN).","bs":"Ova vrijednost nije ispravan me\u0111unarodni broj bankovnog ra\u010Duna (IBAN).","ca":"Aix\xF2 no \xE9s un nombre de compte bancari internacional (IBAN) v\xE0lid.","cs":"Toto je neplatn\xFD IBAN.","cy":"Nid yw hwn yn Rhif Cyfrif Banc Rhyngwladol (IBAN) dilys.","da":"Det er ikke et gyldigt International Bank Account Number (IBAN).","de":"Dieser Wert ist keine g\xFCltige internationale Bankkontonummer (IBAN).","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03B4\u03B9\u03B5\u03B8\u03BD\u03AE \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC \u03C4\u03C1\u03B1\u03C0\u03B5\u03B6\u03B9\u03BA\u03BF\u03CD \u03BB\u03BF\u03B3\u03B1\u03C1\u03B9\u03B1\u03C3\u03BC\u03BF\u03CD (IBAN).","en":"This is not a valid International Bank Account Number (IBAN).","es":"Esto no es un International Bank Account Number (IBAN) v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne IBAN-number.","eu":"Hau ez da baliozko banku internazionaleko kontu zenbaki (IBAN) bat.","fa":"\u0627\u06CC\u0646 \u06CC\u06A9 \u0634\u0645\u0627\u0631\u0647 \u062D\u0633\u0627\u0628 \u0628\u0627\u0646\u06A9 \u0628\u06CC\u0646 \u0627\u0644\u0645\u0644\u0644\u06CC \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F(IBAN).","fi":"Arvo ei ole kelvollinen kansainv\xE4linen pankkitilinumero (IBAN).","gl":"Este valor non \xE9 un International Bank Account Number (IBAN) v\xE1lido.","he":"\u05DE\u05E1\u05E4\u05E8 \u05D7\u05E9\u05D1\u05D5\u05DF \u05D1\u05E0\u05E7 \u05D1\u05D9\u05E0\u05DC\u05D0\u05D5\u05DE\u05D9 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9 (IBAN).","hr":"Ova vrijednost nije ispravan me\u0111unarodni broj bankovnog ra\u010Duna (IBAN).","hu":"\xC9rv\xE9nytelen nemzetk\xF6zi banksz\xE1mlasz\xE1m (IBAN).","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 \u0574\u056B\u057B\u0561\u0566\u0561\u0575\u056B\u0576 \u0562\u0561\u0576\u056F\u0561\u0575\u056B\u0576 \u0570\u0561\u0577\u057E\u056B \u0570\u0561\u0574\u0561\u0580 \u0579\u0567 (IBAN)\u0589","id":"Ini bukan Nomor Rekening Bank Internasional (IBAN) yang sah.","it":"Questo valore non \xE8 un IBAN (International Bank Account Number) valido.","ja":"\u6709\u52B9\u306AIBAN\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst ass keng g\xEBlteg IBAN-Kontonummer.","lt":"\u0160i rei\u0161m\u0117 neatitinka tarptautinio banko s\u0105skaitos numerio formato (IBAN).","lv":"\u0160is nav der\u012Bgs starptautisks banku konta numurs (IBAN).","mk":"\u041E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0431\u0440\u043E\u0458 \u043D\u0430 \u043C\u0435\u0453\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u0430 \u0431\u0430\u043D\u043A\u0430\u0440\u0441\u043A\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 (IBAN).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 \u041E\u043B\u043E\u043D \u0423\u043B\u0441\u044B\u043D \u0411\u0430\u043D\u043A\u043D\u044B \u0414\u0430\u043D\u0441\u043D\u044B \u0414\u0443\u0433\u0430\u0430\u0440 (IBAN) \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1010\u101B\u102C\u1038\u1040\u1004\u103A\u1014\u102D\u102F\u1004\u103A\u1004\u1036\u1010\u1000\u102C\u1018\u100F\u103A\u1021\u1000\u1031\u102C\u1004\u103A\u1037\u1014\u1036\u1015\u102B\u1010\u103A (International Bank Account Number, IBAN) \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Dette er ikke et gyldig IBAN-nummer.","nl":"Dit is geen geldig internationaal bankrekeningnummer (IBAN).","nn":"Dette er ikkje eit gyldig internasjonalt bankkontonummer (IBAN).","no":"Dette er ikke et gyldig IBAN-nummer.","pl":"Nieprawid\u0142owy mi\u0119dzynarodowy numer rachunku bankowego (IBAN).","pt":"Este n\xE3o \xE9 um N\xFAmero Internacional de Conta Banc\xE1ria (IBAN) v\xE1lido.","pt_BR":"Este n\xE3o \xE9 um N\xFAmero Internacional de Conta Banc\xE1ria (IBAN) v\xE1lido.","ro":"Acesta nu este un cod IBAN (International Bank Account Number) valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C \u043C\u0435\u0436\u0434\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u044B\u043C \u043D\u043E\u043C\u0435\u0440\u043E\u043C \u0431\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u043E\u0433\u043E \u0441\u0447\u0435\u0442\u0430 (IBAN).","sk":"Toto je neplatn\xFD IBAN.","sl":"To ni veljavna mednarodna \u0161tevilka ban\u010Dnega ra\u010Duna (IBAN).","sq":"Ky nuk \xEBsht\xEB nj\xEB num\xEBr i vlefsh\xEBm nd\xEBrkomb\xEBtar i llogaris\xEB bankare (IBAN).","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u043C\u0435\u0452\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u0438 \u0431\u0440\u043E\u0458 \u0431\u0430\u043D\u043A\u043E\u0432\u043D\u043E\u0433 \u0440\u0430\u0447\u0443\u043D\u0430 (IBAN).","sr_Latn":"Ovo nije validan me\u0111unarodni broj bankovnog ra\u010Duna (IBAN).","sv":"Det h\xE4r \xE4r inte en giltig International Bank Account Number (IBANK).","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 International Bank Account Number (IBAN) \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ito ay hindi isang balidong International Bank Account Number (IBAN).","tr":"Bu ge\xE7erli bir Uluslararas\u0131 Banka Hesap Numaras\u0131 (IBAN) de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435 \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u043C\u0456\u0436\u043D\u0430\u0440\u043E\u0434\u043D\u0438\u0439 \u043D\u043E\u043C\u0435\u0440 \u0431\u0430\u043D\u043A\u0456\u0432\u0441\u044C\u043A\u043E\u0433\u043E \u0440\u0430\u0445\u0443\u043D\u043A\u0443 (IBAN).","ur":"(IBAN)\u06CC\u06C1 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0628\u06CC\u0646 \u0627\u0644\u0627\u0642\u0648\u0627\u0645\u06CC \u0628\u06CC\u0646\u06A9 \u0627\u06A9\u0627\u0624\u0646\u0679 \u0646\u0645\u0628\u0631 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Qiymat haqiqiy xalqaro hisob raqamining raqami (IBAN) emas.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 International Bank Account Number (IBAN) h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u56FD\u9645\u94F6\u884C\u5E10\u53F7\uFF08IBAN\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u570B\u969B\u9280\u884C\u5E33\u865F\uFF08IBAN\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_ISBN10={"id":"This value is not a valid ISBN-10.","translations":{"validators":{"fr":"Cette valeur n'est pas un code ISBN-10 valide.","af":"Hierdie waarde is nie 'n geldige ISBN-10 nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A ISBN-10 \u0635\u0627\u0644\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir ISBN-10 deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C ISBN-10.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-10.","bs":"Ova vrijednost nije ispravan ISBN-10.","ca":"Aquest valor no \xE9s un ISBN-10 v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 ISBN-10.","cy":"Nid yw'r gwerth hwn yn ISBN-10 dilys.","da":"V\xE6rdien er ikke en gyldig ISBN-10.","de":"Dieser Wert entspricht keiner g\xFCltigen ISBN-10.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 ISBN-10.","en":"This value is not a valid ISBN-10.","es":"Este valor no es un ISBN-10 v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne ISBN-10.","eu":"Balio hau ez da onartutako ISBN-10 bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 ISBN-10 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen ISBN-10.","gl":"Este valor non \xE9 un ISBN-10 v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA ISBN-10 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravan ISBN-10.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes ISBN-10.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0578\u0582\u0576\u056B \u0561\u0576\u057E\u0561\u057E\u0565\u0580 ISBN-10 \u0571\u0587\u0561\u0579\u0561\u0583\u0589","id":"Nilai ini bukan ISBN-10 yang sah.","it":"Questo valore non \xE8 un codice ISBN-10 valido.","ja":"\u6709\u52B9\u306AISBN-10\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg ISBN-10.","lt":"\u0160i reik\u0161m\u0117 neatitinka ISBN-10 formato.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs ISBN-10 numurs.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-10.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 ISBN-10 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C ISBN-10 \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104A","nb":"Verdien er ikke en gyldig ISBN-10.","nl":"Deze waarde is geen geldige ISBN-10.","nn":"Verdien er ikkje eit gyldig ISBN-10.","no":"Verdien er ikke en gyldig ISBN-10.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym numerem ISBN-10.","pt":"Este valor n\xE3o \xE9 um ISBN-10 v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um ISBN-10 v\xE1lido.","ro":"Aceast\u0103 valoare nu este un cod ISBN-10 valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0438\u043C\u0435\u0435\u0442 \u043D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 ISBN-10.","sk":"T\xE1to hodnota je neplatn\xE9 ISBN-10.","sl":"Neveljavna vrednost po ISBN-10.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB ISBN-10 e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D ISBN-10.","sr_Latn":"Ovo nije validan ISBN-10.","sv":"V\xE4rdet \xE4r inte en giltig ISBN-10.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 ISBN-10 \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi balidong SBN-10.","tr":"Bu de\u011Fer ge\xE7erli bir ISBN-10 de\u011Fildir.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0443 \u0444\u043E\u0440\u043C\u0430\u0442\u0456 ISBN-10.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 ISBN-10 \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A\u06D4","uz":"Qiymat to'g'ri ISBN-10 formatida emas.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ISBN-10 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u768410\u4F4D\u56FD\u9645\u6807\u51C6\u4E66\u53F7\uFF08ISBN-10\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u768410\u4F4D\u570B\u969B\u6A19\u6E96\u66F8\u865F\uFF08ISBN-10\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_ISBN13={"id":"This value is not a valid ISBN-13.","translations":{"validators":{"fr":"Cette valeur n'est pas un code ISBN-13 valide.","af":"Hierdie waarde is nie 'n geldige ISBN-13 nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A ISBN-13 \u0635\u0627\u0644\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir ISBN-13 deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C ISBN-13.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-13.","bs":"Ova vrijednost nije ispravan ISBN-13.","ca":"Aquest valor no \xE9s un ISBN-13 v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 ISBN-13.","cy":"Nid yw'r gwerth hwn yn ISBN-13 dilys.","da":"V\xE6rdien er ikke en gyldig ISBN-13.","de":"Dieser Wert entspricht keiner g\xFCltigen ISBN-13.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 ISBN-13.","en":"This value is not a valid ISBN-13.","es":"Este valor no es un ISBN-13 v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne ISBN-13.","eu":"Balio hau ez da onartutako ISBN-13 bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 ISBN-13 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen ISBN-13.","gl":"Este valor non \xE9 un ISBN-13 v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA ISBN-13 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravan ISBN-13.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes ISBN-13.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0578\u0582\u0576\u056B \u0561\u0576\u057E\u0561\u057E\u0565\u0580 ISBN-13 \u0571\u0587\u0561\u0579\u0561\u0583\u0589","id":"Nilai ini bukan ISBN-13 yang sah.","it":"Questo valore non \xE8 un codice ISBN-13 valido.","ja":"\u6709\u52B9\u306AISBN-13\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg ISBN-13.","lt":"\u0160i reik\u0161m\u0117 neatitinka ISBN-13 formato.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs ISBN-13 numurs","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-13.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 ISBN-13 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C ISBN-13 \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104A","nb":"Verdien er ikke en gyldig ISBN-13.","nl":"Deze waarde is geen geldige ISBN-13.","nn":"Verdien er ikkje eit gyldig ISBN-13.","no":"Verdien er ikke en gyldig ISBN-13.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym numerem ISBN-13.","pt":"Este valor n\xE3o \xE9 um ISBN-13 v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um ISBN-13 v\xE1lido.","ro":"Aceast\u0103 valoare nu este un cod ISBN-13 valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0438\u043C\u0435\u0435\u0442 \u043D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 ISBN-13.","sk":"T\xE1to hodnota je neplatn\xE9 ISBN-13.","sl":"Neveljavna vrednost po ISBN-13.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB ISBN-13 e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D ISBN-13.","sr_Latn":"Ovo nije validan ISBN-13.","sv":"V\xE4rdet \xE4r inte en giltig ISBN-13.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 ISBN-13 \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi balidong ISBN-13.","tr":"Bu de\u011Fer ge\xE7erli bir ISBN-13 de\u011Fildir.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0443 \u0444\u043E\u0440\u043C\u0430\u0442\u0456 ISBN-13.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 ISBN-13 \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A\u06D4","uz":"Qiymat to'g'ri ISBN-13 formatida emas.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ISBN-13 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u768413\u4F4D\u56FD\u9645\u6807\u51C6\u4E66\u53F7\uFF08ISBN-13\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u768413\u4F4D\u570B\u969B\u6A19\u6E96\u66F8\u865F\uFF08ISBN-13\uFF09\u3002"}}};var THIS_VALUE_IS_NEITHER_A_VALID_ISBN10_NOR_A_VALID_ISBN13={"id":"This value is neither a valid ISBN-10 nor a valid ISBN-13.","translations":{"validators":{"fr":"Cette valeur n'est ni un code ISBN-10, ni un code ISBN-13 valide.","af":"Hierdie waarde is nie 'n geldige ISBN-10 of ISBN-13 nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A ISBN-10 \u0635\u0627\u0644\u062D\u0629 \u0648\u0644\u0627 ISBN-13 \u0635\u0627\u0644\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir ISBN-10 v\u0259 ya ISBN-13 deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C ISBN-10 \u0430\u0431\u043E ISBN-13.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u043D\u0438\u0442\u043E \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-10, \u043D\u0438\u0442\u043E \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-13.","bs":"Ova vrijednost nije ispravan ISBN-10 niti ISBN-13.","ca":"Aquest valor no \xE9s ni un ISBN-10 v\xE0lid ni un ISBN-13 v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 ISBN-10 ani ISBN-13.","cy":"Nid yw'r gwerth hwn yn Rhif ISBN-10 dilys nac yn ISBN-13 dilys.","da":"V\xE6rdien er hverken en gyldig ISBN-10 eller en gyldig ISBN-13.","de":"Dieser Wert ist weder eine g\xFCltige ISBN-10 noch eine g\xFCltige ISBN-13.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BF\u03CD\u03C4\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 ISBN-10 \u03BF\u03CD\u03C4\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 ISBN-13.","en":"This value is neither a valid ISBN-10 nor a valid ISBN-13.","es":"Este valor no es ni un ISBN-10 v\xE1lido ni un ISBN-13 v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne ISBN-10 ega ISBN-13.","eu":"Balio hau ez da onartutako ISBN-10 edo ISBN-13 bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 ISBN-10 \u0645\u0639\u062A\u0628\u0631 \u0648 \u06CC\u0627 ISBN-13 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen ISBN-10 eik\xE4 ISBN-13.","gl":"Este valor non \xE9 nin un ISBN-10 v\xE1lido nin un ISBN-13 v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA ISBN-10 \u05D7\u05D5\u05E7\u05D9 \u05D0\u05D5 \u05E2\u05E8\u05DA ISBN-13 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravan ISBN-10 niti ISBN-13.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes ISBN-10 vagy ISBN-13.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u056B \u0570\u0561\u0574\u0561\u057A\u0561\u057F\u0561\u057D\u056D\u0561\u0576\u0578\u0582\u0574 ISBN-10 \u0587 ISBN-13 \u0571\u0587\u0561\u0579\u0561\u0583\u0565\u0580\u056B\u0576\u0589","id":"Nilai ini bukan ISBN-10 maupun ISBN-13 yang sah.","it":"Questo valore non \xE8 un codice ISBN-10 o ISBN-13 valido.","ja":"\u6709\u52B9\u306AISBN-10\u30B3\u30FC\u30C9\u53C8\u306FISBN-13\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass weder eng g\xEBlteg ISBN-10 nach eng g\xEBlteg ISBN-13.","lt":"\u0160i reik\u0161m\u0117 neatitinka nei ISBN-10, nei ISBN-13 formato.","lv":"\u0160\u012B v\u0113rt\u012Bba neatbilst ne der\u012Bgam ISBN-10 numuram, ne der\u012Bgm ISBN-13 numuram.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u043D\u0438\u0442\u0443 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-10 \u043D\u0438\u0442\u0443 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISBN-13.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 ISBN-10 \u044E\u043C\u0443\u0443 ISBN-13 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A ISBN-10 (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) ISBN-13 \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104A","nb":"Verdien er hverken en gyldig ISBN-10 eller ISBN-13.","nl":"Deze waarde is geen geldige ISBN-10 of ISBN-13 waarde.","nn":"Verdien er verken eit gyldig ISBN-10 eller eit gyldig ISBN-13.","no":"Verdien er hverken en gyldig ISBN-10 eller ISBN-13.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym numerem ISBN-10 ani ISBN-13.","pt":"Este valor n\xE3o \xE9 um ISBN-10 ou ISBN-13 v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um ISBN-10 e nem um ISBN-13 v\xE1lido.","ro":"Aceast\u0103 valoare nu este un cod ISBN-10 sau ISBN-13 valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043E\u0440\u043C\u0430\u0442\u0430\u043C ISBN-10 \u0438 ISBN-13.","sk":"T\xE1to hodnota nie je platn\xE9 ISBN-10 ani ISBN-13.","sl":"Neveljavna vrednost po ISBN-10 ali po ISBN-13.","sq":"Kjo vler\xEB nuk \xEBsht\xEB as ISBN-10 e vlefshme as ISBN-13 e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D ISBN-10 \u0438\u043B\u0438 ISBN-13.","sr_Latn":"Ovo nije validan ISBN-10 ili ISBN-13.","sv":"V\xE4rdet \xE4r varken en giltig ISBN-10 eller en giltig ISBN-13.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 ISBN-10 \u0E2B\u0E23\u0E37\u0E2D ISBN-13 \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay pwdeng isang balidong ISBN-10 o isang balidong ISBN-13.","tr":"Bu de\u011Fer ge\xE7erli bir ISBN-10 veya ISBN-13 de\u011Fildir.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0454 \u0444\u043E\u0440\u043C\u0430\u0442\u0430\u043C ISBN-10 \u0442\u0430 ISBN-13.","ur":"ISBN-13 \u06D2 \u0627\u0648\u0631 \u0646\u06C1 \u06C1\u06CC \u062F\u0631\u0633\u062A ISBN-10 \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0646\u06C1 \u062A\u0648 \u062F\u0631\u0633\u062A","uz":"Qiymat ISBN-10 va ISBN-13 formatlariga mos kelmaydi.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ISBN-10 ho\u1EB7c ISBN-13 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u56FD\u9645\u6807\u51C6\u4E66\u53F7\uFF08ISBN-10 \u6216 ISBN-13\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u570B\u969B\u6A19\u6E96\u66F8\u865F\uFF08ISBN-10 \u6216 ISBN-13\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_ISSN={"id":"This value is not a valid ISSN.","translations":{"validators":{"fr":"Cette valeur n'est pas un code ISSN valide.","af":"Hierdie waarde is nie 'n geldige ISSN nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A ISSN \u0635\u0627\u0644\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir ISSN deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C ISSN.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISSN.","bs":"Ova vrijednost nije ispravan ISSN.","ca":"Aquest valor no \xE9s un ISSN v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 ISSN.","cy":"Nid yw'r gwerth hwn yn ISSN dilys.","da":"V\xE6rdien er ikke en gyldig ISSN.","de":"Dieser Wert ist keine g\xFCltige ISSN.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 ISSN.","en":"This value is not a valid ISSN.","es":"Este valor no es un ISSN v\xE1lido.","et":"V\xE4\xE4rtus pole korrektne ISSN.","eu":"Balio hau ez da onartutako ISSN bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 ISSN \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen ISSN.","gl":"Este valor non \xE9 un ISSN v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA ISSN \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravan ISSN.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes ISSN.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u056B \u0570\u0561\u0574\u0561\u057A\u0561\u057D\u057F\u0561\u057D\u056D\u0561\u0576\u0578\u0582\u0574 ISSN \u0571\u0587\u0561\u0579\u0561\u0583\u056B\u0576\u0589","id":"Nilai ini bukan ISSN yang sah.","it":"Questo valore non \xE8 un codice ISSN valido.","ja":"\u6709\u52B9\u306AISSN\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg ISSN.","lt":"\u0160i rei\u0161m\u0117 neatitinka ISSN formato.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs ISSN numurs","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D ISSN.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 ISSN \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A ISSN \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig ISSN.","nl":"Deze waarde is geen geldige ISSN waarde.","nn":"Verdien er ikkje eit gyldig ISSN.","no":"Verdien er ikke en gyldig ISSN.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym numerem ISSN.","pt":"Este valor n\xE3o \xE9 um ISSN v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um ISSN v\xE1lido.","ro":"Aceast\u0103 valoare nu este un cod ISSN valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043E\u0440\u043C\u0430\u0442\u0443 ISSN.","sk":"T\xE1to hodnota nie je platn\xE9 ISSN.","sl":"Neveljavna vrednost ISSN.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB ISSN e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D ISSN.","sr_Latn":"Ovo nije validan ISSN.","sv":"V\xE4rdet \xE4r inte en giltig ISSN.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 ISSN \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halangang ito ay hindi isang balidong ISSN.","tr":"Bu de\u011Fer ge\xE7erli bir ISSN de\u011Fildir.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u043D\u0435\u0432\u0456\u0440\u043D\u0438\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 ISSN.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 ISSN\u06CC\u06BE \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A\u06D4","uz":"Qiymat ISSN formatiga mos kelmaydi.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 ISSN h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u56FD\u9645\u6807\u51C6\u671F\u520A\u53F7\uFF08ISSN\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u570B\u969B\u6A19\u6E96\u671F\u520A\u865F\uFF08ISSN\uFF09\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_CURRENCY={"id":"This value is not a valid currency.","translations":{"validators":{"fr":"Cette valeur n'est pas une devise valide.","af":"Hierdie waarde is nie 'n geldige geldeenheid nie.","ar":"\u0627\u0644\u0639\u064F\u0645\u0644\u0629 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir valyuta deyil.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0439 \u0432\u0430\u043B\u044E\u0442\u0430\u0439.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0430\u043B\u0443\u0442\u0430.","bs":"Ova vrijednost nije ispravna valuta.","ca":"Aquest valor no \xE9s una divisa v\xE0lida.","cs":"Tato m\u011Bna neexistuje.","cy":"Nid yw'r gwerth hwn yn arian dilys.","da":"Denne v\xE6rdi er ikke en gyldig valuta.","de":"Dieser Wert ist keine g\xFCltige W\xE4hrung.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B1\u03BD\u03C4\u03B9\u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF \u03C3\u03B5 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03BD\u03CC\u03BC\u03B9\u03C3\u03BC\u03B1.","en":"This value is not a valid currency.","es":"Este valor no es una divisa v\xE1lida.","et":"V\xE4\xE4rtus pole korrektne valuuta.","eu":"Balio hau ez da baliozko moneta bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0648\u0627\u062D\u062F \u067E\u0648\u0644 \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen valuutta.","gl":"Este valor non \xE9 unha moeda v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA \u05DE\u05D8\u05D1\u05E2 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravna valuta.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes p\xE9nznem.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 \u057F\u0561\u0580\u0561\u0564\u0580\u0561\u0574 \u0579\u0567\u0589","id":"Nilai ini bukan mata uang yang sah.","it":"Questo valore non \xE8 una valuta valida.","ja":"\u6709\u52B9\u306A\u8CA8\u5E63\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg W\xE4hrung.","lt":"Netinkamas valiutos formatas.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bga val\u016Bta","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0430\u043B\u0443\u0442\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0431\u043E\u0434\u0438\u0442 \u0432\u0430\u043B\u044E\u0442 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A \u1004\u103D\u1031\u1000\u103C\u1031\u1038\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke gyldig valuta.","nl":"Deze waarde is geen geldige valuta.","nn":"Verdien er ikkje ein gyldig valuta.","no":"Verdien er ikke gyldig valuta.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 walut\u0105.","pt":"Este n\xE3o \xE9 um valor monet\xE1rio v\xE1lido.","pt_BR":"Este n\xE3o \xE9 um valor monet\xE1rio v\xE1lido.","ro":"Aceast\u0103 valoare nu este o moned\u0103 valid\u0103.","ru":"\u041D\u0435\u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u0432\u0430\u043B\u044E\u0442\u044B.","sk":"T\xE1to hodnota nie je platn\xE1 mena.","sl":"Ta vrednost ni veljavna valuta.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB monedh\xEB e vlefshme.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0430\u043B\u0443\u0442\u0430.","sr_Latn":"Ovo nije validna valuta.","sv":"V\xE4rdet \xE4r inte en giltig valuta.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E2A\u0E01\u0E38\u0E25\u0E40\u0E07\u0E34\u0E19\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi balidong pera.","tr":"Bu de\u011Fer ge\xE7erli bir para birimi de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u043D\u0435\u0432\u0456\u0440\u043D\u0438\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u0432\u0430\u043B\u044E\u0442\u0438.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u06A9\u0631\u0646\u0633\u06CC \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Noto'g'ri valyuta formati.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng ph\u1EA3i l\xE0 \u0111\u01A1n v\u1ECB ti\u1EC1n t\u1EC7 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u8D27\u5E01\u540D\uFF08currency\uFF09\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684\u8CA8\u5E63\u540D\uFF08currency\uFF09\u3002"}}};var THIS_VALUE_SHOULD_BE_EQUAL_TO_COMPARED_VALUE={"id":"This value should be equal to {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre \xE9gale \xE0 {{ compared_value }}.","af":"Hierdie waarde moet gelyk aan {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0633\u0627\u0648\u064A {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value }} il\u0259 b\u0259rab\u0259r olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0440\u0430\u045E\u043D\u044F\u0446\u0446\u0430 {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude jednaka {{ compared_value }}.","ca":"Aquest valor hauria de ser igual a {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt rovna {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn gyfartal \xE2 {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re lig med {{ compared_value }}.","de":"Dieser Wert sollte gleich {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AF\u03C3\u03B7 \u03BC\u03B5 {{ compared_value }}.","en":"This value should be equal to {{ compared_value }}.","es":"Este valor deber\xEDa ser igual que {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema v\xF5rdne {{ compared_value }}-ga.","eu":"Balio hau {{ compared_value }}-(r)en berbera izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u0631\u0627\u0628\u0631 \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvo ei ole sama kuin {{ compared_value }}.","gl":"Este valor deber\xEDa ser igual a {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05D5\u05D5\u05D4 \u05DC {{ compared_value }}.","hr":"Ova vrijednost treba biti jednaka {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k legyen {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B {{ compared_value }}\u0589","id":"Nilai ini seharusnya sama dengan {{ compared_value }}.","it":"Questo valore dovrebbe essere uguale a {{ compared_value }}.","ja":"{{ compared_value }}\u3068\u7B49\u3057\u304F\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti lygi {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt vien\u0101dai ar {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0435\u0434\u043D\u0430\u043A\u0432\u0430 \u043D\u0430 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0442a\u0439 \u0442\u044D\u043D\u0446\u04AF\u04AF \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1014\u103E\u1004\u103A\u1037\u100A\u102E\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re lik {{ compared_value }}.","nl":"Deze waarde moet gelijk zijn aan {{ compared_value }}.","nn":"Verdien b\xF8r vera eins med {{ compared_value }}.","no":"Verdien skal v\xE6re lik {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 r\xF3wna {{ compared_value }}.","pt":"Este valor deve ser igual a {{ compared_value }}.","pt_BR":"Este valor deve ser igual a {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie egal\u0103 cu {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost bi morala biti enaka {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB e barabart\xEB me {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude jednaka {{ compared_value }}.","sv":"V\xE4rdet ska vara detsamma som {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A {{ compared_value }}","tl":"Ito ay hindi dapat magkapareho sa {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value }} ile e\u015Fit olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 {{ compared_value }}.","ur":"\u06A9\u06D2 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ compared_value }} ga teng bo'lishi shart.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i b\u1EB1ng {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u7B49\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u7B49\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_BE_GREATER_THAN_COMPARED_VALUE={"id":"This value should be greater than {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre sup\xE9rieure \xE0 {{ compared_value }}.","af":"Hierdie waarde moet meer as {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0627\u0639\u0644\u064A \u0645\u0646 {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value }} d\u0259y\u0259rind\u0259n b\xFCy\xFCk olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0431\u043E\u043B\u044C\u0448 \u0447\u044B\u043C {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E-\u0433\u043E\u043B\u044F\u043C\u0430 \u043E\u0442 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude ve\u0107a od {{ compared_value }}.","ca":"Aquest valor hauria de ser m\xE9s gran a {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt v\u011Bt\u0161\xED ne\u017E {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn fwy na {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re st\xF8rre end {{ compared_value }}.","de":"Dieser Wert sollte gr\xF6\xDFer als {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03B7 \u03B1\u03C0\u03CC {{ compared_value }}.","en":"This value should be greater than {{ compared_value }}.","es":"Este valor deber\xEDa ser mayor que {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema suurem kui {{ compared_value }}.","eu":"Balio hau {{ compared_value }} baino handiagoa izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0627\u0632 {{ compared_value }} \u0628\u06CC\u0634\u062A\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla suurempi kuin {{ compared_value }}.","gl":"Este valor deber\xEDa ser maior que {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D2\u05D3\u05D5\u05DC \u05DE {{ compared_value }}.","hr":"Ova vrijednost treba biti ve\u0107a od {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k nagyobb legyen, mint {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u0574\u0565\u056E \u056C\u056B\u0576\u056B, \u0584\u0561\u0576 {{ compared_value }}\u0589","id":"Nilai ini seharusnya lebih dari {{ compared_value }}.","it":"Questo valore dovrebbe essere maggiore di {{ compared_value }}.","ja":"{{ compared_value }}\u3088\u308A\u5927\u304D\u304F\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt m\xE9i grouss w\xE9i {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti didesn\u0117 u\u017E {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt liel\u0101kai par {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043F\u043E\u0433\u043E\u043B\u0435\u043C\u0430 \u043E\u0434 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0441 \u0438\u0445 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1011\u1000\u103A\u1000\u103C\u102E\u1038\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re st\xF8rre enn {{ compared_value }}.","nl":"Deze waarde moet groter zijn dan {{ compared_value }}.","nn":"Verdien b\xF8r vera st\xF8rre enn {{ compared_value }}.","no":"Verdien skal v\xE6re st\xF8rre enn {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 wi\u0119ksza ni\u017C {{ compared_value }}.","pt":"Este valor deve ser superior a {{ compared_value }}.","pt_BR":"Este valor deve ser maior que {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie mai mare de {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 v\xE4\u010D\u0161ia ako {{ compared_value }}.","sl":"Ta vrednost bi morala biti ve\u010Dja od {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB m\xEB e madhe se {{ compared_value }}. ","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0435\u045B\u0430 \u043E\u0434 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude ve\u0107a od {{ compared_value }}.","sv":"V\xE4rdet ska vara st\xF6rre \xE4n {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32 {{ compared_value }}","tl":"Ang halagang ito ay dapat tataas sa {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value }} de\u011Ferinden b\xFCy\xFCk olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043B\u044C\u0448\u0435 \u043D\u0456\u0436 {{ compared_value }}.","ur":"\u0633\u06D2 \u0628\u0688\u064A \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ compared_value }} dan katta bo'lishi shart.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i l\u1EDBn h\u01A1n {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u5927\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u5927\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_COMPARED_VALUE={"id":"This value should be greater than or equal to {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre sup\xE9rieure ou \xE9gale \xE0 {{ compared_value }}.","af":"Hierdie waarde moet meer of gelyk aan {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0645\u0633\u0627\u0648\u064A\u0629 \u0627\u0648 \u0627\u0639\u0644\u064A \u0645\u0646 {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value }} il\u0259 b\u0259rab\u0259r v\u0259 ya daha b\xF6y\xFCk olmald\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0431\u043E\u043B\u044C\u0448 \u0447\u044B\u043C \u0430\u0431\u043E \u0440\u0430\u045E\u043D\u044F\u0446\u0446\u0430 {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E-\u0433\u043E\u043B\u044F\u043C\u0430 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude jednaka ili ve\u0107a od {{ compared_value }}.","ca":"Aquest valor hauria de ser major o igual a {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt v\u011Bt\u0161\xED nebo rovna {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn fwy na neu'n hafal i {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re st\xF8rre end eller lig med {{ compared_value }}.","de":"Dieser Wert sollte gr\xF6\xDFer oder gleich {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03B3\u03B1\u03BB\u03CD\u03C4\u03B5\u03C1\u03B7 \u03AE \u03AF\u03C3\u03B7 \u03BC\u03B5 {{ compared_value }}.","en":"This value should be greater than or equal to {{ compared_value }}.","es":"Este valor deber\xEDa ser mayor o igual que {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema suurem kui v\xF5i v\xF5rduma {{ compared_value }}-ga.","eu":"Balio hau {{ compared_value }}-(r)en berdina edota handiagoa izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u0632\u0631\u06AF\u062A\u0631 \u0648 \u06CC\u0627 \u0645\u0633\u0627\u0648\u06CC \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla suurempi tai yht\xE4 suuri kuin {{ compared_value }}.","gl":"Este valor deber\xEDa ser maior ou igual que {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D2\u05D3\u05D5\u05DC \u05D0\u05D5 \u05E9\u05D5\u05D5\u05D4 \u05DC {{ compared_value }}.","hr":"Ova vrijednost treba biti ve\u0107a od ili jednaka {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k nagyobb vagy egyenl\u0151 legyen, mint {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0570\u0561\u057E\u0561\u057D\u0561\u0580 \u056F\u0561\u0574 \u0574\u0565\u056E \u0584\u0561\u0576 {{ compared_value }}\u0589","id":"Nilai ini seharusnya lebih dari atau sama dengan {{ compared_value }}.","it":"Questo valore dovrebbe essere maggiore o uguale a {{ compared_value }}.","ja":"{{ compared_value }}\u4EE5\u4E0A\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt m\xE9i grouss w\xE9i oder gl\xE4ich {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti didesn\u0117 u\u017E arba lygi {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt liel\u0101kai vai vien\u0101dai ar {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043F\u043E\u0433\u043E\u043B\u0435\u043C\u0430 \u0438\u043B\u0438 \u0435\u0434\u043D\u0430\u043A\u0432\u0430 \u043D\u0430 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0442\u0430\u0439 \u0442\u044D\u043D\u0446\u04AF\u04AF \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0438\u0445 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1011\u1000\u103A\u1000\u103C\u102E\u1038\u101E\u1004\u103A\u1037\u101E\u100A\u103A (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u100A\u102E\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B ","nb":"Verdien skal v\xE6re st\xF8rre enn eller lik {{ compared_value }}.","nl":"Deze waarde moet groter dan of gelijk aan {{ compared_value }} zijn.","nn":"Verdien b\xF8r vera st\xF8rre enn eller eins med {{ compared_value }}.","no":"Verdien skal v\xE6re st\xF8rre enn eller lik {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 wi\u0119ksza b\u0105d\u017A r\xF3wna {{ compared_value }}.","pt":"Este valor deve ser igual ou superior a {{ compared_value }}.","pt_BR":"Este valor deve ser maior ou igual a {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie mai mare sau egal\u0103 cu {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0431\u043E\u043B\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 v\xE4\u010D\u0161ia alebo rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost bi morala biti ve\u010Dja ali enaka {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB m\xEB e madhe ose e barabart\xEB me {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0435\u045B\u0430 \u0438\u043B\u0438 \u0458\u0435\u0434\u043D\u0430\u043A\u0430 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude ve\u0107a ili jednaka {{ compared_value }}.","sv":"V\xE4rdet ska bara st\xF6rre \xE4n eller detsamma som {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E23\u0E37\u0E2D\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A {{ compared_value }}","tl":"Ang halagang ito ay dapat mas mataas o magkapareha sa {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value }} ile e\u015Fit veya b\xFCy\xFCk olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0431\u0456\u043B\u044C\u0448\u0435 \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 {{ compared_value }}.","ur":"\u0633\u06D2 \u0628\u0688\u064A \u06CC\u0627 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ compared_value }} dan katta yoki teng bo'lishi shart.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i l\u1EDBn h\u01A1n ho\u1EB7c b\u1EB1ng {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u5927\u4E8E\u6216\u7B49\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u5927\u65BC\u6216\u7B49\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE={"id":"This value should be identical to {{ compared_value_type }} {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre identique \xE0 {{ compared_value_type }} {{ compared_value }}.","af":"Hierdie waarde moet identies aan {{ compared_value_type }} {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0637\u0627\u0628\u0642 {{ compared_value_type }} {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value_type }} {{ compared_value }} il\u0259 eyni olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0456\u0434\u044D\u043D\u0442\u044B\u0447\u043D\u044B\u043C {{ compared_value_type }} {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u0441 {{ compared_value_type }} {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude identi\u010Dna {{ compared_value_type }} {{ compared_value }}.","ca":"Aquest valor hauria de ser id\xE8ntic a {{ compared_value_type }} {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt typu {{ compared_value_type }} a z\xE1rove\u0148 mus\xED b\xFDt rovna {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn union yr un fath \xE2 {{ compared_value_type }} {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","de":"Dieser Wert sollte identisch sein mit {{ compared_value_type }} {{ compared_value }}.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03B1\u03BD\u03BF\u03BC\u03BF\u03B9\u03CC\u03C4\u03C5\u03C0\u03B7 \u03BC\u03B5 {{ compared_value_type }} {{ compared_value }}.","en":"This value should be identical to {{ compared_value_type }} {{ compared_value }}.","es":"Este valor deber\xEDa ser id\xE9ntico a {{ compared_value_type }} {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema identne v\xE4\xE4rtusega {{ compared_value_type }} {{ compared_value }}.","eu":"Balio hau {{ compared_value_type }} {{ compared_value }}-(r)en berbera izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u0631\u0627\u0628\u0631 {{ compared_value_type }} {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla sama kuin {{ compared_value_type }} {{ compared_value }}.","gl":"Este valor deber\xEDa ser identico a {{ compared_value_type }} {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D6\u05D4\u05D4 \u05DC {{ compared_value_type }} {{ compared_value }}.","hr":"Ova vrijednost treba biti {{ compared_value_type }} {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k ugyanolyan legyen, mint {{ compared_value_type }} {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u056B\u0576\u0579\u057A\u0565\u057D {{ compared_value_type }} {{ compared_value }}\u0589","id":"Nilai ini seharusnya identik dengan {{ compared_value_type }} {{ compared_value }}.","it":"Questo valore dovrebbe essere identico a {{ compared_value_type }} {{ compared_value }}.","ja":"{{ compared_value_type }}\u3068\u3057\u3066\u306E{{ compared_value }}\u3068\u7B49\u3057\u304F\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt identesch si mat {{ compared_value_type }} {{ compared_value }}.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti identi\u0161ka {{ compared_value_type }} {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt identiskai ar {{ compared_value_type }} {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u043D\u0430 {{ compared_value_type }} {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value_type }} {{ compared_value }} -\u0442\u0430\u0439 \u044F\u0433 \u0438\u0436\u0438\u043B \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value_type }} {{ compared_value }} \u1014\u103E\u1004\u103A\u1037\u1011\u1015\u103A\u1010\u1030\u100A\u102E\u1019\u103B\u103E\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","nl":"Deze waarde moet identiek zijn aan {{ compared_value_type }} {{ compared_value }}.","nn":"Verdien b\xF8r vera eins med {{ compared_value_type }} {{ compared_value }}.","no":"Verdien skal v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 identycznego typu {{ compared_value_type }} oraz warto\u015Bci {{ compared_value }}.","pt":"Este valor deve ser id\xEAntico a {{ compared_value_type }} {{ compared_value }}.","pt_BR":"Este valor deve ser id\xEAntico a {{ compared_value_type }} {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie identic\u0103 cu {{ compared_value_type }} {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u044B\u043C {{ compared_value_type }} {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 typu {{ compared_value_type }} a z\xE1rove\u0148 by mala by\u0165 rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost bi morala biti identi\u010Dna {{ compared_value_type }} {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB identike me {{ compared_value_type }} {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u0441\u0430 {{ compared_value_type }} {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude identi\u010Dna sa {{ compared_value_type }} {{ compared_value }}.","sv":"V\xE4rdet ska vara identiskt till {{ compared_value_type }} {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E19\u0E01\u0E31\u0E1A {{ compared_value_type }} {{ compared_value }}","tl":"Ang halagang ito ay dapat kapareha ng {{ compared_value_type }} {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value_type }} {{ compared_value }} ile ayn\u0131 olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0456\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0438\u043C {{ compared_value_type }} {{ compared_value }}.","ur":"{{ compared_value }} {{ compared_value_type }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0627\u06CC\u06A9 \u062C\u06CC\u0633\u06CC \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2\u06D4","uz":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u044B\u043C {{ compared_value_type }} {{ compared_value }}.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i gi\u1ED1ng  {{ compared_value_type }} {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u4E0E {{ compared_value_type }} {{ compared_value }} \u76F8\u540C\u3002","zh_TW":"\u8A72\u503C\u61C9\u8207 {{ compared_value_type }} {{ compared_value }} \u76F8\u540C\u3002"}}};var THIS_VALUE_SHOULD_BE_LESS_THAN_COMPARED_VALUE={"id":"This value should be less than {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre inf\xE9rieure \xE0 {{ compared_value }}.","af":"Hierdie waarde moet minder as {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0643\u0648\u0646 \u0627\u0642\u0644 \u0645\u0646 {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value }} d\u0259y\u0259rind\u0259n ki\xE7ik olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043C\u0435\u043D\u0448 \u0447\u044B\u043C {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E-\u043C\u0430\u043B\u043A\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude manja od {{ compared_value }}.","ca":"Aquest valor hauria de ser menor a {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt men\u0161\xED ne\u017E {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn llai na {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re mindre end {{ compared_value }}.","de":"Dieser Wert sollte kleiner als {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03B7 \u03B1\u03C0\u03CC {{ compared_value }}.","en":"This value should be less than {{ compared_value }}.","es":"Este valor deber\xEDa ser menor que {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema v\xE4iksem kui {{ compared_value }}.","eu":"Balio hau {{ compared_value }} baino txikiagoa izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06A9\u0645\u062A\u0631 \u0627\u0632 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla pienempi kuin {{ compared_value }}.","gl":"Este valor deber\xEDa ser menor que {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E7\u05D8\u05DF \u05DE {{ compared_value }}.","hr":"Ova vrijednost treba biti manja od {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k kisebb legyen, mint {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0583\u0578\u0584\u0580 \u0584\u0561\u0576 {{ compared_value }}\u0589","id":"Nilai ini seharusnya kurang dari {{ compared_value }}.","it":"Questo valore dovrebbe essere minore di {{ compared_value }}.","ja":"{{ compared_value }}\u672A\u6E80\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt m\xE9i kleng w\xE9i {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti ma\u017Eesn\u0117 u\u017E {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt maz\u0101kai par {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043F\u043E\u043C\u0430\u043B\u0430 \u043E\u0434 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0441 \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1011\u1000\u103A\u1019\u1014\u1032\u101E\u1031\u102C\u1010\u1032\u1037 \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re mindre enn {{ compared_value }}.","nl":"Deze waarde moet minder zijn dan {{ compared_value }}.","nn":"Verdien b\xF8r vera mindre enn {{ compared_value }}.","no":"Verdien skal v\xE6re mindre enn {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 mniejsza ni\u017C {{ compared_value }}.","pt":"Este valor deve ser inferior a {{ compared_value }}.","pt_BR":"Este valor deve ser menor que {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie mai mic\u0103 de {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 \u0447\u0435\u043C {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 men\u0161ia ako {{ compared_value }}.","sl":"Ta vrednost bi morala biti manj\u0161a od {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB m\xEB vog\xEBl se {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043C\u0430\u045A\u0430 \u043E\u0434 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude manja od {{ compared_value }}.","sv":"V\xE4rdet ska vara mindre \xE4n {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32 {{ compared_value }}","tl":"Ang halagang ito ay dapat mas maliit sa {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value }} de\u011Ferinden d\xFC\u015F\xFCk olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043C\u0435\u043D\u0448\u0435 \u043D\u0456\u0436 {{ compared_value }}.","ur":"\u0633\u06D2 \u06A9\u0645 \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat bir xil bo'lishi kerak {{ compared_value }}.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i b\xE9 h\u01A1n {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u5C0F\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u5C0F\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_BE_LESS_THAN_OR_EQUAL_TO_COMPARED_VALUE={"id":"This value should be less than or equal to {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre inf\xE9rieure ou \xE9gale \xE0 {{ compared_value }}.","af":"Hierdie waarde moet minder of gelyk aan {{ compared_value }} wees.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u062A\u0633\u0627\u0648\u064A \u0627\u0648 \u062A\u0642\u0644 \u0639\u0646 {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value }} d\u0259y\u0259rind\u0259n ki\xE7ik v\u0259 ya b\u0259rab\u0259r olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043C\u0435\u043D\u0448 \u0447\u044B\u043C \u0430\u0431\u043E \u0440\u0430\u045E\u043D\u044F\u0446\u0446\u0430 {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E-\u043C\u0430\u043B\u043A\u0430 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude jednaka ili manja od {{ compared_value }}.","ca":"Aquest valor hauria de ser menor o igual a {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt men\u0161\xED nebo rovna {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn llai na neu'n hafal i {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re mindre end eller lig med {{ compared_value }}.","de":"Dieser Wert sollte kleiner oder gleich {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03B7 \u03AE \u03AF\u03C3\u03B7 \u03BC\u03B5 {{ compared_value }}.","en":"This value should be less than or equal to {{ compared_value }}.","es":"Este valor deber\xEDa ser menor o igual que {{ compared_value }}.","et":"V\xE4\xE4rtus peaks olema v\xE4iksem kui v\xF5i v\xF5rduma {{ compared_value }}-ga.","eu":"Balio hau {{ compared_value }}-(r)en berdina edota txikiagoa izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06A9\u0645\u062A\u0631 \u0648 \u06CC\u0627 \u0645\u0633\u0627\u0648\u06CC \u0628\u0627 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla pienempi tai yht\xE4 suuri kuin {{ compared_value }}.","gl":"Este valor deber\xEDa ser menor ou igual que {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E7\u05D8\u05DF \u05D0\u05D5 \u05E9\u05D5\u05D5\u05D4 \u05DC {{ compared_value }}.","hr":"Ova vrijednost treba biti manja od ili jednaka {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k kisebb vagy egyenl\u0151 legyen, mint {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0583\u0578\u0584\u0580 \u056F\u0561\u0574 \u0570\u0561\u057E\u0561\u057D\u0561\u0580 {{ compared_value }}\u0589","id":"Nilai ini seharusnya kurang dari atau sama dengan {{ compared_value }}.","it":"Questo valore dovrebbe essere minore o uguale a {{ compared_value }}.","ja":"{{ compared_value }}\u4EE5\u4E0B\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt m\xE9i kleng w\xE9i oder gl\xE4ich {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti ma\u017Eesn\u0117 u\u017E arba lygi {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt maz\u0101kai vai vien\u0101dai ar {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043F\u043E\u043C\u0430\u043B\u0430 \u0438\u043B\u0438 \u0435\u0434\u043D\u0430\u043A\u0432\u0430 \u043D\u0430 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0442\u0430\u0439 \u0438\u0436\u0438\u043B \u044E\u043C\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0431\u0430\u0433\u0430 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1011\u1000\u103A \u1019\u1014\u100A\u103A\u1038\u101E\u1031\u102C\u1010\u1014\u103A\u1016\u102D\u102F\u1038 (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u100A\u102E\u1019\u103B\u103E\u101E\u1031\u102C\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re mindre enn eller lik {{ compared_value }}.","nl":"Deze waarde moet minder dan of gelijk aan {{ compared_value }} zijn.","nn":"Verdi b\xF8r vera mindre enn eller eins med {{ compared_value }}.","no":"Verdien skal v\xE6re mindre enn eller lik {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 mniejsza b\u0105d\u017A r\xF3wna {{ compared_value }}.","pt":"Este valor deve ser igual ou inferior a {{ compared_value }}.","pt_BR":"Este valor deve ser menor ou igual a {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie mai mic\u0103 sau egal\u0103 cu {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u043E {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 men\u0161ia alebo rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost bi morala biti manj\u0161a ali enaka {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB m\xEB e vog\xEBl ose e barabart\xEB me {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u043C\u0430\u045A\u0430 \u0438\u043B\u0438 \u0458\u0435\u0434\u043D\u0430\u043A\u0430 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude manja ili jednaka {{ compared_value }}.","sv":"V\xE4rdet ska vara mindre \xE4n eller detsamma som {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E08\u0E30\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E2B\u0E23\u0E37\u0E2D\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E1A {{ compared_value }}","tl":"Ang halagang ito ay dapat mas maliit o magkapareha sa {{ compared_value }}.","tr":".Bu de\u011Fer {{ compared_value }} ile e\u015Fit veya d\xFC\u015F\xFCk olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043C\u0435\u043D\u0448\u0435 \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 {{ compared_value }}.","ur":"\u0633\u06D2 \u06A9\u0645 \u06CC\u0627 \u0628\u0631\u0627\u0628\u0631 \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ compared_value }} dan kichik yoki teng bo'lishi shart.","vi":"Gi\xE1 tr\u1ECB ph\u1EA3i nh\u1ECF h\u01A1n ho\u1EB7c b\u1EB1ng {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u5E94\u5C0F\u4E8E\u6216\u7B49\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u5C0F\u65BC\u6216\u7B49\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_NOT_BE_EQUAL_TO_COMPARED_VALUE={"id":"This value should not be equal to {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur ne doit pas \xEAtre \xE9gale \xE0 {{ compared_value }}.","af":"Hierdie waarde moet nie dieselfde as {{ compared_value }} wees nie.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u0644\u0627 \u062A\u0633\u0627\u0648\u064A {{ compared_value }}.","az":"Bu de\u011Fer {{ compared_value }} ile e\u015Fit olmamal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0440\u0430\u045E\u043D\u044F\u0446\u0446\u0430 {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0440\u0430\u0432\u043D\u0430 \u043D\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude razli\u010Dita od {{ compared_value }}.","ca":"Aquest valor no hauria de ser igual a {{ compared_value }}.","cs":"Tato hodnota nesm\xED b\xFDt rovna {{ compared_value }}.","cy":"Ni ddylai'r gwerth hwn fod yn hafal i {{ compared_value }}.","da":"Denne v\xE6rdi b\xF8r ikke v\xE6re lig med {{ compared_value }}.","de":"Dieser Wert sollte nicht {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AF\u03C3\u03B7 \u03BC\u03B5 {{ compared_value }}.","en":"This value should not be equal to {{ compared_value }}.","es":"Este valor deber\xEDa ser distinto de {{ compared_value }}.","et":"V\xE4\xE4rtus ei tohiks v\xF5rduda {{ compared_value }}-ga.","eu":"Balio hau ez litzateke {{ compared_value }}-(r)en berdina izan behar.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0646\u0628\u0627\u06CC\u062F \u0628\u0627 {{ compared_value }} \u0628\u0631\u0627\u0628\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon ei tule olla sama kuin {{ compared_value }}.","gl":"Este valor non deber\xEDa ser igual a {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DC\u05D0 \u05E9\u05D5\u05D5\u05D4 \u05DC {{ compared_value }}.","hr":"Ova vrijednost treba biti razli\u010Dita od {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k ne legyen {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0570\u0561\u057E\u0561\u057D\u0561\u0580 {{ compared_value }}\u0589","id":"Nilai ini seharusnya tidak sama dengan {{ compared_value }}.","it":"Questo valore dovrebbe essere diverso da {{ compared_value }}.","ja":"{{ compared_value }}\u3068\u7B49\u3057\u304F\u3066\u306F\u3044\u3051\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt net {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 neturi b\u016Bti lygi {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai ir j\u0101b\u016Bt vien\u0101dai ar {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u043D\u0435 \u0431\u0438\u0434\u0435 \u0435\u0434\u043D\u0430\u043A\u0432\u0430 \u043D\u0430 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u0442\u0430\u0439 \u0442\u044D\u043D\u0446\u04AF\u04AF \u0431\u0430\u0439\u0445 \u0451\u0441\u0433\u04AF\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value }} \u1014\u103E\u1004\u103A\u1037\u1019\u100A\u102E\u101E\u1004\u103A\u1037\u1015\u102B\u104B","nb":"Verdien skal ikke v\xE6re lik {{ compared_value }}.","nl":"Deze waarde mag niet gelijk zijn aan {{ compared_value }}.","nn":"Verdi b\xF8r ikkje vera eins med {{ compared_value }}.","no":"Verdien skal ikke v\xE6re lik {{ compared_value }}.","pl":"Ta warto\u015B\u0107 nie powinna by\u0107 r\xF3wna {{ compared_value }}.","pt":"Este valor n\xE3o deve ser igual a {{ compared_value }}.","pt_BR":"Este valor n\xE3o deve ser igual a {{ compared_value }}.","ro":"Aceast\u0103 valoare nu trebuie s\u0103 fie egal\u0103 cu {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0440\u0430\u0432\u043D\u043E {{ compared_value }}.","sk":"T\xE1to hodnota by nemala by\u0165 rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost ne bi smela biti enaka {{ compared_value }}.","sq":"Kjo vler\xEB nuk duhet t\xEB jet\xEB e barabart\xEB me {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0458\u0435\u0434\u043D\u0430\u043A\u0430 {{ compared_value }}.","sr_Latn":"Ova vrednost ne bi trebalo da bude jednaka {{ compared_value }}.","sv":"V\xE4rdet ska inte vara detsamma som {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E40\u0E17\u0E48\u0E32\u0E01\u0E31\u0E19\u0E01\u0E31\u0E1A {{ compared_value }}","tl":"Ang halagang ito ay hindi dapat magkapareha sa {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value }} ile e\u015Fit olmamal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438  {{ compared_value }}.","ur":"\u06A9\u06D2 \u0628\u0631\u0627\u0628\u0631 \u0646\u06BE\u064A\u06BA \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06BE \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ compared_value }} ga teng bo'lmasligi kerak.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p b\u1EB1ng {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u4E0D\u5E94\u5148\u7B49\u4E8E {{ compared_value }} \u3002","zh_TW":"\u8A72\u503C\u61C9\u4E0D\u7B49\u65BC {{ compared_value }} \u3002"}}};var THIS_VALUE_SHOULD_NOT_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE={"id":"This value should not be identical to {{ compared_value_type }} {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur ne doit pas \xEAtre identique \xE0 {{ compared_value_type }} {{ compared_value }}.","af":"Hierdie waarde moet nie identies as {{ compared_value_type }} {{ compared_value }} wees nie.","ar":"\u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0627\u0646 \u0644\u0627 \u062A\u0637\u0627\u0628\u0642 {{ compared_value_type }} {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compared_value_type }} {{ compared_value }} il\u0259 eyni olmamal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0456\u0434\u044D\u043D\u0442\u044B\u0447\u043D\u044B\u043C {{ compared_value_type }} {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u0441 {{ compared_value_type }} {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude identi\u010Dna sa {{ compared_value_type }} {{ compared_value }}.","ca":"Aquest valor no hauria de id\xE8ntic a {{ compared_value_type }} {{ compared_value }}.","cs":"Tato hodnota nesm\xED b\xFDt typu {{ compared_value_type }} a z\xE1rove\u0148 nesm\xED b\xFDt rovna {{ compared_value }}.","cy":"Ni ddylai'r gwerth hwn fod yn union yr un fath \xE2 {{ compared_value_type }} {{ compared_value }}.","da":"Denne v\xE6rdi b\xF8r ikke v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","de":"Dieser Wert sollte nicht identisch sein mit {{ compared_value_type }} {{ compared_value }}.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03B1\u03BD\u03BF\u03BC\u03BF\u03B9\u03CC\u03C4\u03C5\u03C0\u03B7 \u03BC\u03B5 {{ compared_value_type }} {{ compared_value }}.","en":"This value should not be identical to {{ compared_value_type }} {{ compared_value }}.","es":"Este valor no deber\xEDa ser id\xE9ntico a {{ compared_value_type }} {{ compared_value }}.","et":"V\xE4\xE4rtus ei tohiks olla identne v\xE4\xE4rtusega {{ compared_value_type }} {{ compared_value }}.","eu":"Balio hau ez litzateke {{ compared_value_type }} {{ compared_value }}-(r)en berbera izan behar.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0646\u0628\u0627\u06CC\u062F \u0628\u0631\u0627\u0628\u0631 {{ compared_value_type }} {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Arvon ei tule olla sama kuin {{ compared_value_type }} {{ compared_value }}.","gl":"Este valor non deber\xEDa ser identico a {{ compared_value_type }} {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DC\u05D0 \u05D6\u05D4\u05D4 \u05DC {{ compared_value_type }} {{ compared_value }}.","hr":"Ova vrijednost treba biti razli\u010Dita od {{ compared_value_type }} {{ compared_value }}.","hu":"Ez az \xE9rt\xE9k ne legyen ugyanolyan, mint {{ compared_value_type }} {{ compared_value }}.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0576\u0578\u0582\u0576\u0568 {{ compared_value_type }} {{ compared_value }}:","id":"Nilai ini seharusnya tidak identik dengan {{ compared_value_type }} {{ compared_value }}.","it":"Questo valore dovrebbe essere diverso da {{ compared_value_type }} {{ compared_value }}.","ja":"{{ compared_value_type }}\u3068\u3057\u3066\u306E{{ compared_value }}\u3068\u7B49\u3057\u304F\u3066\u306F\u3044\u3051\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt net identesch si mat {{ compared_value_type }} {{ compared_value }}.","lt":"\u0160i reik\u0161m\u0117 neturi b\u016Bti identi\u0161ka {{ compared_value_type }} {{ compared_value }}.","lv":"\u0160ai v\u0113rt\u012Bbai nav j\u0101b\u016Bt identiskai ar {{ compared_value_type }} {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u043D\u0435 \u0431\u0438\u0434\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u0441\u043E {{ compared_value_type }} {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value_type }} {{ compared_value }} -\u0442\u0430\u0439 \u044F\u0433 \u0438\u0436\u0438\u043B \u0431\u0430\u0439\u0445 \u0451\u0441\u0433\u04AF\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ compared_value_type }} {{ compared_value }} \u1014\u103E\u1004\u103A\u1037\u1011\u1015\u103A\u1010\u1030\u1019\u100A\u102E\u1019\u103B\u103E\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal ikke v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","nl":"Deze waarde mag niet identiek zijn aan {{ compared_value_type }} {{ compared_value }}.","nn":"Denne verdien b\xF8r ikkje vera eins med {{ compared_value_type }} {{ compared_value }}.","no":"Verdien skal ikke v\xE6re identisk med {{ compared_value_type }} {{ compared_value }}.","pl":"Ta warto\u015B\u0107 nie powinna by\u0107 identycznego typu {{ compared_value_type }} oraz warto\u015Bci {{ compared_value }}.","pt":"Este valor n\xE3o deve ser id\xEAntico a {{ compared_value_type }} {{ compared_value }}.","pt_BR":"Este valor n\xE3o deve ser id\xEAntico a {{ compared_value_type }} {{ compared_value }}.","ro":"Aceast\u0103 valoare nu trebuie s\u0103 fie identic\u0103 cu {{ compared_value_type }} {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u044B\u043C {{ compared_value_type }} {{ compared_value }}.","sk":"T\xE1to hodnota by nemala by\u0165 typu {{ compared_value_type }} a z\xE1rove\u0148 by nemala by\u0165 rovn\xE1 {{ compared_value }}.","sl":"Ta vrednost ne bi smela biti identi\u010Dna {{ compared_value_type }} {{ compared_value }}.","sq":"Kjo vler\xEB nuk duhet t\xEB jet\xEB identike me {{ compared_value_type }} {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0430 \u0441\u0430 {{ compared_value_type }} {{ compared_value }}.","sr_Latn":"Ova vrednost ne bi trebalo da bude identi\u010Dna sa {{ compared_value_type }} {{ compared_value }}.","sv":"V\xE4rdet ska inte vara identiskt med {{ compared_value_type }} {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E19\u0E01\u0E31\u0E1A {{ compared_value_type }} {{ compared_value }}","tl":"Ang halagang ito ay hindi dapat magkapareha sa {{ compared_value_type }} {{ compared_value }}.","tr":"Bu de\u011Fer {{ compared_value_type }} {{ compared_value }} ile ayn\u0131 olmamal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u0456\u0434\u0435\u043D\u0442\u0438\u0447\u043D\u0438\u043C {{ compared_value_type }} {{ compared_value }}.","ur":"\u0627\u06CC\u06A9 \u062C\u06CC\u0633\u06CC \u0646\u06CC\u064A\u06BA \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} {{ compared_value_type }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat bir xil bo'lishi kerak emas {{ compared_value_type }} {{ compared_value }}.","vi":"Gi\xE1 tr\u1ECB kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p gi\u1ED1ng nh\u01B0 {{ compared_value_type }} {{ compared_value }}.","zh_CN":"\u8BE5\u503C\u4E0D\u5E94\u4E0E {{ compared_value_type }} {{ compared_value }} \u76F8\u540C\u3002","zh_TW":"\u8A72\u503C\u4E0D\u61C9\u8207 {{ compared_value_type }} {{ compared_value }} \u76F8\u540C\u3002"}}};var THE_IMAGE_RATIO_IS_TOO_BIG_RATIO_ALLOWED_MAXIMUM_RATIO_IS_MAX_RATIO={"id":"The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.","translations":{"validators":{"fr":"Le rapport largeur/hauteur de l'image est trop grand ({{ ratio }}). Le rapport maximal autoris\xE9 est {{ max_ratio }}.","af":"Die beeld aspek is te groot ({{ ratio }}). Die maksimum toegelate aspek is {{ max_ratio }}.","ar":"\u0646\u0633\u0628\u0629 \u0627\u0644\u0639\u0631\u0636 \u0639\u0644\u0649 \u0627\u0644\u0627\u0631\u062A\u0641\u0627\u0639 \u0644\u0644\u0635\u0648\u0631\u0629 \u0643\u0628\u064A\u0631\u0629 \u062C\u062F\u0627 ({{ ratio }}). \u0627\u0644\u062D\u062F \u0627\u0644\u0623\u0642\u0635\u0649 \u0644\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648 {{ max_ratio }}.","az":"\u015E\u0259kil nisb\u0259ti \xE7ox b\xFCy\xFCkd\xFCr ({{ ratio }}). \u0130caz\u0259 veril\u0259n maksimum nisb\u0259t: {{ max_ratio }}.","be":"\u0421\u0443\u0430\u0434\u043D\u043E\u0441\u0456\u043D\u044B \u0431\u0430\u043A\u043E\u045E \u0432\u044B\u044F\u0432\u044B \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456\u043C ({{ ratio }}). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0430\u043A\u0441\u0456\u043C\u0430\u043B\u044C\u043D\u044B\u044F \u0441\u0443\u0430\u0434\u043D\u043E\u0441\u0456\u043D\u044B {{max_ratio}} .","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C\u0430 \u043F\u0440\u043E\u043F\u043E\u0440\u0446\u0438\u044F ({{ ratio }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u043F\u0440\u043E\u043F\u043E\u0440\u0446\u0438\u044F \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 {{ max_ratio }}.","bs":"Razmjera ove slike je prevelika ({{ ratio }}). Maksimalna dozvoljena razmjera je {{ max_ratio }}.","ca":"La proporci\xF3 de l'imatge \xE9s massa gran ({{ ratio }}). La m\xE0xima proporci\xF3 permesa \xE9s {{ max_ratio }}.","cs":"Pom\u011Br stran obr\xE1zku je p\u0159\xEDli\u0161 velk\xFD ({{ ratio }}). Maxim\xE1ln\xED povolen\xFD pom\u011Br stran obr\xE1zku je {{ max_ratio }}.","cy":"Mae'r gymhareb delwedd yn rhy fawr ({{ ratio }}). Y gymhareb uchaf a ganiateir yw {{ max_ratio }}.","da":"Billedforholdet er for stort ({{ratio}}). Tilladt maksimumsforhold er {{ max_ratio }}.","de":"Das Seitenverh\xE4ltnis des Bildes ist zu gro\xDF ({{ ratio }}). Der erlaubte Maximalwert ist {{ max_ratio }}.","el":"\u0397 \u03B1\u03BD\u03B1\u03BB\u03BF\u03B3\u03AF\u03B1 \u03C0\u03BB\u03AC\u03C4\u03BF\u03C5\u03C2-\u03CD\u03C8\u03BF\u03C5\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03B7 ({{ ratio }}). \u039C\u03AD\u03B3\u03B9\u03C3\u03C4\u03B7 \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03AE \u03B1\u03BD\u03B1\u03BB\u03BF\u03B3\u03AF\u03B1 {{ max_ratio }}.","en":"The image ratio is too big ({{ ratio }}). Allowed maximum ratio is {{ max_ratio }}.","es":"La proporci\xF3n de la imagen es demasiado grande ({{ ratio }}). La m\xE1xima proporci\xF3n permitida es {{ max_ratio }}.","et":"Kuvasuhe on liiga suur ({{ ratio }}). Lubatud maksimaalne suhe on {{ max_ratio }}.","eu":"Irudiaren proportzioa oso handia da ({{ ratio }}). Onartutako proportzio handienda {{ max_ratio }} da.","fa":"\u0627\u0628\u0639\u0627\u062F ({{ ratio }}) \u0639\u06A9\u0633 \u0628\u06CC\u0634 \u0627\u0632 \u062D\u062F \u0628\u0632\u0631\u06AF \u0627\u0633\u062A. \u0628\u06CC\u0634\u06CC\u0646\u0647 (\u062D\u062F\u0627\u06A9\u062B\u0631) \u0627\u0628\u0639\u0627\u062F \u0645\u062C\u0627\u0632 {{ max_ratio }} \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuvasuhde on liian suuri ({{ ratio }}). Suurin sallittu suhde on {{ max_ratio }}.","gl":"A proporci\xF3n da imaxe \xE9 demasiado grande ({{ ratio }}). A proporci\xF3n m\xE1xima permitida \xE9 {{ max_ratio }}.","he":"\u05D4\u05D9\u05D7\u05E1 \u05E9\u05DC \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D4\u05D5\u05D0 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9 ({{ ratio }}). \u05D4\u05D9\u05D7\u05E1 \u05D4\u05DE\u05E7\u05E1\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D0\u05E4\u05E9\u05E8\u05D9 \u05D4\u05D5\u05D0 {{ max_ratio }}.","hr":"Omjer slike je prevelik ({{ ratio }}). Dozvoljeni maksimalni omjer je {{ max_ratio }}.","hu":"A k\xE9par\xE1ny t\xFAl nagy ({{ ratio }}). A megengedett legnagyobb k\xE9par\xE1ny {{ max_ratio }}.","hy":"\u054A\u0561\u057F\u056F\u0565\u0580\u056B \u056F\u0578\u0572\u0574\u0565\u0580\u056B \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056F\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u056D\u056B\u057D\u057F \u0574\u0565\u056E \u0567 ({{ ratio }}). \u0544\u0561\u0584\u057D\u056B\u0574\u0561\u056C \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056F\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568\u055D {{ max_ratio }}\u0589","id":"Rasio citra terlalu besar ({{ ratio }}). Rasio maksimum yang diizinkan adalah {{ max_ratio }}.","it":"Il rapporto di aspetto dell'immagine \xE8 troppo grande ({{ ratio }}). Il rapporto massimo consentito \xE8 {{ max_ratio }}.","ja":"\u753B\u50CF\u306E\u30A2\u30B9\u30DA\u30AF\u30C8\u6BD4\u304C\u5927\u304D\u3059\u304E\u307E\u3059({{ ratio }})\u3002{{ max_ratio }}\u307E\u3067\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'S\xE4iteverh\xE4ltnis vum Bild ass ze grouss ({{ ratio }}). Den erlaabte Maximalw\xE4ert ass {{ max_ratio }}.","lt":"Nuotraukos santykis yra per didelis ({{ ratio }}). Did\u017Eiausias leistinas santykis yra {{ max_ratio }}.","lv":"Att\u0113la attiec\u012Bba ir p\u0101r\u0101k liela ({{ ratio }}). At\u013Caut\u0101 maksim\u0101l\u0101 attiec\u012Bba ir {{ max_ratio }}.","mk":"\u0421\u043E\u043E\u0434\u043D\u043E\u0441\u043E\u0442 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u0433\u043E\u043B\u0435\u043C ({{ ratio }}).\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0438\u043E\u0442 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D \u0441\u043E\u043E\u0434\u043D\u043E\u0441 \u0435 {{ max_ratio }}.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u0445\u0430\u0440\u044C\u0446\u0430\u0430 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430 ({{ ratio }}). \u0425\u0430\u0440\u044C\u0446\u0430\u0430 \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0438\u0445\u0434\u044D\u044D {{ max_ratio }} \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1021\u1001\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u101E\u100A\u103A\u1021\u101C\u103D\u1014\u103A\u1000\u103C\u102E\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B ({{ ratio }})\u104B \u1001\u103D\u1004\u103A\u1037\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u1031\u102C\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1021\u1001\u103B\u102D\u102F\u1038\u1021\u101E\u102C\u1038\u101E\u100A\u103A {{ max_ratio }} \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildeforholdet er for stort ({{ ratio }}). Tillatt bildeforhold er maks {{ max_ratio }}.","nl":"De afbeeldingsverhouding is te groot ({{ ratio }}). Maximale verhouding is {{ max_ratio }}.","nn":"Sideforholdet til biletet er for stort ({{ ratio }}). Sideforholdet kan ikkje vere st\xF8rre enn {{ max_ratio }}.","no":"Bildeforholdet er for stort ({{ ratio }}). Tillatt bildeforhold er maks {{ max_ratio }}.","pl":"Proporcje obrazu s\u0105 zbyt du\u017Ce ({{ ratio }}). Maksymalne proporcje to {{ max_ratio }}.","pt":"O formato da imagem \xE9 muito grande ({{ ratio }}). O formato m\xE1ximo \xE9 {{ max_ratio }}.","pt_BR":"A propor\xE7\xE3o da imagem \xE9 muito grande ({{ ratio }}). A propor\xE7\xE3o m\xE1xima permitida \xE9 {{ max_ratio }}.","ro":"Raportul imaginii este prea mare ({{ ratio }}). Raportul maxim permis este {{ max_ratio }}.","ru":"\u0421\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0432\u0435\u043B\u0438\u043A\u043E ({{ ratio }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0441\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D {{ max_ratio }}.","sk":"Pomer str\xE1n obr\xE1zku je pr\xEDli\u0161 ve\u013Ek\xFD ({{ ratio }}). Maxim\xE1lny povolen\xFD pomer str\xE1n obr\xE1zku je {{ max_ratio }}.","sl":"Razmerje slike je preveliko ({{ ratio }}). Najve\u010Dje dovoljeno razmerje je {{ max_ratio }}.","sq":"Raporti i imazhit \xEBsht\xEB shum\xEB i madh ({{ ratio }}). Raporti maksimal i lejuar \xEBsht\xEB {{ max_ratio }}.","sr_Cyrl":"\u0420\u0430\u0437\u043C\u0435\u0440\u0430 \u043E\u0432\u0435 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430 ({{ ratio }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u043D\u0430 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430 \u0440\u0430\u0437\u043C\u0435\u0440\u0430 \u0458\u0435 {{ max_ratio }}.","sr_Latn":"Razmera ove slike je prevelika ({{ ratio }}). Maksimalna dozvoljena razmera je {{ max_ratio }}.","sv":"F\xF6rh\xE5llandet mellan bildens bredd och h\xF6jd \xE4r f\xF6r stort ({{ ratio }}). H\xF6gsta till\xE5tna f\xF6rh\xE5llande \xE4r {{ max_ratio }}.","th":"\u0E2A\u0E31\u0E14\u0E2A\u0E48\u0E27\u0E19\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19 ({{ ratio }}) \u0E2A\u0E31\u0E14\u0E2A\u0E48\u0E27\u0E19\u0E43\u0E2B\u0E0D\u0E48\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D {{ max_ratio }}","tl":"Ang ratio ng imahe ay masyadong malaki ({{ ratio }}). Ang pinakamalaking ratio ay {{ max_ratio }}.","tr":"Resim oran\u0131 \xE7ok b\xFCy\xFCk ({{ ratio }}). \u0130zin verilen maksimum oran: {{ max_ratio }}.","uk":"\u0421\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0435 ({{ ratio }}). \u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0435 \u0441\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D {{ max_ratio }}.","ur":"\u06C1\u06D2 {{ max_ratio }} \u0627\u062C\u0627\u0632\u062A \u0634\u062F\u06C1 \u0632\u06CC\u0627\u062F\u06C1 \u0633\u06D2 \u0632\u06CC\u0627\u062F\u06C1 \u062A\u0646\u0627\u0633\u0628 ({{ ratio }}) \u062A\u0635\u0648\u06CC\u0631 \u06A9\u0627 \u062A\u0646\u0627\u0633\u0628 \u0628\u06C1\u062A \u0628\u0691\u0627 \u06C1\u06D2","uz":"Rasmning tomonlari nisbati juda katta ({{ ratio }}). Maksimal tomonlar nisbati {{ max_ratio }}.","vi":"T\u1EF7 l\u1EC7 b\u1EE9c \u1EA3nh qu\xE1 l\u1EDBn ({{ ratio }}). T\u1EF7 l\u1EC7 t\u1ED1i \u0111a cho ph\xE9p l\xE0 {{ max_ratio }}.","zh_CN":"\u56FE\u7247\u5BBD\u9AD8\u6BD4\u592A\u5927 ({{ ratio }})\u3002\u5141\u8BB8\u7684\u6700\u5927\u5BBD\u9AD8\u6BD4\u4E3A {{ max_ratio }}\u3002","zh_TW":"\u5716\u50CF\u683C\u5F0F\u904E\u5927 ({{ ratio }})\u3002 \u6700\u5927\u5141\u8A31\u5C3A\u5BF8 {{ max_ratio }}\u3002"}}};var THE_IMAGE_RATIO_IS_TOO_SMALL_RATIO_MINIMUM_RATIO_EXPECTED_IS_MIN_RATIO={"id":"The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.","translations":{"validators":{"fr":"Le rapport largeur\/hauteur de l'image est trop petit ({{ ratio }}). Le rapport minimal attendu est {{ min_ratio }}.","af":"Die beeld aspek is te klein ({{ ratio }}). Die minimum toegelate aspek is {{ min_ratio }}.","ar":"\u0646\u0633\u0628\u0629 \u0627\u0644\u0639\u0631\u0636 \u0639\u0644\u0649 \u0627\u0644\u0627\u0631\u062A\u0641\u0627\u0639 \u0644\u0644\u0635\u0648\u0631\u0629 \u0635\u063A\u064A\u0631\u0629 \u062C\u062F\u0627 ({{ ratio }}). \u0627\u0644\u062D\u062F \u0627\u0644\u0623\u062F\u0646\u0649 \u0644\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0633\u0645\u0648\u062D \u0628\u0647 \u0647\u0648 {{ max_ratio }}.","az":"\u015E\u0259kil nisb\u0259ti \xE7ox balacad\u0131r ({{ ratio }}). \u0130caz\u0259 veril\u0259n minimum nisb\u0259t: {{ min_ratio }}.","be":"\u0421\u0443\u0430\u0434\u043D\u043E\u0441\u0456\u043D\u044B \u0431\u0430\u043A\u043E\u045E \u0432\u044B\u044F\u0432\u044B \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u0456\u043C\u0456 ({{ ratio }}). \u0414\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430 \u043C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u044B\u044F \u0441\u0443\u0430\u0434\u043D\u043E\u0441\u0456\u043D\u044B {{ min_ratio }}.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u0442\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u0430 \u043F\u0440\u043E\u043F\u043E\u0440\u0446\u0438\u044F ({{ ratio }}). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u043D\u0430\u0442\u0430 \u043F\u0440\u043E\u043F\u043E\u0440\u0446\u0438\u044F \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 {{ min_ratio }}.","bs":"Razmjera ove slike je premala ({{ ratio }}). Minimalna o\u010Dekivana razmjera je {{ min_ratio }}.","ca":"La proporci\xF3 de l'imatge \xE9s massa petita ({{ ratio }}). La m\xEDnima proporci\xF3 permesa \xE9s {{ max_ratio }}.","cs":"Pom\u011Br stran obr\xE1zku je p\u0159\xEDli\u0161 mal\xFD ({{ ratio }}). Minim\xE1ln\xED povolen\xFD pom\u011Br stran obr\xE1zku je {{ min_ratio }}.","cy":"Mae'r gymhareb delwedd yn rhy fach ({{ ratio }}). Y gymhareb isaf a ddisgwylir yw {{ min_ratio }}.","da":"Billedforholdet er for lille ({{ ratio }}). Minimumsforventet forventet er {{ min_ratio }}.","de":"Das Seitenverh\xE4ltnis des Bildes ist zu klein ({{ ratio }}). Der erwartete Minimalwert ist {{ min_ratio }}.","el":"\u0397 \u03B1\u03BD\u03B1\u03BB\u03BF\u03B3\u03AF\u03B1 \u03C0\u03BB\u03AC\u03C4\u03BF\u03C5\u03C2-\u03CD\u03C8\u03BF\u03C5\u03C2 \u03C4\u03B7\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B9\u03BA\u03C1\u03AE ({{ ratio }}). \u0395\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03B7 \u03B5\u03C0\u03B9\u03C4\u03C1\u03B5\u03C0\u03C4\u03AE \u03B1\u03BD\u03B1\u03BB\u03BF\u03B3\u03AF\u03B1 {{ min_ratio }}.","en":"The image ratio is too small ({{ ratio }}). Minimum ratio expected is {{ min_ratio }}.","es":"La proporci\xF3n de la imagen es demasiado peque\xF1a ({{ ratio }}). La m\xEDnima proporci\xF3n permitida es {{ min_ratio }}.","et":"Kuvasuhe on liiga v\xE4ike ({{ ratio }}). Oodatav minimaalne suhe on {{ min_ratio }}.","eu":"Irudiaren proportzioa oso txikia da ({{ ratio }}). Onartutako proportzio txikiena {{ min_ratio }} da.","fa":"\u0627\u0628\u0639\u0627\u062F ({{ ratio }}) \u0639\u06A9\u0633 \u0628\u06CC\u0634 \u0627\u0632 \u062D\u062F \u06A9\u0648\u0686\u06A9 \u0627\u0633\u062A. \u06A9\u0645\u06CC\u0646\u0647 (\u062D\u062F\u0627\u0642\u0644) \u0627\u0628\u0639\u0627\u062F \u0645\u0648\u0631\u062F \u0627\u0646\u062A\u0638\u0627\u0631 {{ min_ratio }} \u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Kuvasuhde on liian pieni ({{ ratio }}). Pienin sallittu suhde on {{ min_ratio }}.","gl":"A proporci\xF3n da \xE9 demasiado pequena ({{ ratio }}). A proporci\xF3n m\xEDnima permitida \xE9 {{ min_ratio }}.","he":"\u05D4\u05D9\u05D7\u05E1 \u05E9\u05DC \u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D4\u05D5\u05D0 \u05E7\u05D8\u05DF \u05DE\u05D3\u05D9 ({{ ratio }}). \u05D4\u05D9\u05D7\u05E1 \u05D4\u05DE\u05D9\u05E0\u05D9\u05DE\u05DC\u05D9 \u05D4\u05D0\u05E4\u05E9\u05E8\u05D9 \u05D4\u05D5\u05D0 {{ min_ratio }}.","hr":"Omjer slike je premali ({{ ratio }}). Minimalni o\u010Dekivani omjer je {{ min_ratio }}.","hu":"A k\xE9par\xE1ny t\xFAl kicsi ({{ ratio }}). A megengedett legkisebb k\xE9par\xE1ny {{ min_ratio }}.","hy":"\u054A\u0561\u057F\u056F\u0565\u0580\u056B \u056F\u0578\u0572\u0574\u0565\u0580\u056B \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056F\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568 \u056D\u056B\u057D\u057F \u0583\u0578\u0584\u0580 \u0567 ({{ ratio }}). \u0544\u056B\u0576\u056B\u0574\u0561\u056C \u0570\u0561\u0580\u0561\u0562\u0565\u0580\u0561\u056F\u0581\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0568\u055D {{ min_ratio }}\u0589","id":"Rasio citra terlalu kecil ({{ ratio }}). Rasio minimum yang diharapkan adalah {{ min_ratio }}.","it":"Il rapporto di aspetto dell'immagine \xE8 troppo piccolo ({{ ratio }}). Il rapporto minimo consentito \xE8 {{ min_ratio }}.","ja":"\u753B\u50CF\u306E\u30A2\u30B9\u30DA\u30AF\u30C8\u6BD4\u304C\u5C0F\u3055\u3059\u304E\u307E\u3059({{ ratio }})\u3002{{ min_ratio }}\u4EE5\u4E0A\u306B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'S\xE4iteverh\xE4ltnis vum Bild ass ze kleng ({{ ratio }}). Den erwaarte Minimalw\xE4ert ass {{ min_ratio }}.","lt":"Nuotraukos santykis yra per ma\u017Eas ({{ ratio }}). Ma\u017Eiausias leistinas santykis yra {{ min_ratio }}.","lv":"Att\u0113la attiec\u012Bba ir p\u0101r\u0101k maza ({{ ratio }}). Minim\u0101l\u0101 sagaid\u0101m\u0101 attiec\u012Bba ir {{ min_ratio }}.","mk":"\u0421\u043E\u043E\u0434\u043D\u043E\u0441\u043E\u0442 \u043D\u0430 \u0441\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u043C\u0430\u043B ({{ ratio }}). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u043D\u0438\u043E\u0442 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D \u0441\u043E\u043E\u0434\u043D\u043E\u0441 \u0435 {{ min_ratio }}.","mn":"\u0417\u0443\u0440\u0433\u0438\u0439\u043D \u0445\u0430\u0440\u044C\u0446\u0430\u0430 \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0436\u0438\u0436\u0438\u0433 \u0431\u0430\u0439\u043D\u0430 ({{ ratio }}). \u0425\u0430\u0440\u044C\u0446\u0430\u0430 \u043D\u044C \u0445\u0430\u043C\u0433\u0438\u0439\u043D \u0431\u0430\u0433\u0430\u0434\u0430\u0430 {{ min_ratio }} \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1021\u1001\u103B\u102D\u102F\u1038\u1021\u1005\u102C\u1038\u101E\u100A\u103A\u1021\u101C\u103D\u1014\u103A\u101E\u1031\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B ({{ ratio }})\u104B \u1001\u103D\u1004\u103A\u1037\u1015\u103C\u102F\u1011\u102C\u1038\u101E\u1031\u102C\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1021\u1001\u103B\u102D\u102F\u1038\u1021\u101E\u102C\u1038\u101E\u100A\u103A {{ min_ratio }} \u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Bildeforholdet er for lite ({{ ratio }}). Forventet bildeforhold er minst {{ min_ratio }}.","nl":"De afbeeldingsverhouding is te klein ({{ ratio }}). Minimale verhouding is {{ min_ratio }}.","nn":"Sideforholdet til biletet er for lite ({{ ratio }}). Sideforholdet kan ikkje vere mindre enn {{ min_ratio }}.","no":"Bildeforholdet er for lite ({{ ratio }}). Forventet bildeforhold er minst {{ min_ratio }}.","pl":"Proporcje obrazu s\u0105 zbyt ma\u0142e ({{ ratio }}). Minimalne proporcje to {{ min_ratio }}.","pt":"O formato da imagem \xE9 muito pequeno ({{ ratio }}). O formato m\xEDnimo esperado \xE9 {{ min_ratio }}.","pt_BR":"A propor\xE7\xE3o da imagem \xE9 muito pequena ({{ ratio }}). A propor\xE7\xE3o m\xEDnima esperada \xE9 {{ min_ratio }}.","ro":"Raportul imaginii este prea mic ({{ ratio }}). Raportul minim permis este {{ min_ratio }}.","ru":"\u0421\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u043E ({{ ratio }}). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u0441\u043E\u043E\u0442\u043D\u043E\u0448\u0435\u043D\u0438\u0435 \u0441\u0442\u043E\u0440\u043E\u043D {{ min_ratio }}.","sk":"Pomer str\xE1n obr\xE1zku je pr\xEDli\u0161 mal\xFD ({{ ratio }}). Minim\xE1lny povolen\xFD pomer str\xE1n obr\xE1zku je {{ min_ratio }}.","sl":"Razmerje slike je premajhno ({{ ratio }}). Najmanj\u0161e pri\u010Dakovano razmerje je {{ min_ratio }}.","sq":"Raporti i imazhit \xEBsht\xEB shum\xEB i vog\xEBl ({{ ratio }}). Raporti minimal pritet t\xEB jet\xEB {{ min_ratio }}.","sr_Cyrl":"\u0420\u0430\u0437\u043C\u0435\u0440\u0430 \u043E\u0432\u0435 \u0441\u043B\u0438\u043A\u0435 \u0458\u0435 \u043F\u0440\u0435\u043C\u0430\u043B\u0430 ({{ ratio }}). \u041C\u0438\u043D\u0438\u043C\u0430\u043B\u043D\u0430 \u043E\u0447\u0435\u043A\u0438\u0432\u0430\u043D\u0430 \u0440\u0430\u0437\u043C\u0435\u0440\u0430 \u0458\u0435 {{ min_ratio }}.","sr_Latn":"Razmera ove slike je premala ({{ ratio }}). Minimalna o\u010Dekivana razmera je {{ min_ratio }}.","sv":"F\xF6rh\xE5llandet mellan bildens bredd och h\xF6jd \xE4r f\xF6r litet ({{ ratio }}). Minsta till\xE5tna f\xF6rh\xE5llande \xE4r {{ min_ratio }}.","th":"\u0E2A\u0E31\u0E14\u0E2A\u0E48\u0E27\u0E19\u0E02\u0E2D\u0E07\u0E20\u0E32\u0E1E\u0E40\u0E25\u0E47\u0E01\u0E40\u0E01\u0E34\u0E19 ({{ ratio }}) \u0E2A\u0E31\u0E14\u0E2A\u0E48\u0E27\u0E19\u0E40\u0E25\u0E47\u0E01\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14\u0E17\u0E35\u0E48\u0E43\u0E0A\u0E49\u0E44\u0E14\u0E49\u0E04\u0E37\u0E2D {{ min_ratio }}","tl":"Ang ratio ng imahe ay masyadong maliit ({{ ratio }}). Ang pinakamaliit na ratio ay {{ min_ratio }}.","tr":"Resim oran\u0131 \xE7ok ufak ({{ ratio }}). Beklenen minimum oran {{ min_ratio }}.","uk":"\u0421\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u043E ({{ ratio }}). \u041C\u0456\u043D\u0456\u043C\u0430\u043B\u044C\u043D\u0435 \u0441\u043F\u0456\u0432\u0432\u0456\u0434\u043D\u043E\u0448\u0435\u043D\u043D\u044F \u0441\u0442\u043E\u0440\u0456\u043D {{ min_ratio }}.","ur":"\u06C1\u06D2{{ min_ratio }} ratio \u0645\u062A\u0648\u0642\u0639 \u06A9\u0645 \u0627\u0632 \u06A9\u0645 ({{ ratio }}) \u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627 \u06C1\u06D2 ratio \u062A\u0635\u0648\u06CC\u0631 \u06A9\u0627","uz":"Rasmning format nisbati juda kichik ({{ ratio }}). Minimal tomonlar nisbati {{ min_ratio }}.","vi":"T\u1EF7 l\u1EC7 b\u1EE9c \u1EA3nh qu\xE1 nh\u1ECF ({{ ratio }}). T\u1EF7 l\u1EC7 t\u1ED1i thi\u1EC3u mong mu\u1ED1n l\xE0 {{ min_ratio }}.","zh_CN":"\u56FE\u7247\u5BBD\u9AD8\u6BD4\u592A\u5C0F ({{ ratio }})\u3002\u5141\u8BB8\u7684\u6700\u5927\u5BBD\u9AD8\u6BD4\u4E3A {{ min_ratio }}\u3002","zh_TW":"\u5716\u50CF\u683C\u5F0F\u904E\u5C0F ({{ ratio }})\u3002\u6700\u5C0F\u5C3A\u5BF8 {{ min_ratio }}\u3002"}}};var THE_IMAGE_IS_SQUARE_WIDTH_X_HEIGHT_PX_SQUARE_IMAGES_ARE_NOT_ALLOWED={"id":"The image is square ({{ width }}x{{ height }}px). Square images are not allowed.","translations":{"validators":{"fr":"L'image est carr\xE9e ({{ width }}x{{ height }}px). Les images carr\xE9es ne sont pas autoris\xE9es.","af":"Die beeld is vierkantig ({{ width }}x{{ height }}px). Vierkantige beelde word nie toegelaat nie.","ar":"\u0627\u0644\u0635\u0648\u0631\u0629 \u0645\u0631\u0628\u0639\u0629 ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0627\u0644\u0645\u0631\u0628\u0639\u0629 \u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627.","az":"\u015E\u0259kil kvadratd\u0131r ({{ width }}x{{ height }}px). Kvadrat \u015F\u0259kill\u0259r\u0259 icaz\u0259 verilmir.","be":"\u0412\u044B\u044F\u0432\u0430 \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0430\u044F ({{width}}x{{height}}px). \u041A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u044B\u044F \u0432\u044B\u044F\u0432\u044B \u043D\u0435 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u043A\u0432\u0430\u0434\u0440\u0430\u0442 ({{ width }}x{{ height }}px). \u0422\u0430\u043A\u0438\u0432\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u043D\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438.","bs":"Ova slika je kvadratnog oblika ({{ width }}x{{ height }}px). Kvadratne slike nisu dozvoljene.","ca":"L'imatge \xE9s quadrada({{ width }}x{{ height }}px). Les imatges quadrades no estan permeses.","cs":"Strany obr\xE1zku jsou \u010Dtvercov\xE9 ({{ width }}x{{ height }}px). \u010Ctvercov\xE9 obr\xE1zky nejsou povolen\xE9.","cy":"Mae'r ddelwedd yn sgw\xE2r ({{ width }}x{{ height }}px). Ni chaniateir delweddau sgw\xE2r.","da":"Billedet er firkantet ({{ width }} x {{ height }} px). Firkantede billeder er ikke tilladt.","de":"Das Bild ist quadratisch ({{ width }}x{{ height }}px). Quadratische Bilder sind nicht erlaubt.","el":"\u0397 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C4\u03B5\u03C4\u03C1\u03AC\u03B3\u03C9\u03BD\u03B7 ({{ width }}x{{ height }}px). \u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03BF\u03BD\u03C4\u03B1\u03B9 \u03C4\u03B5\u03C4\u03C1\u03AC\u03B3\u03C9\u03BD\u03B5\u03C2 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B5\u03C2.","en":"The image is square ({{ width }}x{{ height }}px). Square images are not allowed.","es":"La imagen es cuadrada ({{ width }}x{{ height }}px). Las im\xE1genes cuadradas no est\xE1n permitidas.","et":"Pilt on ruudukujuline ({{ width }}x{{ height }}px). Ruudukujulised pildid pole lubatud.","eu":"Irudia karratua da ({{ width }}x{{ height }}px). Karratuak diren irudiak ez dira onartzen.","fa":"\u0627\u06CC\u0646 \u062A\u0635\u0648\u06CC\u0631 \u06CC\u06A9 \u0645\u0631\u0628\u0639 ({{ width }}x{{ height }}px) \u0645\u06CC\u200C\u0628\u0627\u0634\u062F. \u062A\u0635\u0627\u0648\u06CC\u0631 \u0645\u0631\u0628\u0639 \u0634\u06A9\u0644 \u0645\u062C\u0627\u0632 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u0646\u062F.","fi":"Kuva on neli\xF6 ({{ width }}x{{ height }} px). Neli\xF6nmuotoiset kuvat eiv\xE4t ole sallittuja.","gl":"A imaxe \xE9 cadrada ({{ width }}x{{ height }}px). As im\xE1xenes cadradas non est\xE1n permitidas.","he":"\u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05DE\u05E8\u05D5\u05D1\u05E2\u05EA ({{ width }}x{{ height }}px). \u05D0\u05E1\u05D5\u05E8\u05D5\u05EA \u05EA\u05DE\u05D5\u05E0\u05D5\u05EA \u05DE\u05E8\u05D5\u05D1\u05E2\u05D5\u05EA.","hr":"Slika je kvadratnog oblika ({{ width }}x{{ height }}px). Kvadratne slike nisu dozvoljene.","hu":"A k\xE9p n\xE9gyzet alak\xFA ({{ width }}x{{ height }}px). A n\xE9gyzet alak\xFA k\xE9pek nem enged\xE9lyezettek.","hy":"\u054A\u0561\u057F\u056F\u0565\u0580\u0568 \u0584\u0561\u057C\u0561\u056F\u0578\u0582\u057D\u056B \u0567({{ width }}x{{ height }}px)\u0589 \u0554\u0561\u057C\u0561\u056F\u0578\u0582\u057D\u056B \u0576\u056F\u0561\u0580\u0576\u0565\u0580 \u0579\u0565\u0576 \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u057E\u0578\u0582\u0574\u0589","id":"Citra persegi ({{ width }}x{{ height }}px). Citra persegi tidak diizinkan.","it":"L'immagine \xE8 quadrata ({{ width }}x{{ height }}px). Le immagini quadrate non sono consentite.","ja":"\u753B\u50CF\u304C\u6B63\u65B9\u5F62\u306B\u306A\u3063\u3066\u3044\u307E\u3059({{ width }}x{{ height }}\u30D4\u30AF\u30BB\u30EB)\u3002\u6B63\u65B9\u5F62\u306E\u753B\u50CF\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"D'Bild ass quadratesch ({{ width }}x{{ height }}px). Quadratesch Biller sinn net erlaabt.","lt":"Nuotrauka yra kvadratin\u0117 ({{ width }}x{{ height }}px). Kvadratin\u0117s nuotraukos n\u0117ra leistinos.","lv":"\u0160is att\u0113ls ir kvadr\u0101ts ({{ width }}x{{ height }}px). Kvadr\u0101tveida att\u0113li nav at\u013Cauti.","mk":"\u0421\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0430 ({{ width }}x{{ height }}px). \u041A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0438 \u0441\u043B\u0438\u043A\u0438 \u043D\u0435 \u0441\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438.","mn":"\u0417\u0443\u0440\u0430\u0433 \u0434\u04E9\u0440\u0432\u04E9\u043B\u0436\u0438\u043D \u0445\u044D\u043B\u0431\u044D\u0440\u0442\u044D\u0439 \u0431\u0430\u0439\u043D\u0430 ({{ width }}x{{ height }}px). \u0414\u04E9\u0440\u0432\u04E9\u043B\u0436\u0438\u043D \u0437\u0443\u0440\u0433\u0443\u0443\u0434 \u043E\u0440\u0443\u0443\u043B\u0430\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439.","my":"\u1024\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u101E\u100A\u103A \u1005\u1010\u102F\u101B\u1014\u103A\u1038\u1016\u103C\u1005\u103A\u1014\u1031\u101E\u100A\u103A ({{ width }}x{{ height }}px)\u104B \u1005\u1010\u102F\u101B\u1014\u103A\u1038\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1019\u103B\u102C\u1038\u1000\u102D\u102F \u1001\u103D\u1004\u103A\u1037\u1019\u1015\u103C\u102F\u1015\u102B\u104B","nb":"Bildet er en kvadrat ({{ width }}x{{ height }}px). Kvadratiske bilder er ikke tillatt.","nl":"De afbeelding is vierkant ({{ width }}x{{ height }}px). Vierkante afbeeldingen zijn niet toegestaan.","nn":"Biletet er kvadratisk ({{ width }}x{{ height }}px). Kvadratiske bilete er ikkje tillatne.","no":"Bildet er en kvadrat ({{ width }}x{{ height }}px). Kvadratiske bilder er ikke tillatt.","pl":"Obraz jest kwadratem ({{ width }}x{{ height }}px). Kwadratowe obrazy nie s\u0105 akceptowane.","pt":"A imagem \xE9 um quadrado ({{ width }}x{{ height }}px). Imagens quadradas n\xE3o s\xE3o permitidas.","pt_BR":"A imagem est\xE1 num formato quadrado ({{ width }}x{{ height }}px). Imagens com formato quadrado n\xE3o s\xE3o permitidas.","ro":"Imaginea este un p\u0103trat ({{ width }}x{{ height }}px). Imaginile p\u0103trat nu sunt permise.","ru":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u043E\u0435 ({{ width }}x{{ height }}px). \u041A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u044B\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u043D\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u044B.","sk":"Strany obr\xE1zku s\xFA \u0161tvorcov\xE9 ({{ width }}x{{ height }}px). \u0160tvorcov\xE9 obr\xE1zky nie s\xFA povolen\xE9.","sl":"Slika je kvadrat ({{ width }}x{{ height }}px). Kvadratne slike niso dovoljene.","sq":"Imazhi \xEBsht\xEB katror ({{ width }}x{{ height }}px). Imazhet katrore nuk jan\xEB t\xEB lejuara.","sr_Cyrl":"\u0421\u043B\u0438\u043A\u0430 \u0458\u0435 \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0430 ({{ width }}x{{ height }}px). \u041A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0435 \u0441\u043B\u0438\u043A\u0435 \u043D\u0438\u0441\u0443 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0435.","sr_Latn":"Slika je kvadratna ({{ width }}x{{ height }} piksela). Kvadratne slike nisu dozvoljene.","sv":"Bilden \xE4r kvadratisk ({{ width }}x{{ height }}px). Kvadratiska bilder till\xE5ts inte.","th":"\u0E23\u0E39\u0E1B\u0E20\u0E32\u0E1E\u0E40\u0E1B\u0E47\u0E19\u0E08\u0E38\u0E15\u0E23\u0E31\u0E2A ({{ width }}x{{ height }}px) \u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E20\u0E32\u0E1E\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E2A\u0E35\u0E48\u0E40\u0E2B\u0E25\u0E35\u0E48\u0E22\u0E21\u0E08\u0E15\u0E38\u0E23\u0E31\u0E2A","tl":"Ang imahe ay kwadrado ({{ width }}x{{ height }}px). Ang mga kwadradong imahe ay hindi pwede.","tr":"Resim karesi ({{ width }}x{{ height }}px). Kare resimlerine izin verilmiyor.","uk":"\u0417\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u043A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0435 ({{ width }}x{{ height }}px). \u041A\u0432\u0430\u0434\u0440\u0430\u0442\u043D\u0456 \u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u043D\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0456.","ur":"\u0645\u0631\u0628\u0639 \u062A\u0635\u0627\u0648\u06CC\u0631 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 (px{{ height }}x{{ width }})  \u062A\u0635\u0648\u06CC\u0631 \u0645\u0631\u0628\u0639 \u06C1\u06D2","uz":"Rasm kvadrat shaklida ({{ width }}x{{ height }}px). Kvadrat shaklida tasvirlarga ruxsat berilmaydi.","vi":"B\u1EE9c \u1EA3nh l\xE0 h\xECnh vu\xF4ng ({{ width }}x{{ height }}px). \u1EA2nh h\xECnh vu\xF4ng kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u56FE\u7247\u662F\u65B9\u5F62\u7684 ({{ width }}x{{ height }}px)\u3002\u4E0D\u5141\u8BB8\u4F7F\u7528\u65B9\u5F62\u7684\u56FE\u7247\u3002","zh_TW":"\u65B9\u5F62\u5716\u50CF ({{ width }}x{{ height }}px)\u3002\u4E0D\u63A5\u53D7\u65B9\u5F62\u5716\u50CF\u3002"}}};var THE_IMAGE_IS_LANDSCAPE_ORIENTED_WIDTH_X_HEIGHT_PX_LANDSCAPE_ORIENTED_IMAGES_ARE_NOT_ALLOWED={"id":"The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.","translations":{"validators":{"fr":"L'image est au format paysage ({{ width }}x{{ height }}px). Les images au format paysage ne sont pas autoris\xE9es.","af":"Die beeld is landskap geori\xEBnteerd ({{ width }}x{{ height }}px). Landskap geori\xEBnteerde beelde word nie toegelaat nie.","ar":"\u0627\u0644\u0635\u0648\u0631\u0629 \u0641\u064A \u0648\u0636\u0639 \u0623\u0641\u0642\u064A ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0641\u064A \u0648\u0636\u0639 \u0623\u0641\u0642\u064A \u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627.","az":"\u015E\u0259kil albom rejimind\u0259dir ({{ width }}x{{ height }}px). Albom rejimli \u015F\u0259kill\u0259r\u0259 icaz\u0259 verilmir.","be":"\u0412\u044B\u044F\u0432\u0430 \u045E \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u0430\u0439 \u0430\u0440\u044B\u0435\u043D\u0442\u0430\u0446\u044B\u0456 ({{ width }}x{{ height }}px). \u0412\u044B\u044F\u0432\u044B \u045E \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u0430\u0439 \u0430\u0440\u044B\u0435\u043D\u0442\u0430\u0446\u044B\u0456 \u043D\u0435 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u043F\u0435\u0439\u0437\u0430\u0436\u043D\u0430 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u044F ({{ width }}x{{ height }}px). \u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441 \u0442\u0430\u043A\u0430\u0432\u0430 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u044F \u043D\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438.","bs":"Ova slika je orijentisana horizontalno (landscape) ({{ width }}x{{ height }}px). Horizontalno orijentisane slike nisu dozvoljene.","ca":"L'imatge est\xE0 orientada horitzontalment ({{ width }}x{{ height }}px). Les imatges orientades horitzontalment no estan permeses.","cs":"Obr\xE1zek je orientovan\xFD na \u0161\xED\u0159ku ({{ width }}x{{ height }}px). Obr\xE1zky orientovan\xE9 na \u0161\xED\u0159ku nejsou povolen\xE9.","cy":"Mae'r ddelwedd mewn fformat tirlun ({{ width }}x{{ height }}px). Ni chaniateir delweddau mewn fformat tirlun.","da":"Billedet er landskabsorienteret ({{width}} x {{height}} px). Landskabsorienterede billeder er ikke tilladt","de":"Das Bild ist im Querformat ({{ width }}x{{ height }}px). Bilder im Querformat sind nicht erlaubt.","el":"\u0397 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03BF\u03C1\u03B9\u03B6\u03CC\u03BD\u03C4\u03B9\u03BF \u03C0\u03C1\u03BF\u03C3\u03B1\u03BD\u03B1\u03C4\u03BF\u03BB\u03B9\u03C3\u03BC\u03CC ({{ width }}x{{ height }}px). \u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03BF\u03BD\u03C4\u03B1\u03B9 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B5\u03C2 \u03BC\u03B5 \u03BF\u03C1\u03B9\u03B6\u03CC\u03BD\u03C4\u03B9\u03BF \u03C0\u03C1\u03BF\u03C3\u03B1\u03BD\u03B1\u03C4\u03BF\u03BB\u03B9\u03C3\u03BC\u03CC.","en":"The image is landscape oriented ({{ width }}x{{ height }}px). Landscape oriented images are not allowed.","es":"La imagen est\xE1 orientada horizontalmente ({{ width }}x{{ height }}px). Las im\xE1genes orientadas horizontalmente no est\xE1n permitidas.","et":"Pilt on horisontaalselt orienteeritud ({{ width }}x{{ height }}px). Maastikulised pildid pole lubatud.","eu":"Irudia horizontalki bideratua dago ({{ width }}x{{ height }}px). Horizontalki bideratutako irudiak ez dira onartzen.","fa":"\u0627\u06CC\u0646 \u062A\u0635\u0648\u06CC\u0631 \u0627\u0641\u0642\u06CC ({{ width }}x{{ height }}px) \u0645\u06CC\u200C\u0628\u0627\u0634\u062F. \u062A\u0635\u0627\u0648\u06CC\u0631 \u0627\u0641\u0642\u06CC \u0645\u062C\u0627\u0632 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u0646\u062F.","fi":"Kuva on vaakasuuntainen ({{ width }}x{{ height }} px). Vaakasuuntaiset kuvat eiv\xE4t ole sallittuja.","gl":"A imaxe est\xE1 orientada horizontalmente ({{ width }}x{{ height }}px). As im\xE1xenes orientadas horizontalmente non est\xE1n permitidas.","he":"\u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D4\u05D9\u05D0 \u05DC\u05E8\u05D5\u05D7\u05D1 ({{ width }}x{{ height }}px). \u05D0\u05E1\u05D5\u05E8\u05D5\u05EA \u05EA\u05DE\u05D5\u05E0\u05D5\u05EA \u05DC\u05E8\u05D5\u05D7\u05D1.","hr":"Slika je orijentirana horizontalno ({{ width }}x{{ height }}px). Horizontalno orijentirane slike nisu dozvoljene.","hu":"A k\xE9p fekv\u0151 t\xE1jol\xE1s\xFA ({{ width }}x{{ height }}px). A fekv\u0151 t\xE1jol\xE1s\xFA k\xE9pek nem enged\xE9lyezettek.","hy":"\u054A\u0561\u057F\u056F\u0565\u0580\u0568 \u0561\u056C\u0562\u0578\u0574\u0561\u0575\u056B\u0576 \u0578\u0582\u0572\u0572\u057E\u0561\u056E\u0578\u0582\u0569\u0575\u0561\u0576 \u0567({{ width }}x{{ height }}px)\u2024 \u0564\u0561 \u0579\u056B \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u057E\u0578\u0582\u0574\u0589","id":"Citra berorientasi lanskap ({{ width }}x{{ height }}px). Citra berorientasi lanskap tidak diizinkan.","it":"L'immagine \xE8 orizzontale ({{ width }}x{{ height }}px). Le immagini orizzontali non sono consentite.","ja":"\u753B\u50CF\u304C\u6A2A\u5411\u304D\u306B\u306A\u3063\u3066\u3044\u307E\u3059({{ width }}x{{ height }}\u30D4\u30AF\u30BB\u30EB)\u3002\u6A2A\u5411\u304D\u306E\u753B\u50CF\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"D'Bild ass am Queeschformat ({{ width }}x{{ height }}px). Biller am Queeschformat sinn net erlaabt.","lt":"Nuotrauka orientuota \u012F plot\u012F ({{ width }}x{{ height }}px). Nuotraukos orientuotos \u012F plot\u012F n\u0117ra leistinos.","lv":"Att\u0113ls ir orient\u0113ts k\u0101 ainava ({{ width }}x{{ height }}px). Att\u0113li, kas ir orient\u0113ti k\u0101 ainavas nav at\u013Cauti.","mk":"\u0421\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043E\u0440\u0438\u0435\u043D\u0442\u0438\u0440\u0430\u043D\u0430 \u043A\u043E\u043D \u043F\u0435\u0458\u0437\u0430\u0436 ({{ width }}x{{ height }}px). \u0421\u043B\u0438\u043A\u0438\u0442\u0435 \u043E\u0440\u0438\u0435\u043D\u0442\u0438\u0440\u0430\u043D\u0438 \u043A\u043E\u043D \u043F\u0435\u0458\u0437\u0430\u0436 \u043D\u0435 \u0441\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438.","mn":"\u0417\u0443\u0440\u0430\u0433 \u0445\u044D\u0432\u0442\u044D\u044D \u0431\u0430\u0439\u0440\u043B\u0430\u043B\u0442\u0430\u0439 \u0431\u0430\u0439\u043D\u0430 ({{ width }}x{{ height }}px). \u0425\u044D\u0432\u0442\u044D\u044D \u0431\u0430\u0439\u0440\u043B\u0430\u043B\u0442\u0430\u0439 \u0437\u0443\u0440\u0433\u0443\u0443\u0434 \u043E\u0440\u0443\u0443\u043B\u0430\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439.","my":"\u1024\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u101E\u100A\u103A \u1021\u101C\u103B\u103E\u102C\u1038\u101C\u102D\u102F\u1000\u103A\u1016\u103C\u1005\u103A\u1014\u1031\u101E\u100A\u103A ({{ width }}x{{ height }}px). \u1021\u101C\u103B\u103E\u102C\u1038\u101C\u102D\u102F\u1000\u103A\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1019\u103B\u102C\u1038\u1001\u103D\u1004\u103A\u1037\u1019\u1015\u103C\u102F\u1015\u102B\u104B","nb":"Bildet er i liggende retning ({{ width }}x{{ height }}px). Bilder i liggende retning er ikke tillatt.","nl":"De afbeelding is liggend ({{ width }}x{{ height }}px). Liggende afbeeldingen zijn niet toegestaan.","nn":"Biletet er landskapsorientert ({{ width }}x{{ height }}px). Landskapsorienterte bilete er ikkje tillatne.","no":"Bildet er i liggende retning ({{ width }}x{{ height }}px). Bilder i liggende retning er ikke tillatt.","pl":"Obraz jest panoramiczny ({{ width }}x{{ height }}px). Panoramiczne zdj\u0119cia nie s\u0105 akceptowane.","pt":"A imagem est\xE1 em orienta\xE7\xE3o de paisagem ({{ width }}x{{ height }}px). Imagens orientadas em paisagem n\xE3o s\xE3o permitidas.","pt_BR":"A imagem est\xE1 orientada \xE0 paisagem ({{ width }}x{{ height }}px). Imagens orientadas \xE0 paisagem n\xE3o s\xE3o permitidas.","ro":"Imaginea are orientarea peisaj ({{ width }}x{{ height }}px). Imaginile cu orientare peisaj nu sunt permise.","ru":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0432 \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u043E\u0439 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u0438 ({{ width }}x{{ height }}px). \u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0432 \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u043E\u0439 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u0438 \u043D\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u044B.","sk":"Obr\xE1zok je orientovan\xFD na \u0161\xEDrku ({{ width }}x{{ height }}px). Obr\xE1zky orientovan\xE9 na \u0161\xEDrku nie s\xFA povolen\xE9.","sl":"Slika je le\u017Ee\u010De usmerjena ({{ width }}x{{ height }}px). Le\u017Ee\u010De usmerjene slike niso dovoljene.","sq":"Imazhi \xEBsht\xEB i orientuar horizontalisht ({{ width }}x{{ height }}px). Imazhet e orientuara horizontalisht nuk lejohen.","sr_Cyrl":"\u0421\u043B\u0438\u043A\u0430 \u0458\u0435 \u043E\u0440\u0438\u0458\u0435\u043D\u0442\u0430\u0446\u0438\u0458\u0435 \u043F\u0435\u0458\u0437\u0430\u0436\u0430 ({{ width }}x{{ height }}px). \u041F\u0435\u0458\u0437\u0430\u0436\u043D\u0430 \u043E\u0440\u0438\u0458\u0435\u043D\u0442\u0430\u0446\u0438\u0458\u0430 \u0441\u043B\u0438\u043A\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430.","sr_Latn":"Slika je pejza\u017Eno orijentisana ({{ width }}x{{ height }} piksela). Pejza\u017Ena orijentisane slike nisu dozvoljene.","sv":"Bilden \xE4r landskapsorienterad ({{ width }}x{{ height }}px). Landskapsorienterade bilder till\xE5ts inte.","th":"\u0E20\u0E32\u0E1E\u0E19\u0E35\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E19\u0E27\u0E19\u0E2D\u0E19 ({{ width }}x{{ height }}px) \u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E20\u0E32\u0E1E\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E19\u0E27\u0E19\u0E2D\u0E19","tl":"Ang orientasyon ng imahe ay nakalandscape ({{ width }}x{{ height }}px). Ang mga imaheng nakalandscape ang orientasyon ay hindi pwede.","tr":"Resim manzara odakl\u0131 ({{ width }}x{{ height }}px). Manzara odakl\u0131 resimlere izin verilmiyor.","uk":"\u0417\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u043E\u0457 \u043E\u0440\u0456\u0454\u043D\u0442\u0430\u0446\u0456\u0457 ({{ width }}x{{ height }}px). \u0417\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0430\u043B\u044C\u0431\u043E\u043C\u043D\u043E\u0457 \u043E\u0440\u0456\u0454\u043D\u0442\u0430\u0446\u0456\u0457 \u043D\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0456.","ur":"\u0632\u0645\u06CC\u0646 \u06A9\u06CC \u062A\u0632\u0626\u06CC\u0646 \u067E\u0631 \u0645\u0628\u0646\u06CC \u062A\u0635\u0627\u0648\u06CC\u0631 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 ({{ width }}x{{ height }}px) \u062A\u0635\u0648\u06CC\u0631 \u0632\u0645\u06CC\u0646 \u06A9\u06CC \u062A\u0632\u0626\u06CC\u0646 \u067E\u0631 \u0645\u0628\u0646\u06CC \u06C1\u06D2","uz":"Landshaft tasvir ({{ width }}x{{ height }}px). Landshaft rasmlarga ruxsat berilmaydi.","vi":"B\u1EE9c \u1EA3nh theo chi\u1EC1u ngang ({{ width }}x{{ height }}px). \u1EA2nh chi\u1EC1u ngang kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u56FE\u7247\u662F\u6A2A\u5411\u7684 ({{ width }}x{{ height }}px)\u3002\u4E0D\u5141\u8BB8\u4F7F\u7528\u6A2A\u5411\u7684\u56FE\u7247\u3002","zh_TW":"\u7D00\u5FF5\u518A\u5E03\u5C40\u5716\u50CF ({{ width }}x{{ height }}px)\u3002 \u4E0D\u63A5\u53D7\u7D00\u5FF5\u518A\u5E03\u5C40\u5716\u50CF\u3002"}}};var THE_IMAGE_IS_PORTRAIT_ORIENTED_WIDTH_X_HEIGHT_PX_PORTRAIT_ORIENTED_IMAGES_ARE_NOT_ALLOWED={"id":"The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.","translations":{"validators":{"fr":"L'image est au format portrait ({{ width }}x{{ height }}px). Les images au format portrait ne sont pas autoris\xE9es.","af":"Die beeld dis portret geori\xEBnteerd ({{ width }}x{{ height }}px). Portret geori\xEBnteerde beelde word nie toegelaat nie.","ar":"\u0627\u0644\u0635\u0648\u0631\u0629 \u0641\u064A \u0648\u0636\u0639 \u0639\u0645\u0648\u062F\u064A ({{ width }}x{{ height }}px). \u0627\u0644\u0635\u0648\u0631 \u0641\u064A \u0648\u0636\u0639 \u0639\u0645\u0648\u062F\u064A \u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627.","az":"\u015E\u0259kil portret rejimind\u0259dir ({{ width }}x{{ height }}px). Portret rejimli \u015F\u0259kill\u0259r\u0259 icaz\u0259 verilmir.","be":"\u0412\u044B\u044F\u0432\u0430 \u045E \u043F\u0430\u0440\u0442\u0440\u044D\u0442\u043D\u0430\u0439 \u0430\u0440\u044B\u0435\u043D\u0442\u0430\u0446\u044B\u0456 ({{ width }}x{{ height }}px). \u0412\u044B\u044F\u0432\u044B \u045E \u043F\u0430\u0440\u0442\u0440\u044D\u0442\u043D\u0430\u0439 \u0430\u0440\u044B\u0435\u043D\u0442\u0430\u0446\u044B\u0456 \u043D\u0435 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B.","bg":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u0442\u043E \u0435 \u0441 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u0430 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u044F ({{ width }}x{{ height }}px). \u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441 \u0442\u0430\u043A\u0430\u0432\u0430 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u044F \u043D\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438.","bs":"Ova slika je orijentisana vertikalno (portrait) ({{ width }}x{{ height }}px). Vertikalno orijentisane slike nisu dozvoljene.","ca":"L'imatge est\xE0 orientada verticalment ({{ width }}x{{ height }}px). Les imatges orientades verticalment no estan permeses.","cs":"Obr\xE1zek je orientovan\xFD na v\xFD\u0161ku ({{ width }}x{{ height }}px). Obr\xE1zky orientovan\xE9 na v\xFD\u0161ku nejsou povolen\xE9.","cy":"Mae'r ddelwedd mewn fformat portread ({{ width }}x{{ height }}px). Ni chaniateir delweddau mewn fformat portread.","da":"Billedet er portr\xE6torienteret ({{ width }}x{{ height }}px). Portr\xE6torienterede billeder er ikke tilladt.","de":"Das Bild ist im Hochformat ({{ width }}x{{ height }}px). Bilder im Hochformat sind nicht erlaubt.","el":"\u0397 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03BA\u03AC\u03B8\u03B5\u03C4\u03BF \u03C0\u03C1\u03BF\u03C3\u03B1\u03BD\u03B1\u03C4\u03BF\u03BB\u03B9\u03C3\u03BC\u03CC ({{ width }}x{{ height }}px). \u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03BF\u03BD\u03C4\u03B1\u03B9 \u03B5\u03B9\u03BA\u03CC\u03BD\u03B5\u03C2 \u03BC\u03B5 \u03BA\u03AC\u03B8\u03B5\u03C4\u03BF \u03C0\u03C1\u03BF\u03C3\u03B1\u03BD\u03B1\u03C4\u03BF\u03BB\u03B9\u03C3\u03BC\u03CC.","en":"The image is portrait oriented ({{ width }}x{{ height }}px). Portrait oriented images are not allowed.","es":"La imagen est\xE1 orientada verticalmente ({{ width }}x{{ height }}px). Las im\xE1genes orientadas verticalmente no est\xE1n permitidas.","et":"Pilt on vertikaalselt orienteeritud ({{ width }}x{{ height }}px). Portreepildid pole lubatud.","eu":"Irudia bertikalki bideratua dago ({{ width }}x{{ height }}px). Bertikalki bideratutako irudiak ez dira onartzen.","fa":"\u0627\u06CC\u0646 \u062A\u0635\u0648\u06CC\u0631 \u0639\u0645\u0648\u062F\u06CC ({{ width }}x{{ height }}px) \u0645\u06CC\u200C\u0628\u0627\u0634\u062F. \u062A\u0635\u0627\u0648\u06CC\u0631 \u0639\u0645\u0648\u062F\u06CC \u0645\u062C\u0627\u0632 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u0646\u062F.","fi":"Kuva on pystysuuntainen ({{ width }}x{{ height }} px). Pystysuuntaiset kuvat eiv\xE4t ole sallittuja.","gl":"A imaxe est\xE1 orientada verticalmente ({{ width }}x{{ height }}px). As im\xE1xenes orientadas verticalmente non est\xE1n permitidas.","he":"\u05D4\u05EA\u05DE\u05D5\u05E0\u05D4 \u05D4\u05D9\u05D0 \u05DC\u05D0\u05D5\u05E8\u05DA ({{ width }}x{{ height }}px). \u05D0\u05E1\u05D5\u05E8\u05D5\u05EA \u05EA\u05DE\u05D5\u05E0\u05D5\u05EA \u05DC\u05D0\u05D5\u05E8\u05DA.","hr":"Slika je orijentirana vertikalno ({{ width }}x{{ height }}px). Vertikalno orijentirane slike nisu dozvoljene.","hu":"A k\xE9p \xE1ll\xF3 t\xE1jol\xE1s\xFA ({{ width }}x{{ height }}px). Az \xE1ll\xF3 t\xE1jol\xE1s\xFA k\xE9pek nem enged\xE9lyezettek.","hy":"\u054A\u0561\u057F\u056F\u0565\u0580\u0568 \u057A\u0578\u0580\u057F\u0580\u0565\u057F\u0561\u0575\u056B\u0576 \u0578\u0582\u0572\u0572\u057E\u0561\u056E\u0578\u0582\u0569\u0575\u0561\u0576 \u0567 ({{ width }}x{{ height }}px)\u2024 \u0564\u0561 \u0579\u056B \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u057E\u0578\u0582\u0574\u0589","id":"Citra berorientasi potret ({{ width }}x{{ height }}px). Citra berorientasi potret tidak diizinkan.","it":"L'immagine \xE8 verticale ({{ width }}x{{ height }}px). Le immagini verticali non sono consentite.","ja":"\u753B\u50CF\u304C\u7E26\u5411\u304D\u306B\u306A\u3063\u3066\u3044\u307E\u3059({{ width }}x{{ height }}\u30D4\u30AF\u30BB\u30EB)\u3002\u7E26\u5411\u304D\u306E\u753B\u50CF\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"D'Bild ass am H\xE9ichformat ({{ width }}x{{ height }}px). Biller am H\xE9ichformat sinn net erlaabt.","lt":"Nuotrauka orientuota \u012F auk\u0161t\u012F ({{ width }}x{{ height }}px). Nuotraukos orientuotos \u012F auk\u0161t\u012F n\u0117ra leistinos.","lv":"Att\u0113ls ir orient\u0113ts k\u0101 portrets ({{ width }}x{{ height }}px). Att\u0113li, kas ir orient\u0113ti k\u0101 portreti nav at\u013Cauti.","mk":"\u0421\u043B\u0438\u043A\u0430\u0442\u0430 \u0435 \u043E\u0440\u0438\u0435\u043D\u0442\u0438\u0440\u0430\u043D\u0430 \u043A\u043E\u043D \u043F\u043E\u0440\u0442\u0440\u0435\u0442 ({{ width }}x{{ height }}px). \u0421\u043B\u0438\u043A\u0438\u0442\u0435 \u043E\u0440\u0438\u0435\u043D\u0442\u0438\u0440\u0430\u043D\u0438 \u043A\u043E\u043D \u043F\u043E\u0440\u0442\u0440\u0435\u0442 \u043D\u0435 \u0441\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438.","mn":"\u0417\u0443\u0440\u0433\u0443\u0443\u0434 \u0431\u043E\u0441\u043E\u043E \u0431\u0430\u0439\u0440\u043B\u0430\u043B\u0442\u0430\u0439 \u0431\u0430\u0439\u043D\u0430 ({{ width }}x{{ height }}px). \u0411\u043E\u0441\u043E\u043E \u0431\u0430\u0439\u0440\u043B\u0430\u043B\u0442\u0430\u0439 \u0437\u0443\u0440\u0433\u0443\u0443\u0434 \u043E\u0440\u0443\u0443\u043B\u0430\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439.","my":"\u1024\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u101E\u100A\u103A \u1012\u1031\u102B\u1004\u103A\u101C\u102D\u102F\u1000\u103A\u1016\u103C\u1005\u103A\u1014\u1031\u101E\u100A\u103A ({{ width }}x{{ height }}px). \u1012\u1031\u102B\u1004\u103A\u101C\u102D\u102F\u1000\u103A\u1013\u102C\u1010\u103A\u1015\u102F\u1036\u1019\u103B\u102C\u1038\u1001\u103D\u1004\u103A\u1037\u1019\u1015\u103C\u102F\u1015\u102B\u104B","nb":"Bildet er i st\xE5ende retning ({{ width }}x{{ height }}px). Bilder i st\xE5ende retning er ikke tillatt.","nl":"De afbeelding is staand ({{ width }}x{{ height }}px). Staande afbeeldingen zijn niet toegestaan.","nn":"Biletet er portrettorientert ({{ width }}x{{ height }}px). Portrettorienterte bilete er ikkje tillatne.","no":"Bildet er i st\xE5ende retning ({{ width }}x{{ height }}px). Bilder i st\xE5ende retning er ikke tillatt.","pl":"Obraz jest portretowy ({{ width }}x{{ height }}px). Portretowe zdj\u0119cia nie s\u0105 akceptowane.","pt":"A imagem est\xE1 em orienta\xE7\xE3o de retrato ({{ width }}x{{ height }}px). Imagens orientadas em retrato n\xE3o s\xE3o permitidas.","pt_BR":"A imagem est\xE1 orientada ao retrato ({{ width }}x{{ height }}px). Imagens orientadas ao retrato n\xE3o s\xE3o permitidas.","ro":"Imaginea are orientarea portret ({{ width }}x{{ height }}px). Imaginile cu orientare portret nu sunt permise.","ru":"\u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0432 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u043E\u0439 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u0438 ({{ width }}x{{ height }}px). \u0418\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0432 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u043E\u0439 \u043E\u0440\u0438\u0435\u043D\u0442\u0430\u0446\u0438\u0438 \u043D\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u044B.","sk":"Obr\xE1zok je orientovan\xFD na v\xFD\u0161ku ({{ width }}x{{ height }}px). Obr\xE1zky orientovan\xE9 na v\xFD\u0161ku nie s\xFA povolen\xE9.","sl":"Slika je pokon\u010Dno usmerjena ({{ width }}x{{ height }}px). Pokon\u010Dno usmerjene slike niso dovoljene.","sq":"Imazhi \xEBsht\xEB i orientuar vertikalisht ({{ width }}x{{ height }}px). Imazhet orientuara vertikalisht nuk lejohen.","sr_Cyrl":"\u0421\u043B\u0438\u043A\u0430 \u0458\u0435 \u043E\u0440\u0438\u0458\u0430\u043D\u0442\u0430\u0446\u0438\u0458\u0435 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u0430 ({{ width }}x{{ height }}px). \u041F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u0430 \u043E\u0440\u0438\u0458\u0435\u043D\u0442\u0430\u0446\u0438\u0458\u0430 \u0441\u043B\u0438\u043A\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430.","sr_Latn":"Slika je portretno orijentisana ({{ width }}x{{ height }} piksela). Portretno orijentisane slike nisu dozvoljene.","sv":"Bilden \xE4r portr\xE4ttsorienterad ({{ width }}x{{ height }}px). Portr\xE4ttsorienterade bilder till\xE5ts inte.","th":"\u0E20\u0E32\u0E1E\u0E19\u0E35\u0E49\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E19\u0E27\u0E15\u0E31\u0E49\u0E07 ({{ width }}x{{ height }}px) \u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E20\u0E32\u0E1E\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19\u0E41\u0E19\u0E27\u0E15\u0E31\u0E49\u0E07","tl":"Ang orientasyon ng imahe ay nakaportrait ({{ width }}x{{ height }}px). Ang mga imaheng nakaportrait ang orientasyon ay hindi pwede.","tr":"Resim portre odakl\u0131 ({{ width }}x{{ height }}px). Portre odakl\u0131 resimlere izin verilmiyor.","uk":"\u0417\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0432 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u0456\u0439 \u043E\u0440\u0456\u0454\u043D\u0442\u0430\u0446\u0456\u0457 ({{ width }}x{{ height }}px). \u0417\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u043D\u044F \u0432 \u043F\u043E\u0440\u0442\u0440\u0435\u0442\u043D\u043E\u0457 \u043E\u0440\u0456\u0454\u043D\u0442\u0430\u0446\u0456\u0457 \u043D\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0456.","ur":"\u067E\u0648\u0631\u0679\u0631\u06CC\u0679 \u067E\u0631 \u0645\u0628\u0646\u06CC \u062A\u0635\u0627\u0648\u06CC\u0631 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 ({{ width }}x{{ height }}px) \u062A\u0635\u0648\u06CC\u0631 \u067E\u0648\u0631\u0679\u0631\u06CC\u0679 \u067E\u0631 \u0645\u0628\u0646\u06CC \u06C1\u06D2","uz":"Portret rasm ({{ width }}x{{ height }}px). Portretlarga ruxsat berilmaydi.","vi":"B\u1EE9c \u1EA3nh theo chi\u1EC1u d\u1ECDc ({{ width }}x{{ height }}px). \u1EA2nh chi\u1EC1u d\u1ECDc kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u56FE\u7247\u662F\u7EB5\u5411\u7684 ({{ width }}x{{ height }}px)\u3002\u4E0D\u5141\u8BB8\u4F7F\u7528\u7EB5\u5411\u7684\u56FE\u7247\u3002","zh_TW":"\u66F8\u7C4D\u5E03\u5C40\u5716\u50CF ({{ width }}x{{ height }}px)\u3002\u4E0D\u63A5\u53D7\u5716\u50CF\u66F8\u7C4D\u5E03\u5C40\u3002"}}};var AN_EMPTY_FILE_IS_NOT_ALLOWED={"id":"An empty file is not allowed.","translations":{"validators":{"fr":"Un fichier vide n'est pas autoris\xE9.","af":"'n Le\xEB l\xEAer word nie toegelaat nie.","ar":"\u0645\u0644\u0641 \u0641\u0627\u0631\u063A \u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D \u0628\u0647.","az":"Bo\u015F fayla icaz\u0259 verilmir.","be":"\u041F\u0443\u0441\u0442\u044B \u0444\u0430\u0439\u043B \u043D\u0435 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B.","bg":"\u041F\u0440\u0430\u0437\u043D\u0438 \u0444\u0430\u0439\u043B\u043E\u0432\u0435 \u043D\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438.","bs":"Prazna datoteka nije dozvoljena.","ca":"No est\xE0 perm\xE8s un fixter buit.","cs":"Soubor nesm\xED b\xFDt pr\xE1zdn\xFD.","cy":"Ni chaniateir ffeil wag.","da":"En tom fil er ikke tilladt.","de":"Eine leere Datei ist nicht erlaubt.","el":"\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03C4\u03B1\u03B9 \u03BA\u03B5\u03BD\u03CC \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF.","en":"An empty file is not allowed.","es":"No se permite un archivo vac\xEDo.","et":"T\xFChi fail pole lubatud.","eu":"Hutsik dagoen fitxategia ez da onartzen.","fa":"\u0641\u0627\u06CC\u0644 \u062E\u0627\u0644\u06CC \u0645\u062C\u0627\u0632 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Tiedosto ei saa olla tyhj\xE4.","gl":"Non est\xE1 permitido un arquivo baleiro.","he":"\u05D0\u05E1\u05D5\u05E8 \u05E7\u05D5\u05D1\u05E5 \u05E8\u05D9\u05E7.","hr":"Prazna datoteka nije dozvoljena.","hu":"\xDCres f\xE1jl nem megengedett.","hy":"\u0534\u0561\u057F\u0561\u0580\u056F \u0576\u056B\u0577\u0584 \u0579\u056B \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u057E\u0578\u0582\u0574\u0589","id":"Berkas kosong tidak diizinkan.","it":"Un file vuoto non \xE8 consentito.","ja":"\u7A7A\u306E\u30D5\u30A1\u30A4\u30EB\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"En eidele Fichier ass net erlaabt.","lt":"Failas negali b\u016Bti tu\u0161\u010Dias.","lv":"Tuk\u0161s fails nav at\u013Cauts.","mk":"\u041F\u0440\u0430\u0437\u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0435 \u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0430.","mn":"\u0425\u043E\u043E\u0441\u043E\u043D \u0444\u0430\u0439\u043B \u043E\u0440\u0443\u0443\u043B\u0430\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439.","my":"\u1016\u102D\u102F\u1004\u103A\u1021\u101C\u103D\u1010\u103A\u1000\u102D\u102F\u1010\u1004\u103A\u1001\u103D\u1004\u103A\u1037\u1019\u1015\u103C\u102F\u1015\u102B\u104B","nb":"Tomme filer er ikke tilatt.","nl":"Lege bestanden zijn niet toegestaan.","nn":"Ei tom fil er ikkje tillate.","no":"Tomme filer er ikke tilatt.","pl":"Plik nie mo\u017Ce by\u0107 pusty.","pt":"Um arquivo vazio n\xE3o \xE9 permitido.","pt_BR":"Arquivo vazio n\xE3o \xE9 permitido.","ro":"Nu se permite un fi\u0219ier gol.","ru":"\u041F\u0443\u0441\u0442\u044B\u0435 \u0444\u0430\u0439\u043B\u044B \u043D\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u044B.","sk":"S\xFAbor nesmie by\u0165 pr\xE1zdny.","sl":"Prazna datoteka ni dovoljena.","sq":"Nj\xEB file i zbraz\xEBt nuk lejohet.","sr_Cyrl":"\u041F\u0440\u0430\u0437\u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0430.","sr_Latn":"Prazna datoteka nije dozvoljena.","sv":"En tom fil \xE4r inte till\xE5ten.","th":"\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E44\u0E1F\u0E25\u0E4C\u0E27\u0E48\u0E32\u0E07","tl":"Ang file na walang laman ay hindi pwede.","tr":"Bo\u015F bir dosyaya izin verilmiyor.","uk":"\u041F\u043E\u0440\u043E\u0436\u043D\u0456 \u0444\u0430\u0439\u043B\u0438 \u043D\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0456.","ur":"\u062E\u0627\u0644\u06CC \u0641\u0627\u0626\u0644 \u06A9\u06CC \u0627\u062C\u0627\u0632\u062A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Bo'sh fayllarga ruxsat berilmagan.","vi":"M\u1ED9t file r\u1ED7ng kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u4E0D\u5141\u8BB8\u4F7F\u7528\u7A7A\u6587\u4EF6\u3002","zh_TW":"\u4E0D\u63A5\u53D7\u7A7A\u767D\u6587\u4EF6\u3002"}}};var THE_HOST_COULD_NOT_BE_RESOLVED={"id":"The host could not be resolved.","translations":{"validators":{"fr":"Le nom de domaine n'a pas pu \xEAtre r\xE9solu.","af":"Die gasheer kon nie opgelos word nie.","ar":"\u064A\u062A\u0639\u0630\u0631 \u0627\u0644\u0625\u062A\u0635\u0627\u0644 \u0628\u0627\u0644\u0646\u0637\u0627\u0642.","az":"\xDCnvan tap\u0131lmad\u0131.","be":"\u041D\u0435 \u043C\u0430\u0433\u0447\u044B\u043C\u0430 \u0437\u043D\u0430\u0439\u0441\u0446\u0456 \u0456\u043C\u044F \u0445\u043E\u0441\u0442\u0430.","bg":"\u0425\u043E\u0441\u0442\u044A\u0442 \u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u044A\u043F\u0435\u043D.","bs":"Nije mogu\u0107e odrediti poslu\u017Eitelja (host).","ca":"No s'ha pogut resoldre l'amfitri\xF3.","cs":"Hostitele nebylo mo\u017En\xE9 rozpoznat.","cy":"Ni fu modd datrys y gwesteiwr.","da":"V\xE6rten kunne ikke l\xF8ses.","de":"Der Hostname konnte nicht aufgel\xF6st werden.","el":"\u0397 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 \u03B4\u03B5\u03BD \u03BC\u03C0\u03CC\u03C1\u03B5\u03C3\u03B5 \u03BD\u03B1 \u03B5\u03C0\u03B9\u03BB\u03C5\u03B8\u03B5\u03AF.","en":"The host could not be resolved.","es":"No se puede resolver el host.","et":"Sellist domeeni ei \xF5nnestunud leida.","eu":"Host-a ezin da ebatzi.","fa":"\u0645\u06CC\u0632\u0628\u0627\u0646 (Host) \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u0646\u0634\u062F.","fi":"Palvelimeen ei saatu yhteytt\xE4.","gl":"Non se puido resolver o host.","he":"\u05DC\u05D0 \u05D4\u05D9\u05D9\u05EA\u05D4 \u05D0\u05E4\u05E9\u05E8\u05D5\u05EA \u05DC\u05D6\u05D4\u05D5\u05EA \u05D0\u05EA \u05D4\u05DE\u05D0\u05E8\u05D7.","hr":"Poslu\u017Eitelj ne mo\u017Ee biti prona\u0111en.","hu":"Az \xE1llom\xE1snevet nem lehet feloldani.","hy":"\u0540\u0578\u057D\u0569\u056B \u0561\u0576\u0578\u0582\u0576\u0568 \u0570\u0576\u0561\u0580\u0561\u057E\u0578\u0580 \u0579\u056B \u057A\u0561\u0580\u0566\u0565\u056C\u0589","id":"Host tidak dapat diselesaikan.","it":"L'host non pu\xF2 essere risolto.","ja":"\u30DB\u30B9\u30C8\u3092\u89E3\u6C7A\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002","lb":"Den Host-Numm konnt net opgel\xE9ist ginn.","lt":"Serveris nepasiekiamas.","lv":"Resursdatora nosaukumu nevar atrisin\u0101t.","mk":"\u0425\u043E\u0441\u0442\u043E\u0442 \u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u043F\u0435\u043D.","mn":"\u0425\u043E\u0441\u0442 \u0437\u04E9\u0432 \u0442\u043E\u0445\u0438\u0440\u043E\u0433\u0434\u043E\u043E\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"host \u1016\u103C\u1031\u101B\u103E\u1004\u103A\u1038\u104D\u1019\u1014\u102D\u102F\u1004\u103A\u1015\u102B\u104B","nb":"Vertsnavn kunne ikke l\xF8ses.","nl":"De hostnaam kon niet worden bepaald.","nn":"Verten kunne ikkje finnast.","no":"Vertsnavn kunne ikke l\xF8ses.","pl":"Nazwa hosta nie zosta\u0142a rozpoznana.","pt":"O host n\xE3o pode ser resolvido.","pt_BR":"O host n\xE3o p\xF4de ser resolvido.","ro":"Numele host nu a putut fi rezolvat c\u0103tre o adres\u0103 IP.","ru":"\u0418\u043C\u044F \u0445\u043E\u0441\u0442\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u043E.","sk":"Hostite\u013Ea nebolo mo\u017En\xE9 rozpozna\u0165.","sl":"Gostitelja ni bilo mogo\u010De prepoznati.","sq":"Host-i nuk mund te zbulohej.","sr_Cyrl":"\u0418\u043C\u0435 \u0445\u043E\u0441\u0442\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u043E.","sr_Latn":"Ime hosta ne mo\u017Ee biti razre\u0161eno.","sv":"V\xE4rddatorn kunde inte hittas.","th":"\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E41\u0E01\u0E49\u0E44\u0E02\u0E0A\u0E37\u0E48\u0E2D\u0E42\u0E2E\u0E2A\u0E15\u0E4C","tl":"Hindi maresolba ang host.","tr":"Sunucu \xE7\xF6z\xFClemedi.","uk":"\u0406\u043C'\u044F \u0445\u043E\u0441\u0442\u0430 \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E.","ur":"\u0645\u06CC\u0632\u0628\u0627\u0646 \u062D\u0644 \u0646\u06C1\u06CC\u06BA \u06C1\u0648 \u0633\u06A9\u0627","uz":"Xost nomini nomiga ruxsat berilmagan.","vi":"M\xE1y ch\u1EE7 kh\xF4ng th\u1EC3 \u0111\u01B0\u1EE3c t\xECm th\u1EA5y.","zh_CN":"\u4E3B\u673A\u540D\u65E0\u6CD5\u89E3\u6790\u3002","zh_TW":"\u672A\u627E\u5230\u670D\u52D9\u5668\u3002"}}};var THIS_VALUE_DOES_NOT_MATCH_THE_EXPECTED_CHARSET_CHARSET={"id":"This value does not match the expected {{ charset }} charset.","translations":{"validators":{"fr":"Cette valeur ne correspond pas au jeu de caract\xE8res {{ charset }} attendu.","af":"Die waarde stem nie ooreen met die verwagte {{ charset }} karakterstel nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u063A\u064A\u0631 \u0645\u062A\u0637\u0627\u0628\u0642\u0629 \u0645\u0639 \u0635\u064A\u063A\u0629 \u0627\u0644\u062A\u062D\u0648\u064A\u0644 {{ charset }}.","az":"Bu d\u0259y\u0259r g\xF6zl\u0259nil\u0259n {{ charset }} simvol c\u0259dv\u0259li il\u0259 uy\u011Fun g\u0259lmir.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0441\u0443\u043F\u0430\u0434\u0430\u0435 \u0437 \u0447\u0430\u043A\u0430\u043D\u0430\u0439 {{ charset }} \u043A\u0430\u0434\u044B\u0440\u043E\u045E\u043A\u0430\u0439.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0441\u044A\u0432\u043F\u0430\u0434\u0430 \u0441 \u043E\u0447\u0430\u043A\u0432\u0430\u043D\u0430\u0442\u0430 {{ charset }} \u043A\u043E\u0434\u0438\u0440\u043E\u0432\u043A\u0430.","bs":"Ova vrijednost ne odgovara o\u010Dekivanom {{ charset }} setu karaktera (charset).","ca":"Aquest valor no coincideix amb l'esperat {{ charset }} joc de car\xE0cters.","cs":"Tato hodnota neodpov\xEDd\xE1 o\u010Dek\xE1van\xE9 znakov\xE9 sad\u011B {{ charset }}.","cy":"Nid yw'r gwerth hwn yn cyfateb \xE2'r {{ charset }} set nodau ddisgwyliedig.","da":"Denne v\xE6rdi stemmer ikke overens med den forventede {{ charset }} charset.","de":"Dieser Wert entspricht nicht dem erwarteten Zeichensatz {{ charset }}.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03B5\u03B9 \u03C3\u03C4\u03BF \u03B1\u03BD\u03B1\u03BC\u03B5\u03BD\u03CC\u03BC\u03B5\u03BD\u03BF {{ charset }} \u03C3\u03CD\u03BD\u03BF\u03BB\u03BF \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03C9\u03BD.","en":"This value does not match the expected {{ charset }} charset.","es":"La codificaci\xF3n de caracteres para este valor deber\xEDa ser {{ charset }}.","et":"See v\xE4\xE4rtus ei \xFChti eeldatava t\xE4hem\xE4rgiga {{ charset }}.","eu":"Balio honen karaktere kodea ez da esperotakoa {{ charset }}.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0645\u0637\u0627\u0628\u0642 charset \u0645\u0648\u0631\u062F \u0627\u0646\u062A\u0638\u0627\u0631 {{ charset }} \u0646\u0645\u06CC \u0628\u0627\u0634\u062F.","fi":"Arvo ei vastaa odotettua merkist\xF6\xE4 {{ charset }}.","gl":"A codificaci\xF3n de caracteres para este valor deber\xEDa ser {{ charset }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05EA\u05D5\u05D0\u05DD \u05DC\u05DE\u05E2\u05E8\u05DA \u05D4\u05EA\u05D5\u05D5\u05D9\u05DD {{ charset }} \u05D4\u05E6\u05E4\u05D5\u05D9.","hr":"Ova vrijednost ne odgovara o\u010Dekivanom {{ charset }} znakovnom skupu.","hu":"Ez az \xE9rt\xE9k nem az elv\xE1rt {{ charset }} karakterk\xF3dol\xE1st haszn\xE1lja.","hy":"\u0531\u0580\u056A\u0565\u0584\u0568 \u0579\u056B \u0570\u0561\u0574\u0568\u0576\u056F\u0576\u0578\u0582\u0574 {{ charset }} \u056F\u0578\u0564\u0561\u057E\u0578\u0580\u0574\u0561\u0576 \u0570\u0565\u057F\u0589","id":"Nilai ini tidak memenuhi set karakter {{ charset }} yang diharapkan.","it":"Questo valore non corrisponde al charset {{ charset }}.","ja":"\u3053\u306E\u5024\u306F\u4E88\u671F\u3055\u308C\u308B\u6587\u5B57\u30B3\u30FC\u30C9\uFF08{{ charset }}\uFF09\u3068\u7570\u306A\u308A\u307E\u3059\u3002","lb":"D\xEBse W\xE4ert entspr\xE9cht net dem erwaarten Zeechesaz {{ charset }}.","lt":"\u0160i reik\u0161m\u0117 neatitinka {{ charset }} koduot\u0117s.","lv":"\u0160\u012B v\u0113rt\u012Bba neatbilst sagaid\u0101majai rakstz\u012Bmju kopai {{ charset }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0441\u0435 \u0441\u043E\u0432\u043F\u0430\u0453\u0430 \u0441\u043E \u043E\u0447\u0435\u043A\u0443\u0432\u0430\u043D\u0438\u043E\u0442 {{ charset }} \u0441\u0435\u0442 \u043D\u0430 \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438 (charset).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0442\u043E\u043E\u0446\u043E\u043E\u043B\u0441\u043E\u043D {{ charset }} \u0442\u044D\u043C\u0434\u044D\u0433\u0442\u0442\u044D\u0439 \u0442\u0430\u0430\u0440\u0430\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103B\u103E\u1031\u102C\u103A\u1019\u103E\u1014\u103A\u1038\u1011\u102C\u1038\u101E\u1031\u102C {{ charset }} \u1005\u102C\u1038\u101C\u102F\u1036\u1038\u1014\u103E\u1004\u103A\u1037 \u1000\u102D\u102F\u1000\u103A\u100A\u102E\u1019\u103E\u102F\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Verdien samsvarer ikke med forventet tegnsett {{ charset }}.","nl":"Deze waarde is niet in de verwachte tekencodering {{ charset }}.","nn":"Verdien stemmer ikkje med forventa {{ charset }} charset.","no":"Verdien samsvarer ikke med forventet tegnsett {{ charset }}.","pl":"Ta warto\u015B\u0107 nie pasuje do oczekiwanego zestawu znak\xF3w {{ charset }}.","pt":"O valor n\xE3o corresponde ao conjunto de caracteres {{ charset }} esperado.","pt_BR":"Este valor n\xE3o corresponde ao charset {{ charset }} esperado.","ro":"Aceast\u0103 valoare nu corespunde setului de caractere {{ charset }} a\u0219teptat.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0435\u0442 \u0441 \u043E\u0436\u0438\u0434\u0430\u0435\u043C\u043E\u0439 {{ charset }} \u043A\u043E\u0434\u0438\u0440\u043E\u0432\u043A\u043E\u0439.","sk":"T\xE1to hodnota nezodpoved\xE1 o\u010Dak\xE1vanej znakovej sade {{ charset }}.","sl":"Ta vrednost se ne ujema s pri\u010Dakovanim naborom znakov {{ charset }}.","sq":"Kjo vler\xEB nuk p\xEBrputhet me kodifikimin e karaktereve {{ charset }} q\xEB pritej.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0441\u0435 \u043D\u0435 \u043F\u043E\u043A\u043B\u0430\u043F\u0430 \u0441\u0430 \u043E\u0447\u0435\u043A\u0438\u0432\u0430\u043D\u0438\u043C {{ charset }} \u0441\u0435\u0442\u043E\u043C \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430.","sr_Latn":"Vrednost se ne poklapa sa o\u010Dekivanim {{ charset }} setom karaktera.","sv":"Detta v\xE4rde har inte den f\xF6rv\xE4ntade teckenkodningen {{ charset }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E01\u0E32\u0E23\u0E40\u0E02\u0E49\u0E32\u0E23\u0E2B\u0E31\u0E2A {{ charset }}","tl":"Ang halaga ay hindi kapareha sa inaasahang {{ charset }} set ng karater.","tr":"Bu de\u011Fer beklenen {{ charset }} karakter k\xFCmesiyle e\u015Fle\u015Fmiyor.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0437\u0431\u0456\u0433\u0430\u0454\u0442\u044C\u0441\u044F \u0437 \u043E\u0447\u0456\u043A\u0443\u0432\u0430\u043D\u0438\u043C {{ charset }} \u043A\u043E\u0434\u0443\u0432\u0430\u043D\u043D\u044F\u043C.","ur":"\u06A9\u06D2 \u062C\u064A\u0633\u064A \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 charset {{ charset }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0645\u062A\u0648\u0642\u0639","uz":"Qiymat kutilgan {{ charset }} kodlashiga mos kelmaydi.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng \u0111\xFAng \u0111\u1ECBnh d\u1EA1ng b\u1ED9 k\xFD t\u1EF1 mong mu\u1ED1n {{ charset }}.","zh_CN":"\u8BE5\u503C\u4E0D\u7B26\u5408 {{ charset }} \u7F16\u7801\u3002","zh_TW":"\u8A72\u6578\u503C\u4E0D\u7B26\u5408\u9810\u671F {{ charset }} \u7B26\u865F\u7DE8\u78BC\u3002"}}};var THIS_IS_NOT_A_VALID_BUSINESS_IDENTIFIER_CODE_BIC={"id":"This is not a valid Business Identifier Code (BIC).","translations":{"validators":{"fr":"Ce n'est pas un code universel d'identification des banques (BIC) valide.","af":"Hierdie is nie 'n geldige Besigheids Identifikasie Kode (BIC) nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0631\u0645\u0632 \u0645\u0639\u0631\u0651\u0641 \u0646\u0634\u0627\u0637 \u062A\u062C\u0627\u0631\u064A \u0635\u0627\u0644\u062D (BIC).","az":"Bu d\u0259y\u0259r do\u011Fru bir Biznes T\u0259yinedici Kodu (BIC) deyil.","be":"\u041D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B \u0431\u0430\u043D\u043A\u0430\u045E\u0441\u043A\u0456 \u0456\u0434\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0439\u043D\u044B \u043A\u043E\u0434 (BIC).","bg":"\u0422\u043E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0411\u0438\u0437\u043D\u0435\u0441 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u0435\u043D \u043A\u043E\u0434 (BIC).","bs":"Ovo nije validan poslovni identifikacioni kod (BIC).","ca":"Aquest no \xE9s un codi d'identificaci\xF3 bancari (BIC) v\xE0lid.","cs":"Tato hodnota nen\xED platn\xFD identifika\u010Dn\xED k\xF3d podniku (BIC).","cy":"Nid yw hwn yn God Adnabod Busnes (BIC) dilys.","da":"Dette er ikke en gyldig Business Identifier Code (BIC).a","de":"Dieser Wert ist keine g\xFCltige internationale Bankleitzahl (BIC).","el":"\u0391\u03C5\u03C4\u03CC\u03C2 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03BD\u03B1\u03C2 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 BIC.","en":"This is not a valid Business Identifier Code (BIC).","es":"No es un C\xF3digo de Identificaci\xF3n Bancaria (BIC) v\xE1lido.","et":"See ei ole kehtiv ettev\xF5tte identifitseerimiskood (BIC).","eu":"Ez da balizko Banku Identifikazioko Kodea (BIC).","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u06A9\u062F \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u06A9\u0633\u0628\u200C\u0648\u200C\u06A9\u0627\u0631 \u0645\u0639\u062A\u0628\u0631 (BIC) \u0646\u06CC\u0633\u062A.","fi":"Arvo ei ole kelvollinen yritystunnus (BIC).","gl":"Non \xE9 un C\xF3digo de Identificaci\xF3n Bancaria (BIC) v\xE1lido.","he":"\u05E7\u05D5\u05D3 \u05D6\u05D9\u05D4\u05D5\u05D9 \u05E2\u05E1\u05E7\u05D9 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9 (BIC).","hr":"Ovo nije validan poslovni identifikacijski broj (BIC).","hu":"\xC9rv\xE9nytelen nemzetk\xF6zi bankazonos\xEDt\xF3 k\xF3d (BIC/SWIFT).","hy":"\u054D\u0561 \u057E\u0561\u057E\u0565\u0580 Business Identifier Code (BIC) \u0579\u0567\u0589","id":"Ini bukan Business Identifier Code (BIC) yang sah.","it":"Questo valore non \xE8 un codice BIC valido.","ja":"\u6709\u52B9\u306ASWIFT\u30B3\u30FC\u30C9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst ass kee g\xEBltege \"Business Identifier Code\" (BIC).","lt":"Bendrov\u0117s Identifikavimo Kodas (BIC) n\u0117ra tinkamas.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs Biznesa Identifik\u0101cijas Kods (BIC).","mk":"\u041E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0431\u0438\u0437\u043D\u0438\u0441 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0441\u043A\u0438 \u043A\u043E\u0434 (BIC).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 Business Identifier Code (BIC) \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u104E\u1004\u103A\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C Business Identifier Code (BIC) \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Dette er ikke en gyldig BIC.","nl":"Dit is geen geldige bedrijfsidentificatiecode (BIC\/SWIFT).","nn":"Dette er ikkje ein gyldig Business Identifier Code (BIC).","no":"Dette er ikke en gyldig BIC.","pl":"Ta warto\u015B\u0107 nie jest poprawnym kodem BIC (Business Identifier Code).","pt":"O C\xF3digo de Identifica\xE7\xE3o de Empresa (BIC) n\xE3o \xE9 v\xE1lido.","pt_BR":"Este n\xE3o \xE9 um C\xF3digo Identificador Banc\xE1rio (BIC) v\xE1lido.","ro":"Codul BIC (Business Identifier Code) nu este valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043E\u0440\u043C\u0430\u0442\u0443 BIC.","sk":"T\xE1to hodnota nie je platn\xFD identifika\u010Dn\xFD k\xF3d podniku (BIC).","sl":"To ni veljavna identifikacijska koda podjetja (BIC).","sq":"Ky nuk \xEBsht\xEB nj\xEB Kod Identifikues i Biznesit (BIC) i vleflshem.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u043C\u0435\u0452\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u0438 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0441\u043A\u0438 \u043A\u043E\u0434 \u0431\u0430\u043D\u043A\u0435 (BIC).","sr_Latn":"Ovo nije validan BIC.","sv":"Detta \xE4r inte en giltig BIC-kod.","th":"\u0E19\u0E35\u0E48\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E15\u0E32\u0E21\u0E23\u0E2B\u0E31\u0E2A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E23\u0E30\u0E1A\u0E38\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08\u0E19\u0E35\u0E49 (BIC)","tl":"Ito ay hindi isang balidong Business Identifier Code (BIC).","tr":"Bu ge\xE7erli bir \u0130\u015Fletme Tan\u0131mlay\u0131c\u0131 Kodu (BIC) de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435 \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0431\u0430\u043D\u043A\u0456\u0432\u0441\u044C\u043A\u0438\u0439 \u043A\u043E\u0434 (BIC).","ur":"(BIC)\u06CC\u06C1 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u06A9\u0627\u0631\u0648\u0628\u0627\u0631\u06CC \u0634\u0646\u0627\u062E\u062A \u06A9\u0646\u0646\u062F\u06C1 \u06A9\u0648\u0688 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Qiymat BIC formatida emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng \u0111\xFAng \u0111\u1ECBnh d\u1EA1ng m\xE3 \u0111\u1ECBnh danh doanh nghi\u1EC7p (BIC).","zh_CN":"\u8FD9\u4E0D\u662F\u6709\u6548\u7684\u4E1A\u52A1\u6807\u8BC6\u7B26\u4EE3\u7801\uFF08BIC)\u3002","zh_TW":"\u7121\u6548\u4F01\u696D\u8B58\u5225\u78BC (BIC)\u3002"}}};var ERROR={"id":"Error","translations":{"validators":{"fr":"Erreur","af":"Fout","ar":"\u062E\u0637\u0623","az":"X\u0259ta","be":"\u041F\u0430\u043C\u044B\u043B\u043A\u0430","bg":"\u0413\u0440\u0435\u0448\u043A\u0430","bs":"Gre\u0161ka","ca":"Error","cs":"Chyba","cy":"Gwall","da":"Fejl","de":"Fehler","el":"\u03A3\u03C6\u03AC\u03BB\u03BC\u03B1","en":"Error","es":"Error","et":"Viga","eu":"Errore","fa":"\u062E\u0637\u0627","fi":"Virhe","gl":"Erro","he":"\u05E9\u05D2\u05D9\u05D0\u05D4","hr":"Gre\u0161ka","hu":"Hiba","hy":"\u054D\u056D\u0561\u056C","id":"Galat","it":"Errore","ja":"\u30A8\u30E9\u30FC","lb":"Feeler","lt":"Klaida","lv":"K\u013C\u016Bda","mk":"\u0413\u0440\u0435\u0448\u043A\u0430","mn":"\u0410\u043B\u0434\u0430\u0430","my":"\u1021\u1019\u103E\u102C\u1038","nb":"Feil","nl":"Fout","nn":"Feil","no":"Feil","pl":"B\u0142\u0105d","pt":"Erro","pt_BR":"Erro","ro":"Eroare","ru":"\u041E\u0448\u0438\u0431\u043A\u0430","sk":"Chyba","sl":"Napaka","sq":"Gabim","sr_Cyrl":"\u0413\u0440\u0435\u0448\u043A\u0430","sr_Latn":"Gre\u0161ka","sv":"Fel","th":"\u0E40\u0E01\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14","tl":"Error","tr":"Hata","uk":"\u041F\u043E\u043C\u0438\u043B\u043A\u0430","ur":"\u062E\u0631\u0627\u0628\u06CC","uz":"Xatolik","vi":"L\u1ED7i","zh_CN":"\u9519\u8BEF"}}};var THIS_IS_NOT_A_VALID_UUID={"id":"This is not a valid UUID.","translations":{"validators":{"fr":"Ceci n'est pas un UUID valide.","af":"Hierdie is nie 'n geldige UUID nie.","ar":"\u0647\u0630\u0627 \u0644\u064A\u0633 UUID \u0635\u0627\u0644\u062D.","az":"Bu d\u0259y\u0259r do\u011Fru bir UUID deyil.","be":"\u0413\u044D\u0442\u0430 \u043D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B UUID.","bg":"\u0422\u043E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D UUID.","bs":"Ovo nije validan UUID.","ca":"Aquest valor no \xE9s un UUID v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 UUID.","cy":"Nid yw hyn yn UUID dilys.","da":"Dette er ikke en gyldig UUID.","de":"Dies ist keine g\xFCltige UUID.","el":"\u0391\u03C5\u03C4\u03CC \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF UUID.","en":"This is not a valid UUID.","es":"Este valor no es un UUID v\xE1lido.","et":"See pole kehtiv UUID.","eu":"Balio hau ez da onartutako UUID bat.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 UUID \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"Arvo ei ole kelvollinen UUID.","gl":"Isto non \xE9 un UUID v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA UUID \u05D7\u05D5\u05E7\u05D9.","hr":"Ovo nije validan UUID.","hu":"\xC9rv\xE9nytelen egyedi azonos\xEDt\xF3 (UUID).","hy":"\u054D\u0561 \u057E\u0561\u057E\u0565\u0580 UUID \u0579\u0567\u0589","id":"Ini bukan UUID yang sah.","it":"Questo non \xE8 un UUID valido.","ja":"\u6709\u52B9\u306AUUID\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBst ass keng g\xEBlteg UUID.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkamas UUID.","lv":"\u0160is nav der\u012Bgs UUID.","mk":"\u041E\u0432\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0443\u043D\u0438\u0432\u0435\u0440\u0437\u0430\u043B\u0435\u043D \u0443\u043D\u0438\u043A\u0430\u0442\u0435\u043D \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 (UUID).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 UUID \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A UUID \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Dette er ikke en gyldig UUID.","nl":"Dit is geen geldige UUID.","nn":"Dette er ikkje ein gyldig UUID.","no":"Dette er ikke en gyldig UUID.","pl":"To nie jest poprawne UUID.","pt":"Este valor n\xE3o \xE9 um UUID v\xE1lido.","pt_BR":"Este n\xE3o \xE9 um UUID v\xE1lido.","ro":"Identificatorul universal unic (UUID) nu este valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0444\u043E\u0440\u043C\u0430\u0442\u0443 UUID.","sk":"T\xE1to hodnota nie je platn\xFD UUID.","sl":"To ni veljaven UUID.","sq":"Ky nuk \xEBsht\xEB nj\xEB UUID i vlefsh\xEBm.","sr_Cyrl":"\u041E\u0432\u043E \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0443\u043D\u0438\u0432\u0435\u0440\u0437\u0430\u043B\u043D\u0438 \u0443\u043D\u0438\u043A\u0430\u0442\u043D\u0438 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 (UUID).","sr_Latn":"Ovo nije validan univerzalni unikatni identifikator (UUID).","sv":"Detta \xE4r inte ett giltigt UUID.","th":"\u0E19\u0E35\u0E48\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48 UUID \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ito ay hindi wastong UUID.","tr":"Bu ge\xE7erli bir UUID de\u011Fildir.","uk":"\u0426\u0435 \u043D\u0435 \u0432\u0430\u043B\u0456\u0434\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F UUID.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 UUID \u06CC\u06C1 \u062F\u0631\u0633\u062A","uz":"Qiymat UUID formatida emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng \u0111\xFAng \u0111\u1ECBnh d\u1EA1ng UUID.","zh_CN":"\u8FD9\u4E0D\u662F\u6709\u6548\u7684UUID\u3002","zh_TW":"\u7121\u6548\u7684\u901A\u7528\u552F\u58F9\u6A19\u8B58\u7B26 (UUID)\u3002"}}};var THIS_VALUE_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE={"id":"This value should be a multiple of {{ compared_value }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre un multiple de {{ compared_value }}.","af":"Hierdie waarde moet 'n veelvoud van {{ compared_value }} wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0645\u0636\u0627\u0639\u0641 \u0644 {{ compared_value }}.","az":"Bu d\u0259y\u0259r {{ compare_value }} d\u0259y\u0259rinin b\xF6l\u0259nl\u0259rind\u0259n biri olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C {{ compared_value }}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043A\u0440\u0430\u0442\u043D\u043E \u0447\u0438\u0441\u043B\u043E \u043D\u0430 {{ compared_value }}.","bs":"Ova vrijednost bi trebalo da bude djeljiva sa {{ compared_value }}.","ca":"Aquest valor ha de ser m\xFAltiple de {{ compared_value }}.","cs":"Tato hodnota mus\xED b\xFDt n\xE1sobek hodnoty {{ compared_value }}.","cy":"Dylai'r gwerth hwn fod yn luosrif o {{ compared_value }}.","da":"Denne v\xE6rdi skal v\xE6re et multiplikation af {{ compared_value }}.","de":"Dieser Wert sollte ein Vielfaches von {{ compared_value }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03AD\u03C0\u03C1\u03B5\u03C0\u03B5 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AC\u03C3\u03B9\u03BF \u03C4\u03BF\u03C5 {{ compared_value }}.","en":"This value should be a multiple of {{ compared_value }}.","es":"Este valor deber\xEDa ser m\xFAltiplo de {{ compared_value }}.","et":"See v\xE4\xE4rtus peaks olema v\xE4\xE4rtuse {{ compared_value }} kordne.","eu":"Balio honek {{ compared_value }}-ren multiploa izan beharko luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0686\u0646\u062F \u0628\u0631\u0627\u0628\u0631 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"T\xE4m\xE4n arvon tulee olla luvun {{ compared_value }} kerrannainen.","gl":"Este valor deber\xEDa ser multiplo de {{ compared_value }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DB\u05E4\u05D5\u05DC\u05D4 \u05E9\u05DC {{ compared_value }}.","hr":"Ova vrijednost treba biti vi\u0161ekratnik od {{ compared_value }}.","hu":"Ennek az \xE9rt\xE9knek oszthat\xF3nak kell lennie a k\xF6vetkez\u0151vel: {{ compared_value }}","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0562\u0561\u0566\u0574\u0561\u056F\u056B {{ compared_value }}\u0589","id":"Nilai ini harus kelipatan dari {{ compared_value }}.","it":"Questo valore dovrebbe essere un multiplo di {{ compared_value }}.","ja":"{{ compared_value }}\u306E\u500D\u6570\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt e puer vun {{ compared_value }} sinn.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti skai\u010Diaus {{ compared_value }} kartotinis.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt vair\u0101kas reizes atk\u0101rtotai {{ compared_value }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0432\u0435\u045C\u0435\u043A\u0440\u0430\u0442\u043D\u0430 \u043E\u0434 {{ compared_value }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ compared_value }} -\u043D \u04AF\u0440\u0436\u0432\u044D\u0440 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{compared_value}} \u104F \u1005\u1010\u1030\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien skal v\xE6re flertall av {{ compared_value }}.","nl":"Deze waarde zou een meervoud van {{ compared_value }} moeten zijn.","nn":"Verdien b\xF8r vera eit multipel av {{ compared_value }}.","no":"Verdien skal v\xE6re flertall av {{ compared_value }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 wielokrotno\u015Bci\u0105 {{ compared_value }}.","pt":"Este valor deve ser um m\xFAltiplo de {{ compared_value }}.","pt_BR":"Este valor deve ser m\xFAltiplo de {{ compared_value }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie un multiplu de {{ compared_value }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u0440\u0430\u0442\u043D\u043E {{ compared_value }}.","sk":"T\xE1to hodnota by mala by\u0165 n\xE1sobkom {{ compared_value }}.","sl":"Ta vrednost bi morala biti ve\u010Dkratnik od {{ compared_value }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB nj\xEB shum\xEBfish i {{ compared_value }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u043E \u0434\u0430 \u0431\u0443\u0434\u0435 \u0434\u0435\u0459\u0438\u0432\u0430 \u0441\u0430 {{ compared_value }}.","sr_Latn":"Ova vrednost bi trebalo da bude deljiva sa {{ compared_value }}.","sv":"Detta v\xE4rde ska vara en multipel av {{ compared_value }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 {{ compared_value }} \u0E2B\u0E25\u0E32\u0E22\u0E15\u0E31\u0E27","tl":"Ang halagang ito ay dapat multiple ng {{ compared_value }}.","tr":"Bu de\u011Fer {{ compare_value }} de\u011Ferinin katlar\u0131ndan biri olmal\u0131d\u0131r.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0435 \u0431\u0443\u0442\u0438 \u043A\u0440\u0430\u0442\u043D\u0438\u043C {{ compared_value }}.","ur":"\u06A9\u0627 \u0636\u0631\u0628 \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 ","uz":"Qiymat {{ compared_value }} ning ko'paytmasi bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn l\xE0 b\u1ED9i s\u1ED1 c\u1EE7a {{ compared_value }}.","zh_CN":"\u6B64\u503C\u5E94\u4E3A {{ compared_value }} \u7684\u500D\u6570\u3002","zh_TW":"\u8A72\u503C\u5FC5\u9808\u662F\u500D\u6578 {{ compared_value }}\u3002"}}};var THIS_BUSINESS_IDENTIFIER_CODE_BIC_IS_NOT_ASSOCIATED_WITH_IBAN_IBAN={"id":"This Business Identifier Code (BIC) is not associated with IBAN {{ iban }}.","translations":{"validators":{"fr":"Ce code d'identification d'entreprise (BIC) n'est pas associ\xE9 \xE0 l'IBAN {{ iban }}.","af":"Hierdie Besigheids Identifikasie Kode (BIK) is nie geassosieer met IBAN {{ iban }} nie.","ar":"\u0631\u0645\u0632 \u0627\u0644\u0645\u0639\u0631\u0651\u0641 \u0646\u0634\u0627\u0637 \u062A\u062C\u0627\u0631\u064A (BIC) \u0647\u0630\u0627 \u0644\u0627 \u064A\u0631\u062A\u0628\u0637 \u0645\u0639 IBAN {{ iban }}.","az":"Bu Biznes T\u0259yinedici Kodu (BIC) {{ iban }} IBAN kodu il\u0259 \u0259laq\u0259li deyil.","be":"\u0411\u0430\u043D\u043A\u0430\u045E\u0441\u043A\u0456 \u0456\u0434\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0439\u043D\u044B \u043A\u043E\u0434 (BIC) \u043D\u0435 \u0437\u0432\u044F\u0437\u0430\u043D \u0437 IBAN {{ iban }}.","bg":"\u0411\u0438\u0437\u043D\u0435\u0441 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u0438\u044F \u043A\u043E\u0434 (BIC) \u043D\u0435 \u0435 \u0441\u0432\u044A\u0440\u0437\u0430\u043D \u0441 IBAN {{ iban }}.","bs":"Ovaj poslovni identifikacioni kod (BIC) nije povezan sa IBAN-om {{ iban }}.","ca":"Aquest Codi d'identificaci\xF3 bancari (BIC) no est\xE0 associat amb l'IBAN {{ iban }}.","cs":"Bankovn\xED identifika\u010Dn\xED k\xF3d (BIC) neodpov\xEDd\xE1 mezin\xE1rodn\xEDmu \u010D\xEDslu \xFA\u010Dtu (IBAN) {{ iban }}.","cy":"Nid yw'r Cod Adnabod Busnes (BIC) hwn yn gysylltiedig ag IBAN {{ iban }}.","da":"Denne Business Identifier Code (BIC) er ikke forbundet med IBAN {{ iban }}.","de":"Diese internationale Bankleitzahl (BIC) ist nicht mit der IBAN {{ iban }} assoziiert.","el":"\u0391\u03C5\u03C4\u03CC\u03C2 \u03BF \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 BIC \u03B4\u03B5\u03BD \u03C3\u03C7\u03B5\u03C4\u03AF\u03B6\u03B5\u03C4\u03B1\u03B9 \u03BC\u03B5 \u03C4\u03BF IBAN {{ iban }}.","en":"This Business Identifier Code (BIC) is not associated with IBAN {{ iban }}.","es":"Este C\xF3digo de Identificaci\xF3n Bancaria (BIC) no est\xE1 asociado con el IBAN {{ iban }}.","et":"See ettev\xF5tte identifitseerimiskood (BIC) ei ole seotud IBAN-iga {{ iban }}.","eu":"Banku Identifikazioko Kode hau ez dago lotuta {{ IBAN }} IBAN-rekin.","fa":"\u0627\u06CC\u0646 \u06A9\u062F \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u06A9\u0633\u0628\u200C\u0648\u200C\u06A9\u0627\u0631 (BIC) \u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u062D\u0633\u0627\u0628 \u0628\u0627\u0646\u06A9\u06CC \u0628\u06CC\u0646\u200C\u0627\u0644\u0645\u0644\u0644\u06CC (IBAN) {{ iban }} \u0645\u0631\u062A\u0628\u0637 \u0646\u06CC\u0633\u062A.","fi":"T\xE4t\xE4 yritystunnusta (BIC) ei ole liitetty IBAN-tilinumeroon {{ iban }}.","gl":"Este C\xF3digo de identificaci\xF3n bancaria (BIC) non est\xE1 asociado co IBAN {{ iban }}.","he":"\u05D4\u05E7\u05D5\u05D3 \u05D6\u05D9\u05D4\u05D5\u05D9 \u05E2\u05E1\u05E7\u05D9 (BIC) \u05D0\u05D9\u05E0\u05D5 \u05DE\u05E9\u05D5\u05D9\u05D9\u05DA \u05DC IBAN {{ iban }}.","hr":"Poslovni identifikacijski broj (BIC) nije povezan sa IBAN brojem {{ iban }}.","hu":"Ez a Bankazonos\xEDt\xF3 k\xF3d (BIC) nem kapcsol\xF3dik az IBAN k\xF3dhoz ({{ iban }}).","hy":"\u0532\u056B\u0566\u0576\u0565\u057D\u056B \u0576\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u056F\u0578\u0564\u0568 (BIC) \u056F\u0561\u057A\u057E\u0561\u056E \u0579\u0567 IBAN- \u056B \u0570\u0565\u057F {{ iban }}\u0589","id":"Business Identifier Code (BIC) ini tidak terkait dengan IBAN {{ iban }}.","it":"Questo codice identificativo bancario (BIC) non \xE8 associato all'IBAN {{ iban }}.","ja":"\u3053\u306ESWIFT\u30B3\u30FC\u30C9\u306FIBAN\u30B3\u30FC\u30C9\uFF08{{ iban }}\uFF09\u306B\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u307E\u305B\u3093\u3002","lb":"D\xEBse \"Business Identifier Code\" (BIC) ass net mat IBAN verbonnen {{ iban }}.","lt":"\u0160is bendrov\u0117s identifikavimo kodas (BIC) nesusij\u0119s su IBAN {{ iban }}.","lv":"\u0160is Biznesa Identifik\u0101cijas Kods (BIC) neatbilst {{ iban }} konta numuram (IBAN).","mk":"\u041E\u0432\u043E\u0458 \u0431\u0438\u0437\u043D\u0438\u0441 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0441\u043A\u0438 \u043A\u043E\u0434 (BIC) \u043D\u0435 \u0435 \u043F\u043E\u0432\u0440\u0437\u0430\u043D \u0441\u043E IBAN {{ iban }}.","mn":"\u042D\u043D\u044D Business Identifier Code (BIC) \u043A\u043E\u0434 \u043D\u044C IBAN {{ iban }} -\u0442\u0430\u0439 \u0445\u043E\u043B\u0431\u043E\u043E\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024 Business Identifier Code (BIC) \u101E\u100A\u103A IBAN {{ iban }} \u1014\u103E\u1004\u103A\u1037\u1006\u1000\u103A\u1005\u1015\u103A\u1019\u103E\u102F\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Business Identifier Code (BIC) er ikke tilknyttet en IBAN {{ iban }}.","nl":"Deze bedrijfsidentificatiecode (BIC) is niet gekoppeld aan IBAN {{ iban }}.","nn":"Denne Business Identifier Code (BIC) er ikkje kopla til IBAN {{ iban }}.","no":"Business Identifier Code (BIC) er ikke tilknyttet en IBAN {{ iban }}.","pl":"Ten kod BIC (Business Identifier Code) nie jest powi\u0105zany z mi\u0119dzynarodowym numerem rachunku bankowego (IBAN) {{ iban }}.","pt":"O C\xF3digo de Identifica\xE7\xE3o de Empresa (BIC) n\xE3o est\xE1 associado ao IBAN {{ iban }}.","pt_BR":"Este C\xF3digo Identificador Banc\xE1rio (BIC) n\xE3o est\xE1 associado ao IBAN {{ iban }}.","ro":"Codul BIC (Business Identifier Code) nu este asociat cu codul IBAN {{ iban }}.","ru":"\u0414\u0430\u043D\u043D\u044B\u0439 BIC \u043D\u0435 \u0441\u0432\u044F\u0437\u0430\u043D \u0441 IBAN {{ iban }}.","sk":"Tento identifika\u010Dn\xFD k\xF3d podniku (BIC) nie je spojen\xFD s IBAN {{ iban }}.","sl":"Ta poslovna identifikacijska koda (BIC) ni povezana z IBAN {{ iban }}.","sq":"Ky Kod Identifikues i Biznesit (BIC) nuk \xEBsht\xEB i lidhur me IBAN {{ iban }}.","sr_Cyrl":"BIC \u043A\u043E\u0434 \u043D\u0438\u0458\u0435 \u043F\u043E\u0432\u0435\u0437\u0430\u043D \u0441\u0430 IBAN {{ iban }}.","sr_Latn":"BIC kod nije povezan sa IBAN {{ iban }}.","sv":"Denna BIC-koden \xE4r inte associerad med IBAN {{ iban }}.","th":"\u0E23\u0E2B\u0E31\u0E2A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E23\u0E30\u0E1A\u0E38\u0E18\u0E38\u0E23\u0E01\u0E34\u0E08\u0E19\u0E35\u0E49 (BIC) \u0E44\u0E21\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E01\u0E31\u0E1A IBAN {{ iban }}","tl":"Ang Business Identifier Code (BIC) na ito ay walang kaugnayan sa IBAN {{ iban }}.","tr":"Bu \u0130\u015Fletme Tan\u0131mlay\u0131c\u0131 Kodu (BIC), IBAN {{ iban }} ile ili\u015Fkili de\u011Fildir.","uk":"\u0411\u0430\u043D\u043A\u0456\u0432\u0441\u044C\u043A\u0438\u0439 \u043A\u043E\u0434 (BIC) \u043D\u0435 \u043F\u043E\u0432\u2019\u044F\u0437\u0430\u043D\u0438\u0439 \u0456\u0437 \u043C\u0456\u0436\u043D\u0430\u0440\u043E\u0434\u043D\u0438\u043C \u043D\u043E\u043C\u0435\u0440\u043E\u043C \u0431\u0430\u043D\u043A\u0456\u0432\u0441\u044C\u043A\u043E\u0433\u043E \u0440\u0430\u0445\u0443\u043D\u043A\u0443 (IBAN) {{ iban }}.","ur":"\u0633\u06D2 \u0648\u0627\u0628\u0633\u062A\u06C1 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 IBAN {{ iban }} (BIC) \u06CC\u06C1 \u06A9\u0627\u0631\u0648\u0628\u0627\u0631\u06CC \u0634\u0646\u0627\u062E\u062A\u06CC \u06A9\u0648\u0688","uz":"Ushbu BIC IBAN {{ iban }} bilan bog'liq emas..","vi":"M\xE3 \u0111\u1ECBnh danh doanh nghi\u1EC7p (BIC) n\xE0y kh\xF4ng li\xEAn k\u1EBFt v\u1EDBi IBAN {{ iban }}.","zh_CN":"\u6B64\u4E1A\u52A1\u6807\u8BC6\u7B26\u4EE3\u7801\uFF08BIC\uFF09\u4E0EIBAN {{ iban }} \u65E0\u5173\u3002","zh_TW":"\u8A72\u4F01\u696D\u8B58\u5225\u78BC (BIC) \u8207\u9280\u884C\u8CEC\u6236\u570B\u969B\u7DE8\u865F\u4E0D\u58F9\u81F4 (IBAN) {{ iban }}\u3002"}}};var THIS_VALUE_SHOULD_BE_VALID_JSON={"id":"This value should be valid JSON.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre un JSON valide.","af":"Hierdie waarde moet geldige JSON wees.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0635\u0627\u0644\u062D\u0629 \u0644 JSON.","az":"Bu d\u0259y\u0259r do\u011Fru bir JSON olmal\u0131d\u0131r.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0443 \u0444\u0430\u0440\u043C\u0430\u0446\u0435 JSON.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D JSON.","bs":"Ova vrijednost bi trebalo da bude validan JSON.","ca":"Aquest valor hauria de ser un JSON v\xE0lid.","cs":"Tato hodnota mus\xED b\xFDt validn\xED JSON.","da":"Denne v\xE6rdi skal v\xE6re gyldig JSON.","de":"Dieser Wert sollte g\xFCltiges JSON sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF JSON.","en":"This value should be valid JSON.","es":"Este valor deber\xEDa ser un JSON v\xE1lido.","et":"See v\xE4\xE4rtus peaks olema kehtiv JSON.","eu":"Balio honek baliozko JSON bat izan behar luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06CC\u06A9 JSON \u0645\u0639\u062A\u0628\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla kelvollinen JSON.","gl":"Este valor deber\xEDa ser un JSON v\xE1lido.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05E2\u05E8\u05DA JSON \u05EA\u05E7\u05D9\u05DF.","hr":"Ova vrijednost treba biti validan JSON.","hu":"Ez az \xE9rt\xE9k \xE9rv\xE9nyes JSON kell, hogy legyen.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u057E\u0561\u057E\u0565\u0580 JSON\u0589","id":"Nilai ini harus berisi JSON yang sah.","it":"Questo valore dovrebbe essere un JSON valido.","ja":"JSON\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt g\xEBlteg JSON.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti tinkamo JSON formato.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt der\u012Bgam JSON.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D JSON.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 JSON \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A JSON \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien er ikke gyldig JSON.","nl":"Deze waarde moet geldige JSON zijn.","nn":"Verdien b\xF8r vera gyldig JSON.","no":"Verdien er ikke gyldig JSON.","pl":"Ta warto\u015B\u0107 powinna by\u0107 prawid\u0142owym formatem JSON.","pt":"Este valor deve ser um JSON v\xE1lido.","pt_BR":"Este valor deve ser um JSON v\xE1lido.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie un JSON valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C JSON.","sk":"T\xE1to hodnota by mala by\u0165 platn\xFD JSON.","sl":"Ta vrednost bi morala biti veljaven JSON.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB JSON i vlefsh\xEBm.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u043E \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D JSON.","sr_Latn":"Ova vrednost bi trebalo da bude validan JSON.","sv":"Detta v\xE4rde ska vara giltig JSON.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A JSON \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay dapat naka wastong JSON.","tr":"Bu de\u011Fer i\xE7in ge\xE7erli olmal\u0131d\u0131r JSON.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u0438\u043C JSON.","ur":"\u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 JSON \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A","uz":"Qiymat to'g'ri JSON bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn \u0111\xFAng \u0111\u1ECBnh d\u1EA1ng JSON.","zh_CN":"\u8BE5\u503C\u5E94\u8BE5\u662F\u6709\u6548\u7684JSON\u3002","zh_TW":"\u8A72\u6578\u503C\u5FC5\u9808\u5E8F\u5217\u5316\u70BAJSON\u683C\u5F0F\u3002"}}};var THIS_COLLECTION_SHOULD_CONTAIN_ONLY_UNIQUE_ELEMENTS={"id":"This collection should contain only unique elements.","translations":{"validators":{"fr":"Cette collection ne doit pas comporter de doublons.","af":"Hierdie versameling moet net unieke elemente bevat.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u062D\u062A\u0648\u064A \u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u0639\u0644\u064A \u0639\u0646\u0627\u0635\u0631 \u0641\u0631\u064A\u062F\u0629 \u0641\u0642\u0637.","az":"Bu kolleksiyada sad\u0259c\u0259 unikal elementl\u0259r olmal\u0131d\u0131r.","be":"\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \u0442\u043E\u043B\u044C\u043A\u0456 \u045E\u043D\u0456\u043A\u0430\u043B\u044C\u043D\u044B\u044F \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B.","bg":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u0441\u0430\u043C\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u043D\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438.","bs":"Ova kolekcija bi trebala da sadr\u017Ei samo jedinstvene elemente.","ca":"Aquesta col\xB7lecci\xF3 nom\xE9s hauria de contenir elements \xFAnics.","cs":"Tato kolekce mus\xED obsahovat pouze unik\xE1tn\xED prvky.","da":"Denne samling b\xF8r kun indeholde unikke elementer.","de":"Diese Sammlung darf keine doppelten Elemente enthalten.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 \u03BC\u03CC\u03BD\u03BF \u03BC\u03BF\u03BD\u03B1\u03B4\u03B9\u03BA\u03AC \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1.","en":"This collection should contain only unique elements.","es":"Esta colecci\xF3n deber\xEDa tener exclusivamente elementos \xFAnicos.","et":"See kogu peaks sisaldama ainult unikaalseid elemente.","eu":"Bilduma honek elementu bakarrak soilik izan beharko lituzke.","fa":"\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u0641\u0642\u0637 \u062D\u0627\u0648\u06CC \u0639\u0646\u0627\u0635\u0631 \u06CC\u06A9\u062A\u0627 \u0628\u0627\u0634\u062F.","fi":"Ryhm\xE4n tulee sis\xE4lt\xE4\xE4 vain yksil\xF6llisi\xE4 arvoja.","gl":"Esta colecci\xF3n s\xF3 deber\xEDa ter elementos \xFAnicos.","he":"\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05DB\u05D9\u05DC \u05E8\u05E7 \u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D9\u05D9\u05D7\u05D5\u05D3\u05D9\u05D9\u05DD.","hr":"Ova kolekcija treba sadr\u017Eavati samo unikatne elemente.","hu":"Ez a gy\u0171jtem\xE9ny csak egyedi elemeket tartalmazhat.","hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0568 \u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0580\u0578\u0582\u0576\u0561\u056F\u056B \u0574\u056B\u0561\u0575\u0576 \u0565\u0566\u0561\u056F\u056B \u057F\u0561\u0580\u0580\u0565\u0580\u0589","id":"Kumpulan ini harus mengandung elemen yang unik.","it":"Questa collezione dovrebbe contenere solo elementi unici.","ja":"\u8981\u7D20\u306F\u91CD\u8907\u3057\u3066\u306F\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBs Sammlung sollt just eenzegaarteg Elementer enthalen.","lt":"S\u0105ra\u0161e turi b\u016Bti tik unikalios reik\u0161m\u0117s.","lv":"\u0160ai kolekcijai j\u0101satur tikai unik\u0101li elementi.","mk":"\u041E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 \u0441\u0430\u043C\u043E \u0443\u043D\u0438\u043A\u0430\u0442\u043D\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438.","mn":"\u042D\u043D\u044D \u043A\u043E\u043B\u043B\u0435\u043A\u0446 \u0437\u04E9\u0432\u0445\u04E9\u043D \u0434\u0430\u0432\u0442\u0430\u0433\u0434\u0430\u0445\u0433\u04AF\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u04AF\u04AF\u0434 \u0430\u0433\u0443\u0443\u043B\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024 collection \u1000\u102D\u102F\u101A\u103A\u1015\u102D\u102F\u1004\u103A elements \u1019\u103B\u102C\u1038 \u1015\u102B\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Samlingen kan kun inneholde unike elementer.","nl":"Deze collectie moet alleen unieke elementen bevatten.","nn":"Denne samlinga b\xF8r berre innehalda unike element.","no":"Samlingen kan kun inneholde unike elementer.","pl":"Ten zbi\xF3r powinien zawiera\u0107 tylko unikalne elementy.","pt":"Esta cole\xE7\xE3o deve conter s\xF3 elementos \xFAnicos.","pt_BR":"Esta cole\xE7\xE3o deve conter somente elementos \xFAnicos.","ro":"Acest set ar trebui s\u0103 con\u021Bin\u0103 numai elemente unice.","ru":"\u042D\u0442\u0430 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0442\u043E\u043B\u044C\u043A\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0435 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B.","sk":"T\xE1to kolekcia by mala obsahova\u0165 len unik\xE1tne prkvy.","sl":"Ta zbirka bi morala vsebovati samo edinstvene elemente.","sq":"Ky koleksion duhet t\xEB p\xEBrmbaj\xEB vet\xEBm element\xEB unik\xEB.","sr_Cyrl":"\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0441\u0430\u043C\u043E \u0458\u0435\u0434\u0438\u043D\u0441\u0442\u0432\u0435\u043D\u0435 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0435.","sr_Latn":"Ova kolekcija bi trebala da sadr\u017Ei samo jedinstvene elemente.","sv":"Denna samling b\xF6r endast inneh\xE5lla unika element.","th":"\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E21\u0E35\u0E40\u0E09\u0E1E\u0E32\u0E30\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E0B\u0E49\u0E33\u0E01\u0E31\u0E19\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tl":"Ang mga elemento ng koleksyong ito ay dapat magkakaiba.","tr":"Bu grup yaln\u0131zca benzersiz \xF6\u011Feler i\xE7ermelidir.","uk":"\u0426\u044F \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0430\u0442\u0438 \u0442\u0456\u043B\u044C\u043A\u0438 \u0443\u043D\u0456\u043A\u0430\u043B\u044C\u043D\u0438 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F.","ur":"\u06CC\u06C1 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0635\u0631\u0641 \u0645\u0646\u0641\u0631\u062F \u0639\u0646\u0627\u0635\u0631 \u067E\u0631 \u0645\u0634\u062A\u0645\u0644 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2","uz":"Ushbu kolleksiyada takroriy elementlar bo'lmasligi kerak.","vi":"Danh s\xE1ch n\xE0y ch\u1EC9 n\xEAn ch\u1EE9a c\xE1c ph\u1EA7n t\u1EED kh\xE1c nhau.","zh_CN":"\u8BE5\u96C6\u5408\u5E94\u4EC5\u5305\u542B\u72EC\u4E00\u65E0\u4E8C\u7684\u5143\u7D20\u3002","zh_TW":"\u8A72\u96C6\u5408\u61C9\u50C5\u5305\u542B\u552F\u58F9\u5143\u7D20\u3002"}}};var THIS_VALUE_SHOULD_BE_POSITIVE={"id":"This value should be positive.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre strictement positive.","af":"Hierdie waarde moet positief wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0645\u0648\u062C\u0628\u0629.","az":"Bu d\u0259y\u0259r m\xFCsb\u0259t olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0434\u0430\u0434\u0430\u0442\u043D\u044B\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E\u043B\u043E\u0436\u0438\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E.","bs":"Ova vrijednost bi trebalo da bude pozitivna.","ca":"Aquest valor hauria de ser positiu.","cs":"Tato hodnota mus\xED b\xFDt kladn\xE1.","da":"Denne v\xE6rdi skal v\xE6re positiv.","de":"Diese Zahl sollte positiv sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B8\u03B5\u03C4\u03B9\u03BA\u03AE.","en":"This value should be positive.","es":"Este valor deber\xEDa ser positivo.","et":"See v\xE4\xE4rtus peaks olema positiivne.","eu":"Balio honek positiboa izan beharko luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0645\u062B\u0628\u062A \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla positiivinen.","gl":"Este valor deber\xEDa ser positivo.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D7\u05D9\u05D5\u05D1\u05D9.","hr":"Ova vrijednost treba biti pozitivna.","hu":"Ennek az \xE9rt\xE9knek pozit\xEDvnak kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0564\u0580\u0561\u056F\u0561\u0576\u0589","id":"Nilai ini harus positif.","it":"Questo valore dovrebbe essere positivo.","ja":"\u6B63\u306E\u6570\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt positiv sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti teigiama.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt pozit\u012Bvai.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u044D\u0435\u0440\u044D\u0433 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u1015\u1031\u102B\u1004\u103A\u1038\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Denne verdien m\xE5 v\xE6re positiv.","nl":"Deze waarde moet positief zijn.","nn":"Verdien b\xF8r vera positiv.","no":"Denne verdien m\xE5 v\xE6re positiv.","pl":"Ta warto\u015B\u0107 powinna by\u0107 dodatnia.","pt":"Este valor deve ser estritamente positivo.","pt_BR":"Este valor deve ser positivo.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie pozitiv\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u043E\u043B\u043E\u0436\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 kladn\xE1.","sl":"Ta vrednost bi morala biti pozitivna.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB pozitive.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u0430 \u0431\u0438\u0442\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0430.","sr_Latn":"Ova vrednost bi trebala biti pozitivna.","sv":"Detta v\xE4rde b\xF6r vara positivt.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E1A\u0E27\u0E01","tl":"Ang halagang ito ay dapat positibo.","tr":"Bu de\u011Fer pozitif olmal\u0131.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0438\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0645\u062B\u0628\u062A \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat musbat bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y c\xF3 th\u1EC3 th\u1EF1c hi\u1EC7n \u0111\u01B0\u1EE3c.","zh_CN":"\u6570\u503C\u5E94\u4E3A\u6B63\u6570\u3002","zh_TW":"\u6578\u503C\u61C9\u70BA\u6B63\u6578\u3002"}}};var THIS_VALUE_SHOULD_BE_EITHER_POSITIVE_OR_ZERO={"id":"This value should be either positive or zero.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre sup\xE9rieure ou \xE9gale \xE0 z\xE9ro.","af":"Hierdie waarde moet positief of nul wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0625\u0645\u0627 \u0645\u0648\u062C\u0628\u0629 \u0627\u0648 \u0635\u0641\u0631.","az":"Bu d\u0259y\u0259r m\xFCsb\u0259t v\u0259 ya s\u0131f\u0131r olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0434\u0430\u0434\u0430\u0442\u043D\u044B\u043C \u0446\u0456 \u043D\u0443\u043B\u044C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0431\u044A\u0434\u0435 \u043F\u043E\u043B\u043E\u0436\u0438\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","bs":"Ova vrijednost bi trebalo da bude pozitivna ili jednaka nuli.","ca":"Aquest valor ha de ser positiu o zero.","cs":"Tato hodnota mus\xED b\xFDt bu\u010F kladn\xE1 nebo nula.","da":"Denne v\xE6rdi skal v\xE6re enten positiv eller nul.","de":"Diese Zahl sollte entweder positiv oder 0 sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B8\u03B5\u03C4\u03B9\u03BA\u03AE \u03AE \u03BC\u03B7\u03B4\u03B5\u03BD\u03B9\u03BA\u03AE.","en":"This value should be either positive or zero.","es":"Este valor deber\xEDa ser positivo o igual a cero.","et":"See v\xE4\xE4rtus peaks olema kas positiivne v\xF5i null.","eu":"Balio honek positiboa edo zero izan behar luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0645\u062B\u0628\u062A \u06CC\u0627 \u0635\u0641\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla joko positiivinen tai nolla.","gl":"Este valor debe ser positivo ou igual a cero.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D7\u05D9\u05D5\u05D1\u05D9 \u05D0\u05D5 \u05D0\u05E4\u05E1.","hr":"Ova vrijednost treba biti pozitivna ili jednaka nuli.","hu":"Ennek az \xE9rt\xE9knek pozit\xEDvnak vagy null\xE1nak kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0564\u0580\u0561\u056F\u0561\u0576 \u056F\u0561\u0574 \u0566\u0580\u0578\u0575\u0561\u056F\u0561\u0576\u0589","id":"Nilai ini harus positif atau nol.","it":"Questo valore dovrebbe essere positivo oppure zero.","ja":"\u6B63\u306E\u6570\u3001\u307E\u305F\u306F0\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt entweeder positiv oder null sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti teigiama arba lygi nuliui.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt pozit\u012Bvai vai vien\u0101dai ar nulli.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0438\u043B\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0430 \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0442\u044D\u0433 \u044D\u0441\u0432\u044D\u043B \u044D\u0435\u0440\u044D\u0433 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u1015\u1031\u102B\u1004\u103A\u1038 (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u101E\u102F\u100A \u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Denne verdien m\xE5 v\xE6re positiv eller null.","nl":"Deze waarde moet positief of gelijk aan nul zijn.","nn":"Verdien b\xF8r vera anten positiv eller null.","no":"Denne verdien m\xE5 v\xE6re positiv eller null.","pl":"Ta warto\u015B\u0107 powinna by\u0107 dodatnia lub r\xF3wna zero.","pt":"Este valor deve ser superior ou igual a zero.","pt_BR":"Este valor deve ser positivo ou zero.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie pozitiv\u0103 sau zero.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043F\u043E\u043B\u043E\u0436\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u043C \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u044B\u043C \u043D\u0443\u043B\u044E.","sk":"T\xE1to hodnota by mala by\u0165 kladn\xE1 alebo nulov\xE1.","sl":"Ta vrednost bi morala biti pozitivna ali enaka ni\u010D.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB pozitive ose zero.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u0430 \u0431\u0438\u0442\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0430 \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","sr_Latn":"Ova vrednost bi trebala biti pozitivna ili nula.","sv":"Detta v\xE4rde b\xF6r vara antingen positivt eller noll.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E1A\u0E27\u0E01\u0E2B\u0E23\u0E37\u0E2D\u0E04\u0E48\u0E32\u0E28\u0E39\u0E19\u0E22\u0E4C","tl":"Ang halagang ito ay dapat positibo o zero.","tr":"Bu de\u011Fer pozitif veya s\u0131f\u0131r olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0438\u043C \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 \u043D\u0443\u043B\u044E.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u06CC\u0627 \u062A\u0648 \u0645\u062B\u0628\u062A \u06CC\u0627 \u0635\u0641\u0631 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat musbat yoki 0 ga teng bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y c\xF3 th\u1EC3 th\u1EF1c hi\u1EC7n \u0111\u01B0\u1EE3c ho\u1EB7c b\u1EB1ng kh\xF4ng.","zh_CN":"\u6570\u503C\u5E94\u662F\u6B63\u6570\uFF0C\u6216\u4E3A\u96F6\u3002","zh_TW":"\u6578\u503C\u61C9\u662F\u6B63\u6578\uFF0C\u6216\u70BA\u96F6\u3002"}}};var THIS_VALUE_SHOULD_BE_NEGATIVE={"id":"This value should be negative.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre strictement n\xE9gative.","af":"Hierdie waarde moet negatief wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0633\u0627\u0644\u0628\u0629.","az":"Bu d\u0259y\u0259r m\u0259nfi olmald\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0430\u0434\u043C\u043E\u045E\u043D\u044B\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E.","bs":"Ova vrijednost bi trebalo da bude negativna.","ca":"Aquest valor ha de ser negatiu.","cs":"Tato hodnota mus\xED b\xFDt z\xE1porn\xE1.","da":"Denne v\xE6rdi skal v\xE6re negativ.","de":"Diese Zahl sollte negativ sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C1\u03BD\u03B7\u03C4\u03B9\u03BA\u03AE.","en":"This value should be negative.","es":"Este valor deber\xEDa ser negativo.","et":"See v\xE4\xE4rtus peaks olema negatiivne.","eu":"Balio honek negatiboa izan behar luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0645\u0646\u0641\u06CC \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla negatiivinen.","gl":"Este valor debe ser negativo.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05DC\u05D9\u05DC\u05D9.","hr":"Ova vrijednost treba biti negativna.","hu":"Ennek az \xE9rt\xE9knek negat\xEDvnak kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0562\u0561\u0581\u0561\u057D\u0561\u056F\u0561\u0576\u0589","id":"Nilai ini harus negatif.","it":"Questo valore dovrebbe essere negativo.","ja":"\u8CA0\u306E\u6570\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt negativ sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti neigiama.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt negat\u012Bvai.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043D\u0435\u0433\u0430\u0442\u0438\u0432\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0441\u04E9\u0440\u04E9\u0433 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u1014\u102F\u1010\u103A \u1016\u103C\u1005\u103A\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Denne verdien m\xE5 v\xE6re negativ.","nl":"Deze waarde moet negatief zijn.","nn":"Verdien b\xF8r vera negativ.","no":"Denne verdien m\xE5 v\xE6re negativ.","pl":"Ta warto\u015B\u0107 powinna by\u0107 ujemna.","pt":"Este valor deve ser estritamente negativo.","pt_BR":"Este valor deve ser negativo.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie negativ\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u043C.","sk":"T\xE1to hodnota by mala by\u0165 z\xE1porn\xE1.","sl":"Ta vrednost bi morala biti negativna.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB negative.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u0430 \u0431\u0438\u0442\u0438 \u043D\u0435\u0433\u0430\u0442\u0438\u0432\u043D\u0430.","sr_Latn":"Ova vrednost bi trebala biti negativna.","sv":"Detta v\xE4rde b\xF6r vara negativt.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E25\u0E1A","tl":"Ang halagang ito ay dapat negatibo.","tr":"Bu de\u011Fer negatif olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043D\u0435\u0433\u0430\u0442\u0438\u0432\u043D\u0438\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0645\u0646\u0641\u06CC \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat manfiy bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn b\u1ECB t\u1EEB ch\u1ED1i.","zh_CN":"\u6570\u503C\u5E94\u4E3A\u8D1F\u6570\u3002","zh_TW":"\u6578\u503C\u61C9\u70BA\u8CA0\u6578\u3002"}}};var THIS_VALUE_SHOULD_BE_EITHER_NEGATIVE_OR_ZERO={"id":"This value should be either negative or zero.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre inf\xE9rieure ou \xE9gale \xE0 z\xE9ro.","af":"Hierdie waarde moet negatief of nul wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0625\u0645\u0627 \u0633\u0627\u0644\u0628\u0629 \u0627\u0648 \u0635\u0641\u0631.","az":"Bu d\u0259y\u0259r m\u0259nfi v\u0259 ya s\u0131f\u0131r olmald\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0430\u0434\u043C\u043E\u045E\u043D\u044B\u043C \u0446\u0456 \u043D\u0443\u043B\u044C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u043D\u043E \u0447\u0438\u0441\u043B\u043E \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","bs":"Ova vrijednost bi trebalo da bude negativna ili jednaka nuli.","ca":"Aquest valor ha de ser negatiu o zero.","cs":"Tato hodnota mus\xED b\xFDt bu\u010F z\xE1porn\xE1 nebo nula.","da":"Denne v\xE6rdi skal v\xE6re enten negativ eller nul.","de":"Diese Zahl sollte entweder negativ oder 0 sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C1\u03BD\u03B7\u03C4\u03B9\u03BA\u03AE \u03AE \u03BC\u03B7\u03B4\u03B5\u03BD\u03B9\u03BA\u03AE.","en":"This value should be either negative or zero.","es":"Este valor deber\xEDa ser negativo o igual a cero.","et":"See v\xE4\xE4rtus peaks olema kas negatiivne v\xF5i null.","eu":"Balio honek negatiboa edo zero izan behar luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0645\u0646\u0641\u06CC \u06CC\u0627 \u0635\u0641\u0631 \u0628\u0627\u0634\u062F.","fi":"Arvon tulee olla joko negatiivinen tai nolla.","gl":"Este valor debe ser negativo ou igual a cero.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05E9\u05DC\u05D9\u05DC\u05D9 \u05D0\u05D5 \u05D0\u05E4\u05E1.","hr":"Ova vrijednost treba biti negativna ili jednaka nuli.","hu":"Ennek az \xE9rt\xE9knek negat\xEDvnak vagy null\xE1nak kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u0562\u0561\u0581\u0561\u057D\u0561\u056F\u0561\u0576 \u056F\u0561\u0574 \u0566\u0580\u0578\u0575\u0561\u056F\u0561\u0576\u0589","id":"Nilai ini harus negatif atau nol.","it":"Questo valore dovrebbe essere negativo oppure zero.","ja":"\u8CA0\u306E\u6570\u3001\u307E\u305F\u306F0\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert sollt entweeder negativ oder null sinn.","lt":"Reik\u0161m\u0117 turi b\u016Bti neigiama arba lygi nuliui.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt negat\u012Bvai vai vien\u0101dai ar nulli.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0438\u043B\u0438 \u043D\u0435\u0433\u0430\u0442\u0438\u0432\u043D\u0430 \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0441\u04E9\u0440\u04E9\u0433 \u044D\u0441\u0432\u044D\u043B \u0442\u044D\u0433 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u1014\u102F\u1010\u103A (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u101E\u102F\u100A \u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Denne verdien m\xE5 v\xE6re negativ eller null.","nl":"Deze waarde moet negatief of gelijk aan nul zijn.","nn":"Verdien b\xF8r vera negativ eller null.","no":"Denne verdien m\xE5 v\xE6re negativ eller null.","pl":"Ta warto\u015B\u0107 powinna by\u0107 ujemna lub r\xF3wna zero.","pt":"Este valor deve ser inferior ou igual a zero.","pt_BR":"Este valor deve ser negativo ou zero.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie negativ\u0103 sau zero.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043E\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u043C \u0438\u043B\u0438 \u0440\u0430\u0432\u043D\u044B\u043C \u043D\u0443\u043B\u044E.","sk":"T\xE1to hodnota by mala by\u0165 z\xE1porn\xE1 alebo nulov\xE1.","sl":"Ta vrednost bi morala biti negativna ali enaka ni\u010D.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB negative ose zero.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u0430 \u0431\u0438\u0442\u0438 \u043F\u043E\u0437\u0438\u0442\u0438\u0432\u043D\u0430 \u0438\u043B\u0438 \u043D\u0443\u043B\u0430.","sr_Latn":"Ova vrednost bi trebala biti negativna ili nula.","sv":"Detta v\xE4rde b\xF6r vara antingen negativt eller noll.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E04\u0E48\u0E32\u0E25\u0E1A\u0E2B\u0E23\u0E37\u0E2D\u0E04\u0E48\u0E32\u0E28\u0E39\u0E19\u0E22\u0E4C","tl":"Ang halagang ito ay dapat negatibo o zero.","tr":"Bu de\u011Fer, negatif veya s\u0131f\u0131r olmal\u0131d\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043D\u0435\u0433\u0430\u0442\u0438\u0432\u043D\u0438\u043C \u0430\u0431\u043E \u0434\u043E\u0440\u0456\u0432\u043D\u044E\u0432\u0430\u0442\u0438 \u043D\u0443\u043B\u044E.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u06CC\u0627 \u062A\u0648 \u0645\u0646\u0641\u06CC \u06CC\u0627 \u0635\u0641\u0631 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat manfiy yoki 0 ga teng bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn b\u1ECB t\u1EEB ch\u1ED1i ho\u1EB7c b\u1EB1ng kh\xF4ng.","zh_CN":"\u6570\u503C\u5E94\u662F\u8D1F\u6570\uFF0C\u6216\u4E3A\u96F6\u3002","zh_TW":"\u6578\u503C\u61C9\u662F\u8CA0\u6578\uFF0C\u6216\u70BA\u96F6\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_TIMEZONE={"id":"This value is not a valid timezone.","translations":{"validators":{"fr":"Cette valeur n'est pas un fuseau horaire valide.","af":"Hierdie waarde is nie 'n geldige tydsone nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0645\u0646\u0637\u0642\u0629 \u0632\u0645\u0646\u064A\u0629 \u0635\u062D\u064A\u062D\u0629.","az":"Bu d\u0259y\u0259r do\u011Fru bir zaman zola\u011F\u0131 deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C \u0433\u0430\u0434\u0437\u0456\u043D\u043D\u044B\u043C \u043F\u043E\u044F\u0441\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0447\u0430\u0441\u043E\u0432\u0430 \u0437\u043E\u043D\u0430.","bs":"Ova vrijednost nije validna vremenska zona.","ca":"Aquest valor no \xE9s una zona hor\xE0ria v\xE0lida.","cs":"Tato \u010Dasov\xE1 z\xF3na neexistuje.","da":"Denne v\xE6rdi er ikke en gyldig tidszone.","de":"Dieser Wert ist keine g\xFCltige Zeitzone.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B6\u03CE\u03BD\u03B7 \u03CE\u03C1\u03B1\u03C2.","en":"This value is not a valid timezone.","es":"Este valor no es una zona horaria v\xE1lida.","et":"See v\xE4\xE4rtus pole kehtiv ajav\xF6\xF6nd.","eu":"Balio hori ez da baliozko ordu-eremua.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0645\u0646\u0637\u0642\u0647\u200C\u0632\u0645\u0627\u0646\u06CC (timezone) \u0645\u0639\u062A\u0628\u0631 \u0646\u06CC\u0633\u062A.","fi":"Arvo ei ole kelvollinen aikavy\xF6hyke.","gl":"Este valor non \xE9 unha zona horaria v\xE1lida.","he":"\u05D4\u05E2\u05E8\u05DA \u05D0\u05D9\u05E0\u05D5 \u05D0\u05D6\u05D5\u05E8 \u05D6\u05DE\u05DF \u05EA\u05E7\u05D9\u05DF.","hr":"Ova vrijednost nije validna vremenska zona.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes id\u0151z\xF3na.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 \u056A\u0561\u0574\u0561\u0575\u056B\u0576 \u0563\u0578\u057F\u056B \u0579\u0567\u0589","id":"Nilai ini harus merupakan zona waktu yang sah.","it":"Questo valore non \xE8 un fuso orario valido.","ja":"\u6709\u52B9\u306A\u30BF\u30A4\u30E0\u30BE\u30FC\u30F3\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg Z\xE4itzon.","lt":"Reik\u0161m\u0117 n\u0117ra tinkama laiko juosta.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bga laika zona.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u0441\u043A\u0430 \u0437\u043E\u043D\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u04AF\u043D\u044D\u043D \u0437\u04E9\u0432 \u0446\u0430\u0433\u0438\u0439\u043D \u0431\u04AF\u0441 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1021\u1001\u103B\u102D\u1014\u103A\u1007\u102F\u1014\u103A\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Verdien er ikke en gyldig tidssone.","nl":"Deze waarde is geen geldige tijdzone.","nn":"Verdien er ikkje ei gyldig tidssone.","no":"Verdien er ikke en gyldig tidssone.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 stref\u0105 czasow\u0105.","pt":"Este valor n\xE3o \xE9 um fuso hor\xE1rio v\xE1lido.","pt_BR":"Este valor n\xE3o representa um fuso hor\xE1rio v\xE1lido.","ro":"Aceast\u0103 valoare nu este un fus orar valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C \u0447\u0430\u0441\u043E\u0432\u044B\u043C \u043F\u043E\u044F\u0441\u043E\u043C.","sk":"T\xE1to hodnota nie je platn\xE9 \u010Dasov\xE9 p\xE1smo.","sl":"Ta vrednost ni veljaven \u010Dasovni pas.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB zon\xEB e vlefshme kohore.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u0441\u043A\u0430 \u0437\u043E\u043D\u0430.","sr_Latn":"Ova vrednost nije validna vremenska zona.","sv":"Detta v\xE4rde \xE4r inte en giltig tidszon.","th":"\u0E04\u0E48\u0E32\u0E40\u0E02\u0E15\u0E40\u0E27\u0E25\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong timezone.","tr":"Bu de\u011Fer, ge\xE7erli bir saat dilimi de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u0456\u0439\u0441\u043D\u0438\u043C \u0447\u0430\u0441\u043E\u0432\u0438\u043C \u043F\u043E\u044F\u0441\u043E\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0679\u0627\u0626\u0645 \u0632\u0648\u0646 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Qiymat to'g'ri vaqt zonasi emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 m\xFAi gi\u1EDD h\u1EE3p l\u1EC7.","zh_CN":"\u65E0\u6548\u65F6\u533A\u3002","zh_TW":"\u7121\u6548\u6642\u5340\u3002"}}};var THIS_PASSWORD_HAS_BEEN_LEAKED_IN_A_DATA_BREACH_IT_MUST_NOT_BE_USED_PLEASE_USE_ANOTHER_PASSWORD={"id":"This password has been leaked in a data breach, it must not be used. Please use another password.","translations":{"validators":{"fr":"Ce mot de passe a \xE9t\xE9 divulgu\xE9 lors d'une fuite de donn\xE9es, il ne doit plus \xEAtre utilis\xE9. Veuillez utiliser un autre mot de passe.","ar":"\u062A\u0645 \u062A\u0633\u0631\u064A\u0628 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0647\u0630\u0647 \u0641\u064A \u062E\u0631\u0642 \u0644\u0644\u0628\u064A\u0627\u0646\u0627\u062A\u060C \u0648\u064A\u062C\u0628 \u0639\u062F\u0645 \u0627\u0633\u062A\u062E\u062F\u0627\u0645\u0647\u0627. \u064A\u0631\u062C\u064A \u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0623\u062E\u0631\u064A.","az":"Bu parol data o\u011Furlu\u011Funda tap\u0131ld\u0131\u011F\u0131 \xFC\xE7\xFCn i\u015Fl\u0259dilm\u0259m\u0259lidir. Z\u0259hm\u0259t olmasa, ba\u015Fqa parol se\xE7in.","be":"\u0413\u044D\u0442\u044B \u043F\u0430\u0440\u043E\u043B\u044C \u0431\u044B\u045E \u0432\u044B\u043A\u0440\u0430\u0434\u0437\u0435\u043D\u044B \u045E \u0432\u044B\u043D\u0456\u043A\u0443 \u045E\u0437\u043B\u043E\u043C\u0443 \u0434\u0430\u0434\u0437\u0435\u043D\u044B\u0445, \u0442\u0430\u043C\u0443 \u044F\u0433\u043E \u043D\u0435\u043B\u044C\u0433\u0430 \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u0446\u044C. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u0439\u0446\u0435 \u0456\u043D\u0448\u044B \u043F\u0430\u0440\u043E\u043B\u044C.","bg":"\u0422\u0430\u0437\u0438 \u043F\u0430\u0440\u043E\u043B\u0430 \u0435 \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0435\u0442\u0438\u0440\u0430\u043D\u0430, \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0438\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u043D\u0430. \u041C\u043E\u043B\u044F \u0438\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u0439\u0442\u0435 \u0434\u0440\u0443\u0433\u0430 \u043F\u0430\u0440\u043E\u043B\u0430.","bs":"Ova lozinka je procurila u nekom od slu\u010Dajeva kompromitovanja podataka, nemojte je koristiti. Koristite drugu lozinku.","ca":"Aquesta contrasenya s'ha filtrat en cas de violaci\xF3 de dades, no s'ha d'utilitzar. Utilitzeu una altra contrasenya.","cs":"Zadan\xE9 heslo bylo sou\u010D\xE1st\xED \xFAniku dat, tak\u017Ee ho nen\xED mo\u017En\xE9 pou\u017E\xEDt. Pou\u017Eijte pros\xEDm jin\xE9 heslo.","da":"Denne adgangskode er blevet l\xE6kket i et databrud, det m\xE5 ikke bruges. Brug venligst en anden adgangskode.","de":"Dieses Passwort ist Teil eines Datenlecks, es darf nicht verwendet werden.","el":"\u0391\u03C5\u03C4\u03CC\u03C2 \u03BF \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03B4\u03B9\u03B1\u03C1\u03C1\u03B5\u03CD\u03C3\u03B5\u03B9 \u03C3\u03B5 \u03C0\u03B1\u03C1\u03B1\u03B2\u03AF\u03B1\u03C3\u03B7 \u03B4\u03B5\u03B4\u03BF\u03BC\u03AD\u03BD\u03C9\u03BD. \u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BD\u03B1 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03AC\u03BB\u03BB\u03BF \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC.","en":"This password has been leaked in a data breach, it must not be used. Please use another password.","es":"Esta contrase\xF1a no se puede utilizar porque est\xE1 incluida en un listado de contrase\xF1as p\xFAblicas obtenido gracias a fallos de seguridad de otros sitios y aplicaciones. Por favor, utilice otra contrase\xF1a.","et":"See parool on lekkinud andmerikkumise korral, seda ei tohi kasutada. Palun kasutage muud parooli.","eu":"Pasahitz hori ezin da erabili, beste gune eta aplikazio batzuetako segurtasun-akatsei esker lortutako pasahitz publikoen zerrendan sartuta dagoelako. Mesedez, erabili beste pasahitz bat.","fa":"\u0627\u06CC\u0646 \u0631\u0645\u0632\u0639\u0628\u0648\u0631 \u062F\u0631 \u06CC\u06A9 \u0631\u062E\u0646\u0647\u200C\u06CC \u0627\u0637\u0644\u0627\u0639\u0627\u062A\u06CC \u0646\u0634\u062A \u06A9\u0631\u062F\u0647 \u0627\u0633\u062A. \u0644\u0637\u0641\u0627\u064B \u0627\u0632 \u06CC\u06A9 \u0631\u0645\u0632\u0639\u0628\u0648\u0631 \u062F\u06CC\u06AF\u0631 \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06A9\u0646\u06CC\u062F.","fi":"T\xE4m\xE4 salasana on vuotanut tietomurrossa, eik\xE4 sit\xE4 saa k\xE4ytt\xE4\xE4. K\xE4yt\xE4 toista salasanaa.","gl":"Este contrasinal non se pode usar porque est\xE1 inclu\xEDdo nunha lista de contrasinais p\xFAblicos obtidos grazas a fallos de seguridade noutros sitios e aplicaci\xF3ns. Utiliza outro contrasinal.","he":"\u05E1\u05D9\u05E1\u05DE\u05D0 \u05D6\u05D5 \u05D4\u05D5\u05D3\u05DC\u05E4\u05D4 \u05D1\u05D4\u05D3\u05DC\u05E4\u05EA \u05DE\u05D9\u05D3\u05E2, \u05D0\u05E1\u05D5\u05E8 \u05DC\u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05D4. \u05D0\u05E0\u05D0 \u05D4\u05E9\u05EA\u05DE\u05E9 \u05D1\u05E1\u05D9\u05E1\u05DE\u05D4 \u05D0\u05D7\u05E8\u05EA.","hr":"Ova lozinka je procurila u nekom od sigurnosnih propusta, te je potrebno koristiti drugu lozinku.","hu":"Ez a jelsz\xF3 kor\xE1bban egy adatv\xE9delmi incidens sor\xE1n illet\xE9ktelenek kez\xE9be ker\xFClt, \xEDgy nem haszn\xE1lhat\xF3. K\xE9rj\xFCk, haszn\xE1ljon m\xE1sik jelsz\xF3t.","hy":"\u0533\u0561\u0572\u057F\u0576\u0561\u0562\u0561\u057C\u0568 \u0563\u057F\u0576\u057E\u0565\u056C \u0567 \u057F\u057E\u0575\u0561\u056C\u0576\u0565\u0580\u056B \u0561\u0580\u057F\u0561\u0570\u0578\u057D\u0584\u0578\u0582\u0574. \u0561\u0575\u0576 \u0579\u057A\u0565\u057F\u0584 \u0567 \u0585\u0563\u057F\u0561\u0563\u0578\u0580\u056E\u057E\u056B: \u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0585\u0563\u057F\u0561\u0563\u0578\u0580\u056E\u0565\u056C \u0574\u0565\u056F \u0561\u0575\u056C \u0563\u0561\u0572\u057F\u0576\u0561\u0562\u0561\u057C\u0589","id":"Kata sandi ini telah bocor di data breach, harus tidak digunakan kembali. Silahkan gunakan kata sandi yang lain.","it":"Questa password \xE8 trapelata durante una compromissione di dati, non deve essere usata. Si prega di usare una password diversa.","ja":"\u3053\u306E\u30D1\u30B9\u30EF\u30FC\u30C9\u306F\u6F0F\u6D29\u3057\u3066\u3044\u308B\u70BA\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002","lb":"D\xEBst Passwuert war Deel vun engem Dateleck an dierf net benotzt ginn. Benotzt w.e.g. en anert Passwuert .","lt":"Slapta\u017Eodis yra nutek\u0117j\u0119s duomen\u0173 saugumo pa\u017Eeidime, jo naudoti negalima. Pra\u0161ome naudoti kit\u0105 slapta\u017Eod\u012F.","lv":"\u0160\u012B parole tika public\u0113ta datu nopl\u016Bd\u0113, vi\u0146u nedr\u012Bkst izmantot. L\u016Bdzu, izv\u0113lieties citu paroli.","mk":"\u041E\u0432\u0430\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430 \u0435 \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0438\u0442\u0438\u0440\u0430\u043D\u0430 \u0438 \u043D\u0435 \u0441\u043C\u0435\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043A\u043E\u0440\u0438\u0441\u0442\u0435\u043D\u0430. \u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0443\u043F\u043E\u0442\u0440\u0435\u0431\u0435\u0442\u0435 \u0434\u0440\u0443\u0433\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430.","mn":"\u042D\u043D\u044D \u043D\u0443\u0443\u0446 \u04AF\u0433\u0438\u0439\u043D \u043C\u044D\u0434\u044D\u044D\u043B\u044D\u043B \u0430\u043B\u0434\u0430\u0433\u0434\u0441\u0430\u043D \u0431\u0430\u0439\u0445 \u043C\u0430\u0433\u0430\u0434\u043B\u0430\u043B\u0442\u0430\u0439 \u0443\u0447\u0440\u0430\u0430\u0441 \u0434\u0430\u0445\u0438\u043D \u0430\u0448\u0438\u0433\u043B\u0430\u0433\u0434\u0430\u0445 \u0451\u0441\u0433\u04AF\u0439. \u04E8\u04E9\u0440 \u043D\u0443\u0443\u0446 \u04AF\u0433 \u0430\u0448\u0438\u0433\u043B\u0430\u043D\u0430 \u0443\u0443.","my":"\u1024\u1005\u1000\u102C\u1038\u101D\u103E\u1000\u103A \u101E\u100A\u103A \u1012\u1031\u1010\u102C\u1015\u1031\u102B\u1000\u103A\u1000\u103C\u102C\u1038\u1019\u103E\u102F\u1010\u1005\u103A\u1001\u102F\u1016\u103C\u1005\u103A\u1001\u1032\u1037\u101E\u100A\u103A\u104B \u1024\u1005\u1000\u102C\u1038\u1040\u103E\u1000\u103A\u1000\u102D\u102F\u1021\u101E\u102F\u1036\u1038\u1019\u1015\u103C\u102F\u101B\u1015\u102B\u104B  \u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1021\u1001\u103C\u102C\u1038\u1005\u1000\u102C\u1038\u101D\u103E\u1000\u103A\u1000\u102D\u102F\u101E\u102F\u1036\u1038\u1015\u102B\u104B","nb":"Dette passordet er lekket i et datainnbrudd, det m\xE5 ikke tas i bruk. Vennligst bruk et annet passord.","nl":"Dit wachtwoord is gelekt vanwege een data-inbreuk, het moet niet worden gebruikt. Kies een ander wachtwoord.","nn":"Dette passordet har lekt ut ved eit datainnbrot, det f\xE5r ikkje nyttast. Gje opp eit anna passord.","no":"Dette passordet er lekket i et datainnbrudd, det m\xE5 ikke tas i bruk. Vennligst bruk et annet passord.","pl":"To has\u0142o wyciek\u0142o w wyniku naruszenia danych i nie mo\u017Ce by\u0107 u\u017Cyte. Prosz\u0119 u\u017Cy\u0107 innego has\u0142a.","pt":"Esta senha foi divulgada durante uma fuga de dados, n\xE3o deve ser usada de novamente. Por favor usar uma senha outra.","pt_BR":"Esta senha foi divulgada num vazamento de dados e n\xE3o deve ser utilizada. Por favor, utilize outra senha.","ro":"Aceast\u0103 parol\u0103 a fost compromis\u0103 \u0219i nu poate fi utilizat\u0103. V\u0103 rug\u0103m s\u0103 utiliza\u021Bi o alt\u0103 parol\u0103.","ru":"\u0414\u0430\u043D\u043D\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0431\u044B\u043B \u0441\u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0435\u0442\u0438\u0440\u043E\u0432\u0430\u043D \u0432 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0435 \u0443\u0442\u0435\u0447\u043A\u0438 \u0434\u0430\u043D\u043D\u044B\u0445 \u0438 \u043D\u0435 \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u0434\u0440\u0443\u0433\u043E\u0439 \u043F\u0430\u0440\u043E\u043B\u044C.","sk":"Toto heslo uniklo pri naru\u0161en\xED ochrany d\xE1t, nie je mo\u017En\xE9 ho pou\u017Ei\u0165. Pros\xEDm, pou\u017Eite in\xE9 heslo.","sl":"To geslo je u\u0161lo pri kr\u0161itvi varnosti podatkov in ga ne smete uporabljati. Prosimo, uporabite drugo geslo.","sq":"Ky fjal\xEBkalim \xEBsht\xEB zbuluar n\xEB nj\xEB shkelje t\xEB t\xEB dh\xEBnave, nuk duhet t\xEB p\xEBrdoret. Ju lutemi p\xEBrdorni nj\xEB fjal\xEBkalim tjet\xEBr.","sr_Cyrl":"\u041E\u0432\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430 \u0458\u0435 \u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0438\u0442\u043E\u0432\u0430\u043D\u0430 \u043F\u0440\u0438\u043B\u0438\u043A\u043E\u043C \u043F\u0440\u0435\u0442\u0445\u043E\u0434\u043D\u0438\u0445 \u043D\u0430\u043F\u0430\u0434\u0430, \u043D\u0435\u043C\u043E\u0458\u0442\u0435 \u0458\u0435 \u043A\u043E\u0440\u0438\u0441\u0442\u0438\u0442\u0438. \u041A\u043E\u0440\u0438\u0441\u0442\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u0443 \u043B\u043E\u0437\u0438\u043D\u043A\u0443.","sr_Latn":"Ova lozinka je kompromitovana prilikom prethodnih napada, nemojte je koristiti. Koristite drugu lozinku.","sv":"Det h\xE4r l\xF6senordet har l\xE4ckt ut vid ett dataintr\xE5ng, det f\xE5r inte anv\xE4ndas. Anv\xE4nd ett annat l\xF6senord.","th":"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49\u0E40\u0E04\u0E22\u0E23\u0E31\u0E48\u0E27\u0E44\u0E2B\u0E25\u0E2D\u0E2D\u0E01\u0E44\u0E1B\u0E42\u0E14\u0E22\u0E16\u0E39\u0E01\u0E01\u0E32\u0E23\u0E25\u0E30\u0E40\u0E21\u0E34\u0E14\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25 \u0E0B\u0E36\u0E48\u0E07\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E19\u0E33\u0E01\u0E25\u0E31\u0E1A\u0E21\u0E32\u0E43\u0E0A\u0E49 \u0E01\u0E23\u0E38\u0E13\u0E32\u0E43\u0E0A\u0E49\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E2D\u0E37\u0E48\u0E19","tl":"Naikalat ang password na ito sa isang data breach at hindi na dapat gamitin. Mangyaring gumamit ng ibang pang password.","tr":"Bu parola, bir veri ihlali nedeniyle s\u0131zd\u0131r\u0131lm\u0131\u015Ft\u0131r ve kullan\u0131lmamal\u0131d\u0131r. L\xFCtfen ba\u015Fka bir \u015Fifre kullan\u0131n.","uk":"\u0426\u0435\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0431\u0443\u0432 \u0441\u043A\u043E\u043C\u043F\u0440\u043E\u043C\u0435\u0442\u043E\u0432\u0430\u043D\u0438\u0439 \u0432 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0456 \u0432\u0438\u0442\u043E\u043A\u0443 \u0434\u0430\u043D\u0438\u0445 \u0442\u0430 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0432\u0430\u0442\u0438\u0441\u044F. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u043E\u0432\u0443\u0439\u0442\u0435 \u0456\u043D\u0448\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C.","ur":"\u06CC\u06C1 \u067E\u0627\u0633 \u0648\u0631\u0688 \u0688\u06CC\u0679\u0627 \u06A9\u06CC \u062E\u0644\u0627\u0641 \u0648\u0631\u0632\u06CC \u0645\u06CC\u06BA \u0644\u06CC\u06A9 \u06C1\u0648 \u06AF\u06CC\u0627 \u06C1\u06D2\u060C \u0627\u0633\u06D2 \u0627\u0633\u062A\u0639\u0645\u0627\u0644 \u0646\u06C1\u06CC\u06BA \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2\u06D4 \u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u062F\u0648\u0633\u0631\u0627 \u067E\u0627\u0633 \u0648\u0631\u0688 \u0627\u0633\u062A\u0639\u0645\u0627\u0644 \u06A9\u0631\u06CC\u06BA","uz":"Ushbu parol ma'lumotlarning tarqalishi tufayli buzilgan va uni ishlatmaslik kerak. Boshqa paroldan foydalaning.","vi":"M\u1EADt kh\u1EA9u n\xE0y \u0111\xE3 b\u1ECB r\xF2 r\u1EC9 d\u1EEF li\u1EC7u, kh\xF4ng \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng n\u1EEFa. Xin vui l\xF2ng s\u1EED d\u1EE5ng m\u1EADt kh\u1EA9u kh\xE1c.","zh_CN":"\u6B64\u5BC6\u7801\u5DF2\u88AB\u6CC4\u9732\uFF0C\u5207\u52FF\u4F7F\u7528\u3002\u8BF7\u66F4\u6362\u5BC6\u7801\u3002","zh_TW":"\u6B64\u5BC6\u78BC\u5DF2\u88AB\u6CC4\u9732\uFF0C\u5207\u52FF\u4F7F\u7528\u3002\u8ACB\u66F4\u63DB\u5BC6\u78BC\u3002"}}};var THIS_VALUE_SHOULD_BE_BETWEEN_MIN_AND_MAX={"id":"This value should be between {{ min }} and {{ max }}.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre comprise entre {{ min }} et {{ max }}.","af":"Hierdie waarde moet tussen {{ min }} en {{ max }} wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0628\u064A\u0646 {{ min }} \u0648 {{ max }}.","az":"Bu d\u0259y\u0259r {{ min }} v\u0259 {{ max }} aras\u0131nda olmald\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043F\u0430\u043C\u0456\u0436 {{min}} \u0456 {{max}}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0435\u0436\u0434\u0443 {{ min }} \u0438 {{ max }}.","bs":"Ova vrijednosti bi trebala biti izme\u0111u {{ min }} i {{ max }}.","ca":"Aquest valor ha d'estar entre {{ min }} i {{ max }}.","cs":"Hodnota mus\xED b\xFDt mezi {{ min }} a {{ max }}.","da":"V\xE6rdien skal v\xE6re mellem {{ min }} og {{ max }}.","de":"Dieser Wert sollte zwischen {{ min }} und {{ max }} sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03B5\u03C4\u03B1\u03BE\u03CD {{ min }} \u03BA\u03B1\u03B9 {{ max }}.","en":"This value should be between {{ min }} and {{ max }}.","es":"Este valor deber\xEDa estar entre {{ min }} y {{ max }}.","et":"See v\xE4\xE4rtus peaks olema vahemikus {{ min }} kuni {{ max }}.","eu":"Balio honek {{ min }} eta {{ max }} artean egon behar luke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u0628\u06CC\u0646 {{ min }} \u0648 {{ max }} \u0628\u0627\u0634\u062F","fi":"Arvon tulee olla {{ min }} - {{ max }}.","gl":"Este valor debe estar comprendido entre {{ min }} e {{ max }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D1\u05D9\u05DF {{ min }} \u05D5- {{ max }}.","hr":"Ova vrijednost treba biti izme\u0111u {{ min }} i {{ max }}.","hu":"Ennek az \xE9rt\xE9knek {{ min }} \xE9s {{ max }} k\xF6z\xF6tt kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B  {{ min }}-\u056B \u0587 {{ max }}-\u056B \u0574\u056B\u057B\u0587\u0589","id":"Nilai ini harus berada diantara {{ min }} dan {{ max }}.","it":"Questo valore dovrebbe essere compreso tra {{ min }} e {{ max }}.","ja":"{{ min }}\u4EE5\u4E0A{{ max }}\u4EE5\u4E0B\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"De W\xE4ert sollt t\xEBscht {{ min }} a(n) {{ max }} leien.","lt":"\u0160i reik\u0161m\u0117 turi b\u016Bti tarp {{ min }} ir {{ max }}.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt starp {{ min }} un {{ max }}.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0435 \u043F\u043E\u043C\u0435\u0453\u0443 {{ min }} \u0438 {{ max }}.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 {{ min }} -\u0441 {{ max }} \u0445\u043E\u043E\u0440\u043E\u043D\u0434 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A {{ min }} \u1014\u103E\u1004\u103A\u1037 {{ max }} \u1000\u103C\u102C\u1038\u101B\u103E\u102D\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Verdien m\xE5 v\xE6re mellom {{ min }} og {{ max }}.","nl":"Deze waarde moet zich tussen {{ min }} en {{ max }} bevinden.","nn":"Denne verdien b\xF8r liggje mellom {{ min }} og {{ max }}.","no":"Verdien m\xE5 v\xE6re mellom {{ min }} og {{ max }}.","pl":"Ta warto\u015B\u0107 powinna by\u0107 pomi\u0119dzy {{ min }} a {{ max }}.","pt":"Este valor deve situar-se entre {{ min }} e {{ max }}.","pt_BR":"Este valor deve estar entre {{ min }} e {{ max }}.","ro":"Aceast\u0103 valoare trebuie s\u0103 fie \xEEntre {{ min }} \u0219i {{ max }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043C\u0435\u0436\u0434\u0443 {{ min }} \u0438 {{ max }}.","sk":"T\xE1to hodnota by mala by\u0165 medzi {{ min }} a {{ max }}.","sl":"Ta vrednost bi morala biti med {{ min }} in {{ max }}.","sq":"Kjo vler\xEB duhet t\xEB jet\xEB nd\xEBrmjet {{ min }} dhe {{ max }}.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0438\u0437\u043C\u0435\u0452\u0443 {{ min }} \u0438 {{ max }}.","sr_Latn":"Ova vrednost treba da bude izme\u0111u {{ min }} i {{ max }}.","sv":"Detta v\xE4rde b\xF6r ligga mellan {{ min }} och {{ max }}.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E2D\u0E22\u0E39\u0E48\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07 {{ min }} \u0E16\u0E36\u0E07 {{ max }}","tl":"Ang halagang ito ay dapat nasa pagitan ng {{ min }} at {{ max }}.","tr":"Bu de\u011Fer aras\u0131nda olmal\u0131d\u0131r {{ min }} ve {{ max }}.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043C\u0456\u0436 {{ min }} \u0442\u0430 {{ max }}.","ur":"\u06A9\u06D2 \u062F\u0631\u0645\u06CC\u0627\u0646 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ max }} \u0627\u0648\u0631 {{ min }} \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648","uz":"Qiymat {{ min }} va {{ max }} oralig'ida bo'lishi shart.","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn thu\u1ED9c gi\u1EEFa {{ min }} v\xE0 {{ max }}.","zh_CN":"\u8BE5\u6570\u503C\u5E94\u5728 {{ min }} \u548C {{ max }} \u4E4B\u95F4\u3002","zh_TW":"\u8A72\u6578\u503C\u61C9\u5728 {{ min }} \u548C {{ max }} \u4E4B\u9593\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_HOSTNAME={"id":"This value is not a valid hostname.","translations":{"validators":{"fr":"Cette valeur n'est pas un nom d'h\xF4te valide.","af":"Hierdie waarde is nie 'n geldige gasheernaam nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0627\u0633\u0645 \u0645\u0636\u064A\u0641 \u0635\u0627\u0644\u062D.","az":"Bu d\u0259y\u0259r do\u011Fru bir host ad\u0131 deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B\u043C \u0456\u043C\u0435\u043C \u0445\u0430\u0441\u0442\u0430.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D hostname.","bs":"Ova vrijednost nije ispravno ime poslu\u017Eitelja (hostname).","ca":"Aquest valor no \xE9s un nom d'amfitri\xF3 v\xE0lid.","cs":"Tato hodnota nen\xED platn\xFD hostname.","da":"V\xE6rdien er ikke et gyldigt v\xE6rtsnavn.","de":"Dieser Wert ist kein g\xFCltiger Hostname.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C5\u03C0\u03BF\u03B4\u03BF\u03C7\u03AE\u03C2.","en":"This value is not a valid hostname.","es":"Este valor no es un nombre de host v\xE1lido.","et":"See v\xE4\xE4rtus pole korrektne domeeninimi.","eu":"Balio hori ez da ostalari-izen onargarria.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 hostname \u0645\u0639\u062A\u0628\u0631 \u0646\u06CC\u0633\u062A.","fi":"Arvo ei ole kelvollinen laitenimi (hostname).","gl":"Este valor non \xE9 un nome de host v\xE1lido.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05E9\u05DD \u05DE\u05D0\u05E8\u05D7 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije ispravno ime poslu\u017Eitelja (engl. hostname).","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes \xE1llom\xE1sn\xE9v (hosztn\xE9v).","hy":"\u0531\u0575\u057D \u0570\u0578\u057D\u057F\u056B \u0561\u0576\u0578\u0582\u0576\u0568 \u057E\u0561\u057E\u0565\u0580 \u0579\u0567\u0589","id":"Nilai ini bukan merupakan hostname yang sah.","it":"Questo valore non \xE8 un nome di host valido.","ja":"\u6709\u52B9\u306A\u30DB\u30B9\u30C8\u540D\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass kee g\xEBltegen Hostnumm.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkamas svetain\u0117s adresas.","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs t\u012Bmek\u013Ca servera nosaukums.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0438\u043C\u0435 \u0437\u0430 \u043C\u0440\u0435\u0436\u043D\u0438\u043E\u0442 \u0441\u043C\u0435\u0442\u0430\u0447 (hostname).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 hostname \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A hostname \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Denne verdien er ikke et gyldig vertsnavn.","nl":"Deze waarde is geen geldige hostnaam.","nn":"Verdien er ikkje eit gyldig vertsnamn.","no":"Denne verdien er ikke et gyldig vertsnavn.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 nazw\u0105 hosta.","pt":"Este valor n\xE3o \xE9 um nome de host v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um nome de host v\xE1lido.","ro":"Aceast\u0103 valoare nu este un numele gazdei valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C \u0438\u043C\u0435\u043D\u0435\u043C \u0445\u043E\u0441\u0442\u0430.","sk":"T\xE1to hodnota nie je platn\xFD hostname.","sl":"Ta vrednost ni veljavno ime gostitelja.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB em\xEBr i vlefsh\xEBm hosti.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u043E \u0438\u043C\u0435 \u0445\u043E\u0441\u0442\u0430.","sr_Latn":"Ova vrednost nije ispravno ime poslu\u017Eitelja (hostname).","sv":"V\xE4rdet \xE4r inte ett giltigt servernamn.","th":"\u0E04\u0E48\u0E32\u0E42\u0E2E\u0E2A\u0E15\u0E4C\u0E40\u0E19\u0E21\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong hostname.","tr":"Bu de\u011Fer, ge\xE7erli bir ana bilgisayar ad\u0131 de\u011Fil.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u0456\u0439\u0441\u043D\u0438\u043C \u0456\u043C\u0435\u043D\u0435\u043C \u0445\u043E\u0441\u0442\u0430.","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 hostname \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A","uz":"Qiymat to'g'ri xost nomi emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 t\xEAn m\xE1y ch\u1EE7 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u4E3B\u673A\u540D\u79F0\u3002","zh_TW":"\u8A72\u6578\u503C\u4E0D\u662F\u6709\u6548\u7684\u4E3B\u6A5F\u540D\u7A31\u3002"}}};var THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE={"id":"The number of elements in this collection should be a multiple of {{ compared_value }}.","translations":{"validators":{"fr":"Le nombre d'\xE9l\xE9ments de cette collection doit \xEAtre un multiple de {{ compared_value }}.","af":"Die hoeveelheid elemente in hierdie versameling moet 'n meelvoud van {{ compared_value }} wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0639\u062F\u062F \u0627\u0644\u0639\u0646\u0627\u0635\u0631 \u0641\u064A \u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u0645\u0636\u0627\u0639\u0641 {{ compared_value }}.","az":"Bu kolleksiyadak\u0131 elementlerin say\u0131 {{ compared_value }} tam b\xF6l\xFCn\u0259ni olmal\u0131d\u0131r.","be":"\u041A\u043E\u043B\u044C\u043A\u0430\u0441\u0446\u044C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E \u0443 \u0433\u044D\u0442\u0430\u0439 \u043A\u0430\u043B\u0435\u043A\u0446\u044B\u0456 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C {{compared_value}}.","bg":"\u0411\u0440\u043E\u044F\u0442 \u043D\u0430 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438\u0442\u0435 \u0432 \u0442\u0430\u0437\u0438 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u044F \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043A\u0440\u0430\u0442\u0435\u043D \u043D\u0430 {{ compared_value }}.","bs":"Broj elemenata u ovoj kolekciji bi trebalo da bude djeljiv sa {{ compared_value }}.","ca":"El nombre d'elements d'aquesta col\xB7lecci\xF3 ha de ser m\xFAltiple de {{compared_value}}.","cs":"Po\u010Det prvk\u016F v t\xE9to kolekci mus\xED b\xFDt n\xE1sobek {{ compared_value }}.","da":"Antallet af elementer i denne samling skal v\xE6re en multiplikation af {{ compared_value }}.","de":"Die Anzahl an Elementen in dieser Sammlung sollte ein Vielfaches von {{ compared_value }} sein.","el":"\u03A4\u03BF \u03BD\u03BF\u03CD\u03BC\u03B5\u03C1\u03BF \u03C4\u03C9\u03BD \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03C9\u03BD \u03C3\u03B5 \u03B1\u03C5\u03C4\u03AE \u03C4\u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AC\u03C3\u03B9\u03BF \u03C4\u03BF\u03C5 {{ compared_value }}.","en":"The number of elements in this collection should be a multiple of {{ compared_value }}.","es":"El n\xFAmero de elementos en esta colecci\xF3n deber\xEDa ser m\xFAltiplo de {{ compared_value }}.","et":"Selles kogus olevate elementide arv peab olema arvu {{ compared_value }} kordne.","eu":"Bilduma honetako elementu-kopuruak {{ compared_value }}-ren multiploa izan behar luke.","fa":"\u062A\u0639\u062F\u0627\u062F \u0639\u0646\u0627\u0635\u0631 \u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u0636\u0631\u06CC\u0628\u06CC \u0627\u0632 {{ compared_value }} \u0628\u0627\u0634\u062F.","fi":"Ryhm\xE4ss\xE4 olevien elementtien m\xE4\xE4r\xE4n pit\xE4\xE4 olla luvun {{ compared_value }} kerrannainen.","gl":"O n\xFAmero de elementos desta colecci\xF3n deber\xEDa ser m\xFAltiplo de {{compare_value}}.","he":"\u05DE\u05E1\u05E4\u05E8 \u05D4\u05D0\u05DC\u05DE\u05E0\u05D8\u05D9\u05DD \u05D1\u05D0\u05D5\u05E1\u05E3 \u05D6\u05D4 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05DB\u05E4\u05D9\u05DC \u05E9\u05DC {{ compared_value }}.","hr":"Broj elemenata u kolekciji treba biti djeljiv s {{ compared_value }}.","hu":"A gy\u0171jtem\xE9nyben l\xE9v\u0151 elemek sz\xE1m\xE1nak oszthat\xF3nak kell lennie a k\xF6vetkez\u0151vel: {{ compared_value }}.","id":"Angka dari setiap elemen di dalam kumpulan ini harus kelipatan dari {{ compared_value }}.","it":"Il numero di elementi in questa collezione dovrebbe essere un multiplo di {{ compared_value }}.","ja":"\u8981\u7D20\u306E\u6570\u306F{{ compared_value }}\u306E\u500D\u6570\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D'Unzuel un Elementer an d\xEBser Sammlung sollt e multipel vu(n) {{ compared_value }} sinn.","lt":"\u0160io s\u0105ra\u0161o element\u0173 skai\u010Dius tur\u0117t\u0173 b\u016Bti skai\u010Diaus {{ compared_value }} kartotinis.","lv":"Elementu skaitam \u0161aj\u0101 kolekcij\u0101 j\u0101b\u016Bt {{ compared_value }} reizin\u0101jumam.","mk":"\u0411\u0440\u043E\u0458\u043E\u0442 \u043D\u0430 \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438 \u0432\u043E \u043E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u0432\u0435\u045C\u0435\u043A\u0440\u0430\u0442\u0435\u043D \u043E\u0434 {{ compared_value }}.","mn":"\u042D\u043D\u044D\u0445\u04AF\u04AF \u0446\u0443\u0433\u043B\u0443\u0443\u043B\u0433\u0430\u043D \u0434\u0430\u0445\u044C \u044D\u043B\u0435\u043C\u044D\u043D\u0442\u0438\u0439\u043D \u0442\u043E\u043E, {{ compared_value }}-\u043D \u04AF\u0440\u0436\u0432\u044D\u0440 \u0431\u0430\u0439\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024 collection \u1010\u103D\u1004\u103A\u1015\u102B\u1015\u102B\u1040\u1004\u103A\u101E\u1031\u102C elements \u1021\u101B\u1031\u1021\u1010\u103D\u1000\u103A\u101E\u100A\u103A {{ compared_value }} \u104F \u1005\u1010\u1030\u1016\u103C\u1005\u103A\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B ","nb":"Antall elementer i denne samlingen b\xF8r v\xE6re et multiplum av {{ compared_value }}.","nl":"Het aantal elementen van deze collectie moet een veelvoud zijn van {{ compared_value }}.","nn":"Talet p\xE5 element i denne samlinga b\xF8r vera eit multippel av {{ compared_value }}.","no":"Antall elementer i denne samlingen b\xF8r v\xE6re et multiplum av {{ compared_value }}.","pl":"Liczba element\xF3w w tym zbiorze powinna by\u0107 wielokrotno\u015Bci\u0105 {{ compared_value }}.","pt":"O n\xFAmero de elementos desta cole\xE7\xE3o deve ser um m\xFAltiplo de {{ compared_value }}.","pt_BR":"O n\xFAmero de elementos desta cole\xE7\xE3o deve ser um m\xFAltiplo de {{ compared_value }}.","ro":"Num\u0103rul de elemente din aceast\u0103 colec\u021Bie ar trebui s\u0103 fie un multiplu al {{ compared_value }}.","ru":"\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432 \u0432 \u044D\u0442\u043E\u0439 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u0438 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C {{ compared_value }}.","sk":"Po\u010Det prvkov v tejto kolekcii mus\xED by\u0165 n\xE1sobok {{ compared_value }}.","sl":"\u0160tevilo elementov v tej zbirki bi moralo biti mnogokratnik {{ compared_value }}.","sq":"Numri i elementeve n\xEB k\xEBt\xEB koleksion duhet t\xEB jet\xEB nj\xEB shum\xEBfish i {{ compared_value }}.","sr_Cyrl":"\u0411\u0440\u043E\u0458 \u0435\u043B\u0435\u043C\u0435\u043D\u0430\u0442\u0430 \u0443 \u043E\u0432\u043E\u0458 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0438 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u043E \u0434\u0430 \u0431\u0443\u0434\u0435 \u0434\u0435\u0459\u0438\u0432 \u0441\u0430 {{ compared_value }}.","sr_Latn":"Broj elemenata u ovoj kolekciji bi trebalo da bude deljiv sa {{ compared_value }}.","sv":"Antalet element i samlingen ska vara en multipel av {{ compared_value }}.","th":"\u0E08\u0E33\u0E19\u0E27\u0E19\u0E02\u0E2D\u0E07\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E43\u0E19\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E1E\u0E2B\u0E38\u0E04\u0E39\u0E13\u0E02\u0E2D\u0E07 {{ compared_value }}","tl":"Ang bilang ng mga elemento sa koleksyon na ito ay dapat multiple ng {{ compared_value }}.","tr":"Bu gruptaki \xF6\u011Fe say\u0131s\u0131 birden fazla olmal\u0131d\u0131r {{ compared_value }}.","uk":"\u041A\u0456\u043B\u044C\u043A\u0456\u0441\u0442\u044C \u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432 \u0443 \u0446\u0456\u0439 \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u0457 \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u0431\u0443\u0442\u0438 \u043A\u0440\u0430\u0442\u043D\u043E\u044E {{ compared_value }}.","ur":"\u06A9\u06CC \u0636\u0631\u0628 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ compared_value }} \u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06C1 \u0645\u06CC\u06BA \u0639\u0646\u0627\u0635\u0631 \u06A9\u06CC \u062A\u0639\u062F\u0627\u062F","uz":"Ushbu to'plamdagi narsalar soni {{ compared_value }} dan ko'p bo'lishi kerak.","vi":"S\u1ED1 l\u01B0\u1EE3ng c\xE1c ph\u1EA7n t\u1EED trong b\u1ED9 s\u01B0u t\u1EADp n\xE0y n\xEAn l\xE0 b\u1ED9i s\u1ED1 c\u1EE7a {{ compared_value }}.","zh_CN":"\u8BE5\u96C6\u5408\u5185\u7684\u5143\u7D20\u6570\u91CF\u5F97\u662F {{ compared_value }} \u7684\u500D\u6570\u3002","zh_TW":"\u8A72\u96C6\u5408\u5167\u7684\u5143\u7D20\u6578\u91CF\u5F97\u662F {{ compared_value }} \u7684\u500D\u6578\u3002"}}};var THIS_VALUE_SHOULD_SATISFY_AT_LEAST_ONE_OF_THE_FOLLOWING_CONSTRAINTS={"id":"This value should satisfy at least one of the following constraints:","translations":{"validators":{"fr":"Cette valeur doit satisfaire \xE0 au moins une des contraintes suivantes :","af":"Hierdie waarde moet voldoen aan ten minste een van hierdie beperkings:","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0633\u062A\u0648\u0641\u064A \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0648\u0627\u062D\u062F\u0629 \u0645\u0646 \u0627\u0644\u0642\u064A\u0648\u062F \u0627\u0644\u062A\u0627\u0644\u064A\u0629:","az":"Bu d\u0259y\u0259r a\u015Fa\u011F\u0131dak\u0131 m\u0259cburiyy\u0259tl\u0259rd\u0259n birini qar\u015F\u0131lamal\u0131d\u0131r:","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0437\u0430\u0434\u0430\u0432\u0430\u043B\u044C\u043D\u044F\u0446\u044C \u044F\u043A \u043C\u0456\u043D\u0456\u043C\u0443\u043C \u0430\u0434\u043D\u0430\u043C\u0443 \u0437 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u0430\u0431\u043C\u0435\u0436\u0430\u0432\u0430\u043D\u043D\u044F\u045E:","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u043E\u0442\u0433\u043E\u0432\u0430\u0440\u044F \u043D\u0430 \u043F\u043E\u043D\u0435 \u0435\u0434\u043D\u043E \u043E\u0442 \u0441\u043B\u0435\u0434\u043D\u0438\u0442\u0435 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F:","bs":"Ova vrijednost bi trebalo da zadovoljava namjanje jedno od narednih ograni\u010Denja:","ca":"Aquest valor ha de satisfer almenys una de les restriccions seg\xFCents:","cs":"Tato hodnota mus\xED spl\u0148ovat alespo\u0148 jedno z n\xE1sleduj\xEDc\xEDch omezen\xED:","da":"V\xE6rdien skal overholde mindst \xE9n af f\xF8lgende krav:","de":"Dieser Wert sollte eine der folgenden Bedingungen erf\xFCllen:","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B9\u03BA\u03B1\u03BD\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF\u03C5\u03BB\u03AC\u03C7\u03B9\u03C3\u03C4\u03BF\u03BD \u03AD\u03BD\u03B1\u03BD \u03B1\u03C0\u03CC \u03C4\u03BF\u03C5\u03C2 \u03C0\u03B1\u03C1\u03B1\u03BA\u03AC\u03C4\u03C9 \u03C0\u03B5\u03C1\u03B9\u03BF\u03C1\u03B9\u03C3\u03BC\u03BF\u03CD\u03C2: ","en":"This value should satisfy at least one of the following constraints:","es":"Este valor deber\xEDa satisfacer al menos una de las siguientes restricciones:","et":"See v\xE4\xE4rtus peab vastama v\xE4hemalt \xFChele j\xE4rgmistest tingimustest:","eu":"Balio honek, gutxienez, murrizketa hauetako bat bete behar du:","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u062D\u062F\u0627\u0642\u0644 \u06CC\u06A9\u06CC \u0627\u0632 \u0645\u062D\u062F\u0648\u062F\u06CC\u062A\u200C\u0647\u0627\u06CC \u0632\u06CC\u0631 \u0631\u0627 \u0627\u0631\u0636\u0627 \u06A9\u0646\u062F:","fi":"Arvon tulee l\xE4p\xE4ist\xE4 v\xE4hint\xE4\xE4n yksi seuraavista tarkistuksista:","gl":"Este valor debe cumprir polo menos unha das seguintes restrici\xF3ns:","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05E2\u05DE\u05D5\u05D3 \u05DC\u05E4\u05D7\u05D5\u05EA \u05D1\u05D0\u05D7\u05D3 \u05D4\u05EA\u05E0\u05D0\u05D9\u05DD \u05D4\u05D1\u05D0\u05D9\u05DD:","hr":"Ova vrijednost mora zadovoljiti jedan od sljede\u0107ih ograni\u010Denja:","hu":"Ennek az \xE9rt\xE9knek meg kell felelni legal\xE1bb egynek a k\xF6vetkez\u0151 felt\xE9telek k\xF6z\xFCl:","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u0562\u0561\u057E\u0561\u0580\u0561\u0580\u056B \u0570\u0565\u057F\u0587\u0575\u0561\u056C \u057D\u0561\u0570\u0574\u0561\u0576\u0561\u0583\u0561\u056F\u0578\u0582\u0574\u0576\u0565\u0580\u056B\u0581 \u0561\u057C\u0576\u057E\u0561\u0566\u0576 \u0574\u0565\u056F\u0568\u0589","id":"Nilai ini harus memenuhi setidaknya satu dari batasan berikut:","it":"Questo valore dovrebbe soddisfare almeno uno dei vincoli seguenti:","ja":"\u4EE5\u4E0B\u306E\u5236\u7D04\u306E\u3046\u3061\u5C11\u306A\u304F\u3068\u30821\u3064\u3092\u6E80\u305F\u3059\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059:","lb":"D\xEBse W\xE4ert sollt op d'mannst ee vun d\xEBsen Aschr\xE4nkungen erf\xEBllen:","lt":"\u0160i reik\u0161m\u0117 tur\u0117t\u0173 atitikti bent vien\u0105 i\u0161 \u0161i\u0173 nurodym\u0173:","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101iek\u013Caujas vismaz vien\u0101 no sekojo\u0161iem ierobe\u017Eojumiem:","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0437\u0430\u0434\u043E\u0432\u043E\u043B\u0443\u0432\u0430 \u043D\u0430\u0458\u043C\u0430\u043B\u043A\u0443 \u0435\u0434\u043D\u043E \u043E\u0434 \u0441\u043B\u0435\u0434\u043D\u0438\u0442\u0435 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0443\u0432\u0430\u045A\u0430:","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0434\u043E\u043E\u0440\u0445 \u0431\u043E\u043B\u0437\u043E\u043B\u0443\u0443\u0434\u044B\u043D \u044F\u0434\u0430\u0436 \u043D\u044D\u0433\u0438\u0439\u0433 \u0445\u0430\u043D\u0433\u0430\u0445 \u0451\u0441\u0442\u043E\u0439:","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1021\u1031\u102C\u1000\u103A\u1015\u102B\u1000\u1014\u1037\u103A\u101E\u1010\u103A\u1001\u103B\u1000\u103A\u1019\u103B\u102C\u1038\u1021\u1014\u1000\u103A\u1019\u103E\u1021\u1014\u100A\u103A\u1038\u1006\u102F\u1036\u1038\u1010\u1005\u103A\u1001\u102F \u1016\u103C\u100A\u103A\u1037\u1006\u100A\u103A\u1038\u1015\u1031\u1038\u101E\u1004\u103A\u1037\u101E\u100A\u103A\u104B","nb":"Denne verdien skal tilfredsstille minst en av f\xF8lgende begrensninger:","nl":"Deze waarde moet voldoen aan tenminste een van de volgende voorwaarden:","nn":"Verdien burde oppfylla minst ein av f\xF8lgjande avgrensingar:","no":"Denne verdien skal tilfredsstille minst en av f\xF8lgende begrensninger:","pl":"Ta warto\u015B\u0107 powinna spe\u0142nia\u0107 co najmniej jedn\u0105 z nast\u0119puj\u0105cych regu\u0142:","pt":"Este valor deve satisfazer pelo menos uma das seguintes restri\xE7\xF5es :","pt_BR":"Este valor deve satisfazer pelo menos uma das seguintes restri\xE7\xF5es:","ro":"Aceast\u0103 valoare trebuie s\u0103 \xEEndeplineasc\u0103 cel pu\u021Bin una dintre urm\u0103toarele reguli:","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0443\u0434\u043E\u0432\u043B\u0435\u0442\u0432\u043E\u0440\u044F\u0442\u044C \u043A\u0430\u043A \u043C\u0438\u043D\u0438\u043C\u0443\u043C \u043E\u0434\u043D\u043E\u043C\u0443 \u0438\u0437 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0445 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439:","sk":"T\xE1to hodnota mus\xED sp\u013A\u0148a\u0165 aspo\u0148 jedno z nasleduj\xFAcich obmedzen\xED:","sl":"Ta vrednost bi morala zadostiti vsaj eni izmed slede\u010Dih omejitev:","sq":"Kjo vler\xEB duhet t\xEB plot\xEBsoj\xEB t\xEB pakt\xEBn nj\xEBr\xEBn nga kufizimet e m\xEBposhtme:","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u043E \u0434\u0430 \u0437\u0430\u0434\u043E\u0432\u043E\u0459\u0430\u0432\u0430 \u043D\u0430\u0458\u043C\u0430\u045A\u0435 \u0458\u0435\u0434\u043D\u043E \u043E\u0434 \u043D\u0430\u0440\u0435\u0434\u043D\u0438\u0445 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u045A\u0430:","sr_Latn":"Ova vrednost bi trebalo da zadovoljava namjanje jedno od narednih ograni\u010Denja:","sv":"Det h\xE4r v\xE4rdet skall uppfylla minst ett av f\xF6ljande krav:","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E1B\u0E15\u0E32\u0E21\u0E02\u0E49\u0E2D\u0E08\u0E33\u0E01\u0E31\u0E14\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E02\u0E49\u0E2D\u0E08\u0E32\u0E01\u0E02\u0E49\u0E2D\u0E08\u0E33\u0E01\u0E31\u0E14\u0E40\u0E2B\u0E25\u0E48\u0E32\u0E19\u0E35\u0E49:","tl":"Ang halagang ito ay dapat masunod ang kahit na isang sumusunod na batayan.","tr":"Bu de\u011Fer a\u015Fa\u011F\u0131daki k\u0131s\u0131tlamalardan birini kar\u015F\u0131lamal\u0131d\u0131r:","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0437\u0430\u0434\u043E\u0432\u043E\u043B\u044C\u043D\u044F\u0442\u0438 \u0445\u043E\u0447\u0430 \u0431 \u043E\u0434\u043D\u043E\u043C\u0443 \u0437 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0438\u0445 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u044C:","ur":"\u0627\u0633 \u0648\u064A\u0644\u064A\u0648 \u06A9\u0648 \u062F\u0631\u062C \u0630\u06CC\u0644 \u0631\u06A9\u0627\u0648\u0679\u0648\u06BA \u0645\u06CC\u06BA \u0633\u06D2 \u06A9\u0645 \u0627\u0632 \u06A9\u0645 \u0627\u06CC\u06A9 \u06A9\u0648 \u067E\u0648\u0631\u0627 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2","uz":"Qiymat quyidagi cheklovlardan kamida bittasiga javob berishi kerak:","vi":"Gi\xE1 tr\u1ECB n\xE0y n\xEAn th\u1ECFa m\xE3n \xEDt nh\u1EA5t m\u1ED9t trong nh\u1EEFng r\xE0ng bu\u1ED9c sau:","zh_CN":"\u8BE5\u503C\u9700\u7B26\u5408\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\u7EA6\u675F\uFF1A","zh_TW":"\u8A72\u6578\u503C\u9700\u7B26\u5408\u4EE5\u4E0B\u5176\u4E2D\u4E00\u500B\u7D04\u675F\uFF1A"}}};var EACH_ELEMENT_OF_THIS_COLLECTION_SHOULD_SATISFY_ITS_OWN_SET_OF_CONSTRAINTS={"id":"Each element of this collection should satisfy its own set of constraints.","translations":{"validators":{"fr":"Chaque \xE9l\xE9ment de cette collection doit satisfaire \xE0 son propre jeu de contraintes.","af":"Elke element van hierdie versameling moet voldoen aan hulle eie beperkings.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u064A\u0641\u064A \u0643\u0644 \u0639\u0646\u0635\u0631 \u0645\u0646 \u0639\u0646\u0627\u0635\u0631 \u0647\u0630\u0647 \u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u0628\u0645\u062C\u0645\u0648\u0639\u0629 \u0627\u0644\u0642\u064A\u0648\u062F \u0627\u0644\u062E\u0627\u0635\u0629 \u0628\u0647.","az":"Bu kolleksiyadak\u0131 h\u0259r element \xF6z m\u0259cburiyy\u0259tl\u0259rini qar\u015F\u0131lamal\u0131d\u0131r.","be":"\u041A\u043E\u0436\u043D\u044B \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0433\u044D\u0442\u0430\u0439 \u043A\u0430\u043B\u0435\u043A\u0446\u044B\u0456 \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0437\u0430\u0434\u0430\u0432\u0430\u043B\u044C\u043D\u044F\u0446\u044C \u0441\u0432\u0430\u0439\u043C\u0443 \u045E\u043B\u0430\u0441\u043D\u0430\u043C\u0443 \u043D\u0430\u0431\u043E\u0440\u0443 \u0430\u0431\u043C\u0435\u0436\u0430\u0432\u0430\u043D\u043D\u044F\u045E.","bg":"\u0412\u0441\u0435\u043A\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0442 \u0442\u0430\u0437\u0438 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u044F \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u043E\u0442\u0433\u043E\u0432\u0430\u0440\u044F \u043D\u0430 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u0438\u044F \u0441\u0438 \u043D\u0430\u0431\u043E\u0440 \u043E\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F.","bs":"Svaki element ove kolekcije bi trebalo da zadovolji sopstveni skup ograni\u010Denja.","ca":"Cada element d'aquesta col\xB7lecci\xF3 hauria de satisfer el seu propi conjunt de restriccions.","cs":"Ka\u017Ed\xFD prvek v t\xE9to kolekci mus\xED spl\u0148ovat sv\xE1 vlastn\xED omezen\xED.","da":"Hvert element i denne samling skal overholde dens egne krav.","de":"Jedes Element dieser Sammlung sollte seine eigene Menge an Bedingungen erf\xFCllen.","el":"\u039A\u03AC\u03B8\u03B5 \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03BF \u03C3\u03B5 \u03B1\u03C5\u03C4\u03AE \u03C4\u03B7 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B9\u03BA\u03B1\u03BD\u03BF\u03C0\u03BF\u03B9\u03B5\u03AF \u03C4\u03BF \u03B4\u03B9\u03BA\u03CC \u03C4\u03BF\u03C5 \u03C3\u03CD\u03BD\u03BF\u03BB\u03BF \u03C0\u03B5\u03C1\u03B9\u03BF\u03C1\u03B9\u03C3\u03BC\u03CE\u03BD.","en":"Each element of this collection should satisfy its own set of constraints.","es":"Cada elemento de esta colecci\xF3n deber\xEDa satisfacer su propio conjunto de restricciones.","et":"K\xF5ik v\xE4\xE4rtused selles kogus peavad vastama oma tingimustele.","eu":"Bilduma honetako elementu bakoitzak bere murriztapen-multzoa bete behar du.","fa":"\u0647\u0631 \u06CC\u06A9 \u0627\u0632 \u0639\u0646\u0627\u0635\u0631 \u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0628\u0627\u06CC\u062F \u062F\u0633\u062A\u0647 \u0645\u062D\u062F\u0648\u062F\u06CC\u062A\u200C\u0647\u0627\u06CC \u062E\u0648\u062F\u0634 \u0631\u0627 \u0627\u0631\u0636\u0627 \u06A9\u0646\u062F.","fi":"Ryhm\xE4n jokaisen elementin tulee l\xE4p\xE4ist\xE4 omat tarkistuksensa.","gl":"Cada elemento desta colecci\xF3n debe satisfacer o seu propio conxunto de restrici\xF3ns.","he":"\u05DB\u05DC \u05D0\u05DC\u05DE\u05E0\u05D8 \u05D1\u05D0\u05D5\u05E1\u05E3 \u05D6\u05D4 \u05D0\u05DE\u05D5\u05E8 \u05DC\u05E2\u05DE\u05D5\u05D3 \u05D1\u05E7\u05D1\u05D5\u05E6\u05EA \u05D4\u05EA\u05E0\u05D0\u05D9\u05DD \u05E9\u05DC\u05D5.","hr":"Svaki element ove kolekcije mora zadovoljiti vlastiti skup ograni\u010Denja.","hu":"A gy\u0171jtem\xE9ny minden elem\xE9nek meg kell felelni a saj\xE1t felt\xE9teleinek.","hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0574\u0562\u056B \u0575\u0578\u0582\u0580\u0561\u0584\u0561\u0576\u0579\u0575\u0578\u0582\u0580 \u057F\u0561\u0580\u0580 \u057A\u0565\u057F\u0584 \u0567 \u0562\u0561\u057E\u0561\u0580\u0561\u0580\u056B \u056B\u0580 \u057D\u0565\u0583\u0561\u056F\u0561\u0576 \u057D\u0561\u0570\u0574\u0561\u0576\u0561\u0583\u0561\u056F\u0578\u0582\u0574\u0576\u0565\u0580\u0568\u0589","id":"Setiap elemen koleksi ini harus memenuhi batasannya sendiri.","it":"Ciascun elemento di questa collezione dovrebbe soddisfare il suo insieme di vincoli.","ja":"\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306E\u5404\u8981\u7D20\u306F\u3001\u305D\u308C\u305E\u308C\u306E\u5236\u7D04\u3092\u6E80\u305F\u3059\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002","lb":"All Element aus d\xEBser Sammlung sollt seng eegen Aschr\xE4nkungen erf\xEBllen.","lt":"Kiekvienas \u0161io s\u0105ra\u0161o elementas turi atitikti savo nurodym\u0173 rinkin\u012F.","lv":"\u0160\u012Bs kolekcijas katram elementam j\u0101iek\u013Caujas sav\u0101 ierobe\u017Eojumu kop\u0101.","mk":"\u0421\u0435\u043A\u043E\u0458 \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0434 \u043E\u0432\u0430\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0437\u0430\u0434\u043E\u0432\u043E\u043B\u0443\u0432\u0430 \u0441\u043E\u043F\u0441\u0442\u0432\u0435\u043D \u0441\u0435\u0442 \u043D\u0430 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0443\u0432\u0430\u045A\u0430.","mn":"\u042D\u043D\u044D\u0445\u04AF\u04AF \u0446\u0443\u0433\u043B\u0443\u0443\u043B\u0433\u0430\u043D \u0434\u0430\u0445\u044C \u044D\u043B\u0435\u043C\u044D\u043D\u0442\u04AF\u04AF\u0434 \u04E9\u04E9\u0440 \u04E9\u04E9\u0440\u0441\u0434\u0438\u0439\u043D \u0431\u043E\u043B\u0437\u043E\u043B\u0443\u0443\u0434\u0430\u0430 \u0445\u0430\u043D\u0433\u0430\u0445 \u0451\u0441\u0442\u043E\u0439.","my":"\u1024 collection \u104F element \u1010\u1005\u103A\u1001\u102F\u1005\u102E\u101E\u100A\u103A\u104E\u1004\u103A\u1038\u104F\u1000\u102D\u102F\u101A\u103A\u1015\u102D\u102F\u1004\u103A\u1000\u1014\u1037\u103A\u101E\u1010\u103A\u1001\u103B\u1000\u103A\u1019\u103B\u102C\u1038\u1000\u102D\u102F\u1016\u103C\u100A\u1037\u103A\u1006\u100A\u103A\u1038\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Hvert element i denne samlingen skal tilfredsstille sitt eget sett med begrensninger.","nl":"Elk element van deze collectie moet voldoen aan zijn eigen set voorwaarden.","nn":"Kvart element i denne samlinga b\xF8r oppfylla sine eigne avgrensingar.","no":"Hvert element i denne samlingen skal tilfredsstille sitt eget sett med begrensninger.","pl":"Ka\u017Cdy element w tym zbiorze powinien spe\u0142nia\u0107 w\u0142asny zestaw regu\u0142.","pt":"Cada elemento desta cole\xE7\xE3o deve satisfazer o seu pr\xF3prio conjunto de restri\xE7\xF5es.","pt_BR":"Cada elemento desta cole\xE7\xE3o deve satisfazer seu pr\xF3prio grupo de restri\xE7\xF5es.","ro":"Fiecare element din acest set ar trebui s\u0103 \xEEndeplineasc\u0103 propriul set de reguli.","ru":"\u041A\u0430\u0436\u0434\u044B\u0439 \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u044D\u0442\u043E\u0439 \u043A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u0438 \u0434\u043E\u043B\u0436\u0435\u043D \u0443\u0434\u043E\u0432\u043B\u0435\u0442\u0432\u043E\u0440\u044F\u0442\u044C \u0441\u0432\u043E\u0435\u043C\u0443 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u043C\u0443 \u043D\u0430\u0431\u043E\u0440\u0443 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439.","sk":"Ka\u017Ed\xFD prvok v tejto kolekcii mus\xED sp\u013A\u0148a\u0165 svoje vlastn\xE9 obmedzenia.","sl":"Vsak element te zbirke bi moral zadostiti svojemu lastnemu naboru omejitev.","sq":"Secili element i k\xEBtij koleksioni duhet t\xEB p\xEBrmbush\xEB kufizimet e veta.","sr_Cyrl":"\u0421\u0432\u0430\u043A\u0438 \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u043E\u0432\u0435 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0435 \u0431\u0438 \u0442\u0440\u0435\u0431\u0430\u043B\u043E \u0434\u0430 \u0437\u0430\u0434\u043E\u0432\u043E\u0459\u0438 \u0441\u043E\u043F\u0441\u0442\u0432\u0435\u043D\u0438 \u0441\u043A\u0443\u043F \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u045A\u0430.","sr_Latn":"Svaki element ove kolekcije bi trebalo da zadovolji sopstveni skup ograni\u010Denja.","sv":"Varje element i samlingen skall uppfylla sin egen upps\xE4ttning av krav.","th":"\u0E2A\u0E21\u0E32\u0E0A\u0E34\u0E01\u0E41\u0E15\u0E48\u0E25\u0E30\u0E15\u0E31\u0E27\u0E43\u0E19\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E44\u0E1B\u0E15\u0E32\u0E21\u0E02\u0E49\u0E2D\u0E08\u0E33\u0E01\u0E31\u0E14\u0E02\u0E2D\u0E07\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E31\u0E49\u0E19\u0E46","tl":"Ang bawat elemento sa koleksyon na ito ay dapat masunod ang nararapat na batayan.","tr":"Bu gruptaki her \xF6\u011Fe kendi k\u0131s\u0131tlamalar\u0131n\u0131 kar\u015F\u0131lamal\u0131d\u0131r.","uk":"\u041A\u043E\u0436\u0435\u043D \u0435\u043B\u0435\u043C\u0435\u043D\u0442 \u0446\u0456\u0454\u0457 \u043A\u043E\u043B\u0435\u043A\u0446\u0456\u0457 \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0437\u0430\u0434\u043E\u0432\u043E\u043B\u044C\u043D\u044F\u0442\u0438 \u0432\u043B\u0430\u0441\u043D\u043E\u043C\u0443 \u043D\u0430\u0431\u043E\u0440\u0443 \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u044C.","ur":"\u0627\u0633 \u0645\u062C\u0645\u0648\u0639\u06D2 \u06A9\u06D2 \u06C1\u0631 \u0639\u0646\u0635\u0631 \u06A9\u0648 \u0627\u067E\u0646\u06CC \u067E\u0627\u0628\u0646\u062F\u06CC\u0648\u06BA \u06A9\u06D2 \u0633\u06CC\u0679 \u06A9\u0648 \u067E\u0648\u0631\u0627 \u06A9\u0631\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2","uz":"Ushbu to'plamdagi har bir narsa o'ziga xos cheklovlarni qondirishi kerak.","vi":"M\u1ED7i ph\u1EA7n t\u1EED trong b\u1ED9 s\u01B0u t\u1EADp n\xE0y n\xEAn th\u1ECFa m\xE3n nh\u1EEFng r\xE0ng bu\u1ED9c c\u1EE7a n\xF3.","zh_CN":"\u8BE5\u96C6\u5408\u5185\u7684\u6BCF\u4E2A\u5143\u7D20\u9700\u7B26\u5408\u5143\u7D20\u672C\u8EAB\u89C4\u5B9A\u7684\u7EA6\u675F\u3002","zh_TW":"\u8A72\u96C6\u5408\u5167\u7684\u6BCF\u500B\u5143\u7D20\u9700\u7B26\u5408\u5143\u7D20\u672C\u8EAB\u898F\u5B9A\u7684\u7D04\u675F\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_INTERNATIONAL_SECURITIES_IDENTIFICATION_NUMBER_ISIN={"id":"This value is not a valid International Securities Identification Number (ISIN).","translations":{"validators":{"fr":"Cette valeur n'est pas un code international de s\xE9curit\xE9 valide (ISIN).","af":"Hierdie waarde is nie 'n geldige Internasionale veiligheidsidentifikasienommer (ISIN) nie.","ar":" \u0635\u0627\u0644\u062D (ISIN) \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0631\u0642\u0645 \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0623\u0648\u0631\u0627\u0642 \u0627\u0644\u0645\u0627\u0644\u064A\u0629 \u0627\u0644\u062F\u0648\u0644\u064A.","az":"Bu d\u0259y\u0259r do\u011Fru bir Qiym\u0259tli Ka\u011F\u0131z\u0131n Beyn\u0259lxalq \u0130dentifikasiya Kodu (ISIN) deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B\u043C \u043C\u0456\u0436\u043D\u0430\u0440\u043E\u0434\u043D\u044B\u043C \u0456\u0434\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0439\u043D\u044B\u043C \u043D\u0443\u043C\u0430\u0440\u0430\u043C \u043A\u0430\u0448\u0442\u043E\u045E\u043D\u044B\u0445 \u043F\u0430\u043F\u0435\u0440 (ISIN).","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u041C\u0435\u0436\u0434\u0443\u043D\u0430\u0440\u043E\u0434\u0435\u043D \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u0435\u043D \u043D\u043E\u043C\u0435\u0440 \u043D\u0430 \u0446\u0435\u043D\u043D\u0438 \u043A\u043D\u0438\u0436\u0430 (ISIN).","bs":"Ova vrijednost nije ispravna me\u0111unarodna identifikaciona oznaka hartija od vrijednosti (ISIN).","ca":"Aquest valor no \xE9s un n\xFAmero d'identificaci\xF3 de valors internacionals (ISIN) v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE9 mezin\xE1rodn\xED identifika\u010Dn\xED \u010D\xEDslo cenn\xE9ho pap\xEDru (ISIN).","da":"V\xE6rdien er ikke et gyldig International Securities Identification Number (ISIN).","de":"Dieser Wert ist keine g\xFCltige Internationale Wertpapierkennnummer (ISIN).","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF International Securities Identification Number (ISIN).","en":"This value is not a valid International Securities Identification Number (ISIN).","es":"Este valor no es un n\xFAmero de identificaci\xF3n internacional de valores (ISIN) v\xE1lido.","et":"See v\xE4\xE4rtus pole korrektne ISIN-kood.","eu":"Balio hori ez da baliozko baloreen nazioarteko identifikazio-zenbaki bat (ISIN).","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0634\u0645\u0627\u0631\u0647 \u0634\u0646\u0627\u0633\u0627\u06CC\u06CC \u0628\u06CC\u0646\u200C\u0627\u0644\u0645\u0644\u0644\u06CC \u0627\u0648\u0631\u0627\u0642 \u0628\u0647\u0627\u062F\u0627\u0631 (ISIN) \u0645\u0639\u062A\u0628\u0631 \u0646\u06CC\u0633\u062A.","fi":"T\xE4m\xE4 arvo ei ole kelvollinen ISIN-koodi (International Securities Identification Number).","gl":"Este valor non \xE9 un n\xFAmero de identificaci\xF3n de valores internacionais (ISIN) v\xE1lido.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05DE\u05E1\u05E4\u05E8 \u05D6\u05D9\u05D4\u05D5\u05D9 \u05E0\u05D9\u05D9\u05E8\u05D5\u05EA \u05E2\u05E8\u05DA \u05D1\u05D9\u05E0\u05DC\u05D0\u05D5\u05DE\u05D9 \u05EA\u05E7\u05E3 (ISIN).","hr":"Ova vrijednost nije ispravan me\u0111unarodni identifikacijski broj vrijednosnih papira (ISIN).","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes nemzetk\xF6zi \xE9rt\xE9kpap\xEDr-azonos\xEDt\xF3 sz\xE1m (ISIN).","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u0561\u0580\u056A\u0565\u0569\u0572\u0569\u0565\u0580\u056B \u0576\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u0574\u056B\u057B\u0561\u0566\u0563\u0561\u0575\u056B\u0576 \u0570\u0561\u0574\u0561\u0580\u0568 \u057E\u0561\u057E\u0565\u0580 \u0579\u0567(ISIN)\u0589","id":"Nilai ini bukan merupakan International Securities Identification Number (ISIN) yang sah.","it":"Questo valore non \xE8 un codice identificativo internazionale di valori mobiliari (ISIN) valido.","ja":"\u3053\u306E\u5024\u306F\u6709\u52B9\u306A\u56FD\u969B\u8A3C\u5238\u8B58\u5225\u756A\u53F7\uFF08ISIN\uFF09\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg International W\xE4ertpabeiererkennnummer (ISIN).","lt":"\u0160i rei\u0161m\u0117 neatitinka tarptautinio vertybini\u0173 popieri\u0173 identifikavimo numerio formato (ISIN).","lv":"\u0160\u012B v\u0113rt\u012Bba nav der\u012Bgs starptautiskais v\u0113rtspap\u012Bru identifik\u0101cijas numurs (ISIN).","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u0436\u0435\u0447\u043A\u0438 \u043C\u0435\u0453\u0443\u043D\u0430\u0440\u043E\u0434\u0435\u043D \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0441\u043A\u0438 \u0431\u0440\u043E\u0458 \u0437\u0430 \u0445\u0430\u0440\u0442\u0438\u0438 \u043E\u0434 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 (ISIN).","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0437\u04E9\u0432 International Securities Identification Number (ISIN) \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A \u1021\u1015\u103C\u100A\u103A\u1015\u103C\u100A\u103A\u1006\u102D\u102F\u1004\u103A\u101B\u102C\u1004\u103D\u1031\u1001\u103B\u1031\u1038\u101E\u1000\u103A\u101E\u1031\u1001\u1036\u1014\u1036\u1015\u102B\u1010\u103A ,International Securities Identification Number (ISIN) \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Denne verdien er ikke et gyldig International Securities Identification Number (ISIN).","nl":"Deze waarde is geen geldig International Securities Identification Number (ISIN).","nn":"Verdien er ikkje eit gyldig International Securities Identification Number (ISIN).","no":"Denne verdien er ikke et gyldig International Securities Identification Number (ISIN).","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym Mi\u0119dzynarodowym Numerem Identyfikacyjnym Papier\xF3w Warto\u015Bciowych (ISIN).","pt":"Este valor n\xE3o \xE9 um N\xFAmero Internacional de Identifica\xE7\xE3o de Seguran\xE7a (ISIN) v\xE1lido.","pt_BR":"Este valor n\xE3o \xE9 um N\xFAmero de Identifica\xE7\xE3o de T\xEDtulos Internacionais (ISIN) v\xE1lido.","ro":"Aceast\u0103 valoare nu este un num\u0103r interna\u021Bional de identificare (ISIN) valabil.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C \u043C\u0435\u0436\u0434\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u044B\u043C \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u043C \u043D\u043E\u043C\u0435\u0440\u043E\u043C \u0446\u0435\u043D\u043D\u044B\u0445 \u0431\u0443\u043C\u0430\u0433 (ISIN).","sk":"T\xE1to hodnota nie je platn\xE9 medzin\xE1rodn\xE9 ozna\u010Denie cenn\xE9ho papiera (ISIN).","sl":"Ta vrednost ni veljavna mednarodna identifikacijska koda vrednostnih papirjev (ISIN).","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB num\xEBr i vlefsh\xEBm identifikues nd\xEBrkomb\xEBtar i siguris\xEB (ISIN).","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430 \u043C\u0435\u0452\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u0430 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u0430 \u043E\u0437\u043D\u0430\u043A\u0430 \u0445\u0430\u0440\u0442\u0438\u0458\u0430 \u043E\u0434 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 (ISIN).","sr_Latn":"Ova vrednost nije ispravna me\u0111unarodna identifikaciona oznaka hartija od vrednosti (ISIN).","sv":"Det h\xE4r v\xE4rdet \xE4r inte ett giltigt \"International Securities Identification Number\" (ISIN).","th":"\u0E04\u0E48\u0E32\u0E23\u0E2B\u0E31\u0E2A\u0E2B\u0E25\u0E31\u0E01\u0E17\u0E23\u0E31\u0E1E\u0E22\u0E4C\u0E2A\u0E32\u0E01\u0E25 (ISIN) \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong International Securities Identification Number (ISIN).","tr":"Bu de\u011Fer ge\xE7erli bir Uluslararas\u0131 Menkul K\u0131ymetler Kimlik Numaras\u0131 de\u011Fil (ISIN).","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u0456\u0439\u0441\u043D\u0438\u043C \u043C\u0456\u0436\u043D\u0430\u0440\u043E\u0434\u043D\u0438\u043C \u0456\u0434\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0439\u043D\u0438\u043C \u043D\u043E\u043C\u0435\u0440\u043E\u043C \u0446\u0456\u043D\u043D\u0438\u0445 \u043F\u0430\u043F\u0435\u0440\u0456\u0432 (ISIN).","ur":"\u0646\u06C1\u06CC\u06BA \u06C1\u06D2 (ISIN) \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A \u0628\u06CC\u0646 \u0627\u0644\u0627\u0642\u0648\u0627\u0645\u06CC \u0633\u06CC\u06A9\u06CC\u0648\u0631\u0679\u06CC\u0632 \u0634\u0646\u0627\u062E\u062A\u06CC \u0646\u0645\u0628\u0631","uz":"Qiymat Qimmatli qog'ozlarning xalqaro identifikatsiya raqami (ISIN) ga mos emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 m\xE3 s\u1ED1 ch\u1EE9ng kho\xE1n qu\u1ED1c t\u1EBF (ISIN) h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684\u56FD\u9645\u8BC1\u5238\u8BC6\u522B\u7801 \uFF08ISIN\uFF09\u3002","zh_TW":"\u8A72\u6578\u503C\u4E0D\u662F\u6709\u6548\u7684\u570B\u969B\u8B49\u5238\u8B58\u5225\u78BC \uFF08ISIN\uFF09\u3002"}}};var THIS_VALUE_SHOULD_BE_A_VALID_EXPRESSION={"id":"This value should be a valid expression.","translations":{"validators":{"fr":"Cette valeur doit \xEAtre une expression valide.","af":"Hierdie waarde moet 'n geldige uitdrukking wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u062A\u0639\u0628\u064A\u0631\u064B\u0627 \u0635\u0627\u0644\u062D\u064B\u0627.","az":"Bu d\u0259y\u0259r etibarl\u0131 ifad\u0259 olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u043C \u0432\u044B\u0440\u0430\u0437\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u0437\u0440\u0430\u0437.","bs":"Ova vrijednost bi trebala biti va\u017Ee\u0107i izraz.","ca":"Aquest valor hauria de ser una expressi\xF3 v\xE0lida.","cs":"Tato hodnota mus\xED b\xFDt platn\xFD v\xFDraz.","da":"V\xE6rdien skal v\xE6re et gyldigt udtryk.","de":"Dieser Wert sollte eine g\xFCltige Expression sein.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B8\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03AD\u03BA\u03C6\u03C1\u03B1\u03C3\u03B7.","en":"This value should be a valid expression.","es":"Este valor deber\xEDa ser una expresi\xF3n v\xE1lida.","et":"See v\xE4\xE4rtus pole korrektne avaldis.","eu":"Balio hori baliozko adierazpena izan beharko litzateke.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u0628\u0627\u06CC\u062F \u06CC\u06A9 \u0639\u0628\u0627\u0631\u062A \u0645\u0639\u062A\u0628\u0631 \u0628\u0627\u0634\u062F.","fi":"T\xE4m\xE4n arvon on oltava kelvollinen lauseke.","gl":"Este valor debe ser unha expresi\xF3n v\xE1lida.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D1\u05D9\u05D8\u05D5\u05D9 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost mora biti valjani izraz.","hu":"Ennek az \xE9rt\xE9knek \xE9rv\xE9nyes kifejez\xE9snek kell lennie.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057A\u0565\u057F\u0584 \u0567 \u056C\u056B\u0576\u056B \u057E\u0561\u057E\u0565\u0580 \u0561\u0580\u057F\u0561\u0570\u0561\u0575\u057F\u0578\u0582\u0569\u0575\u0578\u0582\u0576:","id":"Nilai ini harus berupa ekspresi yang sah.","it":"Questo valore dovrebbe essere un'espressione valida.","ja":"\u5F0F\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert soll eng g\xEBlteg Expression sinn.","lt":"\u0160i vert\u0117 tur\u0117t\u0173 b\u016Bti teisinga i\u0161rai\u0161ka.","lv":"\u0160ai v\u0113rt\u012Bbai j\u0101b\u016Bt korektai izteiksmei.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u0437\u0440\u0430\u0437.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1005\u1000\u102C\u1038\u101B\u1015\u103A\u1016\u103C\u1005\u103A\u101E\u1004\u1037\u103A\u101E\u100A\u103A\u104B","nb":"Denne verdien skal v\xE6re et gyldig uttrykk.","nl":"Deze waarde moet een geldige expressie zijn.","nn":"Denne verdien skal v\xE6re et gyldig uttrykk.","no":"Denne verdien skal v\xE6re et gyldig uttrykk.","pl":"Ta warto\u015B\u0107 powinna by\u0107 prawid\u0142owym wyra\u017Ceniem.","pt":"Este valor deve ser uma express\xE3o v\xE1lida.","pt_BR":"Este valor deve ser uma express\xE3o v\xE1lida.","ro":"Aceast\u0103 valoare ar trebui s\u0103 fie o expresie valid\u0103.","ru":"\u042D\u0442\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C \u0432\u044B\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u043C.","sk":"T\xE1to hodnota by mala by\u0165 platn\xFDm v\xFDrazom.","sl":"Ta vrednost bi morala biti veljaven izraz.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0443\u0434\u0435 \u0432\u0430\u043B\u0438\u0434\u0430\u043D \u0438\u0437\u0440\u0430\u0437.","sr_Latn":"Ova vrednost treba da bude validan izraz.","sv":"Det h\xE4r v\xE4rdet b\xF6r vara ett giltigt uttryck.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E19\u0E34\u0E1E\u0E08\u0E19\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay dapat wastong ekspresyon.","tr":"Bu de\u011Fer ge\xE7erli bir ifade olmal\u0131d\u0131r.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u0434\u0456\u0439\u0441\u043D\u0438\u043C \u0432\u0438\u0440\u0430\u0437\u043E\u043C.","ur":"\u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0627\u0638\u06C1\u0627\u0631 \u06C1\u0648\u0646\u064A \u0686\u0627\u06C1\u06CC\u06D2","uz":"Ushbu qiymat to'g'ri ifoda bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB n\xE0y ph\u1EA3i l\xE0 m\u1ED9t bi\u1EC3u th\u1EE9c h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u9700\u4E3A\u4E00\u4E2A\u6709\u6548\u7684\u8868\u8FBE\u5F0F\u3002","zh_TW":"\u8A72\u503C\u9700\u70BA\u4E00\u500B\u6709\u6548\u7684\u8868\u9054\u5F0F\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_CSS_COLOR={"id":"This value is not a valid CSS color.","translations":{"validators":{"fr":"Cette valeur n'est pas une couleur CSS valide.","af":"Hierdie waarde is nie 'n geldige CSS-kleur nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0644\u0648\u0646 CSS \u0635\u0627\u0644\u062D\u064B\u0627.","az":"Bu d\u0259y\u0259r etibarl\u0131 CSS r\u0259ngi deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0434\u0430\u043F\u0443\u0448\u0447\u0430\u043B\u044C\u043D\u044B\u043C \u043A\u043E\u043B\u0435\u0440\u0430\u043C CSS.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D CSS \u0446\u0432\u044F\u0442.","bs":"Ova vrijednost nije va\u017Ee\u0107a CSS boja.","ca":"Aquest valor no \xE9s un color CSS v\xE0lid.","cs":"Tato hodnota nen\xED platn\xE1 barva CSS.","da":"V\xE6rdien skal v\xE6re en gyldig CSS farve.","de":"Dieser Wert ist keine g\xFCltige CSS-Farbe.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03C7\u03C1\u03CE\u03BC\u03B1 CSS.","en":"This value is not a valid CSS color.","es":"Este valor no es un color CSS v\xE1lido.","et":"See v\xE4\xE4rtus pole korrektne CSS-i v\xE4rv.","eu":"Balio hori ez da baliozko CSS kolorea.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0631\u0646\u06AF \u0645\u0639\u062A\u0628\u0631 \u062F\u0631 CSS \u0646\u06CC\u0633\u062A.","fi":"T\xE4m\xE4 arvo ei ole kelvollinen CSS-v\xE4rim\xE4\xE4ritys.","gl":"Este valor non \xE9 unha cor CSS v\xE1lida.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05E6\u05D1\u05E2 CSS \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije va\u017Ee\u0107a CSS boja.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes CSS sz\xEDn.","id":"Nilai ini bukan merupakan warna CSS yang sah.","it":"Questo valore non \xE8 un colore CSS valido.","ja":"\u3053\u306E\u5024\u306F\u6709\u52B9\u306ACSS\u30AB\u30E9\u30FC\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg CSS Faarf.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra tinkama CSS spalva.","lv":"\u0160\u012B v\u0113rt\u012Bba nav korekta CSS kr\u0101sa.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 CSS \u0431\u043E\u0458\u0430.","nb":"Denne verdien er ikke en gyldig CSS-farge.","nl":"Deze waarde is geen geldige CSS kleur.","nn":"Denne verdien er ikke en gyldig CSS-farge.","no":"Denne verdien er ikke en gyldig CSS-farge.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym kolorem CSS.","pt":"Este valor n\xE3o \xE9 uma cor de CSS v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma cor CSS v\xE1lida.","ro":"Aceast\u0103 valoare nu este o culoare CSS valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u044B\u043C CSS \u0446\u0432\u0435\u0442\u043E\u043C.","sk":"T\xE1to hodnota nie je platn\xE1 CSS farba.","sl":"Ta vrednost ni veljavna barva CSS.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430 CSS \u0431\u043E\u0458\u0430.","sr_Latn":"Ova vrednost nije ispravna CSS boja.","sv":"Det h\xE4r v\xE4rdet \xE4r inte en giltig CSS-f\xE4rg.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E2A\u0E35 CSS \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang halagang ito ay hindi wastong kulay ng CSS.","tr":"Bu de\u011Fer ge\xE7erli bir CSS rengi de\u011Fil.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u0456\u0439\u0441\u043D\u0438\u043C CSS \u043A\u043E\u043B\u044C\u043E\u0440\u043E\u043C.","ur":"\u0631\u0646\u06AF \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 CSS \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u062F\u0631\u0633\u062A","uz":"Bu qiymat haqiqiy CSS rangi emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 m\xE0u CSS h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u6709\u6548\u7684CSS\u989C\u8272\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u6709\u6548\u7684CSS\u984F\u8272\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_CIDR_NOTATION={"id":"This value is not a valid CIDR notation.","translations":{"validators":{"fr":"Cette valeur n'est pas une notation CIDR valide.","af":"Hierdie waarde is nie 'n geldige CIDR-notasie nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u062A\u062F\u0648\u064A\u0646 CIDR \u0635\u0627\u0644\u062D\u064B\u0627.","az":"Bu d\u0259y\u0259r etibarl\u0131 CIDR notasiyas\u0131 deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u0439 \u043D\u0430\u0442\u0430\u0446\u044B\u044F\u0439 CIDR.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 CIDR \u043D\u043E\u0442\u0430\u0446\u0438\u044F.","bs":"Ova vrijednost nije va\u017Ee\u0107a CIDR notacija.","ca":"Aquest valor no \xE9s una notaci\xF3 CIDR v\xE0lida.","cs":"Tato hodnota nen\xED platn\xE1 notace CIDR.","da":"V\xE6rdien er ikke en gyldig CIDR notation.","de":"Dieser Wert entspricht nicht der CIDR-Notation.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 CIDR \u03C3\u03B7\u03BC\u03B5\u03B9\u03BF\u03B3\u03C1\u03B1\u03C6\u03AF\u03B1.","en":"This value is not a valid CIDR notation.","es":"Este valor no es una notaci\xF3n CIDR v\xE1lida.","et":"See v\xE4\xE4rtus pole korrektne CIDR v\xF5rguaadress.","eu":"Balio hori ez da baliozko CIDR notazioa.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0646\u0645\u0627\u062F \u0645\u0639\u062A\u0628\u0631 \u062F\u0631 CIDR \u0646\u06CC\u0633\u062A.","fi":"T\xE4m\xE4 arvo ei ole kelvollinen CIDR-merkint\xE4.","gl":"Este valor non ten unha notaci\xF3n CIDR v\xE1lida.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05E1\u05D9\u05DE\u05D5\u05DF CIDR \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije valjana CIDR notacija.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes CIDR jel\xF6l\xE9s.","id":"Nilai ini bukan merupakan notasi CIDR yang sah.","it":"Questo valore non \xE8 una notazione CIDR valida.","ja":"\u3053\u306E\u5024\u306F\u6709\u52B9\u306ACIDR\u8868\u8A18\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg CIDR Notatioun.","lt":"\u0160i vert\u0117 n\u0117ra tinkamas CIDR \u017Eym\u0117jimas.","lv":"\u0160\u012B v\u0113rt\u012Bba nav korekts CIDR apz\u012Bm\u0113jums.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 CIDR \u043E\u0437\u043D\u0430\u043A\u0430.","nb":"Denne verdien er ikke en gyldig CIDR-notasjon.","nl":"Deze waarde is geen geldige CIDR notatie.","nn":"Denne verdien er ikke en gyldig CIDR-notasjon.","no":"Denne verdien er ikke en gyldig CIDR-notasjon.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142ow\u0105 notacj\u0105 CIDR.","pt":"Este valor n\xE3o \xE9 uma nota\xE7\xE3o CIDR v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma nota\xE7\xE3o CIDR v\xE1lida.","ro":"Aceast\u0103 valoare nu este o nota\u021Bie CIDR valid\u0103.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043D\u043E\u0442\u0430\u0446\u0438\u0438 CIDR.","sk":"T\xE1to hodnota nie je platnou not\xE1ciou CIDR.","sl":"Ta vrednost ni veljaven zapis CIDR.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430 CIDR \u043D\u043E\u0442\u0430\u0446\u0438\u0458\u0430.","sr_Latn":"Ova vrednost nije ispravna CIDR notacija.","sv":"Det h\xE4r v\xE4rdet \xE4r inte en giltig CIDR-notation.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A CIDR \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tr":"Bu de\u011Fer ge\xE7erli bir CIDR yaz\u0131m\u0131 de\u011Fil.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u0456\u0439\u0441\u043D\u043E\u044E CIDR \u043D\u043E\u0442\u0430\u0446\u0456\u0435\u044E.","ur":"\u0646\u0648\u0679\u06CC\u0634\u0646 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2 CIDR \u06CC\u06C1 \u0648\u064A\u0644\u064A\u0648 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A","uz":"Qiymat CIDR belgisiga mos kelmaydi.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 k\xFD hi\u1EC7u CIDR h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u503C\u4E0D\u662F\u4E00\u4E2A\u6709\u6548\u7684CIDR\u8868\u793A\u3002","zh_TW":"\u8A72\u503C\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684CIDR\u8868\u793A\u3002"}}};var THE_VALUE_OF_THE_NETMASK_SHOULD_BE_BETWEEN_MIN_AND_MAX={"id":"The value of the netmask should be between {{ min }} and {{ max }}.","translations":{"validators":{"fr":"La valeur du masque de r\xE9seau doit \xEAtre comprise entre {{ min }} et {{ max }}.","af":"Die waarde van die netmasker moet tussen {{ min }} en {{ max }} wees.","ar":"\u064A\u062C\u0628 \u0623\u0646 \u062A\u0643\u0648\u0646 \u0642\u064A\u0645\u0629 netmask \u0628\u064A\u0646 {{ min }} \u0648 {{ max }}.","az":"\u015E\u0259b\u0259k\u0259 maskas\u0131n\u0131n d\u0259y\u0259ri {{ min }} v\u0259 {{ max }} aras\u0131nda olmal\u0131d\u0131r.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0441\u0435\u0442\u043A\u0430\u0432\u0430\u0439 \u043C\u0430\u0441\u043A\u0456 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C \u0430\u0434 {{min}} \u0434\u0430 {{max}}.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0430 \u043C\u0440\u0435\u0436\u043E\u0432\u0430\u0442\u0430 \u043C\u0430\u0441\u043A\u0430 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043C\u0435\u0436\u0434\u0443 {{ min }} \u0438 {{ max }}.","bs":"Vrijednost NetMask bi trebala biti izme\u0111u {{min}} i {{max}}.","ca":"El valor de la m\xE0scara de xarxa hauria d'estar entre {{ min }} i {{ max }}.","cs":"Hodnota masky s\xEDt\u011B mus\xED b\xFDt mezi {{ min }} a {{ max }}.","da":"V\xE6rdien af netmasken skal v\xE6re mellem {{ min }} og {{ max }}.","de":"Der Wert der Subnetzmaske sollte zwischen {{ min }} und {{ max }} liegen.","el":"\u0397 \u03C4\u03B9\u03BC\u03AE \u03C4\u03BF\u03C5 netmask \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03BD\u03AC\u03BC\u03B5\u03C3\u03B1 \u03C3\u03B5 {{ min }} \u03BA\u03B1\u03B9 {{ max }}.","en":"The value of the netmask should be between {{ min }} and {{ max }}.","es":"El valor de la m\xE1scara de red deber\xEDa estar entre {{ min }} y {{ max }}.","et":"V\xF5rgumaski v\xE4\xE4rtus peaks olema vahemikus {{ min }} kuni {{ max }}.","eu":"Maskararen balioa {{ min }} eta {{ max }} artekoa izan beharko litzateke.","fa":"\u0645\u0642\u062F\u0627\u0631 \u0645\u0627\u0633\u06A9 \u0634\u0628\u06A9\u0647 (NetMask) \u0628\u0627\u06CC\u062F \u0628\u06CC\u0646 {{ min }} \u0648 {{ max }} \u0628\u0627\u0634\u062F.","fi":"Verkkomaskille annetun arvon tulee olla {{ min }} - {{ max }}.","gl":"O valor da m\xE1scara de rede deber\xEDa estar entre {{ min }} e {{ max }}.","he":"\u05D4\u05E2\u05E8\u05DA \u05E9\u05DC \u05DE\u05E1\u05DB\u05EA \u05D4\u05E8\u05E9\u05EA \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05D1\u05D9\u05DF {{ min }} \u05D5 {{ max }}.","hr":"Vrijednost mre\u017Ene maske trebala bi biti izme\u0111u {{ min }} i {{ max }}.","hu":"Ennek a netmask \xE9rt\xE9knek {{ min }} \xE9s {{ max }} k\xF6z\xF6tt kell lennie.","id":"Nilai dari netmask harus berada diantara {{ min }} dan {{ max }}.","it":"Il valore della netmask dovrebbe essere compreso tra {{ min }} e {{ max }}.","ja":"\u30CD\u30C3\u30C8\u30DE\u30B9\u30AF\u306E\u5024\u306F\u3001{{ min }}\u304B\u3089{{ max }}\u306E\u9593\u306B\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002","lb":"De W\xE4ert vum Netmask soll t\xEBscht {{ min }} a {{ max }} sinn.","lt":"Tinklo kauk\u0117s reik\u0161m\u0117 turi b\u016Bti nuo {{ min }} iki {{ max }}.","lv":"T\u012Bkla maskas (netmask) v\u0113rt\u012Bbai j\u0101b\u016Bt starp {{ min }} un {{ max }}.","mk":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430 \u043D\u0430 \u043C\u0440\u0435\u0436\u043D\u0430\u0442\u0430 \u043C\u0430\u0441\u043A\u0430 (netmask) \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u043E\u043C\u0435\u0453\u0443 {{ min }} \u0438 {{ max }}.","nb":"Verdien p\xE5 nettmasken skal v\xE6re mellom {{ min }} og {{ max }}.","nl":"De waarde van de netmask moet zich tussen {{ min }} en {{ max }} bevinden.","nn":"Verdien av nettmasken skal v\xE6re mellom {{ min }} og {{ max }}.","no":"Verdien p\xE5 nettmasken skal v\xE6re mellom {{ min }} og {{ max }}.","pl":"Warto\u015B\u0107 maski podsieci powinna by\u0107 pomi\u0119dzy {{ min }} i {{ max }}.","pt":"O valor da m\xE1scara de rede deve estar entre {{ min }} e {{ max }}.","pt_BR":"O valor da m\xE1scara de rede deve estar entre {{ min }} e {{ max }}.","ro":"Valoarea netmask-ului trebuie sa fie intre {{ min }} si {{ max }}.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043C\u0430\u0441\u043A\u0438 \u043F\u043E\u0434\u0441\u0435\u0442\u0438 \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043E\u0442 {{ min }} \u0434\u043E {{ max }}.","sk":"Hodnota masky siete by mala by\u0165 medzi {{ min }} a {{ max }}.","sl":"Vrednost omre\u017Ene maske mora biti med {{ min }} in {{ max }}.","sr_Cyrl":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043C\u0440\u0435\u0436\u043D\u0435 \u043C\u0430\u0441\u043A\u0435 \u0442\u0440\u0435\u0431\u0430 \u0431\u0438\u0442\u0438 \u0438\u0437\u043C\u0435\u0452\u0443 {{ min }} \u0438 {{ max }}.","sr_Latn":"Vrednost mre\u017Ene maske treba biti izme\u0111u {{ min }} i {{ max }}.","sv":"V\xE4rdet p\xE5 n\xE4tmasken b\xF6r vara mellan {{ min }} och {{ max }}.","th":"\u0E04\u0E48\u0E32\u0E02\u0E2D\u0E07 netmask \u0E04\u0E27\u0E23\u0E21\u0E35\u0E04\u0E48\u0E32\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07 {{ min }} \u0E16\u0E36\u0E07 {{ max }}","tr":"Netmask'in de\u011Feri {{ min }} ve {{ max }} aras\u0131nda olmald\u0131r.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0432 \u043C\u0435\u0440\u0435\u0436\u0435\u0432\u0456\u0439 \u043C\u0430\u0441\u0446\u0456 \u043C\u0430\u0454 \u0431\u0443\u0442\u0438 \u043C\u0456\u0436 {{ min }} \u0442\u0430 {{ max }}.","ur":"\u06A9\u06D2 \u062F\u0631\u0645\u06CC\u0627\u0646 \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u06CC\u06D2 {{ max }} \u0627\u0648\u0631 {{ min }} \u0646\u06CC\u0679 \u0645\u0627\u0633\u06A9 \u06A9\u06CC \u0648\u064A\u0644\u064A\u0648","uz":"Tarmoq niqobining qiymati {{ min }} va {{ max }} oralig'ida bo'lishi kerak.","vi":"Gi\xE1 tr\u1ECB c\u1EE7a m\u1EB7t n\u1EA1 m\u1EA1ng ph\u1EA3i n\u1EB1m trong kho\u1EA3ng t\u1EEB {{ min }} \u0111\u1EBFn {{ max }}.","zh_CN":"\u7F51\u7EDC\u63A9\u7801\u7684\u503C\u5E94\u5F53\u5728 {{ min }} \u548C {{ max }} \u4E4B\u95F4\u3002","zh_TW":"\u7DB2\u7D61\u63A9\u78BC\u7684\u503C\u61C9\u7576\u5728 {{ min }} \u548C {{ max }} \u4E4B\u9593\u3002"}}};var THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTER_OR_LESS_THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTERS_OR_LESS={"id":"The filename is too long. It should have {{ filename_max_length }} character or less.|The filename is too long. It should have {{ filename_max_length }} characters or less.","translations":{"validators":{"fr":"Le nom du fichier est trop long. Il doit contenir au maximum {{ filename_max_length }} caract\xE8re.|Le nom de fichier est trop long. Il doit contenir au maximum {{ filename_max_length }} caract\xE8res.","ar":"\u0627\u0633\u0645 \u0627\u0644\u0645\u0644\u0641 \u0637\u0648\u064A\u0644 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0623\u0646 \u064A\u062D\u062A\u0648\u064A \u0639\u0644\u0649 {{ filename_max_length }} \u062D\u0631\u0641 \u0623\u0648 \u0623\u0642\u0644.|\u0627\u0633\u0645 \u0627\u0644\u0645\u0644\u0641 \u0637\u0648\u064A\u0644 \u062C\u062F\u0627. \u064A\u062C\u0628 \u0623\u0646 \u064A\u062D\u062A\u0648\u064A \u0639\u0644\u0649 {{ filename_max_length }} \u0623\u062D\u0631\u0641 \u0623\u0648 \u0623\u0642\u0644.","be":"\u041D\u0430\u0437\u0432\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0430\u044F. \u0401\u043D \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u043C\u0435\u0446\u044C {{ filename_max_length }} \u0441\u0456\u043C\u0432\u0430\u043B \u0430\u0431\u043E \u043C\u0435\u043D\u0448.|\u041D\u0430\u0437\u0432\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0430\u044F. \u0401\u043D \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u043C\u0435\u0446\u044C {{ filename_max_length }} \u0441\u0456\u043C\u0432\u0430\u043B\u044B \u0430\u0431\u043E \u043C\u0435\u043D\u0448.|\u041D\u0430\u0437\u0432\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0434\u043E\u045E\u0433\u0430\u044F. \u0401\u043D \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u043C\u0435\u0446\u044C {{ filename_max_length }} \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E \u0430\u0431\u043E \u043C\u0435\u043D\u0448.","bg":"\u0418\u043C\u0435\u0442\u043E \u043D\u0430 \u0444\u0430\u0439\u043B\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0434\u044A\u043B\u0433\u043E. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0435 \u043F\u043E\u0432\u0435\u0447\u0435 \u043E\u0442 {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B.|\u0418\u043C\u0435\u0442\u043E \u043D\u0430 \u0444\u0430\u0439\u043B\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0434\u044A\u043B\u0433\u043E. \u0422\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u043D\u0435 \u043F\u043E\u0432\u0435\u0447\u0435 \u043E\u0442 {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430.","bs":"Ime datoteke je preduga\u010Dko. Trebao bi imati {{ filename_max_length }} znak ili manje.|Naziv fajla je preduga\u010Dak. Trebao bi imati {{ filename_max_length }} znakova ili manje.","ca":"El nom del fitxer \xE9s massa llarg. Ha de tenir {{ filename_max_length }} car\xE0cter o menys.|El nom del fitxer \xE9s massa llarg. Ha de tenir {{ filename_max_length }} car\xE0cters o menys.","cs":"N\xE1zev souboru je p\u0159\xEDli\u0161 dlouh\xFD. M\u011Bl by obsahovat {{ filename_max_length }} znak nebo m\xE9n\u011B.|N\xE1zev souboru je p\u0159\xEDli\u0161 dlouh\xFD. M\u011Bl by obsahovat {{ filename_max_length }} znaky nebo m\xE9n\u011B.|N\xE1zev souboru je p\u0159\xEDli\u0161 dlouh\xFD. M\u011Bl by obsahovat {{ filename_max_length }} znak\u016F nebo m\xE9n\u011B.","da":"Filnavnet er for langt. Det b\xF8r indeholde {{ filename_max_length }} tegn eller mindre.|Filnavnet er for langt. Det b\xF8r indeholde {{ filename_max_length }} tegn eller mindre.","de":"Der Dateiname ist zu lang. Er sollte nicht l\xE4nger als {{ filename_max_length }} Zeichen sein.|Der Dateiname ist zu lang. Er sollte nicht l\xE4nger als {{ filename_max_length }} Zeichen sein.","el":"\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF\u03C5 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF. \u0398\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03AD\u03C9\u03C2 {{ filename_max_length }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B1.|\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF\u03C5 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF. \u0398\u03B1 \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03AD\u03C7\u03B5\u03B9 \u03AD\u03C9\u03C2 {{ filename_max_length }} \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2.","en":"The filename is too long. It should have {{ filename_max_length }} character or less.|The filename is too long. It should have {{ filename_max_length }} characters or less.","es":"El nombre del archivo es demasido largo. Debe tener {{ filename_max_length }} car\xE1cter o menos.|El nombre del archivo es demasido largo. Debe tener {{ filename_max_length }} caracteres o menos.","et":"Failinimi on liiga pikk. See peaks olema {{ filename_max_length }} t\xE4hem\xE4rk v\xF5i v\xE4hem.|Failinimi on liiga pikk. See peaks olema {{ filename_max_length }} t\xE4hem\xE4rki v\xF5i v\xE4hem.","eu":"Fitxategiaren izena luzeegia da. Karaktere {{ filename_max_length }} edo gutxiago izan beharko lituzke.|Fitxategiaren izena luzeegia da. {{ filename_max_length }} karaktere edo gutxiago izan beharko lituzke.","fa":"\u0646\u0627\u0645 \u0641\u0627\u06CC\u0644 \u0637\u0648\u0644\u0627\u0646\u06CC \u0627\u0633\u062A. \u0646\u0627\u0645 \u0641\u0627\u06CC\u0644 \u0628\u0627\u06CC\u062F {{ filename_max_length }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F.|\u0646\u0627\u0645 \u0641\u0627\u06CC\u0644 \u0637\u0648\u0644\u0627\u0646\u06CC \u0627\u0633\u062A. \u0646\u0627\u0645 \u0641\u0627\u06CC\u0644 \u0628\u0627\u06CC\u062F {{ filename_max_length }} \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631 \u06CC\u0627 \u06A9\u0645\u062A\u0631 \u0628\u0627\u0634\u062F.","fi":"Tiedostonimi on liian pitk\xE4. Nimi saa olla enint\xE4\xE4n yhden merkin pituinen.|Tiedostonimi on liian pitk\xE4. Nimi saa olla enint\xE4\xE4n {{ filename_max_length }} merkin pituinen.","hr":"Naziv datoteke je predug. Treba imati {{ filename_max_length }} znak ili manje.|Naziv datoteke je predug. Treba imati {{ filename_max_length }} znaka ili manje.|Naziv datoteke je predug. Treba imati {{ filename_max_length }} znakova ili manje.","hu":"A f\xE1jln\xE9v t\xFAl hossz\xFA. {{ filename_max_length }} karakter vagy kevesebb legyen.|A f\xE1jln\xE9v t\xFAl hossz\xFA. {{ filename_max_length }} karakter vagy kevesebb legyen.","id":"Nama file terlalu panjang. Harusnya {{ filename_max_length }} karakter atau kurang.","it":"Il nome del file \xE8 troppo lungo. Dovrebbe avere {{ filename_max_length }} carattere o meno.|Il nome del file \xE8 troppo lungo. Dovrebbe avere {{ filename_max_length }} caratteri o meno.","ja":"\u30D5\u30A1\u30A4\u30EB\u540D\u304C\u9577\u3059\u304E\u307E\u3059\u3002\u30D5\u30A1\u30A4\u30EB\u540D\u306E\u9577\u3055\u306F{{ filename_max_length }}\u6587\u5B57\u4EE5\u4E0B\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002","lb":"De Dateinimm ass ze laang. Et sollt {{ filename_max_length }} Zeechen oder manner hunn.|De Dateinimm ass ze laang. Et sollt {{ filename_max_length }} Zeechen oder manner hunn.","lt":"Failo pavadinimas per ilgas. Jame tur\u0117t\u0173 b\u016Bti {{ filename_max_length }} simbolis arba ma\u017Eiau.|Failo pavadinimas per ilgas. Jame tur\u0117t\u0173 b\u016Bti {{ filename_max_length }} simboli\u0173 arba ma\u017Eiau.","lv":"Faila nosaukums ir p\u0101r\u0101k gar\u0161. Tas var b\u016Bt {{ filename_max_length }} rakstz\u012Bme vai \u012Bs\u0101ks.|Faila nosaukums ir p\u0101r\u0101k gar\u0161. Tas var b\u016Bt {{ filename_max_length }} rakstz\u012Bmes vai \u012Bs\u0101ks.","mk":"\u0418\u043C\u0435\u0442\u043E \u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433\u043E. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ filename_max_length }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043C\u0430 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.|\u0418\u043C\u0435\u0442\u043E \u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0435 \u043F\u0440\u0435\u0434\u043E\u043B\u0433\u043E. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ filename_max_length }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438 \u0438\u043B\u0438 \u043F\u043E\u043C\u0430\u043B\u043A\u0443.","nl":"De bestandsnaam is te lang. Het moet {{ filename_max_length }} karakter of minder zijn.","pl":"Nazwa pliku jest za d\u0142uga. Powinna mie\u0107 {{ filename_max_length }} znak lub mniej.|Nazwa pliku jest za d\u0142uga. Powinna mie\u0107 {{ filename_max_length }} znak\xF3w lub mniej.","pt":"O nome do arquivo \xE9 muito grande. Deveria ter {{ filename_max_length }} caractere ou menos.|O nome do arquivo \xE9 muito grande. Deveria ter {{ filename_max_length }} caracteres ou menos.","pt_BR":"O nome do arquivo \xE9 muito longo. Deve ter {{ filename_max_length }} caractere ou menos.|O nome do arquivo \xE9 muito longo. Deve ter {{ filename_max_length }} caracteres ou menos.","ro":"Denumirea fi\u0219ierului este prea lung\u0103. Ea trebuie s\u0103 con\u021Bin\u0103 {{ filename_max_length }} caractere sau mai pu\u021Bine.|Denumirea fi\u0219ierului este prea lung\u0103. Ea trebuie s\u0103 con\u021Bin\u0103 {{ filename_max_length }} caractere sau mai pu\u021Bine.","ru":"\u0418\u043C\u044F \u0444\u0430\u0439\u043B\u0430 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u041E\u043D\u043E \u0434\u043E\u043B\u0436\u043D\u043E \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u0418\u043C\u044F \u0444\u0430\u0439\u043B\u0430 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u041E\u043D\u043E \u0434\u043E\u043B\u0436\u043D\u043E \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B\u0430 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.|\u0418\u043C\u044F \u0444\u0430\u0439\u043B\u0430 \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0434\u043B\u0438\u043D\u043D\u043E\u0435. \u041E\u043D\u043E \u0434\u043E\u043B\u0436\u043D\u043E \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432 \u0438\u043B\u0438 \u043C\u0435\u043D\u044C\u0448\u0435.","sl":"Ime datoteke je predolgo. Imeti mora {{ filename_max_length }} znak ali manj.|Ime datoteke je predolgo. Imeti mora {{ filename_max_length }} znaka ali manj.|Ime datoteke je predolgo. Imeti mora {{ filename_max_length }} znake ali manj.|Ime datoteke je predolgo. Imeti mora {{ filename_max_length }} znakov ali manj.","sr_Cyrl":"\u041D\u0430\u0437\u0438\u0432 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435 \u0458\u0435 \u0441\u0443\u0432\u0438\u0448\u0435 \u0434\u0443\u0433\u0430\u0447\u0430\u043A. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ filename_max_length }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440 \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.|\u041D\u0430\u0437\u0438\u0432 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435 \u0458\u0435 \u0441\u0443\u0432\u0438\u0448\u0435 \u0434\u0443\u0433\u0430\u0447\u0430\u043A. \u0422\u0440\u0435\u0431\u0430 \u0434\u0430 \u0438\u043C\u0430 {{ filename_max_length }} \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u0438\u043B\u0438 \u043C\u0430\u045A\u0435.","sr_Latn":"Naziv datoteke je suvi\u0161e duga\u010Dak. Treba da ima {{ filename_max_length }} karakter ili manje.|Naziv datoteke je suvi\u0161e duga\u010Dak. Treba da ima {{ filename_max_length }} karaktera ili manje.","sv":"Filnamnet \xE4r f\xF6r l\xE5ngt. Det m\xE5ste vara {{ filename_max_length }} tecken eller f\xE4rre.|Filnamnet \xE4r f\xF6r l\xE5ngt. Det m\xE5ste vara {{ filename_max_length }} tecken eller f\xE4rre.","th":"\u0E0A\u0E37\u0E48\u0E2D\u0E44\u0E1F\u0E25\u0E4C\u0E22\u0E32\u0E27\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E04\u0E27\u0E23\u0E08\u0E30\u0E21\u0E35\u0E41\u0E04\u0E48 {{ filename_max_length }} \u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E2B\u0E23\u0E37\u0E2D\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19","tr":"Dosya ad\u0131 \xE7ok uzun. {{ filename_max_length }} karakter veya daha az olmal\u0131d\u0131r.","uk":"\u041D\u0430\u0437\u0432\u0430 \u0444\u0430\u0439\u043B\u0443 \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0430. \u0412\u043E\u043D\u0430 \u043C\u0430\u0454 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432 \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.|\u041D\u0430\u0437\u0432\u0430 \u0444\u0430\u0439\u043B\u0443 \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0434\u043E\u0432\u0433\u0430. \u0412\u043E\u043D\u0430 \u043C\u0430\u0454 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 {{ filename_max_length }} \u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432 \u0430\u0431\u043E \u043C\u0435\u043D\u0448\u0435.","uz":"Fayl nomi juda uzun. U {{ filename_max_length }} belgidan iborat bo\u02BBlishi kerak.|Fayl nomi juda uzun. U {{ filename_max_length }} ta belgidan iborat bo\u02BBlishi kerak.","vi":"T\xEAn t\u1EC7p qu\xE1 d\xE0i. Ph\u1EA3i b\u1EB1ng {{ filename_max_length }} k\xFD t\u1EF1 ho\u1EB7c \xEDt h\u01A1n.|T\xEAn t\u1EC7p qu\xE1 d\xE0i. Ph\u1EA3i b\u1EB1ng {{ filename_max_length }} k\xFD t\u1EF1 ho\u1EB7c \xEDt h\u01A1n.","zh_CN":"\u8BE5\u6587\u4EF6\u540D\u8FC7\u957F\uFF0C\u6700\u957F\u4E0D\u5E94\u8D85\u8FC7{{ filename_max_length }} \u4E2A\u5B57\u7B26\u3002","zh_TW":"\u8A72\u6A94\u540D\u9577\u5EA6\u592A\u9577\uFF0C\u9577\u5EA6\u4E0D\u53EF\u8D85\u904E {{ filename_max_length }} \u500B\u5B57\u5143\u3002"}}};var THE_PASSWORD_STRENGTH_IS_TOO_LOW_PLEASE_USE_A_STRONGER_PASSWORD={"id":"The password strength is too low. Please use a stronger password.","translations":{"validators":{"fr":"La force du mot de passe est trop faible. Veuillez utiliser un mot de passe plus fort.","ar":"\u0642\u0648\u0629 \u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0645\u0646\u062E\u0641\u0636\u0629 \u0644\u0644\u063A\u0627\u064A\u0629. \u064A\u0631\u062C\u0649 \u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0623\u0642\u0648\u0649.","be":"\u041D\u0430\u0434\u0437\u0435\u0439\u043D\u0430\u0441\u0446\u044C \u043F\u0430\u0440\u043E\u043B\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u043D\u0456\u0437\u043A\u0430\u044F. \u0412\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u043E\u045E\u0432\u0430\u0439\u0446\u0435 \u0431\u043E\u043B\u044C\u0448 \u043D\u0430\u0434\u0437\u0435\u0439\u043D\u044B \u043F\u0430\u0440\u043E\u043B\u044C.","bg":"\u0421\u043B\u043E\u0436\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0430 \u043F\u0430\u0440\u043E\u043B\u0430\u0442\u0430 \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u043C\u0430\u043B\u043A\u0430. \u041C\u043E\u043B\u044F \u0438\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u0439\u0442\u0435 \u043F\u043E-\u0441\u043B\u043E\u0436\u043D\u0430 \u043F\u0430\u0440\u043E\u043B\u0430.","bs":"Ja\u010Dina lozinke je preniska. Molimo koristite ja\u010Du lozinku.","ca":"La contrasenya \xE9s massa feble. Si us plau, feu servir una contrasenya m\xE9s segura.","cs":"S\xEDla hesla je p\u0159\xEDli\u0161 n\xEDzk\xE1. Pou\u017Eijte siln\u011Bj\u0161\xED heslo, pros\xEDm.","da":"Kodeordets styrke er for lav. Du bedes indtaste et st\xE6rkere kodeord.","de":"Das Passwort ist zu schwach.","el":"\u0397 \u03B9\u03C3\u03C7\u03CD\u03C2 \u03C4\u03BF\u03C5 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03C7\u03B1\u03BC\u03B7\u03BB\u03AE. \u03A7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03AE\u03C3\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03B9\u03C3\u03C7\u03C5\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7\u03C2.","en":"The password strength is too low. Please use a stronger password.","es":"La seguridad de la contrase\xF1a es demasiado baja. Por favor, utilice una contrase\xF1a m\xE1s segura.","et":"Parooli tugevus on liiga madal. Palun kasuta tugevamat parooli.","eu":"Pasahitzaren sendotasuna baxuegia da. Mesedez, erabili pasahitz seguruagoa.","fa":"\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0636\u0639\u06CC\u0641 \u0627\u0633\u062A. \u0644\u0637\u0641\u0627 \u0627\u0632 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0642\u0648\u06CC\u200C\u062A\u0631\u06CC \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06A9\u0646\u06CC\u062F.","fi":"Salasana on liian heikko. Valitse vahvempi salasana.","hr":"Ja\u010Dina lozinke je preniska. Molim koristite ja\u010Du lozinku.","hu":"A jelsz\xF3 t\xFAl egyszer\u0171. K\xE9rj\xFCk, haszn\xE1ljon egy bonyolultabb jelsz\xF3t.","id":"Kata sandi terlalu lemah. Harap gunakan kata sandi yang lebih kuat.","it":"La password non \xE8 abbastanza sicura. Per favore, utilizza una password pi\xF9 robusta.","ja":"\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u5F37\u5EA6\u304C\u5F31\u3059\u304E\u307E\u3059\u3002\u3088\u308A\u5F37\u3044\u30D1\u30B9\u30EF\u30FC\u30C9\u3092\u4F7F\u7528\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"D'Staarf vum Passwuert ass ze schwaach. Benotzt w. e. g. e st\xE4erker Passwuert.","lt":"Slapta\u017Eodis per silpnas. Naudokite stipresn\u012F slapta\u017Eod\u012F.","lv":"Paroles stiprums ir p\u0101r\u0101k zems. L\u016Bdzu, izmantojiet sp\u0113c\u012Bg\u0101ku paroli.","mk":"\u041E\u0432\u0430\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430 \u0435 \u043F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0435\u0434\u043D\u043E\u0441\u0442\u0430\u0432\u043D\u0430. \u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043A\u043E\u0440\u0438\u0441\u0442\u0435\u0442\u0435 \u043F\u043E\u0441\u0438\u043B\u043D\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430.","nl":"De wachtwoordsterkte is te laag. Gebruik alstublieft een sterker wachtwoord.","pl":"Si\u0142a has\u0142a jest zbyt niska. U\u017Cyj mocniejszego has\u0142a.","pt":"A for\xE7a da senha \xE9 muito baixa. Por favor utilize uma senha mais forte.","pt_BR":"A for\xE7a da senha \xE9 muito baixa. Por favor, use uma senha mais forte.","ro":"Complexitatea parolei este prea mic\u0103. V\u0103 rug\u0103m s\u0103 folosi\u021Bi o parol\u0103 mai puternic\u0103.","ru":"\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043D\u0438\u0437\u043A\u0430\u044F \u043D\u0430\u0434\u0451\u0436\u043D\u043E\u0441\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044F. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u0431\u043E\u043B\u0435\u0435 \u043D\u0430\u0434\u0451\u0436\u043D\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C.","sl":"Mo\u010D gesla je prenizka. Uporabite mo\u010Dnej\u0161e geslo.","sr_Cyrl":"\u041B\u043E\u0437\u0438\u043D\u043A\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0432\u043E\u0459\u043D\u043E \u0458\u0430\u043A\u0430. \u041C\u043E\u043B\u0438\u043C\u043E \u043A\u043E\u0440\u0438\u0441\u0442\u0438\u0442\u0435 \u0458\u0430\u0447\u0443 \u043B\u043E\u0437\u0438\u043D\u043A\u0443.","sr_Latn":"Lozinka nije dovoljno jaka. Molimo koristite ja\u010Du lozinku.","sv":"Detta l\xF6senord \xE4r f\xF6r svagt. Anv\xE4nd ett starkare l\xF6senord.","th":"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E1B\u0E25\u0E2D\u0E14\u0E20\u0E31\u0E22\u0E15\u0E48\u0E33 \u0E01\u0E23\u0E38\u0E13\u0E32\u0E43\u0E0A\u0E49\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E17\u0E35\u0E48\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E1B\u0E25\u0E2D\u0E14\u0E20\u0E31\u0E22\u0E2A\u0E39\u0E07","tr":"\u015Eifre g\xFCc\xFC \xE7ok d\xFC\u015F\xFCk. L\xFCtfen daha g\xFC\xE7l\xFC bir \u015Fifre kullan\u0131n.","uk":"\u041D\u0430\u0434\u0456\u0439\u043D\u0456\u0441\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044F \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u043D\u0438\u0437\u044C\u043A\u0430. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u0442\u0432\u043E\u0440\u0456\u0442\u044C \u0441\u043A\u043B\u0430\u0434\u043D\u0456\u0448\u0438\u0439 \u043F\u0430\u0440\u043E\u043B\u044C.","uz":"Parol kuchi juda past. Iltimos, kuchliroq paroldan foydalaning.","vi":"S\u1EE9c m\u1EA1nh m\u1EADt kh\u1EA9u qu\xE1 th\u1EA5p. Vui l\xF2ng s\u1EED d\u1EE5ng m\u1EADt kh\u1EA9u m\u1EA1nh h\u01A1n.","zh_CN":"\u8BE5\u5BC6\u7801\u5F3A\u5EA6\u592A\u4F4E\u3002\u8BF7\u4F7F\u7528\u66F4\u590D\u6742\u7684\u5BC6\u7801\u3002","zh_TW":"\u8A72\u5BC6\u78BC\u5F37\u5EA6\u592A\u4F4E\uFF0C\u8ACB\u4F7F\u7528\u66F4\u9AD8\u5F37\u5EA6\u7684\u5BC6\u78BC\u3002"}}};var THIS_VALUE_CONTAINS_CHARACTERS_THAT_ARE_NOT_ALLOWED_BY_THE_CURRENT_RESTRICTION_LEVEL={"id":"This value contains characters that are not allowed by the current restriction-level.","translations":{"validators":{"fr":"Cette valeur contient des caract\xE8res qui ne sont pas autoris\xE9s par le niveau de restriction actuel.","ar":"\u062A\u062D\u062A\u0648\u064A \u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0639\u0644\u0649 \u0623\u062D\u0631\u0641 \u063A\u064A\u0631 \u0645\u0633\u0645\u0648\u062D \u0628\u0647\u0627 \u0628\u0648\u0627\u0633\u0637\u0629 \u0645\u0633\u062A\u0648\u0649 \u0627\u0644\u062A\u0642\u064A\u064A\u062F \u0627\u0644\u062D\u0627\u0644\u064A.","be":"\u0413\u044D\u0442\u0430 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0437\u043C\u044F\u0448\u0447\u0430\u0435 \u0441\u0456\u043C\u0432\u0430\u043B\u044B, \u044F\u043A\u0456\u044F \u043D\u0435 \u0434\u0430\u0437\u0432\u043E\u043B\u0435\u043D\u044B \u0446\u044F\u043F\u0435\u0440\u0430\u0448\u043D\u0456\u043C \u0443\u0437\u0440\u043E\u045E\u043D\u0435\u043C \u0430\u0431\u043C\u0435\u0436\u0430\u0432\u0430\u043D\u043D\u044F\u045E.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u0441\u0438\u043C\u0432\u043E\u043B\u0438, \u043A\u043E\u0438\u0442\u043E \u043D\u0435 \u0441\u0430 \u043F\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438 \u043E\u0442 \u0442\u0435\u043A\u0443\u0449\u043E\u0442\u043E \u043D\u0438\u0432\u043E \u043D\u0430 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0435.","bs":"Ova vrijednost sadr\u017Ei znakove koji nisu dozvoljeni trenutnim nivoom ograni\u010Denja.","ca":"Aquest valor cont\xE9 car\xE0cters que no estan permisos segons el nivell de restricci\xF3 actual.","cs":"Tato hodnota obsahuje znaky, kter\xE9 nejsou povoleny aktu\xE1ln\xED \xFArovn\xED omezen\xED.","da":"Denne v\xE6rdi indeholder tegn, som ikke er tilladt med det nuv\xE6rende restriktionsniveau.","de":"Der Wert enth\xE4lt Zeichen, die auf der aktuellen Einschr\xE4nkungsstufe nicht erlaubt sind.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03B5\u03C2 \u03C0\u03BF\u03C5 \u03B4\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03BF\u03BD\u03C4\u03B1\u03B9 \u03B1\u03C0\u03CC \u03C4\u03BF \u03C4\u03C1\u03AD\u03C7\u03BF\u03BD \u03B5\u03C0\u03AF\u03C0\u03B5\u03B4\u03BF \u03C0\u03B5\u03C1\u03B9\u03BF\u03C1\u03B9\u03C3\u03BC\u03BF\u03CD.","en":"This value contains characters that are not allowed by the current restriction-level.","es":"Este valor contiene caracteres que no est\xE1n permitidos seg\xFAn el nivel de restricci\xF3n actual.","et":"See v\xE4\xE4rtus sisaldab t\xE4hem\xE4rke, mida praegune piirangu tase ei luba.","eu":"Egungo murrizte-mailak ez du balio honek dituen karaktereak onartzen.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u062D\u0627\u0648\u06CC \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631\u0647\u0627\u06CC\u06CC \u0627\u0633\u062A \u06A9\u0647 \u062F\u0631 \u0633\u0637\u062D \u0645\u062D\u062F\u0648\u062F\u06CC\u062A \u0641\u0639\u0644\u06CC \u0645\u062C\u0627\u0632 \u0646\u06CC\u0633\u062A\u0646\u062F.","fi":"Arvo sis\xE4lt\xE4\xE4 merkkej\xE4, joita nykyinen rajoitustaso ei salli.","hr":"Ova vrijednost sadr\u017Ei znakove koji nisu dopu\u0161teni prema trenutnoj razini ograni\u010Denja.","hu":"Ez az \xE9rt\xE9k olyan karaktereket tartalmaz, amik nem megengedettek.","id":"Nilai ini mengandung karakter yang tidak diizinkan oleh tingkat pembatasan saat ini.","it":"Questo valore contiene caratteri che non sono consentiti dal livello di restrizione attuale.","ja":"\u3053\u306E\u5024\u306F\u73FE\u5728\u306E\u5236\u9650\u30EC\u30D9\u30EB\u3067\u8A31\u53EF\u3055\u308C\u3066\u3044\u306A\u3044\u6587\u5B57\u3092\u542B\u3093\u3067\u3044\u307E\u3059\u3002","lb":"D\xEBse W\xE4ert enth\xE4lt Zeechen, d\xE9i net erlaabt sinn no der aktueller Beschr\xE4nkungsstuf.","lt":"\u0160ioje reik\u0161m\u0117je yra simboli\u0173, kuri\u0173 neleid\u017Eia dabartinis apribojimo lygis.","lv":"\u0160\u012B v\u0113rt\u012Bba satur rakstz\u012Bmes, kuras nav at\u013Cautas pa\u0161reiz\u0113j\u0101 ierobe\u017Eojuma l\u012Bmen\u012B.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0441\u043E\u0434\u0440\u0436\u0438 \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0438 \u043A\u043E\u0438 \u043D\u0435 \u0441\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u0438 \u043E\u0434 \u0442\u0435\u043A\u043E\u0432\u043D\u043E\u0442\u043E \u043D\u0438\u0432\u043E \u043D\u0430 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0443\u0432\u0430\u045A\u0435.","nl":"Deze waarde bevat tekens die niet zijn toegestaan volgens het huidige beperkingsniveau.","pl":"Ta warto\u015B\u0107 zawiera znaki, kt\xF3re nie s\u0105 dozwolone przez aktualny poziom ogranicze\u0144.","pt":"Este valor cont\xE9m caracteres que n\xE3o s\xE3o permitidos pelo n\xEDvel de restri\xE7\xE3o atual.","pt_BR":"Este valor cont\xE9m caracteres que n\xE3o s\xE3o permitidos pelo n\xEDvel de restri\xE7\xE3o atual.","ro":"Aceast\u0103 valoare con\u021Bine caractere care nu sunt premise de nivelul de restric\u021Bionare curent.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0438\u043C\u0432\u043E\u043B\u044B, \u0437\u0430\u043F\u0440\u0435\u0449\u0451\u043D\u043D\u044B\u0435 \u043D\u0430 \u0442\u0435\u043A\u0443\u0449\u0435\u043C \u0443\u0440\u043E\u0432\u043D\u0435 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u0439.","sl":"Ta vrednost vsebuje znake, ki jih trenutna raven omejitve ne dovoljuje.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0441\u0430\u0434\u0440\u0436\u0438 \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0435 \u043A\u043E\u0458\u0438 \u043D\u0438\u0441\u0443 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u0438 \u043E\u0434 \u0441\u0442\u0440\u0430\u043D\u0435 \u0432\u0430\u0436\u0435\u045B\u0435\u0433 \u043D\u0438\u0432\u043E\u0430 \u0440\u0435\u0441\u0442\u0440\u0438\u043A\u0446\u0438\u0458\u0435.","sr_Latn":"Ova vrednost sadr\u017Ei karaktere koji nisu dozvoljeni od strane va\u017Ee\u0107eg nivoa restrikcije.","sv":"Detta v\xE4rde inneh\xE5ller tecken som inte \xE4r till\xE5tna.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E1B\u0E23\u0E30\u0E01\u0E2D\u0E1A\u0E14\u0E49\u0E27\u0E22\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E23\u0E31\u0E1A\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E08\u0E32\u0E01\u0E23\u0E30\u0E14\u0E31\u0E1A\u0E02\u0E49\u0E2D\u0E1A\u0E31\u0E07\u0E04\u0E31\u0E1A\u0E1B\u0E31\u0E08\u0E08\u0E38\u0E1A\u0E31\u0E19","tr":"Bu de\u011Fer, mevcut k\u0131s\u0131tlama seviyesi taraf\u0131ndan izin verilmeyen karakterler i\xE7eriyor.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043C\u0456\u0441\u0442\u0438\u0442\u044C \u0441\u0438\u043C\u0432\u043E\u043B\u0438, \u044F\u043A\u0456 \u043D\u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u044F\u044E\u0442\u044C\u0441\u044F \u043F\u043E\u0442\u043E\u0447\u043D\u0438\u043C \u0440\u0456\u0432\u043D\u0435\u043C \u043E\u0431\u043C\u0435\u0436\u0435\u043D\u044C.","uz":"Bu qiymat joriy cheklov darajasida ruxsat etilmagan belgilarni o'z ichiga oladi.","vi":"Gi\xE1 tr\u1ECB n\xE0y ch\u1EE9a c\xE1c k\xFD t\u1EF1 kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p b\u1EDFi m\u1EE9c \u0111\u1ED9 h\u1EA1n ch\u1EBF hi\u1EC7n t\u1EA1i.","zh_CN":"\u8BE5\u503C\u5305\u542B\u4E86\u5F53\u524D\u9650\u5236\u7EA7\u522B\u4E0D\u5141\u8BB8\u7684\u5B57\u7B26\u3002","zh_TW":"\u8A72\u503C\u5305\u542B\u4E86\u76EE\u524D\u9650\u5236\u7B49\u7D1A\u4E0D\u5141\u8A31\u7684\u5B57\u5143\u3002"}}};var USING_INVISIBLE_CHARACTERS_IS_NOT_ALLOWED={"id":"Using invisible characters is not allowed.","translations":{"validators":{"fr":"Utiliser des caract\xE8res invisibles n'est pas autoris\xE9.","ar":"\u0644\u0627 \u064A\u0633\u0645\u062D \u0628\u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0623\u062D\u0631\u0641 \u063A\u064A\u0631 \u0645\u0631\u0626\u064A\u0629.","be":"\u0412\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u0430\u043D\u043D\u0435 \u043D\u044F\u0431\u0430\u0447\u043D\u044B\u0445 \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E \u043D\u0435 \u0434\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430.","bg":"\u0418\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u043D\u0435\u0442\u043E \u043D\u0430 \u043D\u0435\u0432\u0438\u0434\u0438\u043C\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u0438 \u043D\u0435 \u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E.","bs":"Upotreba nevidljivih znakova nije dozvoljena.","ca":"No es permet l'\xFAs de car\xE0cters invisibles.","cs":"Pou\u017E\xEDv\xE1n\xED neviditeln\xFDch znak\u016F nen\xED povoleno.","da":"Brug af usynlige tegn er ikke tilladt.","de":"Unsichtbare Zeichen sind nicht erlaubt.","el":"\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03C4\u03B1\u03B9 \u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03B1\u03CC\u03C1\u03B1\u03C4\u03C9\u03BD \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03C9\u03BD.","en":"Using invisible characters is not allowed.","es":"No se permite el uso de caracteres invisibles.","et":"Mitten\xE4htavate t\xE4hem\xE4rkide kasutamine ei ole lubatud.","eu":"Ez da onartzen karaktere ikusezinak erabiltzea.","fa":"\u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0627\u0632 \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631\u0647\u0627\u06CC \u0646\u0627\u0645\u0631\u0626\u06CC \u0645\u062C\u0627\u0632 \u0646\u0645\u06CC\u200C\u0628\u0627\u0634\u062F.","fi":"N\xE4kym\xE4tt\xF6mi\xE4 merkkej\xE4 ei saa k\xE4ytt\xE4\xE4.","hr":"Kori\u0161tenje nevidljivih znakova nije dopu\u0161teno.","hu":"L\xE1thatatlan karaktert haszn\xE1lata nem megengedett.","id":"Penggunaan karakter tak terlihat tidak diperbolehkan.","it":"Utilizzare caratteri invisibili non \xE8 consentito.","ja":"\u4E0D\u53EF\u8996\u6587\u5B57\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002","lb":"D'Benotzen vu onsiichtbaren Zeechen ass net erlaabt.","lt":"Naudoti nematomus simbolius draud\u017Eiama.","lv":"Neredzamu rakstz\u012Bmju izmanto\u0161ana nav at\u013Cauta.","mk":"\u041A\u043E\u0440\u0438\u0441\u0442\u0435\u045A\u0435\u0442\u043E \u043D\u0430 \u043D\u0435\u0432\u0438\u0434\u043B\u0438\u0432\u0438 \u0437\u043D\u0430\u0446\u0438 \u043D\u0435 \u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E.","nl":"Het gebruik van onzichtbare tekens is niet toegestaan.","pl":"U\u017Cywanie niewidzialnych znak\xF3w jest niedozwolone.","pt":"N\xE3o \xE9 permitido usar caracteres invis\xEDveis.","pt_BR":"O uso de caracteres invis\xEDveis n\xE3o \xE9 permitido.","ro":"Folosirea caracterelor invizibile nu este permis\u0103.","ru":"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0432\u0438\u0434\u0438\u043C\u044B\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432 \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E.","sl":"Uporaba nevidnih znakov ni dovoljena.","sr_Cyrl":"\u041A\u043E\u0440\u0438\u0448\u045B\u0435\u045A\u0435 \u043D\u0435\u0432\u0438\u0434\u0459\u0438\u0432\u0438\u0445 \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u043E.","sr_Latn":"Kori\u0161\u0107enje nevidljivih karaktera nije dozvoljeno.","sv":"Anv\xE4ndning av osynliga tecken \xE4r inte till\xE5tet.","th":"\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E17\u0E35\u0E48\u0E21\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E40\u0E2B\u0E47\u0E19","tr":"G\xF6r\xFCnmez karakterlerin kullan\u0131lmas\u0131 izin verilmez.","uk":"\u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u043D\u0435\u0432\u0438\u0434\u0438\u043C\u0438\u0445 \u200B\u200B\u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432 \u043D\u0435 \u0434\u043E\u043F\u0443\u0441\u043A\u0430\u0454\u0442\u044C\u0441\u044F.","uz":"Ko'rinmas belgilardan foydalanish taqiqlangan.","vi":"S\u1EED d\u1EE5ng k\xFD t\u1EF1 v\xF4 h\xECnh kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u4E0D\u5141\u8BB8\u4F7F\u7528\u9690\u85CF\u5B57\u7B26\u3002","zh_TW":"\u4E0D\u5141\u8A31\u4F7F\u7528\u96B1\u5F62\u5B57\u5143\u3002"}}};var MIXING_NUMBERS_FROM_DIFFERENT_SCRIPTS_IS_NOT_ALLOWED={"id":"Mixing numbers from different scripts is not allowed.","translations":{"validators":{"fr":"M\xE9langer des chiffres provenant de diff\xE9rents scripts n'est pas autoris\xE9.","ar":"\u0644\u0627 \u064A\u0633\u0645\u062D \u0628\u062E\u0644\u0637 \u0627\u0644\u0623\u0631\u0642\u0627\u0645 \u0645\u0646 \u0646\u0635\u0648\u0635 \u0645\u062E\u062A\u0644\u0641\u0629.","be":"\u0417\u043C\u0435\u0448\u0432\u0430\u043D\u043D\u0435 \u043B\u0456\u043A\u0430\u045E \u0437 \u0440\u043E\u0437\u043D\u044B\u0445 \u0430\u043B\u0444\u0430\u0432\u0456\u0442\u0430\u045E \u043D\u0435 \u0434\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u0446\u0446\u0430.","bg":"\u0421\u043C\u0435\u0441\u0432\u0430\u043D\u0435\u0442\u043E \u043D\u0430 \u0447\u0438\u0441\u043B\u0430 \u043E\u0442 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u0438 \u0441\u043A\u0440\u0438\u043F\u0442\u043E\u0432\u0435 \u043D\u0435 \u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E.","bs":"Nije dozvoljeno mije\u0161anje brojeva iz razli\u010Ditih pisama.","ca":"No es permet barrejar n\xFAmeros de diferents scripts.","cs":"Kombinov\xE1n\xED \u010D\xEDsel z r\u016Fzn\xFDch p\xEDsem nen\xED povoleno.","da":"At blande numre fra forskellige scripts er ikke tilladt.","de":"Das Mischen von Zahlen aus verschiedenen Skripten ist nicht erlaubt.","el":"\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03C4\u03B1\u03B9 \u03B7 \u03BC\u03AF\u03BE\u03B7 \u03B1\u03C1\u03B9\u03B8\u03BC\u03CE\u03BD \u03B1\u03C0\u03CC \u03B4\u03B9\u03B1\u03C6\u03BF\u03C1\u03B5\u03C4\u03B9\u03BA\u03AC \u03B3\u03C1\u03B1\u03C6\u03AE\u03BC\u03B1\u03C4\u03B1.","en":"Mixing numbers from different scripts is not allowed.","es":"No est\xE1 permitido mezclar n\xFAmeros de diferentes scripts.","et":"Eri kirjas\xFCsteemidest p\xE4rit numbrite koos kasutamine pole lubatud.","eu":"Ez da onartzen script ezberdinetako zenbakiak nahastea","fa":"\u0645\u062E\u0644\u0648\u0637 \u06A9\u0631\u062F\u0646 \u0627\u0639\u062F\u0627\u062F \u0627\u0632 \u0627\u0633\u06A9\u0631\u06CC\u067E\u062A \u0647\u0627\u06CC \u0645\u062E\u062A\u0644\u0641 \u0645\u062C\u0627\u0632 \u0646\u06CC\u0633\u062A.","fi":"Eri kirjaimistojen numeroita ei saa sekoittaa.","hr":"Mije\u0161anje brojeva iz razli\u010Ditih pisama nije dopu\u0161teno.","hu":"K\xFCl\xF6nb\xF6z\u0151 sz\xE1m \xEDr\xE1sm\xF3dok haszn\xE1lata nem megengedett.","id":"Menggabungkan angka-angka dari skrip yang berbeda tidak diperbolehkan.","it":"Non \xE8 consentito mescolare numeri provenienti da diversi script.","ja":"\u7570\u306A\u308B\u7A2E\u985E\u306E\u6570\u5B57\u3092\u4F7F\u3046\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002","lb":"D'M\xEBsche vu Nummeren aus verschiddenen Skripten ass net erlaabt.","lt":"Draud\u017Eiama mai\u0161yti skai\u010Dius i\u0161 skirting\u0173 scenarij\u0173.","lv":"Nav at\u013Cauts sajaukt numurus no da\u017E\u0101diem skriptiem.","mk":"\u041D\u0435 \u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E \u043C\u0435\u0448\u0430\u045A\u0435 \u043D\u0430 \u0431\u0440\u043E\u0435\u0432\u0438 \u043E\u0434 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u0438 \u0441\u043A\u0440\u0438\u043F\u0442\u0438.","nl":"Het mengen van cijfers uit verschillende schriften is niet toegestaan.","pl":"Mieszanie liczb z r\xF3\u017Cnych skrypt\xF3w jest niedozwolone.","pt":"N\xE3o \xE9 permitido misturar n\xFAmeros de scripts diferentes.","pt_BR":"Misturar n\xFAmeros de scripts diferentes n\xE3o \xE9 permitido.","ro":"Combinarea numerelor din diferite script-uri nu este permis\u0103.","ru":"\u0421\u043C\u0435\u0448\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 \u0438\u0437 \u0440\u0430\u0437\u043D\u044B\u0445 \u0441\u0446\u0435\u043D\u0430\u0440\u0438\u0435\u0432 \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E.","sl":"Me\u0161anje \u0161tevilk iz razli\u010Dnih skript ni dovoljeno.","sr_Cyrl":"\u041C\u0435\u0448\u0430\u045A\u0435 \u0431\u0440\u043E\u0458\u0435\u0432\u0430 \u0438\u0437 \u0440\u0430\u0437\u043B\u0438\u0447\u0438\u0442\u0438\u0445 \u0441\u043A\u0440\u0438\u043F\u0442\u0438 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u043E.","sr_Latn":"Me\u0161anje brojeva iz razli\u010Ditih skripti nije dozvoljeno.","sv":"Blandning av siffror fr\xE5n olika skript \xE4r inte till\xE5tet.","th":"\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E1C\u0E2A\u0E21\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E08\u0E32\u0E01\u0E2A\u0E04\u0E23\u0E34\u0E1B\u0E15\u0E4C\u0E17\u0E35\u0E48\u0E41\u0E15\u0E01\u0E15\u0E48\u0E32\u0E07\u0E01\u0E31\u0E19","tr":"Farkl\u0131 yaz\u0131 t\xFCrlerinden say\u0131lar\u0131n kar\u0131\u015Ft\u0131r\u0131lmas\u0131 izin verilmez.","uk":"\u0417\u043C\u0456\u0448\u0443\u0432\u0430\u0442\u0438 \u0447\u0438\u0441\u043B\u0430 \u0437 \u0440\u0456\u0437\u043D\u0438\u0445 \u0441\u043A\u0440\u0438\u043F\u0442\u0456\u0432 \u043D\u0435 \u0434\u043E\u043F\u0443\u0441\u043A\u0430\u0454\u0442\u044C\u0441\u044F.","uz":"Turli skriptlardagi raqamlarni aralashtirish taqiqlangan.","vi":"Kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p tr\u1ED9n c\xE1c s\u1ED1 t\u1EEB c\xE1c t\u1EADp l\u1EC7nh kh\xE1c nhau.","zh_CN":"\u4E0D\u53EF\u6DF7\u5408\u4F7F\u7528\u4E0D\u540C\u8BED\u7CFB\u7684\u6570\u5B57\u3002","zh_TW":"\u4E0D\u5141\u8A31\u6DF7\u5408\u4F86\u81EA\u4E0D\u540C\u8A9E\u7CFB\u7684\u6578\u5B57\u3002"}}};var USING_HIDDEN_OVERLAY_CHARACTERS_IS_NOT_ALLOWED={"id":"Using hidden overlay characters is not allowed.","translations":{"validators":{"fr":"Utiliser des caract\xE8res de superposition cach\xE9s n'est pas autoris\xE9.","ar":"\u0644\u0627 \u064A\u0633\u0645\u062D \u0628\u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0623\u062D\u0631\u0641 \u0627\u0644\u062A\u0631\u0627\u0643\u0628 \u0627\u0644\u0645\u062E\u0641\u064A\u0629.","be":"\u0412\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u0430\u043D\u043D\u0435 \u0441\u0445\u0430\u0432\u0430\u043D\u044B\u0445 \u043D\u0430\u043A\u043B\u0430\u0434\u0437\u0435\u043D\u044B\u0445 \u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E \u043D\u0435 \u0434\u0430\u0437\u0432\u0430\u043B\u044F\u0435\u0446\u0446\u0430.","bg":"\u0418\u0437\u043F\u043E\u043B\u0437\u0432\u0430\u043D\u0435\u0442\u043E \u043D\u0430 \u0441\u043A\u0440\u0438\u0442\u0438 \u043D\u0430\u0441\u043B\u043E\u0436\u0435\u043D\u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u0438 \u043D\u0435 \u0435 \u043F\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E.","bs":"Upotreba skrivenih preklapaju\u0107ih znakova nije dozvoljena.","ca":"No es permet l'\xFAs de car\xE0cters superposats ocults.","cs":"Pou\u017Eit\xED skryt\xFDch p\u0159ekr\xFDvaj\xEDc\xEDch znak\u016F nen\xED povoleno.","da":"At bruge skjulte overlejringstegn er ikke tilladt.","de":"Verstecke Overlay-Zeichen sind nicht erlaubt.","el":"\u0394\u03B5\u03BD \u03B5\u03C0\u03B9\u03C4\u03C1\u03AD\u03C0\u03B5\u03C4\u03B1\u03B9 \u03B7 \u03C7\u03C1\u03AE\u03C3\u03B7 \u03BA\u03C1\u03C5\u03C6\u03CE\u03BD \u03C7\u03B1\u03C1\u03B1\u03BA\u03C4\u03AE\u03C1\u03C9\u03BD \u03B5\u03C0\u03B9\u03BA\u03AC\u03BB\u03C5\u03C8\u03B7\u03C2.","en":"Using hidden overlay characters is not allowed.","es":"No est\xE1 permitido el uso de caracteres superpuestos ocultos.","et":"Peidetud t\xE4hem\xE4rkide kasutamine pole lubatud.","eu":"Ez da onartzen karaktere gainjarri ezkutuen erabilera.","fa":"\u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u0627\u0632 \u06A9\u0627\u0631\u0627\u06A9\u062A\u0631\u0647\u0627\u06CC \u0647\u0645\u067E\u0648\u0634\u0627\u0646\u06CC \u067E\u0646\u0647\u0627\u0646 (hidden overlay characters) \u0645\u062C\u0627\u0632 \u0646\u06CC\u0633\u062A.","fi":"Piilotettuja tarkemerkkej\xE4 ei saa k\xE4ytt\xE4\xE4.","hr":"Kori\u0161tenje skrivenih preklapaju\u0107ih znakova nije dopu\u0161teno.","hu":"Rejtett m\xF3dos\xEDt\xF3 karakterek haszn\xE1lata nem megengedett.","id":"Penggunaan karakter overlay yang tersembunyi tidak diperbolehkan.","it":"Non \xE8 consentito utilizzare caratteri sovrapposti nascosti.","ja":"\u96A0\u308C\u305F\u30AA\u30FC\u30D0\u30EC\u30A4\u6587\u5B57\u306F\u4F7F\u7528\u3067\u304D\u307E\u305B\u3093\u3002","lb":"D'Benotzen vu verstoppten Iwwerlagungszeechen ass net erlaabt.","lt":"Draud\u017Eiama naudoti pasl\u0117ptus perdangos simbolius.","lv":"Sl\u0113ptu p\u0101rkl\u0101juma rakstz\u012Bmju izmanto\u0161ana nav at\u013Cauta.","mk":"\u041D\u0435 \u0435 \u0434\u043E\u0437\u0432\u043E\u043B\u0435\u043D\u043E \u043A\u043E\u0440\u0438\u0441\u0442\u0435\u045A\u0435 \u043D\u0430 \u0441\u043A\u0440\u0438\u0435\u043D\u0438 \u0437\u043D\u0430\u0446\u0438 \u0437\u0430 \u043F\u0440\u0435\u043A\u043B\u043E\u043F\u0443\u0432\u0430\u045A\u0435.","nl":"Het gebruik van verborgen overlay-tekens is niet toegestaan.","pl":"U\u017Cywanie ukrytych znak\xF3w nak\u0142adki jest niedozwolone.","pt":"N\xE3o \xE9 permitido usar caracteres de sobreposi\xE7\xE3o ocultos.","pt_BR":"O uso de caracteres de sobreposi\xE7\xE3o ocultos n\xE3o \xE9 permitido.","ro":"Folosirea caracterelor invizibile suprapuse nu este permis\u0103.","ru":"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0432\u0438\u0434\u0438\u043C\u044B\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432 \u043D\u0430\u043B\u043E\u0436\u0435\u043D\u0438\u044F \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E.","sl":"Uporaba skritih prekrivnih znakov ni dovoljena.","sr_Cyrl":"\u041A\u043E\u0440\u0438\u0448\u045B\u0435\u045A\u0435 \u0441\u043A\u0440\u0438\u0432\u0435\u043D\u0438\u0445 \u043F\u0440\u0435\u043A\u043B\u043E\u043F\u043D\u0438\u0445 \u043A\u0430\u0440\u0430\u043A\u0442\u0435\u0440\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0437\u0432\u043E\u0459\u0435\u043D\u043E.","sr_Latn":"Kori\u0161\u0107enje skrivenih preklopnih karaktera nije dozvoljeno.","sv":"Anv\xE4ndning av dolda \xF6verlagringstecken \xE4r inte till\xE5tet.","th":"\u0E44\u0E21\u0E48\u0E2D\u0E19\u0E38\u0E0D\u0E32\u0E15\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\u0E0B\u0E49\u0E2D\u0E19\u0E17\u0E31\u0E1A\u0E17\u0E35\u0E48\u0E0B\u0E48\u0E2D\u0E19\u0E2D\u0E22\u0E39\u0E48","tr":"Gizli \xFCst\xFC kaplama karakterlerinin kullan\u0131lmas\u0131 izin verilmez.","uk":"\u0412\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u043D\u043D\u044F \u043F\u0440\u0438\u0445\u043E\u0432\u0430\u043D\u0438\u0445 \u043D\u0430\u043A\u043B\u0430\u0434\u0435\u043D\u0438\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432 \u043D\u0435 \u0434\u043E\u043F\u0443\u0441\u043A\u0430\u0454\u0442\u044C\u0441\u044F.","uz":"Yashirin qoplamali belgilardan foydalanish taqiqlangan.","vi":"S\u1EED d\u1EE5ng c\xE1c k\xFD t\u1EF1 l\u1EDBp ph\u1EE7 \u1EA9n kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p.","zh_CN":"\u4E0D\u5141\u8BB8\u4F7F\u7528\u9690\u85CF\u7684\u8986\u76D6\u5B57\u7B26\u3002","zh_TW":"\u4E0D\u5141\u8A31\u4F7F\u7528\u96B1\u85CF\u7684\u8986\u84CB\u5B57\u5143\u3002"}}};var THIS_FORM_SHOULD_NOT_CONTAIN_EXTRA_FIELDS={"id":"This form should not contain extra fields.","translations":{"validators":{"fr":"Ce formulaire ne doit pas contenir de champs suppl\xE9mentaires.","af":"Hierdie vorm moet nie ekstra velde bevat nie.","ar":"\u0647\u0630\u0627 \u0627\u0644\u0646\u0645\u0648\u0630\u062C \u064A\u062C\u0628 \u0627\u0644\u0627 \u064A\u062D\u062A\u0648\u0649 \u0639\u0644\u0649 \u0627\u0649 \u062D\u0642\u0648\u0644 \u0627\u0636\u0627\u0641\u064A\u0629.","az":"Bu formada \u0259lav\u0259 sah\u0259 olmamal\u0131d\u0131r.","be":"\u0413\u044D\u0442\u0430 \u0444\u043E\u0440\u043C\u0430 \u043D\u0435 \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u043C\u0435\u0446\u044C \u0434\u0430\u0434\u0430\u0442\u043A\u043E\u0432\u044B\u0445 \u043F\u0430\u043B\u0435\u0439.","bg":"\u0422\u0430\u0437\u0438 \u0444\u043E\u0440\u043C\u0430 \u043D\u0435 \u0442\u0440\u044F\u0431\u0432\u0430 \u0434\u0430 \u0441\u044A\u0434\u044A\u0440\u0436\u0430 \u0434\u043E\u043F\u044A\u043B\u043D\u0438\u0442\u0435\u043B\u043D\u0438 \u043F\u043E\u043B\u0435\u0442\u0430.","bs":"Ovaj obrazac ne bi trebalo da sadr\u017Ei dodatna polja.","ca":"Aquest formulari no hauria de contenir camps addicionals.","cs":"Tato skupina pol\xED nesm\xED obsahovat dal\u0161\xED pole.","da":"Feltgruppen m\xE5 ikke indeholde ekstra felter.","de":"Dieses Formular sollte keine zus\xE4tzlichen Felder enthalten.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C6\u03CC\u03C1\u03BC\u03B1 \u03B4\u03B5\u03BD \u03C0\u03C1\u03AD\u03C0\u03B5\u03B9 \u03BD\u03B1 \u03C0\u03B5\u03C1\u03B9\u03AD\u03C7\u03B5\u03B9 \u03B5\u03C0\u03B9\u03C0\u03BB\u03AD\u03BF\u03BD \u03C0\u03B5\u03B4\u03AF\u03B1.","en":"This form should not contain extra fields.","es":"Este formulario no deber\xEDa contener campos adicionales.","et":"V\xE4ljade grupp ei tohiks sisalda lisav\xE4ljasid.","eu":"Formulario honek ez luke aparteko eremurik eduki behar.","fa":"\u0627\u06CC\u0646 \u0641\u0631\u0645 \u0646\u0628\u0627\u06CC\u062F \u0634\u0627\u0645\u0644 \u0641\u06CC\u0644\u062F\u0647\u0627\u06CC \u0627\u0636\u0627\u0641\u06CC \u0628\u0627\u0634\u062F.","fi":"T\xE4m\xE4 lomake ei voi sis\xE4lt\xE4\xE4 ylim\xE4\xE4r\xE4isi\xE4 kentti\xE4.","gl":"Este formulario non deber\xEDa conter campos adicionais.","he":"\u05D4\u05D8\u05D5\u05E4\u05E1 \u05DC\u05D0 \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05DB\u05D9\u05DC \u05E9\u05D3\u05D5\u05EA \u05E0\u05D5\u05E1\u05E4\u05D9\u05DD.","hr":"Ovaj obrazac ne smije sadr\u017Eavati dodatna polja.","hu":"Ez a mez\u0151csoport nem tartalmazhat extra mez\u0151ket.","hy":"\u0531\u0575\u057D \u0571\u0587\u0568 \u0579\u057A\u0565\u057F\u0584 \u0567 \u057A\u0561\u0580\u0578\u0582\u0576\u0561\u056F\u056B \u056C\u0580\u0561\u0581\u0578\u0582\u0581\u056B\u0579 \u057F\u0578\u0572\u0565\u0580\u0589","id":"Gabungan kolom tidak boleh mengandung kolom tambahan.","it":"Questo form non dovrebbe contenere nessun campo extra.","ja":"\u30D5\u30A3\u30FC\u30EB\u30C9\u30B0\u30EB\u30FC\u30D7\u306B\u8FFD\u52A0\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u3092\u542B\u3093\u3067\u306F\u306A\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBs Feldergrupp sollt keng zous\xE4tzlech Felder enthalen.","lt":"Forma negali tur\u0117ti papildom\u0173 lauk\u0173.","lv":"\u0160aj\u0101 veidlap\u0101 nevajadz\u0113tu b\u016Bt papildus ievades laukiem.","mk":"\u041E\u0432\u0430\u0430 \u0444\u043E\u0440\u043C\u0430 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u043E\u0434\u0440\u0436\u0438 \u0434\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u043D\u0438 \u043F\u043E\u043B\u0438\u045A\u0430.","mn":"\u0424\u043E\u0440\u043C \u043D\u044D\u043C\u044D\u043B\u0442 \u0442\u0430\u043B\u0431\u0430\u0440 \u0431\u0430\u0433\u0442\u0430\u0430\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439.","my":"\u1024 \u1016\u1031\u102C\u1004\u103A\u101E\u100A\u103A field \u1021\u1015\u102D\u102F\u1019\u103B\u102C\u1038 \u1019\u1015\u102B\u1040\u1004\u103A\u101E\u1004\u103A\u1037\u1015\u102B\u104B","nb":"Feltgruppen m\xE5 ikke inneholde ekstra felter.","nl":"Dit formulier mag geen extra velden bevatten.","nn":"Feltgruppa kan ikkje innehalde ekstra felt.","no":"Feltgruppen m\xE5 ikke inneholde ekstra felter.","pl":"Ten formularz nie powinien zawiera\u0107 dodatkowych p\xF3l.","pt":"Este formul\xE1rio n\xE3o deveria possuir mais campos.","pt_BR":"Este formul\xE1rio n\xE3o deve conter campos adicionais.","ro":"Acest formular nu ar trebui s\u0103 con\u021Bin\u0103 c\xE2mpuri suplimentare.","ru":"\u042D\u0442\u0430 \u0444\u043E\u0440\u043C\u0430 \u043D\u0435 \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0434\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043F\u043E\u043B\u0435\u0439.","sk":"Polia by nemali obsahova\u0165 \u010Fal\u0161ie prvky.","sl":"Ta obrazec ne sme vsebovati dodatnih polj.","sq":"Kjo form\xEB nuk duhet t\xEB p\xEBrmbaj\xEB fusha shtes\xEB.","sr_Cyrl":"\u041E\u0432\u0430\u0458 \u0444\u043E\u0440\u043C\u0443\u043B\u0430\u0440 \u043D\u0435 \u0442\u0440\u0435\u0431\u0430 \u0434\u0430 \u0441\u0430\u0434\u0440\u0436\u0438 \u0434\u043E\u0434\u0430\u0442\u043D\u0430 \u043F\u043E\u0459\u0430.","sr_Latn":"Ovaj formular ne treba da sadr\u017Ei dodatna polja.","sv":"Formul\xE4ret kan inte inneh\xE5lla extra f\xE4lt.","th":"\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E04\u0E27\u0E23\u0E21\u0E35 extra fields","tl":"Ang pormang itong ay hindi dapat magkarron ng dagdag na mga patlang.","tr":"Form ekstra alanlar i\xE7eremez.","uk":"\u0426\u044F \u0444\u043E\u0440\u043C\u0430 \u043D\u0435 \u043F\u043E\u0432\u0438\u043D\u043D\u0430 \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \u0434\u043E\u0434\u0430\u0442\u043A\u043E\u0432\u0438\u0445 \u043F\u043E\u043B\u0456\u0432.","ur":"\u0627\u0633 \u0641\u0627\u0631\u0645 \u0645\u06CC\u06BA \u0627\u0636\u0627\u0641\u06CC \u0641\u06CC\u0644\u0688\u0632 \u0646\u06C1\u06CC\u06BA \u06C1\u0648\u0646\u06CC \u0686\u0627\u06C1\u0626\u06CC\u06BA","uz":"Ushbu fo'rmada qo'shimcha maydonlar bo'lmasligi kerak.","vi":"M\u1EABu n\xE0y kh\xF4ng n\xEAn ch\u1EE9a tr\u01B0\u1EDDng m\u1EDF r\u1ED9ng.","zh_CN":"\u8BE5\u8868\u5355\u4E2D\u4E0D\u53EF\u6709\u989D\u5916\u5B57\u6BB5.","zh_TW":"\u8A72\u8868\u55AE\u4E2D\u4E0D\u53EF\u6709\u984D\u5916\u5B57\u6BB5\u3002"}}};var THE_UPLOADED_FILE_WAS_TOO_LARGE_PLEASE_TRY_TO_UPLOAD_A_SMALLER_FILE={"id":"The uploaded file was too large. Please try to upload a smaller file.","translations":{"validators":{"fr":"Le fichier t\xE9l\xE9charg\xE9 est trop volumineux. Merci d'essayer d'envoyer un fichier plus petit.","af":"Die opgelaaide l\xEAer was te groot. Probeer asseblief 'n kleiner l\xEAer.","ar":"\u0645\u0633\u0627\u062D\u0629 \u0627\u0644\u0645\u0644\u0641 \u0627\u0644\u0645\u0631\u0633\u0644 \u0643\u0628\u064A\u0631\u0629. \u0645\u0646 \u0641\u0636\u0644\u0643 \u062D\u0627\u0648\u0644 \u0627\u0631\u0633\u0627\u0644 \u0645\u0644\u0641 \u0627\u0635\u063A\u0631.","az":"Y\xFCkl\u0259n\u0259n fayl \xE7ox b\xF6y\xFCkd\xFCr. L\xFCtf\u0259n daha ki\xE7ik fayl y\xFCkl\u0259yin.","be":"\u0417\u0430\u043F\u0430\u043C\u043F\u0430\u0432\u0430\u043D\u044B \u0444\u0430\u0439\u043B \u0431\u044B\u045E \u0437\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456\u043C. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u043F\u0430\u0441\u043F\u0440\u0430\u0431\u0443\u0439\u0446\u0435 \u0437\u0430\u043F\u0430\u043C\u043F\u0430\u0432\u0430\u0446\u044C \u0444\u0430\u0439\u043B \u043C\u0435\u043D\u0448\u0430\u0433\u0430 \u043F\u0430\u043C\u0435\u0440\u0443.","bg":"\u041A\u0430\u0447\u0435\u043D\u0438\u044F\u0442 \u0444\u0430\u0439\u043B \u0435 \u0442\u0432\u044A\u0440\u0434\u0435 \u0433\u043E\u043B\u044F\u043C. \u041C\u043E\u043B\u044F, \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u0430 \u043A\u0430\u0447\u0438\u0442\u0435 \u043F\u043E-\u043C\u0430\u043B\u044A\u043A \u0444\u0430\u0439\u043B.","bs":"Prenijeta (uploaded) datoteka je prevelika. Molim poku\u0161ajte prenijeti manju datoteku.","ca":"L'arxiu pujat \xE9s massa gran. Per favor, pugi un arxiu m\xE9s petit.","cs":"Nahran\xFD soubor je p\u0159\xEDli\u0161 velk\xFD. Nahrajte pros\xEDm men\u0161\xED soubor.","da":"Den uploadede fil var for stor. Upload venligst en mindre fil.","de":"Die hochgeladene Datei ist zu gro\xDF. Versuchen Sie bitte eine kleinere Datei hochzuladen.","el":"\u03A4\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF \u03B5\u03AF\u03BD\u03B1\u03B9 \u03C0\u03BF\u03BB\u03CD \u03BC\u03B5\u03B3\u03AC\u03BB\u03BF. \u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03C0\u03C1\u03BF\u03C3\u03C0\u03B1\u03B8\u03AE\u03C3\u03C4\u03B5 \u03BD\u03B1 \u03B1\u03BD\u03B5\u03B2\u03AC\u03C3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03BC\u03B9\u03BA\u03C1\u03CC\u03C4\u03B5\u03C1\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF.","en":"The uploaded file was too large. Please try to upload a smaller file.","es":"El archivo subido es demasiado grande. Por favor, suba un archivo m\xE1s peque\xF1o.","et":"\xDCleslaaditud fail oli liiga suur. Palun proovi uuesti v\xE4iksema failiga.","eu":"Igotako fitxategia handiegia da. Mesedez saiatu fitxategi txikiago bat igotzen.","fa":"\u0641\u0627\u06CC\u0644 \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC\u200C\u0634\u062F\u0647 \u0628\u0633\u06CC\u0627\u0631 \u0628\u0632\u0631\u06AF \u0627\u0633\u062A. \u0644\u0637\u0641\u0627\u064B \u0641\u0627\u06CC\u0644 \u06A9\u0648\u0686\u06A9\u200C\u062A\u0631\u06CC \u0631\u0627 \u0628\u0627\u0631\u06AF\u0630\u0627\u0631\u06CC \u0646\u0645\u0627\u06CC\u06CC\u062F.","fi":"Ladattu tiedosto on liian iso. Ole hyv\xE4 ja lataa pienempi tiedosto.","gl":"O arquivo subido \xE9 demasiado grande. Por favor, suba un arquivo m\xE1is pequeno.","he":"\u05D4\u05E7\u05D5\u05D1\u05E5 \u05E9\u05D4\u05D5\u05E2\u05DC\u05D4 \u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9. \u05E0\u05E1\u05D4 \u05DC\u05D4\u05E2\u05DC\u05D5\u05EA \u05E7\u05D5\u05D1\u05E5 \u05E7\u05D8\u05DF \u05D9\u05D5\u05EA\u05E8.","hr":"Prenesena datoteka je prevelika. Molim poku\u0161ajte prenijeti manju datoteku.","hu":"A felt\xF6lt\xF6tt f\xE1jl t\xFAl nagy. K\xE9rem, pr\xF3b\xE1ljon egy kisebb f\xE1jlt felt\xF6lteni.","hy":"\u054E\u0565\u0580\u0562\u0565\u057C\u0576\u057E\u0561\u056E \u0586\u0561\u0575\u056C\u0568 \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0574\u0565\u056E \u0567. \u053D\u0576\u0564\u0580\u057E\u0578\u0582\u0574 \u0567 \u057E\u0565\u0580\u0562\u0565\u057C\u0576\u0565\u056C \u0561\u057E\u0565\u056C\u056B \u0583\u0578\u0584\u0580 \u0579\u0561\u0583\u057D\u056B \u0586\u0561\u0575\u056C\u0589","id":"Berkas yang di unggah terlalu besar. Silahkan coba unggah berkas yang lebih kecil.","it":"Il file caricato \xE8 troppo grande. Per favore, carica un file pi\xF9 piccolo.","ja":"\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3055\u308C\u305F\u30D5\u30A1\u30A4\u30EB\u304C\u5927\u304D\u3059\u304E\u307E\u3059\u3002\u5C0F\u3055\u306A\u30D5\u30A1\u30A4\u30EB\u3067\u518D\u5EA6\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"De gesch\xE9cktene Fichier ass ze grouss. Versicht wann ech gelift ee m\xE9i klenge Fichier eropzelueden.","lt":"\u012Ekelta byla yra per didel\u0117. bandykite \u012Fkelti ma\u017Eesn\u0119.","lv":"Aug\u0161upiel\u0101d\u0113t\u0101 faila izm\u0113rs bija par lielu. L\u016Bdzu m\u0113\u0123iniet aug\u0161upiel\u0101d\u0113t maz\u0101ka izm\u0113ra failu.","mk":"\u0414\u0430\u0442\u043E\u0442\u0435\u043A\u0430\u0442\u0430 \u0448\u0442\u043E \u0441\u0435 \u043E\u0431\u0438\u0434\u043E\u0432\u0442\u0435 \u0434\u0430 \u0458\u0430 \u043F\u043E\u0434\u0438\u0433\u043D\u0435\u0442\u0435 \u0435 \u043F\u0440\u0435\u0433\u043E\u043B\u0435\u043C\u0430. \u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u0441\u043E \u043F\u043E\u043C\u0430\u043B\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430.","mn":"Upload \u0445\u0438\u0439\u0441\u044D\u043D \u0444\u0430\u0439\u043B \u0445\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u0442\u043E\u043C \u0431\u0430\u0439\u043D\u0430. \u0411\u0430\u0433\u0430 \u0445\u044D\u043C\u0436\u044D\u044D\u0442\u044D\u0439 \u0444\u0430\u0439\u043B \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"Upload \u1010\u1004\u103A\u101E\u1031\u102C\u1016\u102D\u102F\u1004\u103A\u101E\u100A\u103A\u1021\u101C\u103D\u1014\u103A\u1000\u103C\u102E\u1038\u101C\u103D\u1014\u103A\u1038\u101E\u100A\u103A\u104B \u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u101E\u1031\u1038\u1004\u101A\u103A\u101E\u100A\u1037\u103A\u1016\u102D\u102F\u1004\u103A\u1000\u102D\u102F\u1010\u1004\u103A\u101B\u1014\u103A\u1000\u103C\u102D\u102F\u1038\u1005\u102C\u1038\u1015\u102B\u104B","nb":"Den opplastede filen var for stor. Vennligst last opp en mindre fil.","nl":"Het ge\xFCploade bestand is te groot. Probeer een kleiner bestand te uploaden.","nn":"Fila du lasta opp var for stor. Last opp ei mindre fil.","no":"Den opplastede filen var for stor. Vennligst last opp en mindre fil.","pl":"Wgrany plik by\u0142 za du\u017Cy. Prosz\u0119 spr\xF3bowa\u0107 wgra\u0107 mniejszy plik.","pt":"O ficheiro enviado \xE9 muito grande. Por favor, tente enviar um ficheiro menor.","pt_BR":"O arquivo enviado \xE9 muito grande. Por favor, tente enviar um arquivo menor.","ro":"Fi\u0219ierul \xEEnc\u0103rcat a fost prea mare. V\u0103 rug\u0103m sa \xEEnc\u0103rca\u021Bi un fi\u0219ier mai mic.","ru":"\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043D\u043D\u044B\u0439 \u0444\u0430\u0439\u043B \u0441\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0439. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u0430\u0439\u043B \u043C\u0435\u043D\u044C\u0448\u0435\u0433\u043E \u0440\u0430\u0437\u043C\u0435\u0440\u0430.","sk":"Odoslan\xFD s\xFAbor je pr\xEDli\u0161 ve\u013Ek\xFD. Pros\xEDm odo\u0161lite s\xFAbor s men\u0161ou ve\u013Ekos\u0165ou.","sl":"Nalo\u017Eena datoteka je prevelika. Prosimo, poizkusite nalo\u017Eiti manj\u0161o.","sq":"Skedari i ngarkuar ishte shum\xEB i madh. Ju lutemi provoni t\xEB ngarkoni nj\xEB skedar m\xEB t\xEB vog\xEBl.","sr_Cyrl":"\u041E\u0442\u043F\u0440\u0435\u043C\u0459\u0435\u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430 \u0458\u0435 \u0431\u0438\u043B\u0430 \u043F\u0440\u0435\u0432\u0435\u043B\u0438\u043A\u0430. \u041C\u043E\u043B\u0438\u043C \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0442\u0435 \u043E\u0442\u043F\u0440\u0435\u043C\u0430\u045A\u0435 \u043C\u0430\u045A\u0435 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0435.","sr_Latn":"Otpremljena datoteka je bila prevelika. Molim poku\u0161ajte otpremanje manje datoteke.","sv":"Den uppladdade filen var f\xF6r stor. F\xF6rs\xF6k ladda upp en mindre fil.","th":"\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E2D\u0E31\u0E1E\u0E42\u0E2B\u0E25\u0E14\u0E21\u0E35\u0E02\u0E19\u0E32\u0E14\u0E43\u0E2B\u0E0D\u0E48\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E01\u0E23\u0E38\u0E13\u0E32\u0E25\u0E2D\u0E07\u0E2D\u0E31\u0E1E\u0E42\u0E2B\u0E25\u0E14\u0E43\u0E2B\u0E21\u0E48\u0E2D\u0E35\u0E01\u0E04\u0E23\u0E31\u0E49\u0E07\u0E14\u0E49\u0E27\u0E22\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E21\u0E35\u0E02\u0E19\u0E32\u0E14\u0E40\u0E25\u0E47\u0E01\u0E25\u0E07","tl":"Ang ini-upload na file ay masyadong malaki. Pakiulit muling mag-upload ng mas maliit na file.","tr":"Y\xFCklenen dosya boyutu \xE7ok y\xFCksek. L\xFCtfen daha k\xFC\xE7\xFCk bir dosya y\xFCklemeyi deneyin.","uk":"\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u0438\u0439 \u0444\u0430\u0439\u043B \u0437\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0438\u0439. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0438\u0442\u0438 \u0444\u0430\u0439\u043B \u043C\u0435\u043D\u0448\u043E\u0433\u043E \u0440\u043E\u0437\u043C\u0456\u0440\u0443.","ur":"\u0627\u067E \u0644\u0648\u0688 \u06A9\u0631\u062F\u06BE \u0641\u0627\u0626\u0644 \u0628\u06C1\u062A \u0628\u0691\u06CC \u062A\u06BE\u06CC\u06D4 \u0628\u0631\u0627\u06C1 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u0686\u06BE\u0648\u0679\u06CC \u0641\u0627\u0626\u0644 \u0627\u067E \u0644\u0648\u0688 \u06A9\u0631\u0646\u06D2 \u06A9\u06CC \u06A9\u0648\u0634\u0634 \u06A9\u0631\u06CC\u06BA","uz":"Yuklab olingan fayl juda katta. Iltimos, kichikroq faylni yuklashga harakat qiling.","vi":"T\u1EADp tin t\u1EA3i l\xEAn qu\xE1 l\u1EDBn. Vui l\xF2ng th\u1EED l\u1EA1i v\u1EDBi t\u1EADp tin nh\u1ECF h\u01A1n.","zh_CN":"\u4E0A\u4F20\u6587\u4EF6\u592A\u5927\uFF0C \u8BF7\u91CD\u65B0\u5C1D\u8BD5\u4E0A\u4F20\u4E00\u4E2A\u8F83\u5C0F\u7684\u6587\u4EF6.","zh_TW":"\u4E0A\u50B3\u6587\u4EF6\u592A\u5927\uFF0C \u8ACB\u91CD\u65B0\u5617\u8A66\u4E0A\u50B3\u4E00\u500B\u8F03\u5C0F\u7684\u6587\u4EF6\u3002"}}};var THE_CSRF_TOKEN_IS_INVALID_PLEASE_TRY_TO_RESUBMIT_THE_FORM={"id":"The CSRF token is invalid. Please try to resubmit the form.","translations":{"validators":{"fr":"Le jeton CSRF est invalide. Veuillez renvoyer le formulaire.","af":"Die CSRF-teken is ongeldig. Probeer asseblief om die vorm weer in te dien.","ar":"\u0642\u064A\u0645\u0629 \u0631\u0645\u0632 \u0627\u0644\u0645\u0648\u0642\u0639 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629. \u0645\u0646 \u0641\u0636\u0644\u0643 \u0627\u0639\u062F \u0627\u0631\u0633\u0627\u0644 \u0627\u0644\u0646\u0645\u0648\u0630\u062C.","az":"CSRF ni\u015Fan\u0131 yanl\u0131\u015Fd\u0131r. L\xFCtfen forman\u0131 yenid\u0259n g\xF6nd\u0259rin.","be":"CSRF-\u0442\u043E\u043A\u0435\u043D \u043D\u0435 \u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B. \u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u043F\u0430\u0441\u043F\u0440\u0430\u0431\u0443\u0439\u0446\u0435 \u044F\u0448\u0447\u044D \u0440\u0430\u0437 \u0430\u0434\u043F\u0440\u0430\u0432\u0456\u0446\u044C \u0444\u043E\u0440\u043C\u0443.","bg":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D CSRF \u0442\u043E\u043A\u0435\u043D. \u041C\u043E\u043B\u044F, \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u0434\u0430 \u0438\u0437\u043F\u0440\u0430\u0442\u0438\u0442\u0435 \u0444\u043E\u0440\u043C\u0430\u0442\u0430 \u043E\u0442\u043D\u043E\u0432\u043E.","bs":"CSRF vrijednost nije ispravna. Molim poku\u0161ajte ponovo da po\u0161aljete obrazac.","ca":"El token CSRF no \xE9s v\xE0lid. Per favor, provi d'enviar novament el formulari.","cs":"CSRF token je neplatn\xFD. Zkuste pros\xEDm znovu odeslat formul\xE1\u0159.","da":"CSRF-token er ugyldig. Pr\xF8v venligst at genindsende.","de":"Der CSRF-Token ist ung\xFCltig. Versuchen Sie bitte, das Formular erneut zu senden.","el":"\u03A4\u03BF CSRF token \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF. \u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B4\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03BD\u03B1 \u03C5\u03C0\u03BF\u03B2\u03AC\u03BB\u03B5\u03C4\u03B5 \u03C4\u03B7 \u03C6\u03CC\u03C1\u03BC\u03B1 \u03BE\u03B1\u03BD\u03AC.","en":"The CSRF token is invalid. Please try to resubmit the form.","es":"El token CSRF no es v\xE1lido. Por favor, pruebe a enviar nuevamente el formulario.","et":"CSRF-m\xE4rgis on vigane. Palun proovi vormi uuesti esitada.","fa":"\u062A\u0648\u06A9\u0646 CSRF \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A. \u0644\u0637\u0641\u0627\u064B \u0641\u0631\u0645 \u0631\u0627 \u0645\u062C\u062F\u062F\u0627\u064B \u0627\u0631\u0633\u0627\u0644 \u0646\u0645\u0627\u06CC\u06CC\u062F.","fi":"CSRF-tarkiste on virheellinen. Ole hyv\xE4 ja yrit\xE4 l\xE4hett\xE4\xE4 lomake uudestaan.","gl":"O token CSRF non \xE9 v\xE1lido. Por favor, probe a enviar novamente o formulario.","he":"\u05D0\u05E1\u05D9\u05DE\u05D5\u05DF CSRF \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9. \u05D0\u05E0\u05D0 \u05E0\u05E1\u05D4 \u05DC\u05E9\u05DC\u05D5\u05D7 \u05E9\u05D5\u05D1 \u05D0\u05EA \u05D4\u05D8\u05D5\u05E4\u05E1.","hr":"CSRF vrijednost nije ispravna. Poku\u0161ajte ponovo poslati obrazac.","hu":"\xC9rv\xE9nytelen CSRF token. K\xE9rem, pr\xF3b\xE1lja \xFAjra elk\xFCldeni az \u0171rlapot.","hy":"CSRF \u0561\u0580\u056A\u0565\u0584\u0568 \u0561\u0576\u0569\u0578\u0582\u0575\u056C\u0561\u057F\u0580\u0565\u056C\u056B \u0567. \u0553\u0578\u0580\u0571\u0565\u0584 \u0576\u0578\u0580\u056B\u0581 \u0578\u0582\u0572\u0561\u0580\u056F\u0565\u056C \u0571\u0587\u0568\u0589","id":"CSRF-Token tidak sah. Silahkan coba kirim ulang formulir.","it":"Il token CSRF non \xE8 valido. Prova a reinviare il form.","ja":"CSRF\u30C8\u30FC\u30AF\u30F3\u304C\u7121\u52B9\u3067\u3059\u3001\u518D\u9001\u4FE1\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"Den CSRF-Token ass ong\xEBlteg. Versicht wann ech gelift de Formulaire nach eng K\xE9ier ze sch\xE9cken.","lt":"CSRF kodas nepriimtinas. Bandykite si\u0173sti formos u\u017Eklaus\u0105 dar kart\u0105.","lv":"Dotais CSRF talons nav der\u012Bgs. L\u016Bdzu m\u0113\u0123iniet v\u0113lreiz iesniegt veidlapu.","mk":"\u0412\u0430\u0448\u0438\u043E\u0442 CSRF \u0442\u043E\u043A\u0435\u043D \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D. \u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0438\u0441\u043F\u0440\u0430\u0442\u0435\u0442\u0435 \u0458\u0430 \u0444\u043E\u0440\u043C\u0430\u0442\u0430 \u043E\u0434\u043D\u043E\u0432\u043E.","mn":"CSRF token \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430. \u0424\u043E\u0440\u043C\u043E\u043E \u0434\u0430\u0445\u0438\u043D \u0438\u043B\u0433\u044D\u044D\u043D\u044D \u04AF\u04AF.","my":"\u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A CSRF \u1010\u102D\u102F\u1000\u1004\u103A \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B \u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D\u1016\u1031\u102C\u1004\u103A\u1000\u102D\u102F\u1015\u103C\u1014\u103A\u1010\u1004\u103A\u1015\u102B\u104B","nl":"De CSRF-token is ongeldig. Probeer het formulier opnieuw te versturen.","pl":"Token CSRF jest nieprawid\u0142owy. Prosz\u0119 spr\xF3bowa\u0107 wys\u0142a\u0107 formularz ponownie.","pt":"O token CSRF est\xE1 inv\xE1lido. Por favor, tente enviar o formul\xE1rio novamente.","pt_BR":"O token CSRF \xE9 inv\xE1lido. Por favor, tente reenviar o formul\xE1rio.","ro":"Token-ul CSRF este invalid. V\u0103 rug\u0103m s\u0103 retrimite\u021Bi formularul.","ru":"CSRF \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u044C \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0443 \u0444\u043E\u0440\u043C\u044B.","sk":"CSRF token je neplatn\xFD. Pros\xEDm sk\xFAste znovu odosla\u0165 formul\xE1r.","sl":"CSRF vrednost je napa\u010Dna. Prosimo, ponovno po\u0161ljite obrazec.","sq":"Vlera CSRF \xEBsht\xEB e pavlefshme. Ju lutemi provoni t\xEB rid\xEBrgoni form\xEBn.","sr_Cyrl":"CSRF \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430. \u041F\u043E\u043A\u0443\u0448\u0430\u0458\u0442\u0435 \u043F\u043E\u043D\u043E\u0432\u043E.","sr_Latn":"CSRF vrednost nije ispravna. Poku\u0161ajte ponovo.","sv":"CSRF-elementet \xE4r inte giltigt. F\xF6rs\xF6k att skicka formul\xE4ret igen.","th":"CSRF token \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07 \u0E01\u0E23\u0E38\u0E13\u0E32\u0E25\u0E2D\u0E07\u0E2A\u0E48\u0E07\u0E41\u0E1A\u0E1A\u0E1F\u0E2D\u0E23\u0E4C\u0E21\u0E43\u0E2B\u0E21\u0E48","tl":"Hindi balido ang CSRF token. Maagpasa muli ng isang pang porma.","tr":"CSRF fi\u015Fi ge\xE7ersiz. Formu tekrar g\xF6ndermeyi deneyin.","uk":"CSRF \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0435. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0432\u0456\u0434\u043F\u0440\u0430\u0432\u0438\u0442\u0438 \u0444\u043E\u0440\u043C\u0443 \u0437\u043D\u043E\u0432\u0443.","ur":"\u0679\u0648\u06A9\u0646 \u063A\u0644\u0637 \u06C1\u06D2\u06D4 \u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0641\u0627\u0631\u0645 \u06A9\u0648 \u062F\u0648\u0628\u0627\u0631\u06C1 \u062C\u0645\u0639 \u06A9\u0631\u0627\u0646\u06D2 \u06A9\u06CC \u06A9\u0648\u0634\u0634 \u06A9\u0631\u06CC\u06BA CSRF","uz":"CSRF qiymati yaroqsiz. Fo'rmani qayta yuborishga harakat qiling.","vi":"CSRF token kh\xF4ng h\u1EE3p l\u1EC7. Vui l\xF2ng th\u1EED l\u1EA1i.","zh_CN":"CSRF \u9A8C\u8BC1\u7B26\u65E0\u6548\uFF0C \u8BF7\u91CD\u65B0\u63D0\u4EA4.","zh_TW":"CSRF \u9A57\u8B49\u7B26\u7121\u6548\uFF0C \u8ACB\u91CD\u65B0\u63D0\u4EA4\u3002"}}};var THIS_VALUE_IS_NOT_A_VALID_HTML5_COLOR={"id":"This value is not a valid HTML5 color.","translations":{"validators":{"fr":"Cette valeur n'est pas une couleur HTML5 valide.","af":"Hierdie waarde is nie 'n geldige HTML5 kleur nie.","ar":"\u0647\u0630\u0647 \u0627\u0644\u0642\u064A\u0645\u0629 \u0644\u064A\u0633\u062A \u0644\u0648\u0646 HTML5 \u0635\u0627\u0644\u062D\u064B\u0627.","az":"Bu d\u0259y\u0259r do\u011Fru bir HTML5 r\u0259ngi deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u043D\u0435 \u0437'\u044F\u045E\u043B\u044F\u0435\u0446\u0446\u0430 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B\u043C HTML5 \u043A\u043E\u043B\u0435\u0440\u0430\u043C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D HTML5 \u0446\u0432\u044F\u0442.","bs":"Ova vrijednost nije va\u017Ee\u0107a HTML5 boja.","ca":"Aquest valor no \xE9s un color HTML5 valid.","cs":"Tato hodnota nen\xED platn\xE1 HTML5 barva.","da":"V\xE6rdien er ikke en gyldig HTML5 farve.","de":"Dieser Wert ist keine g\xFCltige HTML5 Farbe.","el":"\u0391\u03C5\u03C4\u03AE \u03B7 \u03C4\u03B9\u03BC\u03AE \u03B4\u03AD\u03BD \u03AD\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03C7\u03C1\u03CE\u03BC\u03B1 HTML5.","en":"This value is not a valid HTML5 color.","es":"Este valor no es un color HTML5 v\xE1lido.","et":"See v\xE4\xE4rtus ei ole korrektne HTML5 v\xE4rv.","eu":"Balio hori ez da HTML5 kolore onargarria.","fa":"\u0627\u06CC\u0646 \u0645\u0642\u062F\u0627\u0631 \u06CC\u06A9 \u0631\u0646\u06AF \u0645\u0639\u062A\u0628\u0631 HTML5  \u0646\u06CC\u0633\u062A.","fi":"T\xE4m\xE4 arvo ei ole kelvollinen HTML5-v\xE4ri.","gl":"Este valor non \xE9 unha cor HTML5 v\xE1lida.","he":"\u05E2\u05E8\u05DA \u05D6\u05D4 \u05D0\u05D9\u05E0\u05D5 \u05E6\u05D1\u05E2 HTML5 \u05D7\u05D5\u05E7\u05D9.","hr":"Ova vrijednost nije va\u017Ee\u0107a HTML5 boja.","hu":"Ez az \xE9rt\xE9k nem egy \xE9rv\xE9nyes HTML5 sz\xEDn.","hy":"\u0531\u0575\u057D \u0561\u0580\u056A\u0565\u0584\u0568 \u057E\u0561\u057E\u0565\u0580 HTML5 \u0563\u0578\u0582\u0575\u0576 \u0579\u0567\u0589","id":"Nilai ini bukan merupakan HTML5 color yang sah.","it":"Il valore non \xE8 un colore HTML5 valido.","ja":"\u6709\u52B9\u306AHTML5\u306E\u8272\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002","lb":"D\xEBse W\xE4ert ass keng g\xEBlteg HTML5-Faarf.","lt":"\u0160i reik\u0161m\u0117 n\u0117ra HTML5 spalva.","lv":"\u0160\u012B vert\u012Bba nav der\u012Bga HTML5 kr\u0101sa.","mk":"\u041E\u0432\u0430\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 HTML5 \u0431\u043E\u0458\u0430.","mn":"\u042D\u043D\u044D \u0443\u0442\u0433\u0430 \u0437\u04E9\u0432 HTML5 \u04E9\u043D\u0433\u04E9 \u0431\u0438\u0448 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A HTML5 \u1021\u101B\u1031\u102C\u1004\u103A\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Denne verdien er ikke en gyldig HTML5-farge.","nl":"Dit is geen geldige HTML5 kleur.","nn":"Verdien er ikkje ein gyldig HTML5-farge.","no":"Denne verdien er ikke en gyldig HTML5-farge.","pl":"Ta warto\u015B\u0107 nie jest prawid\u0142owym kolorem HTML5.","pt":"Este valor n\xE3o \xE9 uma cor HTML5 v\xE1lida.","pt_BR":"Este valor n\xE3o \xE9 uma cor HTML5 v\xE1lida.","ro":"Aceast\u0103 valoare nu este un cod de culoare HTML5 valid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u043C HTML5 \u0446\u0432\u0435\u0442\u043E\u043C.","sk":"T\xE1to hodnota nie je platn\xE1 HTML5 farba.","sl":"Ta vrednost ni veljavna barva HTML5.","sq":"Kjo vler\xEB nuk \xEBsht\xEB nj\xEB ngjyr\xEB e vlefshme HTML5.","sr_Cyrl":"\u041E\u0432\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430 HTML5 \u0431\u043E\u0458\u0430.","sr_Latn":"Ova vrednost nije ispravna HTML5 boja.","sv":"V\xE4rdet \xE4r inte en giltig HTML5-f\xE4rg.","th":"\u0E04\u0E48\u0E32\u0E19\u0E35\u0E49\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E04\u0E48\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E2D\u0E07\u0E04\u0E48\u0E32\u0E2A\u0E35 HTML5","tl":"Ang halagang ito ay hindi wastong HTML5 color.","tr":"Bu de\u011Fer, ge\xE7erli bir HTML5 rengi de\u011Fil.","uk":"\u0426\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0454 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0438\u043C \u043A\u043E\u043B\u044C\u043E\u0440\u043E\u043C HTML5.","ur":"\u0631 \u0646\u06AF \u0646\u06BE\u06CC\u06BA \u06BE\u06D2HTML \u06CC\u06BE \u0648\u0644\u06CC\u0648 \u062F\u0631 \u0633\u062A","uz":"Qiymat noto'g'ri, HTML5 rangi emas.","vi":"Gi\xE1 tr\u1ECB n\xE0y kh\xF4ng ph\u1EA3i l\xE0 m\xE0u HTML5 h\u1EE3p l\u1EC7.","zh_CN":"\u8BE5\u6570\u503C\u4E0D\u662F\u4E2A\u6709\u6548\u7684 HTML5 \u989C\u8272\u3002","zh_TW":"\u8A72\u6578\u503C\u4E0D\u662F\u500B\u6709\u6548\u7684 HTML5 \u984F\u8272\u3002"}}};var PLEASE_ENTER_A_VALID_BIRTHDATE={"id":"Please enter a valid birthdate.","translations":{"validators":{"fr":"Veuillez entrer une date de naissance valide.","af":"Voer asseblief 'n geldige geboortedatum in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062F\u062E\u0627\u0644 \u062A\u0627\u0631\u064A\u062E \u0645\u064A\u0644\u0627\u062F \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir do\u011Fum g\xFCn\xFC daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u0434\u0430\u0442\u0443 \u043D\u0430\u0440\u0430\u0434\u0436\u044D\u043D\u043D\u044F.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u0430 \u043D\u0430 \u0440\u0430\u0436\u0434\u0430\u043D\u0435.","bs":"Molim upi\u0161ite ispravan datum ro\u0111enja.","ca":"Per favor introdueix una data d'aniversari valida.","cs":"Pros\xEDm zadejte platn\xFD datum narozen\xED.","da":"Indtast venligst en gyldig f\xF8dselsdato.","de":"Bitte geben Sie ein g\xFCltiges Geburtsdatum ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03CC\u03C5\u03BC\u03B5 \u03B5\u03B9\u03C7\u03AC\u03B3\u03B5\u03C4\u03B1\u03B9 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1 \u03B3\u03AD\u03BD\u03BD\u03B7\u03C3\u03B7\u03C2.","en":"Please enter a valid birthdate.","es":"Por favor, ingrese una fecha de cumplea\xF1os v\xE1lida.","et":"Palun sisesta korrektne s\xFCnnikuup\xE4ev.","eu":"Mesedez, sartu baliozko urtebetetze-eguna.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u062A\u0627\u0631\u06CC\u062E \u062A\u0648\u0644\u062F \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u0646\u0645\u0627\u06CC\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen syntym\xE4aika.","gl":"Insire unha data de aniversario v\xE1lida.","he":"\u05E0\u05D0 \u05DC\u05D4\u05D6\u05D9\u05DF \u05D0\u05EA \u05EA\u05D0\u05E8\u05D9\u05DA \u05DC\u05D9\u05D3\u05D4 \u05EA\u05E7\u05E0\u05D9.","hr":"Molim upi\u0161ite ispravan datum ro\u0111enja.","hu":"K\xE9rj\xFCk, adjon meg egy val\xF3s sz\xFClet\xE9si d\xE1tumot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u056E\u0576\u0576\u0564\u0575\u0561\u0576 \u0561\u0574\u057D\u0561\u0569\u056B\u057E\u0589","id":"Silahkan masukkan tanggal lahir yang sah.","it":"Per favore, inserisci una data di compleanno valida.","ja":"\u6709\u52B9\u306A\u751F\u5E74\u6708\u65E5\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltege Gebuertsdatum aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 gimimo dat\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu dzim\u0161anas datumu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u0430 \u043D\u0430 \u0440\u0430\u0453\u0430\u045A\u0435.","mn":"\u0417\u04E9\u0432 \u0442\u04E9\u0440\u0441\u04E9\u043D \u043E\u043D \u0441\u0430\u0440 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1019\u103D\u1031\u1038\u1014\u1031\u1037\u1000\u102D\u102F\u1011\u100A\u1037\u103A\u1015\u102B\u104B","nb":"Vennligst oppgi gyldig f\xF8dselsdato.","nl":"Vul een geldige geboortedatum in.","nn":"Gje opp ein gyldig f\xF8dselsdato.","no":"Vennligst oppgi gyldig f\xF8dselsdato.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142ow\u0105 dat\u0119 urodzenia.","pt":"Por favor, informe uma data de nascimento v\xE1lida.","pt_BR":"Por favor, informe uma data de nascimento v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o dat\u0103 de na\u0219tere valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0434\u0430\u0442\u0443 \u0440\u043E\u0436\u0434\u0435\u043D\u0438\u044F.","sk":"Pros\xEDm zadajte platn\xFD d\xE1tum narodenia.","sl":"Prosimo, vnesite veljaven rojstni datum.","sq":"Ju lutemi shkruani nj\xEB dat\xEBlindje t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0434\u0430\u0442\u0443\u043C \u0440\u043E\u0452\u0435\u045A\u0430.","sr_Latn":"Molim upi\u0161ite ispravan datum ro\u0111enja.","sv":"Ange ett giltigt f\xF6delsedatum.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E27\u0E31\u0E19\u0E40\u0E14\u0E37\u0E2D\u0E19\u0E1B\u0E35\u0E40\u0E01\u0E34\u0E14\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang tamang petsa ng kapanganakan.","tr":"L\xFCtfen ge\xE7erli bir do\u011Fum tarihi girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0434\u0430\u0442\u0443 \u043D\u0430\u0440\u043E\u0434\u0436\u0435\u043D\u043D\u044F.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E \u067E\u06CC\u062F\u0627\u0626\u0634 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, tug'ilgan kuningizni to'g'ri kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p nga\u0300y sinh h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u751F\u65E5\u65E5\u671F\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u751F\u65E5\u65E5\u671F\u3002"}}};var THE_SELECTED_CHOICE_IS_INVALID={"id":"The selected choice is invalid.","translations":{"validators":{"fr":"Le choix s\xE9lectionn\xE9 est invalide.","af":"Die gekiesde opsie is nie geldig nie.","ar":"\u0627\u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0627\u0644\u0645\u062D\u062F\u062F \u063A\u064A\u0631 \u0635\u0627\u0644\u062D.","az":"Se\xE7ilmi\u015F se\xE7im do\u011Fru deyil.","be":"\u0412\u044B\u0431\u0440\u0430\u043D\u044B \u0432\u0430\u0440\u044B\u044F\u043D\u0442 \u043D\u0435\u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B.","bg":"\u0418\u0437\u0431\u0440\u0430\u043D\u0438\u0442\u0435 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0438 \u043D\u0435 \u0441\u0430 \u0432\u0430\u043B\u0438\u0434\u043D\u0438.","bs":"Odabrani izbor nije ispravan.","ca":"L'opci\xF3 escollida \xE9s invalida.","cs":"Vybran\xE1 mo\u017Enost nen\xED platn\xE1.","da":"Den valgte mulighed er ugyldig .","de":"Die Auswahl ist ung\xFCltig.","el":"\u0397 \u03B5\u03C0\u03B9\u03BB\u03B5\u03B3\u03BC\u03AD\u03BD\u03B7 \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE \u03B4\u03AD\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7.","en":"The selected choice is invalid.","es":"La opci\xF3n seleccionada no es v\xE1lida.","et":"Tehtud valik on vigane.","eu":"Hautatutako aukera ez da egokia.","fa":"\u06AF\u0632\u06CC\u0646\u0647\u200C \u0627\u0646\u062A\u062E\u0627\u0628\u200C \u0634\u062F\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Valittu vaihtoehto ei kelpaa.","gl":"A opci\xF3n seleccionada non \xE9 v\xE1lida.","he":"\u05D4\u05D1\u05D7\u05D9\u05E8\u05D4 \u05E9\u05E0\u05D1\u05D7\u05E8\u05D4 \u05D0\u05D9\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Odabrani izbor nije ispravan.","hu":"A kiv\xE1lasztott opci\xF3 \xE9rv\xE9nytelen.","hy":"\u0538\u0576\u057F\u0580\u057E\u0561\u056E \u0568\u0576\u057F\u0580\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0576 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Pilihan yang dipilih tidak sah.","it":"La scelta selezionata non \xE8 valida.","ja":"\u9078\u629E\u3057\u305F\u5024\u306F\u7121\u52B9\u3067\u3059\u3002","lb":"Den ausgewielte Choix ass ong\xEBlteg.","lt":"Pasirinktas pasirinkimas yra neteisingas.","lv":"Iez\u012Bm\u0113t\u0101 izv\u0113le nav der\u012Bga.","mk":"\u0418\u0437\u0431\u0440\u0430\u043D\u0430\u0442\u0430 \u043E\u043F\u0446\u0438\u0458\u0430 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","mn":"\u0421\u043E\u043D\u0433\u043E\u0441\u043E\u043D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u101E\u1004\u103A\u1037 \u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1019\u103E\u102F\u101E\u100A\u103A\u1019\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u1015\u102B\u104B","nb":"Det valgte valget er ugyldig.","nl":"Deze keuze is ongeldig.","nn":"Valget du gjorde er ikkje gyldig.","no":"Det valgte valget er ugyldig.","pl":"Wybrana warto\u015B\u0107 jest nieprawid\u0142owa.","pt":"A escolha seleccionada \xE9 inv\xE1lida.","pt_BR":"A escolha selecionada \xE9 inv\xE1lida.","ro":"Valoarea selectat\u0103 este invalid\u0103.","ru":"\u0412\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C.","sk":"Vybran\xE1 mo\u017Enos\u0165 je neplatn\xE1.","sl":"Izbira ni veljavna.","sq":"Opsioni i zgjedhur \xEBsht\xEB i pavlefsh\xEBm.","sr_Cyrl":"\u041E\u0434\u0430\u0431\u0440\u0430\u043D\u0438 \u0438\u0437\u0431\u043E\u0440 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D.","sr_Latn":"Odabrani izbor nije ispravan.","sv":"Det valda alternativet \xE4r ogiltigt.","th":"\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E35\u0E48\u0E40\u0E25\u0E34\u0E2D\u0E01\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang pinagpiliang sagot ay hindi tama.","tr":"Se\xE7ilen se\xE7im ge\xE7ersiz.","uk":"\u041E\u0431\u0440\u0430\u043D\u0438\u0439 \u0432\u0430\u0440\u0456\u0430\u043D\u0442 \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0438\u0439.","ur":"\u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u062F\u06C1 \u0627\u0646\u062A\u062E\u0627\u0628 \u063A\u0644\u0637 \u06C1\u06D2","uz":"Tanlangan parametr noto'g'ri.","vi":"L\u01B0\u0323a cho\u0323n kh\xF4ng h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u6240\u9009\u7684\u9009\u9879\u65E0\u6548\u3002","zh_TW":"\u6240\u9078\u7684\u9078\u9805\u7121\u6548\u3002"}}};var THE_COLLECTION_IS_INVALID={"id":"The collection is invalid.","translations":{"validators":{"fr":"La collection est invalide.","af":"Die versameling is nie geldig nie.","ar":"\u0627\u0644\u0645\u062C\u0645\u0648\u0639\u0629 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D\u0629.","az":"Kolleksiya do\u011Fru deyil.","be":"\u041A\u0430\u043B\u0435\u043A\u0446\u044B\u044F \u043D\u0435\u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0430.","bg":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u044F\u0442\u0430 \u043D\u0435 \u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430.","bs":"Ova kolekcija nije ispravna.","ca":"La col\xB7lecci\xF3 \xE9s invalida.","cs":"Kolekce nen\xED platn\xE1.","da":"Samlingen er ugyldig.","de":"Diese Gruppe von Feldern ist ung\xFCltig.","el":"\u0397 \u03C3\u03C5\u03BB\u03BB\u03BF\u03B3\u03AE \u03B4\u03AD\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7.","en":"The collection is invalid.","es":"La colecci\xF3n no es v\xE1lida.","et":"Kogum on vigane.","eu":"Bilduma ez da baliozkoa.","fa":"\u0627\u06CC\u0646 \u0645\u062C\u0645\u0648\u0639\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Ryhm\xE4 ei kelpaa.","gl":"A colecci\xF3n non \xE9 v\xE1lida.","he":"\u05D4\u05D0\u05D5\u05E1\u05E3 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Kolekcija nije ispravna.","hu":"A gy\u0171jtem\xE9ny \xE9rv\xE9nytelen.","hy":"\u0540\u0561\u0574\u0561\u056D\u0578\u0582\u0574\u0562\u0576 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Koleksi tidak sah.","it":"La collezione non \xE8 valida.","ja":"\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306F\u7121\u52B9\u3067\u3059\u3002","lb":"D'Kollektioun ass ong\xEBlteg.","lt":"Neteisingas s\u0105ra\u0161as.","lv":"Kolekcija nav der\u012Bga.","mk":"\u041A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430\u0442\u0430 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","mn":"\u0426\u0443\u0433\u043B\u0443\u0443\u043B\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1024 collection \u101E\u100A\u103A\u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A collection \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Samlingen er ugyldig.","nl":"Deze collectie is ongeldig.","nn":"Samlinga er ikkje gyldig.","no":"Samlingen er ugyldig.","pl":"Zbi\xF3r jest nieprawid\u0142owy.","pt":"A cole\xE7\xE3o \xE9 inv\xE1lida.","pt_BR":"A cole\xE7\xE3o \xE9 inv\xE1lida.","ro":"Colec\u021Bia nu este valid\u0103.","ru":"\u041A\u043E\u043B\u043B\u0435\u043A\u0446\u0438\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430.","sk":"Kolekcia je neplatn\xE1.","sl":"Zbirka ni veljavna.","sq":"Koleksioni \xEBsht\xEB i pavlefsh\xEBm.","sr_Cyrl":"\u041E\u0432\u0430 \u043A\u043E\u043B\u0435\u043A\u0446\u0438\u0458\u0430 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430.","sr_Latn":"Ova kolekcija nije ispravna.","sv":"Den h\xE4r samlingen \xE4r ogiltig.","th":"\u0E04\u0E2D\u0E40\u0E25\u0E47\u0E01\u0E0A\u0E31\u0E48\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi balido ang koleksyon.","tr":"Koleksiyon ge\xE7ersiz.","uk":"\u041A\u043E\u043B\u0435\u043A\u0446\u0456\u044F \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0430.","ur":"\u06CC\u06BE \u0645\u062C\u0645\u0648\u0639\u06C1 \u063A\u0644\u0637 \u06C1\u06D2","uz":"Kolleksiya noto'g'ri","vi":"Danh sa\u0301ch kh\xF4ng h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u96C6\u5408\u65E0\u6548\u3002","zh_TW":"\u96C6\u5408\u7121\u6548\u3002"}}};var PLEASE_SELECT_A_VALID_COLOR={"id":"Please select a valid color.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une couleur valide.","af":"Kies asseblief 'n geldige kleur.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0644\u0648\u0646 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir r\u0259ng se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u043A\u043E\u043B\u0435\u0440.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0446\u0432\u044F\u0442.","bs":"Molim izaberite ispravnu boju.","ca":"Per favor selecciona un color v\xE0lid.","cs":"Pros\xEDm vyberte platnou barvu.","da":"V\xE6lg venligst en gyldig farve.","de":"Bitte geben Sie eine g\xFCltige Farbe ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03C7\u03C1\u03CE\u03BC\u03B1.","en":"Please select a valid color.","es":"Por favor, seleccione un color v\xE1lido.","et":"Palun vali korrektne v\xE4rv.","eu":"Mesedez, hautatu baliozko kolore bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0631\u0646\u06AF \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen v\xE4ri.","gl":"Por favor, seleccione unha cor v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05E6\u05D1\u05E2 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravnu boju.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes sz\xEDnt.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0563\u0578\u0582\u0575\u0576\u0589","id":"Silahkan pilih warna yang sah.","it":"Per favore, seleziona un colore valido.","ja":"\u6709\u52B9\u306A\u8272\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Faarf auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 spalv\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu kr\u0101su.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0431\u043E\u0458\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u04E9\u043D\u0433\u04E9 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1021\u101B\u1031\u102C\u1004\u103A\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Velg en gyldig farge.","nl":"Kies een geldige kleur.","nn":"Gje opp ein gyldig farge.","no":"Velg en gyldig farge.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy kolor.","pt":"Por favor, selecione uma cor v\xE1lida.","pt_BR":"Por favor, selecione uma cor v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o culoare valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0446\u0432\u0435\u0442.","sk":"Pros\xEDm vyberte platn\xFA farbu.","sl":"Prosimo, izberite veljavno barvo.","sq":"Ju lutemi zgjidhni nj\xEB ngjyr\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0431\u043E\u0458\u0443.","sr_Latn":"Molim izaberite ispravnu boju.","sv":"V\xE4lj en giltig f\xE4rg.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E2A\u0E35\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipiliin ang nararapat na kulay.","tr":"L\xFCtfen ge\xE7erli bir renk se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u043A\u043E\u043B\u0456\u0440.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0631\u0646\u06AF \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri rang tanlang.","vi":"Vui lo\u0300ng cho\u0323n m\xF4\u0323t ma\u0300u h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u989C\u8272\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u984F\u8272\u3002"}}};var PLEASE_SELECT_A_VALID_COUNTRY={"id":"Please select a valid country.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner un pays valide.","af":"Kies asseblief 'n geldige land.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0628\u0644\u062F \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir \xF6lk\u0259 se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u043A\u0440\u0430\u0456\u043D\u0443.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u044A\u0440\u0436\u0430\u0432\u0430.","bs":"Molim izaberite ispravnu dr\u017Eavu.","ca":"Per favor selecciona una ciutat v\xE0lida.","cs":"Pros\xEDm vyberte platnou zemi.","da":"V\xE6lg venligst et gyldigt land.","de":"Bitte w\xE4hlen Sie ein g\xFCltiges Land aus.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03C7\u03CE\u03C1\u03B1.","en":"Please select a valid country.","es":"Por favor, seleccione un pa\xEDs v\xE1lido.","et":"Palun vali korrektne riik.","eu":"Mesedez, hautatu baliozko herrialde bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u06A9\u0634\u0648\u0631 \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen maa.","gl":"Por favor, seleccione un pa\xEDs v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05DE\u05D3\u05D9\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Molim odaberite ispravnu dr\u017Eavu.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes orsz\xE1got.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0565\u0580\u056F\u056B\u0580\u0589","id":"Silahkan pilih negara yang sah.","it":"Per favore, seleziona un paese valido.","ja":"\u6709\u52B9\u306A\u56FD\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltegt Land auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 \u0161al\u012F.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu valsti.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0437\u0435\u043C\u0458\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0443\u043B\u0441 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u102D\u102F\u1004\u103A\u1004\u1036\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg et gyldig land.","nl":"Kies een geldige landnaam.","nn":"Gje opp eit gyldig land.","no":"Vennligst velg et gyldig land.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy kraj.","pt":"Por favor, selecione um pa\xEDs v\xE1lido.","pt_BR":"Por favor, selecione um pa\xEDs v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o \u021Bar\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0441\u0442\u0440\u0430\u043D\u0443.","sk":"Pros\xEDm vyberte platn\xFA krajinu.","sl":"Prosimo, izberite veljavno dr\u017Eavo.","sq":"Ju lutemi zgjidhni nj\xEB shtet t\xEB vlefsh\xEBm.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0434\u0440\u0436\u0430\u0432\u0443.","sr_Latn":"Molim izaberite ispravnu dr\u017Eavu.","sv":"V\xE4lj ett land.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipiliin ang nararapat na bansa.","tr":"L\xFCtfen ge\xE7erli bir \xFClke se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u043A\u0440\u0430\u0457\u043D\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0645\u0644\u06A9 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri mamlakatni tanlang.","vi":"Vui lo\u0300ng cho\u0323n \u0111\xE2\u0301t n\u01B0\u01A1\u0301c h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u56FD\u5BB6\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u570B\u5BB6\u3002"}}};var PLEASE_SELECT_A_VALID_CURRENCY={"id":"Please select a valid currency.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une devise valide.","af":"Kies asseblief 'n geldige geldeenheid.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0639\u0645\u0644\u0629 \u0635\u0627\u0644\u062D\u0629.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir valyuta se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u0432\u0430\u043B\u044E\u0442\u0443.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0430\u043B\u0443\u0442\u0430.","bs":"Molim izaberite ispravnu valutu.","ca":"Per favor selecciona una moneda v\xE0lida.","cs":"Pros\xEDm vyberte platnou m\u011Bnu.","da":"V\xE6lg venligst en gyldig valuta.","de":"Bitte w\xE4hlen Sie eine g\xFCltige W\xE4hrung aus.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03C5\u03C1\u03BF \u03BD\u03CC\u03BC\u03B9\u03C3\u03BC\u03B1.","en":"Please select a valid currency.","es":"Por favor, seleccione una moneda v\xE1lida.","et":"Palun vali korrektne valuuta.","eu":"Mesedez, hautatu baliozko moneta bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0648\u0627\u062D\u062F \u067E\u0648\u0644 \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen valuutta.","gl":"Por favor, seleccione unha moeda v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05DE\u05D8\u05D1\u05E2 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravnu valutu.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes p\xE9nznemet.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0561\u0580\u056A\u0578\u0582\u0575\u0569\u0589","id":"Silahkan pilih mata uang yang sah.","it":"Per favore, seleziona una valuta valida.","ja":"\u6709\u52B9\u306A\u901A\u8CA8\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg W\xE4rung auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 valiut\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu val\u016Btu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0430\u043B\u0443\u0442\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u043C\u04E9\u043D\u0433\u04E9\u043D \u0442\u044D\u043C\u0434\u044D\u0433\u0442 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1004\u103D\u1031\u1000\u103C\u1031\u1038\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg en gyldig valuta.","nl":"Kies een geldige valuta.","nn":"Gje opp ein gyldig valuta.","no":"Vennligst velg en gyldig valuta.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142ow\u0105 walut\u0119.","pt":"Por favor, selecione uma moeda v\xE1lida.","pt_BR":"Por favor, selecione uma moeda v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o moned\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0432\u0430\u043B\u044E\u0442\u0443.","sk":"Pros\xEDm vyberte platn\xFA menu.","sl":"Prosimo, izberite veljavno valuto.","sq":"Ju lutemi zgjidhni nj\xEB monedh\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0432\u0430\u043B\u0443\u0442\u0443.","sr_Latn":"Molim izaberite ispravnu valutu.","sv":"V\xE4lj en valuta.","th":"\u0E01\u0E23\u0E38\u0E38\u0E13\u0E32\u0E40\u0E25\u0E34\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E2A\u0E01\u0E38\u0E25\u0E40\u0E07\u0E34\u0E19\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipiliin ang tamang pananalapi.","tr":"L\xFCtfen ge\xE7erli bir para birimi se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0432\u0430\u043B\u044E\u0442\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u06A9\u0631\u0646\u0633\u06CC \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri valyutani tanlang.","vi":"Vui lo\u0300ng cho\u0323n ti\xEA\u0300n t\xEA\u0323 h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u8D27\u5E01\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u8CA8\u5E63\u3002"}}};var PLEASE_CHOOSE_A_VALID_DATE_INTERVAL={"id":"Please choose a valid date interval.","translations":{"validators":{"fr":"Veuillez choisir un intervalle de dates valide.","af":"Kies asseblief 'n geldige datum interval.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0641\u0627\u0635\u0644 \u0632\u0645\u0646\u064A \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir tarix aral\u0131\u011F\u0131 se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0456\u043D\u0442\u044D\u0440\u0432\u0430\u043B \u0434\u0430\u0442.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B \u043E\u0442 \u0434\u0430\u0442\u0438.","bs":"Molim izaberite ispravan datumski interval.","ca":"Per favor escull un interval de dates v\xE0lides.","cs":"Pros\xEDm vyberte platn\xE9 rozp\u011Bt\xED dat.","da":"V\xE6lg venligst et gyldigt datointerval.","de":"Bitte w\xE4hlen Sie ein g\xFCltiges Datumsintervall.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03B4\u03B9\u03AC\u03C3\u03C4\u03B7\u03BC\u03B1 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1\u03C2.","en":"Please choose a valid date interval.","es":"Por favor, elija un intervalo de fechas v\xE1lido.","et":"Palun vali korrektne kuup\xE4evade vahemik.","eu":"Mesedez, hautatu baliozko data-tarte bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0628\u0627\u0632\u0647\u200C \u0632\u0645\u0627\u0646\u06CC \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen aikav\xE4li.","gl":"Por favor, escolla un intervalo de datas v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05DE\u05E8\u05D5\u05D5\u05D7 \u05EA\u05D0\u05E8\u05D9\u05DB\u05D9\u05DD \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravni vremenski interval.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes d\xE1tumintervallumot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u0573\u056B\u0577\u057F \u0561\u0574\u057D\u0561\u0569\u057E\u0565\u0580\u056B \u0574\u056B\u057B\u0561\u056F\u0561\u0575\u0584\u0589","id":"Silahkan pilih interval tanggal yang sah.","it":"Per favore, scegli un intervallo di date valido.","ja":"\u6709\u52B9\u306A\u65E5\u4ED8\u9593\u9694\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltegen Datumsinterval aginn.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 datos interval\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu datumu interv\u0101lu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B \u043F\u043E\u043C\u0435\u0453\u0443 \u0434\u0432\u0430 \u0434\u0430\u0442\u0443\u043C\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0446\u0430\u0433\u044B\u043D \u0437\u0430\u0439 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u1031 \u101B\u1000\u103A\u1005\u103D\u1032\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg et gyldig datointervall.","nl":"Kies een geldig tijdinterval.","nn":"Gje opp eit gyldig datointervall.","no":"Vennligst velg et gyldig datointervall.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy przedzia\u0142 czasowy.","pt":"Por favor, escolha um intervalo de datas v\xE1lido.","pt_BR":"Por favor, escolha um intervalo de datas v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi un interval de zile valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434.","sk":"Pros\xEDm vyberte platn\xFD rozsah d\xE1t.","sl":"Prosimo, izberite veljaven datumski interval.","sq":"Ju lutemi zgjidhni nj\xEB interval t\xEB vlefsh\xEBm t\xEB dat\xEBs.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0434\u0430\u0442\u0443\u043C\u0441\u043A\u0438 \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B.","sr_Latn":"Molim izaberite ispravan datumski interval.","sv":"V\xE4lj ett giltigt datumintervall.","th":"\u0E01\u0E23\u0E38\u0E13\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E0A\u0E48\u0E27\u0E07\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Piliin ang wastong agwat ng petsa.","tr":"L\xFCtfen ge\xE7erli bir tarih aral\u0131\u011F\u0131 se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0456\u043D\u0442\u0435\u0440\u0432\u0430\u043B \u0434\u0430\u0442\u0438.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E\u06CC \u0648\u0642\u0641\u06BE\u06C1 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri sana oralig'ini tanlang.","vi":"Vui lo\u0300ng cho\u0323n m\xF4\u0323t khoa\u0309ng th\u01A1\u0300i gian h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u65E5\u671F\u95F4\u9694\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u65E5\u671F\u9593\u9694\u3002"}}};var PLEASE_ENTER_A_VALID_DATE_AND_TIME={"id":"Please enter a valid date and time.","translations":{"validators":{"fr":"Veuillez saisir une date et une heure valides.","af":"Voer asseblilef 'n geldige datum en tyd in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u062A\u0627\u0631\u064A\u062E \u0648\u0648\u0642\u062A \u0635\u0627\u0644\u062D\u064A\u0646.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir tarix ve saat daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B\u044F \u0434\u0430\u0442\u0443 \u0456 \u0447\u0430\u0441.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0438 \u0434\u0430\u0442\u0430 \u0438 \u0447\u0430\u0441.","bs":"Molim upi\u0161ite ispravan datum i vrijeme.","ca":"Per favor introdueix una data i temps v\xE0lid.","cs":"Pros\xEDm zadejte platn\xFD datum a \u010Das.","da":"V\xE6lg venligst en gyldig dato og tid.","de":"Bitte geben Sie ein g\xFCltiges Datum samt Uhrzeit ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03B1\u03B3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03B9\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1 \u03BA\u03B1\u03B9 \u03CE\u03C1\u03B1.","en":"Please enter a valid date and time.","es":"Por favor, ingrese una fecha y hora v\xE1lidas.","et":"Palun sisesta korrektne kuup\xE4ev ja kellaaeg.","eu":"Mesedez, sartu baliozko data eta ordua.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u062A\u0627\u0631\u06CC\u062E \u0648 \u0632\u0645\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvolliset p\xE4iv\xE4 ja aika.","gl":"Por favor, introduza unha data e hora v\xE1lidas.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05EA\u05D0\u05E8\u05D9\u05DA \u05D5\u05E9\u05E2\u05D4 \u05EA\u05E7\u05E0\u05D9\u05DD.","hr":"Molim unesite ispravni datum i vrijeme.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes d\xE1tumot \xE9s id\u0151pontot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0561\u0574\u057D\u0561\u0569\u056B\u057E \u0587 \u056A\u0561\u0574\u0589","id":"Silahkan masukkan tanggal dan waktu yang sah.","it":"Per favore, inserisci una data e ora valida.","ja":"\u6709\u52B9\u306A\u65E5\u6642\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Datum an Z\xE4it aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 dat\u0105 ir laik\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu datumu un laiku.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0434\u0430\u0442\u0443\u043C \u0438 \u0432\u0440\u0435\u043C\u0435.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u043E\u043D \u0446\u0430\u0433 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u1031 \u101B\u1000\u103A\u1005\u103D\u1032\u1014\u103E\u1004\u103A\u1037\u1021\u1001\u103B\u102D\u1014\u103A \u1000\u102D\u102F\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst angi en gyldig dato og tid.","nl":"Vul een geldige datum en tijd in.","nn":"Gje opp ein gyldig dato og tid.","no":"Vennligst angi en gyldig dato og tid.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142ow\u0105 dat\u0119 i czas.","pt":"Por favor, informe uma data e hor\xE1rio v\xE1lidos.","pt_BR":"Por favor, informe uma data e hor\xE1rio v\xE1lidos.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o dat\u0103 \u0219i o or\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0435 \u0434\u0430\u0442\u0443 \u0438 \u0432\u0440\u0435\u043C\u044F.","sk":"Pros\xEDm zadajte platn\xFD d\xE1tum a \u010Das.","sl":"Prosimo, vnesite veljaven datum in \u010Das.","sq":"Ju lutemi shkruani nj\xEB dat\xEB dhe or\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0434\u0430\u0442\u0443\u043C \u0438 \u0432\u0440\u0435\u043C\u0435.","sr_Latn":"Molim upi\u0161ite ispravan datum i vreme.","sv":"Ange ett giltigt datum och tid.","th":"\u0E01\u0E23\u0E38\u0E13\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E40\u0E27\u0E25\u0E32\u0E41\u0E25\u0E30\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Piliin ang wastong petsa at oras.","tr":"L\xFCtfen ge\xE7erli bir tarih ve saat girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0434\u0430\u0442\u0443 \u0442\u0430 \u0447\u0430\u0441.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E \u0627\u0648\u0631 \u0648\u0642\u062A \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri sana va vaqtni kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p nga\u0300y va\u0300 th\u01A1\u0300i gian h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u65E5\u671F\u4E0E\u65F6\u95F4\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u65E5\u671F\u8207\u6642\u9593\u3002"}}};var PLEASE_ENTER_A_VALID_DATE={"id":"Please enter a valid date.","translations":{"validators":{"fr":"Veuillez entrer une date valide.","af":"Voer asseblief 'n geldige datum in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u062A\u0627\u0631\u064A\u062E \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir tarix daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u0434\u0430\u0442\u0443.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u0430.","bs":"Molim upi\u0161ite ispravan datum.","ca":"Per favor introdueix una data v\xE0lida.","cs":"Pros\xEDm zadejte platn\xFD datum.","da":"V\xE6lg venligst en gyldig dato.","de":"Bitte geben Sie ein g\xFCltiges Datum ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BC\u03B5\u03C1\u03BF\u03BC\u03B7\u03BD\u03AF\u03B1.","en":"Please enter a valid date.","es":"Por favor, ingrese una fecha valida.","et":"Palun sisesta korrektne kuup\xE4ev.","eu":"Mesedez, sartu baliozko data bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u062A\u0627\u0631\u06CC\u062E \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen p\xE4iv\xE4.","gl":"Por favor, introduce unha data v\xE1lida.","he":"\u05E0\u05D0 \u05DC\u05D4\u05D6\u05D9\u05DF \u05EA\u05D0\u05E8\u05D9\u05DA \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravan datum.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes d\xE1tumot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0561\u0574\u057D\u0561\u0569\u056B\u057E\u0589","id":"Silahkan masukkan tanggal yang sah.","it":"Per favore, inserisci una data valida.","ja":"\u6709\u52B9\u306A\u65E5\u4ED8\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBltegen Datum aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 dat\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu datumu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0434\u0430\u0442\u0443\u043C.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u043E\u043D \u0446\u0430\u0433 \u04E9\u0434\u04E9\u0440 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u1031 \u101B\u1000\u103A\u1005\u103D\u1032\u1000\u102D\u102F\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst oppgi en gyldig dato.","nl":"Vul een geldige datum in.","nn":"Gje opp ein gyldig dato.","no":"Vennligst oppgi en gyldig dato.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142ow\u0105 dat\u0119.","pt":"Por favor, informe uma data v\xE1lida.","pt_BR":"Por favor, informe uma data v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o dat\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u0434\u0430\u0442\u0443.","sk":"Pros\xEDm zadajte platn\xFD d\xE1tum.","sl":"Prosimo, izberite veljaven datum.","sq":"Ju lutemi shkruani nj\xEB dat\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0434\u0430\u0442\u0443\u043C.","sr_Latn":"Molim upi\u0161ite ispravan datum.","sv":"Ange ett giltigt datum.","th":"\u0E01\u0E23\u0E38\u0E13\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ilagay ang wastong petsa.","tr":"L\xFCtfen ge\xE7erli bir tarih giriniz.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0434\u0430\u0442\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u062A\u0627\u0631\u06CC\u062E \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri sanani kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p nga\u0300y h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u65E5\u671F\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u65E5\u671F\u3002"}}};var PLEASE_SELECT_A_VALID_FILE={"id":"Please select a valid file.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner un fichier valide.","af":"Kies asseblief 'n geldige l\xEAer.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0645\u0644\u0641 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir fayl se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0444\u0430\u0439\u043B.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0444\u0430\u0439\u043B.","bs":"Molim izaberite ispravnu datoteku.","ca":"Per favor selecciona un arxiu v\xE0lid.","cs":"Pros\xEDm vyberte platn\xFD soubor.","da":"V\xE6lg venligst en gyldig fil.","de":"Bitte w\xE4hlen Sie eine g\xFCltige Datei.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03B1\u03C1\u03C7\u03B5\u03AF\u03BF.","en":"Please select a valid file.","es":"Por favor, seleccione un archivo v\xE1lido.","et":"Palun vali korrektne fail.","eu":"Mesedez, hautatu baliozko fitxategi bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0641\u0627\u06CC\u0644 \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen tiedosto.","gl":"Por favor, seleccione un ficheiro v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05E7\u05D5\u05D1\u05E5 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravnu datoteku.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes f\xE1jlt.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0586\u0561\u0575\u056C\u0589","id":"Silahkan pilih berkas yang sah.","it":"Per favore, seleziona un file valido.","ja":"\u6709\u52B9\u306A\u30D5\u30A1\u30A4\u30EB\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltege Fichier auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 byl\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu failu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0444\u0430\u0439\u043B \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1014\u1031 \u1016\u102D\u102F\u1004\u103A\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B\u104B","nb":"Vennligst velg en gyldig fil.","nl":"Kies een geldig bestand.","nn":"Velg ei gyldig fil.","no":"Vennligst velg en gyldig fil.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy plik.","pt":"Por favor, selecione um ficheiro v\xE1lido.","pt_BR":"Por favor, selecione um arquivo v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi un fi\u0219ier valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0444\u0430\u0439\u043B.","sk":"Pros\xEDm vyberte platn\xFD s\xFAbor.","sl":"Prosimo, izberite veljavno datoteko.","sq":"Ju lutemi zgjidhni nj\xEB skedar t\xEB vlefsh\xEBm.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0434\u0430\u0442\u043E\u0442\u0435\u043A\u0443.","sr_Latn":"Molim izaberite ispravnu datoteku.","sv":"V\xE4lj en fil.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E44\u0E1F\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Piliin ang balidong file.","tr":"L\xFCtfen ge\xE7erli bir dosya se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0444\u0430\u0439\u043B.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0641\u0627\u0626\u0644 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri faylni tanlang.","vi":"Vui lo\u0300ng cho\u0323n t\xEA\u0323p h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u6587\u4EF6\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u6587\u4EF6\u3002"}}};var THE_HIDDEN_FIELD_IS_INVALID={"id":"The hidden field is invalid.","translations":{"validators":{"fr":"Le champ masqu\xE9 n'est pas valide.","af":"Die versteekte veld is nie geldig nie.","ar":"\u0627\u0644\u062D\u0642\u0644 \u0627\u0644\u0645\u062E\u0641\u064A \u063A\u064A\u0631 \u0635\u0627\u0644\u062D.","az":"Gizli sah\u0259 do\u011Fru deyil.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u0441\u0445\u0430\u0432\u0430\u043D\u0430\u0433\u0430 \u043F\u043E\u043B\u044F \u043D\u0435\u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0430.","bg":"\u0421\u043A\u0440\u0438\u0442\u043E\u0442\u043E \u043F\u043E\u043B\u0435 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E.","bs":"Skriveno polje nije ispravno.","ca":"El camp ocult \xE9s inv\xE0lid.","cs":"Skryt\xE9 pole nen\xED platn\xE9.","da":"Det skjulte felt er ugyldigt.","de":"Das versteckte Feld ist ung\xFCltig.","el":"\u03A4\u03BF \u03BA\u03C1\u03C5\u03C6\u03CC \u03C0\u03B5\u03B4\u03AF\u03BF \u03B4\u03AD\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF.","en":"The hidden field is invalid.","es":"El campo oculto no es v\xE1lido.","et":"Peidetud v\xE4li on vigane.","eu":"Eremu ezkutua ez da baliozkoa.","fa":"\u0641\u06CC\u0644\u062F \u0645\u062E\u0641\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Piilotettu kentt\xE4 ei ole kelvollinen.","gl":"O campo oculto non \xE9 v\xE1lido.","he":"\u05D4\u05E9\u05D3\u05D4 \u05D4\u05E0\u05E1\u05EA\u05E8 \u05D0\u05D9\u05E0\u05D5 \u05D7\u05D5\u05E7\u05D9.","hr":"Skriveno polje nije ispravno.","hu":"A rejtett mez\u0151 \xE9rv\xE9nytelen.","hy":"\u0539\u0561\u0584\u0576\u057E\u0561\u056E \u0564\u0561\u0577\u057F\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Ruas yang tersembunyi tidak sah.","it":"Il campo nascosto non \xE8 valido.","ja":"\u96A0\u3057\u30D5\u30A3\u30FC\u30EB\u30C9\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"Dat verstoppte Feld ass ong\xEBlteg.","lt":"Klaidingas pasl\u0117ptasis laukas.","lv":"Sl\u0113pt\u0101 lauka v\u0113rt\u012Bba ir neder\u012Bga.","mk":"\u0421\u043A\u0440\u0438\u0435\u043D\u043E\u0442\u043E \u043F\u043E\u043B\u0435 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E.","mn":"\u041D\u0443\u0443\u0446 \u0442\u0430\u043B\u0431\u0430\u0440\u044B\u043D \u0443\u0442\u0433\u0430 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1019\u101E\u1004\u103A\u1037 \u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A hidden field \u1016\u103C\u1005\u103A\u1014\u1031\u101E\u100A\u103A\u104B","nb":"Det skjulte feltet er ugyldig.","nl":"Het verborgen veld is incorrect.","nn":"Det skjulte feltet er ikkje gyldig.","no":"Det skjulte feltet er ugyldig.","pl":"Ukryte pole jest nieprawid\u0142owe.","pt":"O campo oculto \xE9 inv\xE1lido.","pt_BR":"O campo oculto \xE9 inv\xE1lido.","ro":"C\xE2mpul ascuns este invalid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0441\u043A\u0440\u044B\u0442\u043E\u0433\u043E \u043F\u043E\u043B\u044F \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E.","sk":"Skryt\xE9 pole je neplatn\xE9.","sl":"Skrito polje ni veljavno.","sq":"Fusha e fshehur \xEBsht\xEB e pavlefshme.","sr_Cyrl":"\u0421\u043A\u0440\u0438\u0432\u0435\u043D\u043E \u043F\u043E\u0459\u0435 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u043E.","sr_Latn":"Skriveno polje nije ispravno.","sv":"Det dolda f\xE4ltet \xE4r ogiltigt.","th":"\u0E04\u0E48\u0E32 Hidden field \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi balido ang field na nakatago.","tr":"Gizli alan ge\xE7ersiz.","uk":"\u041F\u0440\u0438\u0445\u043E\u0432\u0430\u043D\u0435 \u043F\u043E\u043B\u0435 \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0435.","ur":"\u067E\u0648\u0634\u06CC\u062F\u06BE\u06C1 \u0641\u06CC\u0644\u0688 \u063A\u0644\u0637 \u06C1\u06D2","uz":"Yashirin maydon qiymati yaroqsiz.","vi":"Pha\u0323m vi \xE2\u0309n kh\xF4ng h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u9690\u85CF\u5B57\u6BB5\u65E0\u6548\u3002","zh_TW":"\u96B1\u85CF\u5B57\u6BB5\u7121\u6548\u3002"}}};var PLEASE_ENTER_AN_INTEGER={"id":"Please enter an integer.","translations":{"validators":{"fr":"Veuillez saisir un entier.","af":"Voer asseblief 'n geldige heeltal in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0639\u062F\u062F \u0635\u062D\u064A\u062D.","az":"Z\u0259hm\u0259t olmasa bir tam \u0259d\u0259d daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u0446\u044D\u043B\u044B \u043B\u0456\u043A.","bg":"\u041C\u043E\u043B\u044F \u043F\u043E\u043F\u044A\u043B\u043D\u0435\u0442\u0435 \u0446\u044F\u043B\u043E \u0447\u0438\u0441\u043B\u043E.","bs":"Molim upi\u0161ite cijeli broj (integer).","ca":"Per favor introdueix un enter.","cs":"Pros\xEDm zadejte \u010D\xEDslo.","da":"Inds\xE6t veligst et heltal.","de":"Bitte geben Sie eine ganze Zahl ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03B1\u03BA\u03AD\u03C1\u03B1\u03B9\u03BF \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC.","en":"Please enter an integer.","es":"Por favor, ingrese un n\xFAmero entero.","et":"Palun sisesta t\xE4isarv.","eu":"Mesedez, sartu zenbaki oso bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0639\u062F\u062F \u0635\u062D\u06CC\u062D \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kokonaisluku.","gl":"Por favor, introduza un n\xFAmero enteiro.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05DE\u05E1\u05E4\u05E8 \u05E9\u05DC\u05DD.","hr":"Molim unesite cijeli broj.","hu":"K\xE9rj\xFCk, adjon meg egy eg\xE9sz sz\xE1mot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u0561\u0574\u0562\u0578\u0572\u057B \u0569\u056B\u057E\u0589","id":"Silahkan masukkan angka.","it":"Per favore, inserisci un numero intero.","ja":"\u6574\u6570\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng ganz Zuel aginn.","lt":"Pra\u0161ome \u012Fvesti sveik\u0105 skai\u010Di\u0173.","lv":"L\u016Bdzu, ievadiet veselu skaitli.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0446\u0435\u043B \u0431\u0440\u043E\u0458.","mn":"\u0411\u04AF\u0445\u044D\u043B \u0442\u043E\u043E \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D Integer \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u102C\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst skriv inn et heltall.","nl":"Vul een geldig getal in.","nn":"Gje opp eit heiltal.","no":"Vennligst skriv inn et heltall.","pl":"Prosz\u0119 wprowadzi\u0107 liczb\u0119 ca\u0142kowit\u0105.","pt":"Por favor, informe um inteiro.","pt_BR":"Por favor, informe um n\xFAmero inteiro.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi un num\u0103r \xEEntreg.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0446\u0435\u043B\u043E\u0435 \u0447\u0438\u0441\u043B\u043E.","sk":"Pros\xEDm zadajte cel\xE9 \u010D\xEDslo.","sl":"Prosimo, vnesite celo \u0161tevilo.","sq":"Ju lutemi shkruani nj\xEB num\xEBr t\xEB plot\xEB.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0446\u0435\u043E \u0431\u0440\u043E\u0458 (integer).","sr_Latn":"Molim upi\u0161ite ceo broj (integer).","sv":"Ange ett heltal.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E08\u0E33\u0E19\u0E27\u0E19\u0E40\u0E15\u0E47\u0E21","tl":"Pakilagay ang integer.","tr":"L\xFCtfen bir tam say\u0131 girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0446\u0456\u043B\u0435 \u0447\u0438\u0441\u043B\u043E.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u0639\u062F\u062F \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, butun son kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t s\xF4\u0301 nguy\xEAn.","zh_CN":"\u8BF7\u8F93\u5165\u6574\u6570\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6574\u6578\u3002"}}};var PLEASE_SELECT_A_VALID_LANGUAGE={"id":"Please select a valid language.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une langue valide.","af":"Kies assblief 'n geldige taal.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0644\u063A\u0629 \u0635\u0627\u0644\u062D\u0629.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir dil se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u043C\u043E\u0432\u0443.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0435\u0437\u0438\u043A.","bs":"Molim izaberite ispravan jezik.","ca":"Per favor selecciona un idioma v\xE0lid.","cs":"Pros\xEDm zadejte platn\xFD jazyk.","da":"V\xE6lg venligst et gyldigt sprog.","de":"Bitte w\xE4hlen Sie eine g\xFCltige Sprache.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B3\u03BB\u03CE\u03C3\u03C3\u03B1.","en":"Please select a valid language.","es":"Por favor, seleccione un idioma v\xE1lido.","et":"Palun vali korrektne keel.","eu":"Mesedez, hautatu baliozko hizkuntza bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0632\u0628\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen kieli.","gl":"Por favor, selecciona un idioma v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05E9\u05E4\u05D4 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravan jezik.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes nyelvet.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u056C\u0565\u0566\u0578\u0582\u0589","id":"Silahlan pilih bahasa yang sah.","it":"Per favore, seleziona una lingua valida.","ja":"\u6709\u52B9\u306A\u8A00\u8A9E\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltegt Sprooch auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 kalb\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu valodu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0458\u0430\u0437\u0438\u043A.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0445\u044D\u043B \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1018\u102C\u101E\u102C\u1005\u1000\u102C\u1038\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B\u104B","nb":"Vennligst velg et gyldig spr\xE5k.","nl":"Kies een geldige taal.","nn":"Gje opp eit gyldig spr\xE5k.","no":"Vennligst velg et gyldig spr\xE5k.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy j\u0119zyk.","pt":"Por favor selecione um idioma v\xE1lido.","pt_BR":"Por favor, selecione um idioma v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o limb\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u044F\u0437\u044B\u043A.","sk":"Pros\xEDm vyberte platn\xFD jazyk.","sl":"Prosimo, izberite veljaven jezik.","sq":"Please select a valid language.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0458\u0435\u0437\u0438\u043A.","sr_Latn":"Molim izaberite ispravan jezik.","sv":"V\xE4lj spr\xE5k.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E20\u0E32\u0E29\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Piliin ang nararapat na lengguwahe.","tr":"L\xFCtfen ge\xE7erli bir dil se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u043C\u043E\u0432\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0632\u0628\u0627\u0646 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri tilni tanlang.","vi":"Vui lo\u0300ng cho\u0323n ng\xF4n ng\u01B0\u0303 h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u8BED\u8A00\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u8A9E\u8A00\u3002"}}};var PLEASE_SELECT_A_VALID_LOCALE={"id":"Please select a valid locale.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une langue valide.","af":"Voer assebliefn 'n geldige locale in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0627\u062E\u062A\u064A\u0627\u0631 \u0644\u063A\u0629 \u0635\u0627\u0644\u062D\u0629.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir yer se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u043B\u0430\u043A\u0430\u043B\u044C.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0435\u0437\u0438\u043A.","bs":"Molim izaberite ispravnu lokalizaciju.","ca":"Per favor seleccioneu una configuraci\xF3 regional v\xE0lida","cs":"Pros\xEDm zadejte platn\xFD jazyk.","da":"V\xE6lg venligst en gyldigt sprogkode.","de":"Bitte w\xE4hlen Sie eine g\xFCltige Locale-Einstellung aus.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03C4\u03BF\u03C0\u03B9\u03BA\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7.","en":"Please select a valid locale.","es":"Por favor, seleccione una configuraci\xF3n regional v\xE1lida.","et":"Palun vali korrektne keelekood.","eu":"Mesedez, hautatu baliozko eskualde-konfigurazio bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0645\u0646\u0637\u0642\u0647\u200C\u062C\u063A\u0631\u0627\u0641\u06CC\u0627\u06CC\u06CC (locale) \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen kielikoodi.","gl":"Por favor, seleccione unha configuraci\xF3n rexional v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05E9\u05E4\u05D4 \u05DE\u05E7\u05D5\u05DE\u05D9\u05EA.","hr":"Molim odaberite ispravnu lokalizaciju.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes ter\xFCleti be\xE1ll\xEDt\xE1st.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u057F\u0565\u0572\u0561\u0575\u0576\u0561\u0581\u0578\u0582\u0574\u0589","id":"Silahkan pilih local yang sah.","it":"Per favore, seleziona una lingua valida.","ja":"\u6709\u52B9\u306A\u30ED\u30B1\u30FC\u30EB\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltegt Regionalschema auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 lokal\u0119.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu lokaliz\u0101ciju.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0458\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0431\u04AF\u0441 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C locale \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B\u104B","nb":"Vennligst velg et gyldig sted.","nl":"Kies een geldige locale.","nn":"Gje opp eit gyldig locale.","no":"Vennligst velg et gyldig sted.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142ow\u0105 lokalizacj\u0119.","pt":"Por favor, selecione um locale v\xE1lido.","pt_BR":"Por favor, selecione uma configura\xE7\xE3o de local v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o setare local\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0443\u044E \u043B\u043E\u043A\u0430\u043B\u044C.","sk":"Pros\xEDm vyberte platn\xE9 miestne nastavenia.","sl":"Prosimo, izberite veljavne podro\u010Dne nastavitve.","sq":"Ju lutemi zgjidhni nj\xEB lokale t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u043B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0458\u0443.","sr_Latn":"Molim izaberite ispravnu lokalizaciju.","sv":"V\xE4lj plats.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E49\u0E2D\u0E07\u0E16\u0E34\u0E48\u0E19\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipili ang nararapat na locale.","tr":"L\xFCtfen ge\xE7erli bir yerel ayar se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u043B\u043E\u043A\u0430\u043B\u044C.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0645\u0642\u0627\u0645 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri localni tanlang.","vi":"Vui lo\u0300ng cho\u0323n mi\xEA\u0300n h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u8BED\u8A00\u73AF\u5883\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u8A9E\u8A00\u74B0\u5883\u3002"}}};var PLEASE_ENTER_A_VALID_MONEY_AMOUNT={"id":"Please enter a valid money amount.","translations":{"validators":{"fr":"Veuillez saisir un montant valide.","af":"Voer asseblief 'n geldige bedrag in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0645\u0628\u0644\u063A \u0645\u0627\u0644\u064A \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir pul miqdar\u0131 daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0443\u044E \u043A\u043E\u043B\u044C\u043A\u0430\u0441\u0446\u044C \u0433\u0440\u043E\u0448\u0430\u0439.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043F\u0430\u0440\u0438\u0447\u043D\u0430 \u0441\u0443\u043C\u0430.","bs":"Molim upi\u0161ite ispravnu koli\u010Dinu novca.","ca":"Per favor introdueix una quantitat de diners v\xE0lids.","cs":"Pros\xEDm zadejte platnou \u010D\xE1stku.","da":"V\xE6lg venligst et gyldigt bel\xF8b.","de":"Bitte geben Sie einen g\xFCltigen Geldbetrag ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03C7\u03C1\u03B7\u03BC\u03B1\u03C4\u03B9\u03BA\u03CC \u03C0\u03BF\u03C3\u03CC.","en":"Please enter a valid money amount.","es":"Por favor, ingrese una cantidad de dinero v\xE1lida.","et":"Palun sisesta korrektne rahaline v\xE4\xE4rtus.","eu":"Mesedez, sartu baliozko diru-kopuru bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0645\u0642\u062F\u0627\u0631 \u067E\u0648\u0644 \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen rahasumma.","gl":"Por favor, introduza unha cantidade de di\xF1eiro v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05E1\u05DB\u05D5\u05DD \u05DB\u05E1\u05E3 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim unesite ispravan iznos novca.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes p\xE9nz\xF6sszeget.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0563\u0578\u0582\u0574\u0561\u0580\u0589","id":"Silahkan masukkan nilai uang yang sah.","it":"Per favore, inserisci un importo valido.","ja":"\u6709\u52B9\u306A\u91D1\u984D\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Geldzomm aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 pinig\u0173 sum\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu naudas lielumu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u0443\u043C\u0430 \u043D\u0430 \u043F\u0430\u0440\u0438.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u043C\u04E9\u043D\u0433\u04E9\u043D\u0438\u0439 \u0445\u044D\u043C\u0436\u044D\u044D \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1015\u102D\u102F\u1000\u103A\u1006\u1036\u1015\u1019\u102C\u100F \u1000\u102D\u102F\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst angi et gyldig pengebel\xF8p.","nl":"Vul een geldig bedrag in.","nn":"Gje opp ein gyldig sum pengar.","no":"Vennligst angi et gyldig pengebel\xF8p.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142ow\u0105 ilo\u015B\u0107 pieni\u0119dzy.","pt":"Por favor, informe um valor monet\xE1rio v\xE1lido.","pt_BR":"Por favor, informe um valor monet\xE1rio v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o valoare monetar\u0103 corect\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0434\u0435\u043D\u0435\u0433.","sk":"Pros\xEDm zadajte platn\xFA \u010Diastku.","sl":"Prosimo, vnesite veljaven denarni znesek.","sq":"Ju lutemi shkruani nj\xEB shum\xEB t\xEB vlefshme parash.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u043A\u043E\u043B\u0438\u0447\u0438\u043D\u0443 \u043D\u043E\u0432\u0446\u0430.","sr_Latn":"Molim upi\u0161ite ispravnu koli\u010Dinu novca.","sv":"Ange en giltig summa pengar.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E08\u0E33\u0E19\u0E27\u0E19\u0E40\u0E07\u0E34\u0E19\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang tamang halaga ng pera.","tr":"L\xFCtfen ge\xE7erli bir para tutar\u0131 girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0441\u0443\u043C\u0443 \u0433\u0440\u043E\u0448\u0435\u0439.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0631\u0642\u0645 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, tegishli miqdordagi pulni kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t khoa\u0309ng ti\xEA\u0300n h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6B63\u786E\u7684\u91D1\u989D\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6B63\u78BA\u7684\u91D1\u984D\u3002"}}};var PLEASE_ENTER_A_NUMBER={"id":"Please enter a number.","translations":{"validators":{"fr":"Veuillez saisir un nombre.","af":"Voer asseblief 'n nommer in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0631\u0642\u0645.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir r\u0259q\u0259m daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043D\u0443\u043C\u0430\u0440.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0447\u0438\u0441\u043B\u043E.","bs":"Molim upi\u0161ite broj.","ca":"Per favor introdueix un n\xFAmero.","cs":"Pros\xEDm zadejte \u010D\xEDslo.","da":"Indtast venligst et nummer.","de":"Bitte geben Sie eine g\xFCltige Zahl ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC.","en":"Please enter a number.","es":"Por favor, ingrese un n\xFAmero.","et":"Palun sisesta number.","eu":"Mesedez, sartu zenbaki bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0639\u062F\u062F \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 numero.","gl":"Por favor, introduza un n\xFAmero.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05DE\u05E1\u05E4\u05E8.","hr":"Molim unesite broj.","hu":"K\xE9rj\xFCk, adjon meg egy sz\xE1mot.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u0570\u0561\u0574\u0561\u0580\u0589","id":"Silahkan masukkan sebuah angka","it":"Per favore, inserisci un numero.","ja":"\u6570\u5024\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng Zuel aginn.","lt":"Pra\u0161ome \u012Fvesti numer\u012F.","lv":"L\u016Bdzu, ievadiet skaitli.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0431\u0440\u043E\u0458.","mn":"\u0422\u043E\u043E \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1014\u1036\u1015\u102B\u1010\u103A \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1015\u102B\u104B","nb":"Vennligst skriv inn et nummer.","nl":"Vul een geldig getal in.","nn":"Gje opp eit nummer.","no":"Vennligst skriv inn et nummer.","pl":"Prosz\u0119 wprowadzi\u0107 liczb\u0119.","pt":"Por favor, informe um n\xFAmero.","pt_BR":"Por favor, informe um n\xFAmero.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi un num\u0103r.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u043E\u043C\u0435\u0440.","sk":"Pros\xEDm zadajte \u010D\xEDslo.","sl":"Prosimo, vnesite \u0161tevilko.","sq":"Ju lutemi shkruani nj\xEB num\xEBr.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0431\u0440\u043E\u0458.","sr_Latn":"Molim upi\u0161ite broj.","sv":"Ange en siffra.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02","tl":"Ilagay ang numero.","tr":"L\xFCtfen bir numara giriniz.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0447\u0438\u0441\u043B\u043E.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u0646\u0645\u0628\u0631 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, raqam kiriting.","vi":"Vui l\xF2ng nh\u1EADp m\u1ED9t con s\u1ED1.","zh_CN":"\u8BF7\u8F93\u5165\u6570\u5B57\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6578\u5B57\u3002"}}};var THE_PASSWORD_IS_INVALID={"id":"The password is invalid.","translations":{"validators":{"fr":"Le mot de passe est invalide.","af":"Die wagwoord is ongeldig.","ar":"\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D\u0629.","az":"Parol do\u011Fru deyil.","be":"\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043F\u0430\u0440\u043E\u043B\u044C.","bg":"\u041F\u0430\u0440\u043E\u043B\u0430\u0442\u0430 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430.","bs":"Ova lozinka nije ispravna.","ca":"La contrasenya es inv\xE0lida.","cs":"Heslo nen\xED platn\xE9.","da":"Passwordet er ugyldigt.","de":"Das Kennwort ist ung\xFCltig.","el":"\u039F \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC\u03C2 \u03B4\u03AD\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2.","en":"The password is invalid.","es":"La contrase\xF1a no es v\xE1lida.","et":"Vigane parool.","eu":"Pasahitza ez da zuzena.","fa":"\u0631\u0645\u0632\u0639\u0628\u0648\u0631 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Salasana ei kelpaa.","gl":"O contrasinal non \xE9 v\xE1lido.","he":"\u05D4\u05E1\u05D9\u05E1\u05DE\u05D4 \u05D0\u05D9\u05E0\u05D4 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Ova lozinka nije ispravna.","hu":"A jelsz\xF3 \xE9rv\xE9nytelen.","hy":"\u0533\u0561\u0572\u057F\u0576\u0561\u0562\u0561\u057C\u0576 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0567\u0589","id":"Kata sandi tidak sah.","it":"La password non \xE8 valida.","ja":"\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"D'Passwuert ass ong\xEBlteg.","lt":"Klaidingas slapta\u017Eodis.","lv":"Parole ir neder\u012Bga.","mk":"\u041B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430 \u0435 \u043F\u043E\u0433\u0440\u0435\u0448\u043D\u0430.","mn":"\u041D\u0443\u0443\u0446 \u04AF\u0433 \u0431\u0443\u0440\u0443\u0443 \u0431\u0430\u0439\u043D\u0430.","my":"\u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1005\u1000\u102C\u1038\u1040\u103E\u1000\u103A\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Passordet er ugyldig.","nl":"Het wachtwoord is incorrect.","nn":"Passordet er ikkje gyldig.","no":"Passordet er ugyldig.","pl":"Has\u0142o jest nieprawid\u0142owe.","pt":"A palavra-passe \xE9 inv\xE1lida.","pt_BR":"A senha \xE9 inv\xE1lida.","ro":"Parola nu este valid\u0103.","ru":"\u041F\u0430\u0440\u043E\u043B\u044C \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u0435\u043D.","sk":"Heslo je nepr\xE1vne.","sl":"Geslo ni veljavno.","sq":"Fjal\xEBkalimi \xEBsht\xEB i pavlefsh\xEBm.","sr_Cyrl":"\u041E\u0432\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430 \u043D\u0438\u0458\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0430.","sr_Latn":"Ova lozinka nije ispravna.","sv":"L\xF6senordet \xE4r ogiltigt.","th":"\u0E23\u0E2B\u0E31\u0E2A\u0E1C\u0E48\u0E32\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Hindi balido ang password.","tr":"\u015Eifre ge\xE7ersiz.","uk":"\u041F\u0430\u0440\u043E\u043B\u044C \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0438\u0439.","ur":"\u067E\u0627\u0633 \u0648\u0631\u0688 \u063A\u0644\u0637 \u06C1\u06D2","uz":"Parol noto'g'ri.","vi":"M\xE2\u0323t kh\xE2\u0309u kh\xF4ng h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u5BC6\u7801\u65E0\u6548\u3002","zh_TW":"\u5BC6\u78BC\u7121\u6548\u3002"}}};var PLEASE_ENTER_A_PERCENTAGE_VALUE={"id":"Please enter a percentage value.","translations":{"validators":{"fr":"Veuillez saisir un pourcentage valide.","af":"Voer asseblief 'n geldige persentasie waarde in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0642\u064A\u0645\u0629 \u0627\u0644\u0646\u0633\u0628\u0629 \u0627\u0644\u0645\u0626\u0648\u064A\u0629.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir faiz d\u0259y\u0259ri daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043F\u0440\u0430\u0446\u044D\u043D\u0442\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442.","bs":"Molim upi\u0161ite procentualnu vrijednost.","ca":"Per favor introdueix un valor percentual.","cs":"Pros\xEDm zadejte procentu\xE1ln\xED hodnotu.","da":"Indtast venligst en procentv\xE6rdi.","de":"Bitte geben Sie einen g\xFCltigen Prozentwert ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03C0\u03BF\u03C3\u03BF\u03C3\u03C4\u03B9\u03B1\u03AF\u03B1 \u03C4\u03B9\u03BC\u03AE.","en":"Please enter a percentage value.","es":"Por favor, ingrese un valor porcentual.","et":"Palun sisesta protsendiline v\xE4\xE4rtus.","eu":"Mesedez, sartu portzentajezko balio bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u062F\u0631\u0635\u062F \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 prosenttiluku.","gl":"Por favor, introduza un valor porcentual.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05E2\u05E8\u05DA \u05D1\u05D0\u05D7\u05D5\u05D6\u05D9\u05DD.","hr":"Molim unesite vrijednost postotka.","hu":"K\xE9rj\xFCk, adjon meg egy sz\xE1zal\xE9kos \xE9rt\xE9ket.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057F\u0578\u056F\u0578\u057D\u0561\u0575\u056B\u0576 \u0561\u0580\u056A\u0565\u0584\u0589","id":"Silahkan masukkan sebuah nilai persentase.","it":"Per favore, inserisci un valore percentuale.","ja":"\u30D1\u30FC\u30BB\u30F3\u30C8\u5024\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e Prozentw\xE4ert aginn.","lt":"Pra\u0161ome \u012Fvesti procentin\u0119 reik\u0161m\u0119.","lv":"L\u016Bdzu, ievadiet procentu\u0101lo lielumu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u0443\u0430\u043B\u043D\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442.","mn":"\u0425\u0443\u0432\u044C \u0443\u0442\u0433\u0430 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u101B\u102C\u1001\u102D\u102F\u1004\u103A\u1014\u103E\u102F\u1014\u103A\u1038\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1011\u100A\u1037\u103A\u1015\u102B\u104B","nb":"Vennligst angi en prosentverdi.","nl":"Vul een geldig percentage in.","nn":"Gje opp ein prosentverdi.","no":"Vennligst angi en prosentverdi.","pl":"Prosz\u0119 wprowadzi\u0107 warto\u015B\u0107 procentow\u0105.","pt":"Por favor, informe um valor percentual.","pt_BR":"Por favor, informe um valor percentual.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o valoare procentual\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435.","sk":"Pros\xEDm zadajte percentu\xE1lnu hodnotu.","sl":"Prosimo, vnesite odstotno vrednost.","sq":"Ju lutemi shkruani nj\xEB vler\xEB p\xEBrqindjeje.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u0443\u0430\u043B\u043D\u0443 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442.","sr_Latn":"Molim upi\u0161ite procentualnu vrednost.","sv":"Ange ett procentuellt v\xE4rde.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E40\u0E1B\u0E2D\u0E23\u0E4C\u0E40\u0E0B\u0E47\u0E19\u0E15\u0E4C","tl":"Pakilagay ang tamang porsyento ng halaga.","tr":"L\xFCtfen bir y\xFCzde de\u011Feri girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u043D\u0442\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F.","ur":"\u0628\u0631\u0627\u06C1 \u06A9\u0631\u0645 \u0641\u06CC\u0635\u062F \u06A9\u06CC \u0648\u064A\u0644\u0648 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, foyizli qiymat kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t gia\u0301 tri\u0323 ph\xE2\u0300n tr\u0103m.","zh_CN":"\u8BF7\u8F93\u5165\u767E\u5206\u6BD4\u503C\u3002","zh_TW":"\u8ACB\u8F38\u5165\u767E\u5206\u6BD4\u503C\u3002"}}};var THE_VALUES_DO_NOT_MATCH={"id":"The values do not match.","translations":{"validators":{"fr":"Les valeurs ne correspondent pas.","af":"Die waardes is nie dieselfde nie.","ar":"\u0627\u0644\u0642\u064A\u0645 \u0644\u0627 \u062A\u062A\u0637\u0627\u0628\u0642.","az":"D\u0259y\u0259rl\u0259r \xF6rt\xFC\u015Fm\xFCr.","be":"\u0417\u043D\u0430\u0447\u044D\u043D\u043D\u0456 \u043D\u0435 \u0441\u0443\u043F\u0430\u0434\u0430\u044E\u0446\u044C.","bg":"\u0421\u0442\u043E\u0439\u043D\u043E\u0441\u0442\u0438\u0442\u0435 \u043D\u0435 \u0441\u044A\u0432\u043F\u0430\u0434\u0430\u0442.","bs":"Date vrijednosti se ne poklapaju.","ca":"Els valors no coincideixen.","cs":"Hodnoty se neshoduj\xED.","da":"V\xE6rdierne er ikke ens.","de":"Die Werte stimmen nicht \xFCberein.","el":"\u039F\u03B9 \u03C4\u03B9\u03BC\u03AD\u03C2 \u03B4\u03AD\u03BD \u03C4\u03B1\u03B9\u03C1\u03B9\u03AC\u03B6\u03BF\u03C5\u03BD.","en":"The values do not match.","es":"Los valores no coinciden.","et":"V\xE4\xE4rtused ei klapi.","eu":"Balioak ez datoz bat.","fa":"\u0645\u0642\u0627\u062F\u06CC\u0631 \u062A\u0637\u0627\u0628\u0642 \u0646\u062F\u0627\u0631\u0646\u062F.","fi":"Arvot eiv\xE4t vastaa toisiaan.","gl":"Os valores non coinciden.","he":"\u05D4\u05E2\u05E8\u05DB\u05D9\u05DD \u05D0\u05D9\u05E0\u05DD \u05EA\u05D5\u05D0\u05DE\u05D9\u05DD.","hr":"Ove vrijednosti se ne poklapaju.","hu":"Az \xE9rt\xE9kek nem egyeznek.","hy":"\u0531\u0580\u056A\u0565\u0584\u0576\u0565\u0580\u0568 \u0579\u0565\u0576 \u0570\u0561\u0574\u0568\u0576\u056F\u0576\u0578\u0582\u0574\u0589","id":"Nilainya tidak cocok.","it":"I valori non corrispondono.","ja":"\u5024\u304C\u4E00\u81F4\u3057\u307E\u305B\u3093\u3002","lb":"D'W\xE4erter st\xEBmmen net iwwereneen.","lt":"Reik\u0161m\u0117s nesutampa.","lv":"V\u0113rt\u012Bbas nesakr\u012Bt.","mk":"\u0412\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438\u0442\u0435 \u043D\u0435 \u0441\u0435 \u0441\u043E\u0432\u043F\u0430\u0453\u0430\u0430\u0442.","mn":"\u0423\u0442\u0433\u0430 \u0445\u043E\u043E\u0440\u043E\u043D\u0434\u043E\u043E \u0442\u0430\u0430\u0440\u0430\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"\u1010\u1014\u103A\u1016\u102D\u102F\u1038\u1019\u103B\u102C\u1038\u1000\u102D\u102F\u1000\u103A\u100A\u102E\u1019\u103E\u102F\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Verdiene stemmer ikke overens.","nl":"De waardes komen niet overeen.","nn":"Verdiane er ikkje eins.","no":"Verdiene stemmer ikke overens.","pl":"Warto\u015Bci si\u0119 nie zgadzaj\u0105.","pt":"Os valores n\xE3o correspondem.","pt_BR":"Os valores n\xE3o conferem.","ro":"Valorile nu coincid.","ru":"\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u044F \u043D\u0435 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u044E\u0442.","sk":"Hodnoty nie s\xFA zhodn\xE9.","sl":"Vrednosti se ne ujemajo.","sq":"Vlerat nuk p\xEBrputhen.","sr_Cyrl":"\u0414\u0430\u0442\u0435 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0438 \u0441\u0435 \u043D\u0435 \u043F\u043E\u043A\u043B\u0430\u043F\u0430\u0458\u0443.","sr_Latn":"Date vrednosti se ne poklapaju.","sv":"De angivna v\xE4rdena st\xE4mmer inte \xF6verens.","th":"\u0E04\u0E48\u0E32\u0E17\u0E31\u0E49\u0E07\u0E2A\u0E2D\u0E07\u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E19","tl":"Hindi tugma ang mga halaga.","tr":"De\u011Ferler e\u015Fle\u015Fmiyor.","uk":"\u0417\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u043D\u0435 \u0437\u0431\u0456\u0433\u0430\u044E\u0442\u044C\u0441\u044F.","ur":"\u0648\u064A\u0644\u064A\u0648\u0630 \u0679\u06BE\u064A\u06A9 \u0646\u06C1\u06CC\u06BA \u06C1\u06CC\u06BA","uz":"Qiymatlar mos kelmaydi.","vi":"Ca\u0301c gia\u0301 tri\u0323 kh\xF4ng phu\u0300 h\u01A1\u0323p.","zh_CN":"\u6570\u503C\u4E0D\u5339\u914D\u3002","zh_TW":"\u6578\u503C\u4E0D\u5339\u914D\u3002"}}};var PLEASE_ENTER_A_VALID_TIME={"id":"Please enter a valid time.","translations":{"validators":{"fr":"Veuillez saisir une heure valide.","af":"Voer asseblief 'n geldige tyd in time.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0648\u0642\u062A \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir saat daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0447\u0430\u0441.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","bs":"Molim upi\u0161ite ispravno vrijeme.","ca":"Per favor introdueix un temps v\xE0lid.","cs":"Pros\xEDm zadejte platn\xFD \u010Das.","da":"Indtast venligst en gyldig tid.","de":"Bitte geben Sie eine g\xFCltige Uhrzeit ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03CE\u03C1\u03B1.","en":"Please enter a valid time.","es":"Por favor, ingrese una hora v\xE1lida.","et":"Palun sisesta korrektne aeg.","eu":"Mesedez, sartu baliozko ordu bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0632\u0645\u0627\u0646 \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen kellonaika.","gl":"Por favor, introduza unha hora v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05E9\u05E2\u05D4 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim unesite ispravno vrijeme.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes id\u0151pontot.","hy":"\u0544\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u0584 \u057E\u0561\u057E\u0565\u0580 \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0589","id":"Silahkan masukkan waktu yang sah.","it":"Per favore, inserisci un orario valido.","ja":"\u6709\u52B9\u306A\u6642\u9593\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Z\xE4it aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 laik\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu laiku.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0446\u0430\u0433 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1021\u1001\u103B\u102D\u1014\u103A\u1000\u102D\u102F\u1011\u100A\u1037\u103A\u1015\u102B\u104B","nb":"Vennligst angi et gyldig tidspunkt.","nl":"Vul een geldige tijd in.","nn":"Gje opp ei gyldig tid.","no":"Vennligst angi et gyldig tidspunkt.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142owy czas.","pt":"Por favor, informe uma hora v\xE1lida.","pt_BR":"Por favor, informe um hor\xE1rio v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o or\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0435 \u0432\u0440\u0435\u043C\u044F.","sk":"Pros\xEDm zadajte platn\xFD \u010Das.","sl":"Prosimo, vnesite veljaven \u010Das.","sq":"Ju lutemi shkruani nj\xEB koh\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u043E \u0432\u0440\u0435\u043C\u0435.","sr_Latn":"Molim upi\u0161ite ispravno vreme.","sv":"Ange en giltig tid.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E40\u0E27\u0E25\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang tamang oras.","tr":"L\xFCtfen ge\xE7erli bir zaman girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0447\u0430\u0441.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0648\u0642\u062A \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri vaqtni tanlang.","vi":"Vui lo\u0300ng nh\xE2\u0323p th\u01A1\u0300i gian h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u65F6\u95F4\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u6642\u9593\u3002"}}};var PLEASE_SELECT_A_VALID_TIMEZONE={"id":"Please select a valid timezone.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner un fuseau horaire valide.","af":"Kies asseblief 'n geldige tydsone.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u062A\u062D\u062F\u064A\u062F \u0645\u0646\u0637\u0642\u0629 \u0632\u0645\u0646\u064A\u0629 \u0635\u0627\u0644\u062D\u0629.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir saat qur\u015Fa\u011F\u0131 se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0433\u0430\u0434\u0437\u0456\u043D\u043D\u044B \u043F\u043E\u044F\u0441.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0447\u0430\u0441\u043E\u0432\u0430 \u0437\u043E\u043D\u0430.","bs":"Molim izaberite ispravnu vremensku zonu.","ca":"Per favor selecciona una zona hor\xE0ria v\xE0lida.","cs":"Pros\xEDm vyberte platn\xE9 \u010Dasov\xE9 p\xE1smo.","da":"V\xE6lg venligst en gyldig tidszone.","de":"Bitte w\xE4hlen Sie eine g\xFCltige Zeitzone.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03C5\u03C1\u03B7 \u03B6\u03CE\u03BD\u03B7 \u03CE\u03C1\u03B1\u03C2.","en":"Please select a valid timezone.","es":"Por favor, seleccione una zona horaria v\xE1lida.","et":"Palun vali korrektne ajav\xF6\xF6nd.","eu":"Mesedez, hautatu baliozko ordu-eremua.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0645\u0646\u0637\u0642\u0647\u200C\u0632\u0645\u0627\u0646\u06CC \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen aikavy\xF6hyke.","gl":"Por favor, selecciona unha zona horaria v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05D0\u05D6\u05D5\u05E8 \u05D6\u05DE\u05DF \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravnu vremensku zonu.","hu":"K\xE9rj\xFCk, v\xE1lasszon \xE9rv\xE9nyes id\u0151z\xF3n\xE1t.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u056A\u0561\u0574\u0561\u0575\u056B\u0576 \u0563\u0578\u057F\u056B\u0589","id":"Silahkan pilih zona waktu yang sah.","it":"Per favore, seleziona un fuso orario valido.","ja":"\u6709\u52B9\u306A\u30BF\u30A4\u30E0\u30BE\u30FC\u30F3\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Z\xE4itzon auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 laiko zon\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu laika zonu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u0441\u043A\u0430 \u0437\u043E\u043D\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0446\u0430\u0433\u044B\u043D \u0431\u04AF\u0441 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u1021\u1001\u103B\u102D\u1014\u103A\u1007\u102F\u1014\u103A\u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg en gyldig tidssone.","nl":"Vul een geldige tijdzone in.","nn":"Gje opp ei gyldig tidssone.","no":"Vennligst velg en gyldig tidssone.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142ow\u0105 stref\u0119 czasow\u0105.","pt":"Por favor, selecione um fuso hor\xE1rio v\xE1lido.","pt_BR":"Por favor, selecione um fuso hor\xE1rio v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi un fus orar valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0447\u0430\u0441\u043E\u0432\u043E\u0439 \u043F\u043E\u044F\u0441.","sk":"Pros\xEDm vyberte platn\xE9 \u010Dasov\xE9 p\xE1smo.","sl":"Prosimo, izberite veljaven \u010Dasovni pas.","sq":"Ju lutemi zgjidhni nj\xEB zon\xEB kohore t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0432\u0440\u0435\u043C\u0435\u043D\u0441\u043A\u0443 \u0437\u043E\u043D\u0443.","sr_Latn":"Molim izaberite ispravnu vremensku zonu.","sv":"V\xE4lj en tidszon.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E40\u0E02\u0E15\u0E40\u0E27\u0E25\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang tamang sona ng oras.","tr":"L\xFCtfen ge\xE7erli bir saat dilimi se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0447\u0430\u0441\u043E\u0432\u0438\u0439 \u043F\u043E\u044F\u0441.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0679\u0627\u0626\u0645 \u0632\u0648\u0646 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri vaqt zonasini tanlang.","vi":"Vui lo\u0300ng cho\u0323n mu\u0301i gi\u01A1\u0300 h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u65F6\u533A\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u6642\u5340\u3002"}}};var PLEASE_ENTER_A_VALID_URL={"id":"Please enter a valid URL.","translations":{"validators":{"fr":"Veuillez saisir une URL valide.","af":"Voer asseblief 'n geldige URL in.","ar":"\u0623\u062F\u062E\u0644 \u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0631\u0627\u0628\u0637 \u0635\u062D\u064A\u062D \u0645\u0646 \u0641\u0636\u0644\u0643.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir URL daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B URL.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D URL.","bs":"Molim upi\u0161ite ispravan URL.","ca":"Per favor introdueix una URL v\xE0lida.","cs":"Pros\xEDm zadejte platnou URL.","da":"Indtast venligst en gyldig URL.","de":"Bitte geben Sie eine g\xFCltige URL ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03B9\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7 URL.","en":"Please enter a valid URL.","es":"Por favor, ingrese una URL v\xE1lida.","et":"Palun sisesta korrektne URL.","eu":"Mesedez, sartu baliozko URL bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 URL \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen URL.","gl":"Por favor, introduce un URL v\xE1lido.","he":"\u05E0\u05D0 \u05DC\u05D4\u05D6\u05D9\u05DF \u05D0\u05EA \u05DB\u05EA\u05D5\u05D1\u05EA \u05D0\u05EA\u05E8 \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Molim unesite ispravan URL.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes URL-t.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 URL\u0589","id":"Silahkan masukkan URL yang sah.","it":"Per favore, inserisci un URL valido.","ja":"\u6709\u52B9\u306AURL\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg URL aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 URL.","lv":"L\u016Bdzu, ievadiet der\u012Bgu URL.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0443\u043D\u0438\u0444\u043E\u0440\u043C\u0435\u043D \u043B\u043E\u043A\u0430\u0442\u043E\u0440 \u043D\u0430 \u0440\u0435\u0441\u0443\u0440\u0441\u0438 (URL).","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 URL \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A URL \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst skriv inn en gyldig URL.","nl":"Vul een geldige URL in.","nn":"Gje opp ein gyldig URL.","no":"Vennligst skriv inn en gyldig URL.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142owy adres URL.","pt":"Por favor, informe uma URL v\xE1lida.","pt_BR":"Por favor, informe uma URL v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi un URL valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 URL.","sk":"Pros\xEDm zadajte platn\xFA URL.","sl":"Prosimo, vnesite veljaven URL.","sq":"Ju lutemi shkruani nj\xEB URL t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D URL.","sr_Latn":"Molim upi\u0161ite ispravan URL.","sv":"Ange en giltig URL.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01 URL \u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang balidong URL.","tr":"L\xFCtfen ge\xE7erli bir giriniz URL.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0627\u062F\u0631\u064A\u0633 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri URL kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t URL h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u7F51\u5740\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u7DB2\u5740\u3002"}}};var PLEASE_ENTER_A_VALID_SEARCH_TERM={"id":"Please enter a valid search term.","translations":{"validators":{"fr":"Veuillez saisir un terme de recherche valide.","af":"Voer asseblief 'n geldige soek term in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0645\u0635\u0637\u0644\u062D \u0627\u0644\u0628\u062D\u062B \u0633\u0627\u0631\u064A \u0627\u0644\u0645\u0641\u0639\u0648\u0644.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir axtar\u0131\u015F termini daxil edin.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u043F\u043E\u0448\u0443\u043A\u0430\u0432\u044B \u0437\u0430\u043F\u044B\u0442.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0442\u044A\u0440\u0441\u0435\u043D\u0435.","bs":"Molim upi\u0161ite ispravan termin za pretragu.","ca":"Per favor introdueix un concepte de cerca v\xE0lid.","cs":"Pros\xEDm zadejte platn\xFD v\xFDraz k vyhled\xE1n\xED.","da":"Indtast venligst et gyldigt s\xF8geord.","de":"Bitte geben Sie einen g\xFCltigen Suchbegriff ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03CC\u03C1\u03BF \u03B1\u03BD\u03B1\u03B6\u03AE\u03C4\u03B7\u03C3\u03B7\u03C2.","en":"Please enter a valid search term.","es":"Por favor, ingrese un t\xE9rmino de b\xFAsqueda v\xE1lido.","et":"Palun sisesta korrektne otsingutermin.","eu":"Mesedez, sartu bilaketa-termino onargarri bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0639\u0628\u0627\u0631\u062A \u062C\u0633\u062A\u062C\u0648\u06CC \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen hakusana.","gl":"Por favor, introduce un termo de busca v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05DE\u05D5\u05E0\u05D7 \u05D7\u05D9\u05E4\u05D5\u05E9 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim unesite ispravan pojam za pretra\u017Eivanje.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes keres\xE9si kifejez\xE9st.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0578\u0580\u0578\u0576\u0574\u0561\u0576 \u057F\u0565\u0580\u0574\u056B\u0576\u0589","id":"Silahkan masukkan kata pencarian yang sah.","it":"Per favore, inserisci un termine di ricerca valido.","ja":"\u6709\u52B9\u306A\u691C\u7D22\u8A9E\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. e g\xEBltege Sichbegr\xEBff aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 paie\u0161kos termin\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu mekl\u0113\u0161anas nosac\u012Bjumu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0442\u0435\u0440\u043C\u0438\u043D \u0437\u0430 \u043F\u0440\u0435\u0431\u0430\u0440\u0443\u0432\u0430\u045A\u0435.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0445\u0430\u0439\u0445 \u0443\u0442\u0433\u0430 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u101E\u1004\u103A\u1037 \u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A\u101B\u103E\u102C\u1016\u103D\u1031\u1019\u103E\u102F term \u1019\u103B\u102C\u1038\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst angi et gyldig s\xF8keterm.","nl":"Vul een geldige zoekterm in.","nn":"Gje opp gyldige s\xF8kjeord.","no":"Vennligst angi et gyldig s\xF8keterm.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142owy termin wyszukiwania.","pt":"Por favor, informe um termo de busca v\xE1lido.","pt_BR":"Por favor, informe um termo de busca v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi un termen de c\u0103utare valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u043F\u043E\u0438\u0441\u043A\u043E\u0432\u044B\u0439 \u0437\u0430\u043F\u0440\u043E\u0441.","sk":"Pros\xEDm zadajte platn\xFD vyh\u013Ead\xE1vac\xED v\xFDraz.","sl":"Prosimo, vnesite veljaven iskalni izraz.","sq":"Ju lutemi shkruani nj\xEB term t\xEB vlefsh\xEBm k\xEBrkimi.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0442\u0435\u0440\u043C\u0438\u043D \u0437\u0430 \u043F\u0440\u0435\u0442\u0440\u0430\u0433\u0443.","sr_Latn":"Molim upi\u0161ite ispravan termin za pretragu.","sv":"Ange ett giltigt s\xF6kbegrepp.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E33\u0E04\u0E49\u0E19\u0E2B\u0E32\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang balidong katagang sinasaliksik.","tr":"L\xFCtfen ge\xE7erli bir arama terimi girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u043F\u043E\u0448\u0443\u043A\u043E\u0432\u0438\u0439 \u0442\u0435\u0440\u043C\u0456\u043D.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0648\u064A\u0644\u0648 \u062A\u0644\u0627\u0634 \u06A9\u064A\u0644\u06D3 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri qidiruv so'zini kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p chu\xF4\u0303i ti\u0300m ki\xEA\u0301m h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u641C\u7D22\u8BCD\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u641C\u7D22\u8A5E\u3002"}}};var PLEASE_PROVIDE_A_VALID_PHONE_NUMBER={"id":"Please provide a valid phone number.","translations":{"validators":{"fr":"Veuillez fournir un num\xE9ro de t\xE9l\xE9phone valide.","af":"Verskaf asseblief 'n geldige telefoonnommer.","ar":"\u064A\u0631\u062C\u0649 \u062A\u0642\u062F\u064A\u0645 \u0631\u0642\u0645 \u0647\u0627\u062A\u0641 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir telefon n\xF6mr\u0259si se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u043D\u0443\u043C\u0430\u0440 \u0442\u044D\u043B\u0435\u0444\u043E\u043D\u0430.","bg":"\u041C\u043E\u043B\u044F \u043E\u0441\u0438\u0433\u0443\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0435\u043D \u043D\u043E\u043C\u0435\u0440.","bs":"Molim navedite ispravan broj telefona.","ca":"Per favor introdueix un n\xFAmero de tel\xE8fon v\xE0lid.","cs":"Pros\xEDm zadejte platn\xE9 telefonn\xED \u010D\xEDslo.","da":"Giv venligst et gyldigt telefonnummer.","de":"Bitte geben Sie eine g\xFCltige Telefonnummer ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BA\u03B1\u03C4\u03B1\u03C7\u03C9\u03C1\u03AF\u03C3\u03C4\u03B5 \u03AD\u03BD\u03B1\u03BD \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF \u03B1\u03C1\u03B9\u03B8\u03BC\u03CC \u03C4\u03B7\u03BB\u03B5\u03C6\u03CE\u03BD\u03BF\u03C5.","en":"Please provide a valid phone number.","es":"Por favor, proporcione un n\xFAmero de tel\xE9fono v\xE1lido.","et":"Palun sisesta korrektne telefoninumber.","eu":"Mesedez, eman baliozko telefono-zenbaki bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0634\u0645\u0627\u0631\u0647 \u062A\u0644\u0641\u0646 \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Anna kelvollinen puhelinnumero.","gl":"Por favor, fornecer un n\xFAmero de tel\xE9fono v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05E1\u05E4\u05E7 \u05DE\u05E1\u05E4\u05E8 \u05D8\u05DC\u05E4\u05D5\u05DF \u05D7\u05D5\u05E7\u05D9.","hr":"Molim navedite ispravan telefonski broj.","hu":"K\xE9rj\xFCk, adjon egy \xE9rv\xE9nyes telefonsz\xE1mot","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u057F\u0580\u0561\u0574\u0561\u0564\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0570\u0565\u057C\u0561\u056D\u0578\u057D\u0561\u0570\u0561\u0574\u0561\u0580\u0589","id":"Silahkan sediakan nomor telepon yang sah.","it":"Per favore, indica un numero di telefono valido.","ja":"\u6709\u52B9\u306A\u96FB\u8A71\u756A\u53F7\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Telefonsnummer uginn.","lt":"Pra\u0161ome pateikti tinkam\u0105 telefono numer\u012F.","lv":"L\u016Bdzu, ievadiet der\u012Bgu t\u0101lru\u0146a numuru.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0441\u043A\u0438 \u0431\u0440\u043E\u0458.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0443\u0442\u0430\u0441\u043D\u044B \u0434\u0443\u0433\u0430\u0430\u0440 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u101E\u1004\u103A\u1037 \u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A\u101B\u103E\u102C\u1016\u103D\u1031\u1019\u103E\u102F \u1016\u102F\u1014\u103A\u1038\u1014\u1036\u1015\u102B\u1010\u103A\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst oppgi et gyldig telefonnummer.","nl":"Vul een geldig telefoonnummer in.","nn":"Gje opp eit gyldig telefonnummer.","no":"Vennligst oppgi et gyldig telefonnummer.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142owy numer telefonu.","pt":"Por favor, infome um n\xFAmero de telefone v\xE1lido.","pt_BR":"Por favor, informe um telefone v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi un num\u0103r de telefon valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430.","sk":"Pros\xEDm zadajte platn\xE9 telef\xF3nne \u010D\xEDslo.","sl":"Prosimo, podajte veljavno telefonsko \u0161tevilko.","sq":"Ju lutemi jepni nj\xEB num\xEBr telefoni t\xEB vlefsh\xEBm.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u043D\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u0431\u0440\u043E\u0458 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430.","sr_Latn":"Molim navedite ispravan broj telefona.","sv":"Ange ett giltigt telefonnummer.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang balidong numero ng telepono.","tr":"l\xFCtfen ge\xE7erli bir telefon numaras\u0131 sa\u011Flay\u0131n.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u043D\u043E\u043C\u0435\u0440 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0443.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0641\u0648\u0646 \u0646\u0645\u0628\u0631 \u0641\u0631\u0627\u06C1\u0645 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, to'g'ri telefon raqamini kiriting.","vi":"Vui lo\u0300ng cung c\xE2\u0301p s\xF4\u0301 \u0111i\xEA\u0323n thoa\u0323i h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u63D0\u4F9B\u6709\u6548\u7684\u624B\u673A\u53F7\u7801\u3002","zh_TW":"\u8ACB\u63D0\u4F9B\u6709\u6548\u7684\u624B\u6A5F\u865F\u78BC\u3002"}}};var THE_CHECKBOX_HAS_AN_INVALID_VALUE={"id":"The checkbox has an invalid value.","translations":{"validators":{"fr":"La case \xE0 cocher a une valeur non valide.","af":"Die blokkie het 'n ongeldige waarde.","ar":"\u062E\u0627\u0646\u0629 \u0627\u0644\u0627\u062E\u062A\u064A\u0627\u0631 \u0644\u0647\u0627 \u0642\u064A\u0645\u0629 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D\u0629.","az":"Se\xE7im qutusunda do\u011Fru olmayan d\u0259y\u0259r var.","be":"\u0424\u043B\u0430\u0436\u043E\u043A \u043C\u0430\u0435 \u043D\u0435\u043A\u0430\u0440\u044D\u043A\u0442\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435.","bg":"\u041E\u0442\u043C\u0435\u0442\u043A\u0430\u0442\u0430 \u0438\u043C\u0430 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u0442\u043E\u0439\u043D\u043E\u0441\u0442.","bs":"Polje za potvrdu sadr\u017Ei neispravnu vrijednost.","ca":"La casella de selecci\xF3 te un valor inv\xE0lid.","cs":"Za\u0161krt\xE1vac\xED pol\xED\u010Dko m\xE1 neplatnou hodnotu.","da":"Checkboxen har en ugyldigt v\xE6rdi.","de":"Das Kontrollk\xE4stchen hat einen ung\xFCltigen Wert.","el":"\u03A4\u03BF \u03C0\u03BB\u03B1\u03AF\u03C3\u03B9\u03BF \u03B5\u03BB\u03AD\u03B3\u03C7\u03BF\u03C5 \u03AD\u03C7\u03B5\u03B9 \u03BC\u03AE \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03C4\u03B9\u03BC\u03AE.","en":"The checkbox has an invalid value.","es":"La casilla de verificaci\xF3n tiene un valor inv\xE1lido.","et":"M\xE4rkeruudu v\xE4\xE4rtus on vigane.","eu":"Egiaztatze-laukiak balio baliogabea du.","fa":"\u06A9\u0627\u062F\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 (checkbox) \u062F\u0627\u0631\u0627\u06CC \u0645\u0642\u062F\u0627\u0631\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0627\u0633\u062A.","fi":"Valintaruudun arvo ei  kelpaa.","gl":"A caixa de verificaci\xF3n ten un valor non v\xE1lido.","he":"\u05DC\u05EA\u05D9\u05D1\u05EA \u05D4\u05E1\u05D9\u05DE\u05D5\u05DF \u05D9\u05E9 \u05E2\u05E8\u05DA \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9.","hr":"Polje za potvrdu sadr\u017Ei neispravnu vrijednost.","hu":"A jel\xF6l\u0151n\xE9gyzet \xE9rt\xE9ke \xE9rv\xE9nytelen.","hy":"\u0546\u0577\u0574\u0561\u0576 \u057E\u0561\u0576\u0564\u0561\u056F\u0568 \u0561\u0576\u057E\u0561\u057E\u0565\u0580 \u0561\u0580\u056A\u0565\u0584 \u0578\u0582\u0576\u056B\u0589","id":"Nilai dari checkbox tidak sah.","it":"La casella di selezione non ha un valore valido.","ja":"\u30C1\u30A7\u30C3\u30AF\u30DC\u30C3\u30AF\u30B9\u306E\u5024\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"D'Ukr\xE4izfeld huet en ong\xEBltege W\xE4ert.","lt":"Klaidinga \u017Eymimajo langelio reik\u0161m\u0117.","lv":"Izv\u0113les r\u016Bti\u0146ai ir neder\u012Bga v\u0113rt\u012Bba.","mk":"\u041F\u043E\u043B\u0435\u0442\u043E \u0437\u0430 \u0448\u0442\u0438\u043A\u043B\u0438\u0440\u0430\u045A\u0435 \u0438\u043C\u0430 \u043D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442.","mn":"\u0421\u043E\u043D\u0433\u043E\u0445 \u0445\u0430\u0439\u0440\u0446\u0430\u0433 \u0431\u0443\u0440\u0443\u0443 \u0443\u0442\u0433\u0430\u0442\u0430\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"Checkbox \u1010\u1014\u103A\u1016\u102D\u102F\u1038\u101E\u100A\u103A \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u1019\u103E\u102F\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Avkrysningsboksen har en ugyldig verdi.","nl":"De checkbox heeft een incorrecte waarde.","nn":"Sjekkboksen har ein ugyldig verdi.","no":"Avkrysningsboksen har en ugyldig verdi.","pl":"Pole wyboru posiada nieprawid\u0142ow\u0105 warto\u015B\u0107.","pt":"O checkbox possui um valor inv\xE1lido.","pt_BR":"A caixa de sele\xE7\xE3o possui um valor inv\xE1lido.","ro":"Bifa nu are o valoare valid\u0103.","ru":"\u0424\u043B\u0430\u0436\u043E\u043A \u0438\u043C\u0435\u0435\u0442 \u043D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435.","sk":"Za\u0161krt\xE1vacie pol\xED\u010Dko m\xE1 neplatn\xFA hodnotu.","sl":"Potrditveno polje vsebuje neveljavno vrednost.","sq":"Kutia e zgjedhjes ka nj\xEB vler\xEB t\xEB pavlefshme.","sr_Cyrl":"\u041F\u043E\u0459\u0435 \u0437\u0430 \u043F\u043E\u0442\u0432\u0440\u0434\u0443 \u0441\u0430\u0434\u0440\u0436\u0438 \u043D\u0435\u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442.","sr_Latn":"Polje za potvrdu sadr\u017Ei neispravnu vrednost.","sv":"Kryssrutan har ett ogiltigt v\xE4rde.","th":"Checkbox \u0E21\u0E35\u0E04\u0E48\u0E32\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Ang checkbox ay mayroon hindi balidong halaga.","tr":"Onay kutusunda ge\xE7ersiz bir de\u011Fer var.","uk":"\u041F\u0440\u0430\u043F\u043E\u0440\u0435\u0446\u044C \u043C\u0430\u0454 \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F.","ur":"\u0686\u06CC\u06A9 \u0628\u0627\u06A9\u0633 \u0645\u06CC\u06BA \u0627\u06CC\u06A9 \u063A\u0644\u0637 \u0648\u064A\u0644\u0648 \u06C1\u06D2","uz":"Belgilash katagida yaroqsiz qiymat mavjud.","vi":"H\xF4\u0323p ki\xEA\u0309m co\u0301 m\xF4\u0323t gia\u0301 tri\u0323 kh\xF4ng h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u65E0\u6548\u7684\u9009\u6846\u503C\u3002","zh_TW":"\u7121\u6548\u7684\u9078\u6846\u503C\u3002"}}};var PLEASE_ENTER_A_VALID_EMAIL_ADDRESS={"id":"Please enter a valid email address.","translations":{"validators":{"fr":"Veuillez saisir une adresse email valide.","af":"Voer asseblief 'n geldige e-pos adres in.","ar":"\u0631\u062C\u0627\u0621 \u0642\u0645 \u0628\u0625\u062F\u062E\u0627\u0644 \u0628\u0631\u064A\u062F \u0627\u0644\u0643\u062A\u0631\u0648\u0646\u064A \u0635\u062D\u064A\u062D","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir e-po\xE7t se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0430\u0434\u0440\u0430\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0430\u0439 \u043F\u043E\u0448\u0442\u044B.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0435\u043B. \u043F\u043E\u0449\u0430.","bs":"Molim upi\u0161ite ispravnu email adresu.","ca":"Per favor introdueix un correu electr\xF2nic v\xE0lid.","cs":"Pros\xEDm zadejte platnou emailovou adresu.","da":"Indtast venligst en gyldig e-mailadresse.","de":"Bitte geben Sie eine g\xFCltige E-Mail-Adresse ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B7\u03BB\u03B5\u03BA\u03C4\u03C1\u03BF\u03BD\u03B9\u03BA\u03AE \u03B4\u03B9\u03B5\u03CD\u03B8\u03C5\u03BD\u03C3\u03B7.","en":"Please enter a valid email address.","es":"Por favor, ingrese una direcci\xF3n de correo electr\xF3nico v\xE1lida.","et":"Palun sisesta korrektne e-posti aadress.","eu":"Mesedez, sartu baliozko helbide elektroniko bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0622\u062F\u0631\u0633 \u0631\u0627\u06CC\u0627\u0646\u0627\u0645\u0647 (\u0627\u06CC\u0645\u06CC\u0644) \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen s\xE4hk\xF6postiosoite.","gl":"Por favor, introduce un enderezo de correo electr\xF3nico v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05DB\u05EA\u05D5\u05D1\u05EA \u05D3\u05D5\u05D0\"\u05DC \u05EA\u05E7\u05E0\u05D9\u05EA.","hr":"Molim unesite valjanu adresu elektronske po\u0161te.","hu":"K\xE9rj\xFCk val\xF3s e-mail c\xEDmet adjon meg.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0574\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u0567\u056C-\u0570\u0561\u057D\u0581\u0565\u0589","id":"Silahkan masukkan alamat surel yang sah.","it":"Per favore, indica un indirizzo email valido.","ja":"\u6709\u52B9\u306A\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg E-Mail-Adress aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 el. pa\u0161to adres\u0105.","lv":"L\u016Bdzu, ievadiet der\u012Bgu e-pasta adresi.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0430\u0434\u0440\u0435\u0441\u0430 \u0437\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0438-\u043C\u044D\u0439\u043B \u0445\u0430\u044F\u0433 \u043E\u0440\u0443\u0443\u043B\u043D\u0430 \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u103A email \u101C\u102D\u1015\u103A\u1005\u102C\u1011\u100A\u103A\u1037\u1015\u102B\u104B","nb":"Vennligst skriv inn en gyldig e-post adresse.","nl":"Vul een geldig e-mailadres in.","nn":"Gje opp ei gyldig e-postadresse.","no":"Vennligst skriv inn en gyldig e-post adresse.","pl":"Prosz\u0119 wprowadzi\u0107 prawid\u0142owy adres email.","pt":"Por favor, informe um endere\xE7o de email v\xE1lido.","pt_BR":"Por favor, informe um endere\xE7o de e-mail v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o adres\u0103 de email valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 email \u0430\u0434\u0440\u0435\u0441.","sk":"Pros\xEDm zadajte platn\xFA emailov\xFA adresu.","sl":"Prosimo, vnesite veljaven e-po\u0161tni naslov.","sq":"Ju lutemi shkruani nj\xEB adres\xEB t\xEB vlefshme emaili.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 email \u0430\u0434\u0440\u0435\u0441\u0443.","sr_Latn":"Molim upi\u0161ite ispravnu email adresu.","sv":"Ange en giltig e-postadress.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E2D\u0E35\u0E40\u0E21\u0E25\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang balidong email address.","tr":"L\xFCtfen ge\xE7erli bir e-posta adresi girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0457 \u043F\u043E\u0448\u0442\u0438.","ur":"\u0628\u0631\u0627\u06D3 \u0645\u06C1\u0631\u0628\u0627\u0646\u06CC \u0642\u0627\u0628\u0644 \u0642\u0628\u0648\u0644 \u0627\u06CC \u0645\u06CC\u0644 \u0627\u06CC\u0688\u0631\u06CC\u0633 \u0644\u06A9\u06BE\u06CC\u06BA","uz":"Iltimos, to'g'ri email kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p \u0111i\u0323a chi\u0309 email h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u7535\u5B50\u90AE\u4EF6\u5730\u5740\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u96FB\u5B50\u90F5\u4EF6\u5730\u5740\u3002"}}};var PLEASE_SELECT_A_VALID_OPTION={"id":"Please select a valid option.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une option valide.","af":"Kies asseblief 'n geldige opsie.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u062A\u062D\u062F\u064A\u062F \u062E\u064A\u0627\u0631 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir variant se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0432\u0430\u0440\u044B\u044F\u043D\u0442.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043E\u043F\u0446\u0438\u044F.","bs":"Molim izaberite ispravnu opciju.","ca":"Per favor selecciona una opci\xF3 v\xE0lida.","cs":"Pros\xEDm vyberte platnou mo\u017Enost.","da":"V\xE6lg venligst en gyldig mulighed.","de":"Bitte w\xE4hlen Sie eine g\xFCltige Option.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B5\u03C0\u03B9\u03BB\u03BF\u03B3\u03AE.","en":"Please select a valid option.","es":"Por favor, seleccione una opci\xF3n v\xE1lida.","et":"Palun tee korrektne valik.","eu":"Mesedez, hautatu baliozko aukera bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u06AF\u0632\u06CC\u0646\u0647\u200C \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen vaihtoehto.","gl":"Por favor, seleccione unha opci\xF3n v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05D0\u05E4\u05E9\u05E8\u05D5\u05EA \u05D7\u05D5\u05E7\u05D9\u05EA.","hr":"Molim odaberite ispravnu opciju.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes be\xE1ll\xEDt\xE1st.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u0573\u056B\u0577\u057F \u057F\u0561\u0580\u0562\u0565\u0580\u0561\u056F\u0589","id":"Silahkan pilih opsi yang sah.","it":"Per favore, seleziona un'opzione valida.","ja":"\u6709\u52B9\u306A\u5024\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Optioun auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 parinkt\u012F.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu opciju.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043E\u043F\u0446\u0438\u0458\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0441\u043E\u043D\u0433\u043E\u043B\u0442 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u103A \u101B\u103D\u1031\u1038\u1001\u103B\u101A\u103A\u1019\u103E\u102F \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg et gyldig alternativ.","nl":"Kies een geldige optie.","nn":"Velg eit gyldig vilk\xE5r.","no":"Vennligst velg et gyldig alternativ.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142ow\u0105 opcj\u0119.","pt":"Por favor, selecione uma op\xE7\xE3o v\xE1lida.","pt_BR":"Por favor, selecione uma op\xE7\xE3o v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi o op\u021Biune valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442.","sk":"Pros\xEDm vyberte platn\xFA mo\u017Enos\u0165.","sl":"Prosimo, izberite veljavno mo\u017Enost.","sq":"Ju lutemi zgjidhni nj\xEB opsion t\xEB vlefsh\xEBm.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u043E\u043F\u0446\u0438\u0458\u0443.","sr_Latn":"Molim izaberite ispravnu opciju.","sv":"V\xE4lj ett alternativ.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipiliin ang balidong pagpipilian.","tr":"L\xFCtfen ge\xE7erli bir se\xE7enek se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0432\u0430\u0440\u0456\u0430\u043D\u0442.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0622\u067E\u0634\u0646 \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, yaroqli variantni tanlang.","vi":"Vui lo\u0300ng cho\u0323n m\xF4\u0323t ph\u01B0\u01A1ng a\u0301n h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u9009\u9879\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u9078\u9805\u3002"}}};var PLEASE_SELECT_A_VALID_RANGE={"id":"Please select a valid range.","translations":{"validators":{"fr":"Veuillez s\xE9lectionner une plage valide.","af":"Kies asseblief 'n geldige reeks.","ar":"\u064A\u0631\u062C\u0649 \u062A\u062D\u062F\u064A\u062F \u0646\u0637\u0627\u0642 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir aral\u0131q se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0432\u044B\u0431\u0435\u0440\u044B\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0434\u044B\u044F\u043F\u0430\u0437\u043E\u043D.","bg":"\u041C\u043E\u043B\u044F \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u0435\u043D \u043E\u0431\u0445\u0432\u0430\u0442.","bs":"Molim izaberite ispravan opseg.","ca":"Per favor selecciona un rang v\xE0lid.","cs":"Pros\xEDm vyberte platn\xFD rozsah.","da":"V\xE6lg venligst et gyldigt interval .","de":"Bitte w\xE4hlen Sie einen g\xFCltigen Bereich.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03C0\u03B9\u03BB\u03AD\u03BE\u03C4\u03B5 \u03AD\u03BD\u03B1 \u03AD\u03B3\u03C5\u03C1\u03BF \u03B5\u03CD\u03C1\u03BF\u03C2.","en":"Please select a valid range.","es":"Por favor, seleccione un rango v\xE1lido.","et":"Palun vali korrektne vahemik.","eu":"Mesedez, hautatu baliozko tarte bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0645\u062D\u062F\u0648\u062F\u0647\u200C \u0645\u0639\u062A\u0628\u0631 \u0627\u0646\u062A\u062E\u0627\u0628 \u06A9\u0646\u06CC\u062F.","fi":"Valitse kelvollinen v\xE4li.","gl":"Por favor, seleccione un intervalo v\xE1lido.","he":"\u05D0\u05E0\u05D0 \u05D1\u05D7\u05E8 \u05D8\u05D5\u05D5\u05D7 \u05D7\u05D5\u05E7\u05D9.","hr":"Molim odaberite ispravan raspon.","hu":"K\xE9rj\xFCk, v\xE1lasszon egy \xE9rv\xE9nyes tartom\xE1nyt.","hy":"\u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0568\u0576\u057F\u0580\u0565\u056C \u057E\u0561\u057E\u0565\u0580 \u057F\u056B\u0580\u0578\u0582\u0575\u0569\u0589","id":"Silahkan pilih rentang yang sah.","it":"Per favore, seleziona un intervallo valido.","ja":"\u6709\u52B9\u306A\u7BC4\u56F2\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Spannbreet auswielen.","lt":"Pra\u0161ome pasirinkti tinkam\u0105 diapozon\u0105.","lv":"L\u016Bdzu, izv\u0113lieties der\u012Bgu diapazonu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0434\u0431\u0435\u0440\u0435\u0442\u0435 \u0432\u0430\u0436\u0435\u0447\u043A\u0438 \u043E\u043F\u0441\u0435\u0433.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0445\u044F\u0437\u0433\u0430\u0430\u0440\u044B\u043D \u0443\u0442\u0433\u0430 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C \u1021\u1015\u102D\u102F\u1004\u103A\u1038\u1021\u1001\u103C\u102C\u1038 \u1000\u102D\u102F\u101B\u103D\u1031\u1038\u1015\u102B\u104B","nb":"Vennligst velg et gyldig omr\xE5de.","nl":"Kies een geldig bereik.","nn":"Velg eit gyldig spenn.","no":"Vennligst velg et gyldig omr\xE5de.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy zakres.","pt":"Por favor, selecione um intervalo v\xE1lido.","pt_BR":"Por favor, selecione um intervalo v\xE1lido.","ro":"V\u0103 rug\u0103m s\u0103 selecta\u021Bi un interval valid.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D.","sk":"Pros\xEDm vyberte platn\xFD rozsah.","sl":"Prosimo, izberite veljaven obseg.","sq":"Ju lutemi zgjidhni nj\xEB diapazon t\xEB vlefsh\xEBm.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0438\u0437\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D \u043E\u043F\u0441\u0435\u0433.","sr_Latn":"Molim izaberite ispravan opseg.","sv":"V\xE4lj ett intervall.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E0A\u0E48\u0E27\u0E07\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakipilian ang balidong layo.","tr":"L\xFCtfen ge\xE7erli bir aral\u0131k se\xE7in.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u0431\u0435\u0440\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0434\u0456\u0430\u043F\u0430\u0437\u043E\u043D.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u0631\u06CC\u0646\u062C \u0645\u0646\u062A\u062E\u0628 \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, yaroqli oraliqni tanlang.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t pha\u0323m vi h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u9009\u62E9\u6709\u6548\u7684\u8303\u56F4\u3002","zh_TW":"\u8ACB\u9078\u64C7\u6709\u6548\u7684\u7BC4\u570D\u3002"}}};var PLEASE_ENTER_A_VALID_WEEK={"id":"Please enter a valid week.","translations":{"validators":{"fr":"Veuillez entrer une semaine valide.","af":"Voer assblief 'n geldige week in.","ar":"\u0627\u0644\u0631\u062C\u0627\u0621 \u0625\u062F\u062E\u0627\u0644 \u0623\u0633\u0628\u0648\u0639 \u0635\u0627\u0644\u062D.","az":"Z\u0259hm\u0259t olmasa do\u011Fru bir h\u0259ft\u0259 se\xE7in.","be":"\u041A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u0443\u0432\u044F\u0434\u0437\u0456\u0446\u0435 \u043A\u0430\u0440\u044D\u043A\u0442\u043D\u044B \u0442\u044B\u0434\u0437\u0435\u043D\u044C.","bg":"\u041C\u043E\u043B\u044F \u0432\u044A\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u0441\u0435\u0434\u043C\u0438\u0446\u0430.","bs":"Molim upi\u0161ite ispravnu sedmicu.","ca":"Per favor introdueix una setmana v\xE0lida.","cs":"Pros\xEDm zadejte platn\xFD t\xFDden.","da":"Indtast venligst en gyldig uge.","de":"Bitte geben Sie eine g\xFCltige Woche ein.","el":"\u03A0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03B5\u03B9\u03C3\u03AC\u03B3\u03B5\u03C4\u03B5 \u03BC\u03AF\u03B1 \u03AD\u03B3\u03BA\u03C5\u03C1\u03B7 \u03B5\u03B2\u03B4\u03BF\u03BC\u03AC\u03B4\u03B1.","en":"Please enter a valid week.","es":"Por favor, ingrese una semana v\xE1lida.","et":"Palun sisesta korrektne n\xE4dal.","eu":"Mesedez, sartu baliozko aste bat.","fa":"\u0644\u0637\u0641\u0627\u064B \u06CC\u06A9 \u0647\u0641\u062A\u0647\u200C \u0645\u0639\u062A\u0628\u0631 \u0648\u0627\u0631\u062F \u06A9\u0646\u06CC\u062F.","fi":"Sy\xF6t\xE4 kelvollinen viikko.","gl":"Por favor, introduce unha semana v\xE1lida.","he":"\u05D0\u05E0\u05D0 \u05D4\u05D6\u05DF \u05E9\u05D1\u05D5\u05E2 \u05EA\u05E7\u05E3.","hr":"Molim unesite ispravni tjedan.","hu":"K\xE9rj\xFCk, adjon meg egy \xE9rv\xE9nyes hetet.","hy":"\u0544\u0578\u0582\u057F\u0584\u0561\u0563\u0580\u0565\u0584 \u057E\u0561\u057E\u0565\u0580 \u0577\u0561\u0562\u0561\u0569\u0589","id":"Silahkan masukkan minggu yang sah.","it":"Per favore, inserisci una settimana valida.","ja":"\u6709\u52B9\u306A\u9031\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002","lb":"W.e.g. eng g\xEBlteg Woch aginn.","lt":"Pra\u0161ome \u012Fvesti tinkam\u0105 savait\u0119.","lv":"L\u016Bdzu, ievadiet der\u012Bgu ned\u0113\u013Cu.","mk":"\u0412\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u0432\u043D\u0435\u0441\u0435\u0442\u0435 \u0432\u0430\u043B\u0438\u0434\u043D\u0430 \u043D\u0435\u0434\u0435\u043B\u0430.","mn":"\u04AE\u043D\u044D\u043D \u0437\u04E9\u0432 \u0434\u043E\u043B\u043E\u043E \u0445\u043E\u043D\u043E\u0433 \u0441\u043E\u043D\u0433\u043E\u043D\u043E \u0443\u0443.","my":"\u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1019\u103E\u1014\u103A\u1000\u1014\u103A\u101E\u1031\u102C\u101B\u1000\u103A\u101E\u1010\u1039\u1010\u1015\u1010\u103A\u1000\u102D\u102F\u1011\u100A\u1037\u103A\u1015\u102B\u104B","nb":"Vennligst skriv inn en gyldig uke.","nl":"Vul een geldige week in.","nn":"Gje opp ei gyldig veke.","no":"Vennligst skriv inn en gyldig uke.","pl":"Prosz\u0119 wybra\u0107 prawid\u0142owy tydzie\u0144.","pt":"Por favor, selecione uma semana v\xE1lida.","pt_BR":"Por favor, informe uma semana v\xE1lida.","ro":"V\u0103 rug\u0103m s\u0103 introduce\u021Bi o s\u0103pt\u0103m\xE2n\u0103 valid\u0103.","ru":"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0443\u044E \u043D\u0435\u0434\u0435\u043B\u044E.","sk":"Pros\xEDm zadajte platn\xFD t\xFD\u017Ede\u0148.","sl":"Prosimo, vnesite veljaven teden.","sq":"Ju lutemi shkruani nj\xEB jav\xEB t\xEB vlefshme.","sr_Cyrl":"\u041C\u043E\u043B\u0438\u043C \u0443\u043F\u0438\u0448\u0438\u0442\u0435 \u0438\u0441\u043F\u0440\u0430\u0432\u043D\u0443 \u0441\u0435\u0434\u043C\u0438\u0446\u0443.","sr_Latn":"Molim upi\u0161ite ispravnu sedmicu.","sv":"Ange en giltig vecka.","th":"\u0E01\u0E23\u0E38\u0E13\u0E32\u0E01\u0E23\u0E2D\u0E01\u0E04\u0E48\u0E32\u0E2A\u0E31\u0E1B\u0E14\u0E32\u0E2B\u0E4C\u0E17\u0E35\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Pakilagay ang balidong linggo.","tr":"L\xFCtfen ge\xE7erli bir hafta girin.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C \u0434\u0456\u0439\u0441\u043D\u0438\u0439 \u0442\u0438\u0436\u0434\u0435\u043D\u044C.","ur":"\u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0627\u06CC\u06A9 \u062F\u0631\u0633\u062A \u06C1\u0641\u062A\u06C1 \u062F\u0631\u062C \u06A9\u0631\u06CC\u06BA","uz":"Iltimos, haqiqiy haftani kiriting.","vi":"Vui lo\u0300ng nh\xE2\u0323p m\xF4\u0323t tu\xE2\u0300n h\u01A1\u0323p l\xEA\u0323.","zh_CN":"\u8BF7\u8F93\u5165\u6709\u6548\u7684\u661F\u671F\u3002","zh_TW":"\u8ACB\u8F38\u5165\u6709\u6548\u7684\u661F\u671F\u3002"}}};var COMMON_NOT_BLANK={"id":"common.not_blank","translations":{"validators":{"fr":"Ce champ ne peut pas \xEAtre vide."}}};var AUTHENTICATION_FORGOT_PASSWORD_EMPTY_EMAIL={"id":"authentication.forgot_password.empty_email","translations":{"validators":{"fr":"Veuillez renseigner votre email."}}};var EXTERNAL_LINK_URL_INVALID={"id":"externalLink.url_invalid","translations":{"validators":{"fr":"L'url doit commencer par http:\/\/ ou https:\/\/"}}};var USER_EMAIL_UNIQUE={"id":"user.email.unique","translations":{"validators":{"fr":"Cet email '{{ value }}' est d\xE9j\xE0 utilis\xE9."}}};var USER_ROLE_INVALID={"id":"user.role.invalid","translations":{"validators":{"fr":"Le r\xF4le {{ value }} n'existe pas."}}};var USER_ROLE_EMPTY={"id":"user.role.empty","translations":{"validators":{"fr":"Le r\xF4le ne peut pas \xEAtre vide."}}};var USER_PASSWORD_INVALID={"id":"user.password.invalid","translations":{"validators":{"fr":"Le mot de passe doit contenir au moins 8 caract\xE8res, une majuscule, une minuscule et un chiffre."}}};var USER_PASSWORD_CONFIRMATION_INVALID={"id":"user.password_confirmation.invalid","translations":{"validators":{"fr":"Les mots de passe doivent \xEAtre identiques."}}};var MODULE_URL_INVALID={"id":"module.url.invalid","translations":{"validators":{"fr":"L'url doit commencer par http:\/\/ ou https:\/\/"}}};var MODULE_SLUG_INVALID={"id":"module.slug.invalid","translations":{"validators":{"fr":"Le slug ne peut contenir que des lettres, des chiffres, des tirets et des underscores."}}};var WIDGET_SLUG_INVALID={"id":"widget.slug.invalid","translations":{"validators":{"fr":"Le slug ne peut contenir que des lettres, des chiffres, des tirets et des underscores."}}};var WIDGET_SLUG_INVALID_CHOICE={"id":"widget.slug.invalid_choice","translations":{"validators":{"fr":"Vous ne pouvez pas utiliser ce slug."}}};var AN_AUTHENTICATION_EXCEPTION_OCCURRED={"id":"An authentication exception occurred.","translations":{"security":{"fr":"Une exception d'authentification s'est produite.","af":"'n Verifikasie probleem het voorgekom.","ar":"\u062D\u062F\u062B \u062E\u0637\u0623 \u0627\u062B\u0646\u0627\u0621 \u0627\u0644\u062F\u062E\u0648\u0644.","az":"Do\u011Frulama istisnas\u0131 ba\u015F verdi.","be":"\u041F\u0430\u043C\u044B\u043B\u043A\u0430 \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456.","bg":"\u0413\u0440\u0435\u0448\u043A\u0430 \u043F\u0440\u0438 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F.","bs":"Do\u0161lo je do autentifikacijskog izuzetka (exception).","ca":"Ha succe\xEFt un error d'autenticaci\xF3.","cs":"P\u0159i ov\u011B\u0159ov\xE1n\xED do\u0161lo k chyb\u011B.","da":"En fejl indtraf ved godkendelse.","de":"Es ist ein Fehler bei der Authentifikation aufgetreten.","el":"\u03A3\u03C5\u03BD\u03AD\u03B2\u03B7 \u03AD\u03BD\u03B1 \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1 \u03C0\u03B9\u03C3\u03C4\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2.","en":"An authentication exception occurred.","es":"Ocurri\xF3 un error de autenticaci\xF3n.","et":"Autentimisel juhtus ootamatu viga.","eu":"Autentifikazio-errorea gertatu da.","fa":"\u062E\u0637\u0627\u06CC\u06CC \u0647\u0646\u06AF\u0627\u0645 \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u0631\u062E \u062F\u0627\u062F\u0647 \u0627\u0633\u062A.","fi":"Autentikointi poikkeus tapahtui.","gl":"Ocorreu un erro de autenticaci\xF3n.","he":"\u05E9\u05D2\u05D9\u05D0\u05D4 \u05D1\u05D0\u05D9\u05DE\u05D5\u05EA","hr":"Dogodila se autentifikacijske iznimka.","hu":"Hiteles\xEDt\xE9si hiba l\xE9pett fel.","hy":"\u0546\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u057D\u056D\u0561\u056C\u0589","id":"Terjadi sebuah pengecualian otentikasi.","it":"Si \xE8 verificato un errore di autenticazione.","ja":"\u8A8D\u8A3C\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002","lb":"Bei der Authentifikatioun ass e Feeler opgetrueden.","lt":"\u012Evyko autentifikacijos klaida.","lv":"Rad\u0101s autentifik\u0101cijas k\u013C\u016Bda.","mk":"\u041D\u0430\u0441\u0442\u0430\u043D\u0430 \u0433\u0440\u0435\u0448\u043A\u0430 \u0432\u043E \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u0458\u0430\u0442\u0430.","mn":"\u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u0445\u04AF\u0441\u044D\u043B\u0442\u0438\u0439\u043D \u0430\u043B\u0434\u0430\u0430 \u0433\u0430\u0440\u0430\u0432.","my":"\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1001\u103D\u1004\u103A\u1037 \u1001\u103C\u103D\u1004\u103A\u1038\u1001\u103B\u1000\u103A\u1010\u1005\u103A\u1001\u102F\u1016\u103C\u1005\u103A\u101E\u103D\u102C\u1038\u101E\u100A\u103A\u104B","nb":"En autentiseringsfeil har skjedd.","nl":"Er heeft zich een authenticatieprobleem voorgedaan.","nn":"Innlogginga har feila.","no":"En autentiseringsfeil har skjedd.","pl":"Wyst\u0105pi\u0142 b\u0142\u0105d uwierzytelniania.","pt":"Ocorreu uma excep\xE7\xE3o durante a autentica\xE7\xE3o.","pt_BR":"Uma exce\xE7\xE3o ocorreu durante a autentica\xE7\xE3o.","ro":"A ap\u0103rut o eroare de autentificare.","ru":"\u041E\u0448\u0438\u0431\u043A\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438.","sk":"Pri overovan\xED do\u0161lo k chybe.","sl":"Pri\u0161lo je do izjeme pri preverjanju avtentikacije.","sq":"Ndodhi nj\xEB problem n\xEB autentikim.","sr_Cyrl":"\u0418\u0437\u0443\u0437\u0435\u0442\u0430\u043A \u043F\u0440\u0438 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0438.","sr_Latn":"Izuzetak pri autentifikaciji.","sv":"Ett autentiseringsfel har intr\xE4ffat.","th":"\u0E1E\u0E1A\u0E04\u0E27\u0E32\u0E21\u0E1C\u0E34\u0E14\u0E1E\u0E25\u0E32\u0E14\u0E43\u0E19\u0E01\u0E32\u0E23\u0E23\u0E31\u0E1A\u0E23\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E15\u0E19","tl":"Nagkaroon ng isang pagbubukod sa pagpapatotoo.","tr":"Bir yetkilendirme istisnas\u0131 olu\u015Ftu.","uk":"\u041F\u043E\u043C\u0438\u043B\u043A\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457.","ur":"\u0627\u06CC\u06A9 \u062A\u0635\u062F\u06CC\u0642\u064A \u062E\u0631\u0627\u0628\u06CC \u067E\u06CC\u0634 \u0622\u06AF\u0626\u06CC \u06D3","uz":"Autentifikatsiyada xatolik.","vi":"C\xF3 l\u1ED7i trong qu\xE1 tr\xECnh x\xE1c th\u1EF1c.","zh_CN":"\u8EAB\u4EFD\u9A8C\u8BC1\u53D1\u751F\u5F02\u5E38\u3002","zh_TW":"\u8EAB\u4EFD\u9A57\u8B49\u767C\u751F\u7570\u5E38\u3002"}}};var AUTHENTICATION_CREDENTIALS_COULD_NOT_BE_FOUND={"id":"Authentication credentials could not be found.","translations":{"security":{"fr":"Les identifiants d'authentification n'ont pas pu \xEAtre trouv\xE9s.","af":"Verifikasiebewyse kon nie gevind word nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644.","az":"Do\u011Frulama m\u0259lumatlar\u0131 tap\u0131lmad\u0131.","be":"\u0414\u0430\u0434\u0437\u0435\u043D\u044B\u044F \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456 \u043D\u0435 \u0437\u043D\u043E\u0439\u0434\u0437\u0435\u043D\u044B.","bg":"\u0423\u0434\u043E\u0441\u0442\u043E\u0432\u0435\u0440\u0435\u043D\u0438\u0435\u0442\u043E \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F \u043D\u0435 \u0435 \u043E\u0442\u043A\u0440\u0438\u0442\u043E.","bs":"Autentifikacijski podaci nisu prona\u0111eni.","ca":"No s'han trobat les credencials d'autenticaci\xF3.","cs":"Ov\u011B\u0159ovac\xED \xFAdaje nebyly nalezeny.","da":"Loginoplysninger kan ikke findes.","de":"Es konnten keine Zugangsdaten gefunden werden.","el":"\u03A4\u03B1 \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1 \u03C0\u03B9\u03C3\u03C4\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2 \u03B4\u03B5 \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B1\u03BD.","en":"Authentication credentials could not be found.","es":"No se encontraron las credenciales de autenticaci\xF3n.","et":"Autentimisandmeid ei leitud.","eu":"Ez dira aurkitu autentifikazio-kredentzialak.","fa":"\u0634\u0631\u0627\u06CC\u0637 \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u06CC\u0627\u0641\u062A \u0646\u0634\u062F.","fi":"Autentikoinnin tunnistetietoja ei l\xF6ydetty.","gl":"Non se atoparon as credenciais de autenticaci\xF3n.","he":"\u05E4\u05E8\u05D8\u05D9 \u05D6\u05D9\u05D4\u05D5\u05D9 \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0\u05D5.","hr":"Autentifikacijski podaci nisu prona\u0111eni.","hu":"Nem tal\xE1lhat\xF3k hiteles\xEDt\xE9si inform\xE1ci\xF3k.","hy":"\u0546\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u057F\u057E\u0575\u0561\u056C\u0576\u0565\u0580\u0568 \u0579\u0565\u0576 \u0563\u057F\u0576\u057E\u0565\u056C\u0589","id":"Kredensial otentikasi tidak bisa ditemukan.","it":"Impossibile trovare le credenziali di autenticazione.","ja":"\u8A8D\u8A3C\u8CC7\u683C\u304C\u3042\u308A\u307E\u305B\u3093\u3002","lb":"Et konnte keng Zouganksdate fonnt ginn.","lt":"Nepavyko rasti autentifikacijos duomen\u0173.","lv":"Autentifik\u0101cijas dati nav atrasti.","mk":"\u0410\u043A\u0440\u0435\u0434\u0438\u0442\u0438\u0432\u0438\u0442\u0435 \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u0458\u0430 \u043D\u0435 \u0441\u0435 \u043F\u0440\u043E\u043D\u0430\u0458\u0434\u0435\u043D\u0438.","mn":"\u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u044D\u0440\u0445\u0438\u0439\u043D \u043C\u044D\u0434\u044D\u044D\u043B\u044D\u043B \u043E\u043B\u0434\u0441\u043E\u043D\u0433\u04AF\u0439.","my":"\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1001\u103D\u1004\u103A\u1037 \u1021\u1011\u1031\u102C\u1000\u103A\u1021\u1011\u102C\u1038\u1019\u103B\u102C\u1038 \u101B\u103E\u102C\u1019\u1010\u103D\u1031\u1037\u1015\u102B\u104B","nb":"P\xE5loggingsinformasjonen kunne ikke bli funnet.","nl":"Authenticatiegegevens konden niet worden gevonden.","nn":"Innloggingsinformasjonen vart ikkje funnen.","no":"P\xE5loggingsinformasjonen kunne ikke bli funnet.","pl":"Dane uwierzytelniania nie zosta\u0142y znalezione.","pt":"As credenciais de autentica\xE7\xE3o n\xE3o foram encontradas.","pt_BR":"As credenciais de autentica\xE7\xE3o n\xE3o foram encontradas.","ro":"Informa\u021Biile de autentificare nu au fost g\u0103site.","ru":"\u0410\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u044B.","sk":"Overovacie \xFAdaje neboli n\xE1jden\xE9.","sl":"Poverilnic za avtentikacijo ni bilo mogo\u010De najti.","sq":"Kredencialet e autentikimit nuk mund t\xEB gjendeshin.","sr_Cyrl":"\u0410\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u0438 \u043F\u043E\u0434\u0430\u0446\u0438 \u043D\u0438\u0441\u0443 \u043F\u0440\u043E\u043D\u0430\u0452\u0435\u043D\u0438.","sr_Latn":"Autentifikacioni podaci nisu prona\u0111eni.","sv":"Uppgifterna f\xF6r autentisering kunde inte hittas.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E43\u0E19\u0E01\u0E32\u0E23\u0E23\u0E31\u0E1A\u0E23\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E15\u0E19 (credentials) ","tl":"Hindi matagpuan ang mga kredensyal ng pagpapatotoo.","tr":"Kimlik bilgileri bulunamad\u0131.","uk":"\u0410\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0439\u043D\u0456 \u0434\u0430\u043D\u0456 \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E.","ur":"\u062F\u0631\u062C \u06A9\u0631\u062F\u06BE \u0631\u06CC\u06A9\u0627\u0631\u0688 \u0646\u06C1\u06CC\u06BA \u0645\u0644 \u0633\u06A9\u0627","uz":"Autentifikatsiya ma'lumotlari topilmadi.","vi":"Th\xF4ng tin d\xF9ng \u0111\u1EC3 x\xE1c th\u1EF1c kh\xF4ng t\xECm th\u1EA5y.","zh_CN":"\u6CA1\u6709\u627E\u5230\u8EAB\u4EFD\u9A8C\u8BC1\u7684\u51ED\u8BC1\u3002","zh_TW":"\u6C92\u6709\u627E\u5230\u8EAB\u4EFD\u9A57\u8B49\u7684\u6191\u8B49\u3002"}}};var AUTHENTICATION_REQUEST_COULD_NOT_BE_PROCESSED_DUE_TO_A_SYSTEM_PROBLEM={"id":"Authentication request could not be processed due to a system problem.","translations":{"security":{"fr":"La requ\xEAte d'authentification n'a pas pu \xEAtre execut\xE9e \xE0 cause d'un probl\xE8me syst\xE8me.","af":"Verifikasieversoek kon weens 'n stelselprobleem nie verwerk word nie.","ar":"\u0644\u0645 \u064A\u0643\u062A\u0645\u0644 \u0637\u0644\u0628 \u0627\u0644\u062F\u062E\u0648\u0644 \u0646\u062A\u064A\u062C\u0647 \u0639\u0637\u0644 \u0641\u0649 \u0627\u0644\u0646\u0638\u0627\u0645.","az":"Sistem x\u0259tas\u0131 s\u0259b\u0259bil\u0259 do\u011Frulama ist\u0259yi emal edil\u0259 bilm\u0259di.","be":"\u0417\u0430\u043F\u044B\u0442 \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456 \u043D\u0435 \u043C\u043E\u0436\u0430 \u0431\u044B\u0446\u044C \u0430\u043F\u0440\u0430\u0446\u0430\u0432\u0430\u043D\u044B \u045E \u0441\u0443\u0432\u044F\u0437\u0456 \u0437 \u043F\u0440\u0430\u0431\u043B\u0435\u043C\u0430\u0439 \u0443 \u0441\u0456\u0441\u0442\u044D\u043C\u0435.","bg":"\u0417\u0430\u044F\u0432\u043A\u0430\u0442\u0430 \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F \u043D\u0435 \u043C\u043E\u0436\u0435 \u0434\u0430 \u0431\u044A\u0434\u0435 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0435\u043D\u0430\u0442\u0430 \u043F\u043E\u0440\u0430\u0434\u0438 \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u0430 \u0433\u0440\u0435\u0448\u043A\u0430.","bs":"Autentifikacijski zahtjev ne mo\u017Ee biti obra\u0111en zbog sistemskog problema.","ca":"La solicitud d'autenticaci\xF3 no s'ha pogut processar per un problema del sistema.","cs":"Po\u017Eadavek na ov\u011B\u0159en\xED nemohl b\xFDt zpracov\xE1n kv\u016Fli syst\xE9mov\xE9 chyb\u011B.","da":"Godkendelsesanmodning kan ikke behandles p\xE5 grund af et systemfejl.","de":"Die Authentifikation konnte wegen eines Systemproblems nicht bearbeitet werden.","el":"\u03A4\u03BF \u03B1\u03AF\u03C4\u03B7\u03BC\u03B1 \u03C0\u03B9\u03C3\u03C4\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2 \u03B4\u03B5 \u03BC\u03C0\u03BF\u03C1\u03B5\u03AF \u03BD\u03B1 \u03B5\u03C0\u03B5\u03BE\u03B5\u03C1\u03B3\u03B1\u03C3\u03C4\u03B5\u03AF \u03BB\u03CC\u03B3\u03C9 \u03C3\u03C6\u03AC\u03BB\u03BC\u03B1\u03C4\u03BF\u03C2 \u03C4\u03BF\u03C5 \u03C3\u03C5\u03C3\u03C4\u03AE\u03BC\u03B1\u03C4\u03BF\u03C2.","en":"Authentication request could not be processed due to a system problem.","es":"La solicitud de autenticaci\xF3n no se pudo procesar debido a un problema del sistema.","et":"Autentimisp\xE4ring ei \xF5nnestunud s\xFCsteemi probleemi t\xF5ttu.","eu":"Ezin izan da autentifikazio-eskaera prozesatu, sistema-arazo bat gertatu da eta.","fa":"\u062F\u0631\u062E\u0648\u0627\u0633\u062A \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u0628\u0647 \u062F\u0644\u06CC\u0644  \u0648\u062C\u0648\u062F \u0645\u0634\u06A9\u0644 \u062F\u0631 \u0633\u06CC\u0633\u062A\u0645 \u0642\u0627\u0628\u0644 \u067E\u0631\u062F\u0627\u0632\u0634 \u0646\u0645\u06CC \u0628\u0627\u0634\u062F.","fi":"Autentikointipyynt\xF6\xE4 ei voitu k\xE4sitell\xE4 j\xE4rjestelm\xE4ongelman vuoksi.","gl":"A solicitude de autenticaci\xF3n no puido ser procesada debido a un problema do sistema.","he":"\u05DC\u05D0 \u05E0\u05D9\u05EA\u05DF \u05D4\u05D9\u05D4 \u05DC\u05E2\u05D1\u05D3 \u05D0\u05EA \u05D1\u05E7\u05E9\u05EA \u05D0\u05D9\u05DE\u05D5\u05EA \u05D1\u05D2\u05DC\u05DC \u05D1\u05E2\u05D9\u05D9\u05EA \u05DE\u05E2\u05E8\u05DB\u05EA.","hr":"Autentifikacijski zahtjev nije mogu\u0107e provesti uslijed sistemskog problema.","hu":"A hiteles\xEDt\xE9si k\xE9r\xE9st rendszerhiba miatt nem lehet feldolgozni.","hy":"\u0540\u0561\u0574\u0561\u056F\u0561\u0580\u0563\u0561\u0575\u056B\u0576 \u057D\u056D\u0561\u056C\u055D \u0576\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u0570\u0561\u0581\u0580\u0574\u0561\u0576 \u057A\u0580\u0578\u0581\u0565\u057D\u056B\u0576\u0563\u056B \u056A\u0561\u0574\u0561\u0576\u0561\u056F\u0589","id":"Permintaan otentikasi tidak bisa diproses karena masalah sistem.","it":"La richiesta di autenticazione non pu\xF2 essere processata a causa di un errore di sistema.","ja":"\u30B7\u30B9\u30C6\u30E0\u306E\u554F\u984C\u306B\u3088\u308A\u8A8D\u8A3C\u8981\u6C42\u3092\u51E6\u7406\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002","lb":"D'Ufro fir eng Authentifikatioun konnt w\xE9inst engem Problem vum System net beaarbecht ginn.","lt":"Autentifikacijos u\u017Eklausos nepavyko \u012Fvykdyti d\u0117l sistemos klaid\u0173.","lv":"Autentifik\u0101cijas piepras\u012Bjums nevar tikt apstr\u0101d\u0101ts sist\u0113mas probl\u0113mas d\u0113\u013C.","mk":"\u0411\u0430\u0440\u0430\u045A\u0435\u0442\u043E \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u0458\u0430 \u043D\u0435 \u043C\u043E\u0436\u0435\u0448\u0435 \u0434\u0430 \u0431\u0438\u0434\u0435 \u043F\u0440\u043E\u0446\u0435\u0441\u0443\u0438\u0440\u0430\u043D\u043E \u0437\u0430\u0440\u0430\u0434\u0438 \u0441\u0438\u0441\u0442\u0435\u043C\u0441\u043A\u0438 \u043F\u0440\u043E\u0431\u043B\u0435\u043C.","mn":"\u0421\u0438\u0441\u0442\u0435\u043C\u0438\u0439\u043D \u0430\u043B\u0434\u0430\u0430\u043D\u0430\u0430\u0441 \u0431\u043E\u043B\u043E\u043D \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u0445\u04AF\u0441\u044D\u043B\u0442\u0438\u0439\u0433 \u0433\u04AF\u0439\u0446\u044D\u0442\u0433\u044D\u0445 \u0431\u043E\u043B\u043E\u043C\u0436\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"System \u1015\u103C\u103F\u1014\u102C\u1021\u1001\u1000\u103A\u1021\u1001\u1032\u101B\u103E\u102D \u1014\u1031\u1015\u102B\u101E\u1016\u103C\u1004\u103A\u1037 \u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1001\u103D\u1004\u103A\u1037\u1010\u1031\u102C\u1004\u103A\u1038\u1006\u102D\u102F\u1001\u103B\u1000\u103A\u1000\u102D\u102F \u1006\u1031\u102C\u1004\u103A\u101B\u103D\u1000\u103A\u104D\u1019\u101B \u1014\u102D\u102F\u1004\u103A\u1015\u102B\u104B","nb":"Autentiserings foresp\xF8rselen kunne ikke bli prosessert grunnet en system feil.","nl":"Authenticatieaanvraag kon niet worden verwerkt door een technisch probleem.","nn":"Innlogginga vart ikkje fullf\xF8rt p\xE5 grunn av ein systemfeil.","no":"Autentiserings foresp\xF8rselen kunne ikke bli prosessert grunnet en system feil.","pl":"\u017B\u0105danie uwierzytelniania nie mog\u0142o zosta\u0107 pomy\u015Blnie zako\u0144czone z powodu problemu z systemem.","pt":"O pedido de autentica\xE7\xE3o n\xE3o foi conclu\xEDdo devido a um problema no sistema.","pt_BR":"A solicita\xE7\xE3o de autentica\xE7\xE3o n\xE3o p\xF4de ser processada devido a um problema no sistema.","ro":"Sistemul nu a putut procesa cererea de autentificare din cauza unei erori.","ru":"\u0417\u0430\u043F\u0440\u043E\u0441 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D \u0432 \u0441\u0432\u044F\u0437\u0438 \u0441 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u043E\u0439 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0435.","sk":"Po\u017Eiadavok na overenie nemohol by\u0165 spracovan\xFD kv\xF4li syst\xE9movej chybe.","sl":"Zahteve za avtentikacijo ni bilo mogo\u010De izvesti zaradi sistemske te\u017Eave.","sq":"K\xEBrkesa p\xEBr autentikim nuk mund t\xEB p\xEBrpunohej p\xEBr shkak t\xEB nj\xEB problemi n\xEB sistem.","sr_Cyrl":"\u0417\u0430\u0445\u0442\u0435\u0432 \u0437\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0443 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043E\u0431\u0440\u0430\u0452\u0435\u043D \u0437\u0431\u043E\u0433 \u0441\u0438\u0441\u0442\u0435\u043C\u0441\u043A\u0438\u0445 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430.","sr_Latn":"Zahtev za autentifikaciju ne mo\u017Ee biti obra\u0111en zbog sistemskih problema.","sv":"Autentiseringen kunde inte genomf\xF6ras p\xE5 grund av systemfel.","th":"\u0E04\u0E33\u0E23\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E01\u0E32\u0E23\u0E23\u0E31\u0E1A\u0E23\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E15\u0E19\u0E44\u0E21\u0E48\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E14\u0E33\u0E40\u0E19\u0E34\u0E19\u0E01\u0E32\u0E23\u0E44\u0E14\u0E49 \u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E21\u0E32\u0E08\u0E32\u0E01\u0E1B\u0E31\u0E0D\u0E2B\u0E32\u0E02\u0E2D\u0E07\u0E23\u0E30\u0E1A\u0E1A","tl":"Ang kahilingan sa pagpapatotoo ay hindi naproseso dahil sa isang problema sa system.","tr":"Bir sistem hatas\u0131 nedeniyle yetkilendirme iste\u011Fi i\u015Fleme al\u0131nam\u0131yor.","uk":"\u0417\u0430\u043F\u0438\u0442 \u043D\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u044E \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0443\u0442\u0438 \u043E\u043F\u0440\u0430\u0446\u044C\u043E\u0432\u0430\u043D\u043E \u0443 \u0437\u0432\u2019\u044F\u0437\u043A\u0443 \u0437 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u043E\u044E \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0456.","ur":"\u0633\u0633\u0679\u0645 \u06A9\u06CC \u062E\u0631\u0627\u0628\u06CC \u06A9\u06CC \u0648\u062C\u06C1 \u0633\u06D2 \u062A\u0635\u062F\u06CC\u0642 \u06A9\u06CC \u062F\u0631\u062E\u0648\u0627\u0633\u062A \u067E\u0631 \u06A9\u0627\u0631\u0631\u0648\u0627\u0626\u06CC \u0646\u06C1\u06CC\u06BA \u06C1\u0648 \u0633\u06A9\u06CC","uz":"Tizimdagi muammo tufayli autentifikatsiya so'rovi bajarilmadi.","vi":"Y\xEAu c\u1EA7u x\xE1c th\u1EF1c kh\xF4ng th\u1EC3 th\u1EF1c hi\u1EC7n do l\u1ED7i c\u1EE7a h\u1EC7 th\u1ED1ng.","zh_CN":"\u7531\u4E8E\u7CFB\u7EDF\u6545\u969C\uFF0C\u8EAB\u4EFD\u9A8C\u8BC1\u7684\u8BF7\u6C42\u65E0\u6CD5\u88AB\u5904\u7406\u3002","zh_TW":"\u7531\u65BC\u7CFB\u7D71\u6545\u969C\uFF0C\u8EAB\u4EFD\u9A57\u8B49\u7684\u8ACB\u6C42\u7121\u6CD5\u88AB\u8655\u7406\u3002"}}};var INVALID_CREDENTIALS={"id":"Invalid credentials.","translations":{"security":{"fr":"Identifiants invalides.","af":"Ongedige verifikasiebewyse.","ar":"\u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644 \u062E\u0627\u0637\u0626\u0629.","az":"Yanl\u0131\u015F m\u0259lumat.","be":"\u041D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B\u044F \u0434\u0430\u0434\u0437\u0435\u043D\u044B\u044F \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456.","bg":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u043E \u0443\u0434\u043E\u0441\u0442\u043E\u0432\u0435\u0440\u0435\u043D\u0438\u0435 \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F.","bs":"Autentifikacijski podaci su neispravni.","ca":"Credencials no v\xE0lides.","cs":"Neplatn\xE9 p\u0159ihla\u0161ovac\xED \xFAdaje.","da":"Ugyldige loginoplysninger.","de":"Fehlerhafte Zugangsdaten.","el":"\u039B\u03B1\u03BD\u03B8\u03B1\u03C3\u03BC\u03AD\u03BD\u03B1 \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2.","en":"Invalid credentials.","es":"Credenciales no v\xE1lidas.","et":"Vigased autentimisandmed.","eu":"Kredentzialak okerrak dira.","fa":"\u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u0645\u06CC \u0628\u0627\u0634\u062F.","fi":"Virheelliset tunnistetiedot.","gl":"Credenciais non v\xE1lidas.","he":"\u05E9\u05DD \u05DE\u05E9\u05EA\u05DE\u05E9 \u05D0\u05D5 \u05E1\u05D9\u05E1\u05DE\u05D0 \u05E9\u05D2\u05D5\u05D9\u05D9\u05DD.","hr":"Neispravni akreditacijski podaci.","hu":"\xC9rv\xE9nytelen hiteles\xEDt\xE9si inform\xE1ci\xF3k.","hy":"\u054D\u056D\u0561\u056C \u0574\u0578\u0582\u057F\u0584\u0561\u0575\u056B\u0576 \u057F\u057E\u0575\u0561\u056C\u0576\u0565\u0580","id":"Kredensial salah.","it":"Credenziali non valide.","ja":"\u8CC7\u683C\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"Ong\xEBlteg Zouganksdaten.","lt":"Klaidingi duomenys.","lv":"Neder\u012Bgi autentifik\u0101cijas dati.","mk":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0438 \u0430\u043A\u0440\u0435\u0434\u0438\u0442\u0438\u0432\u0438.","mn":"\u0411\u0443\u0440\u0443\u0443 \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u044D\u0440\u0445\u0438\u0439\u043D \u043C\u044D\u0434\u044D\u044D\u043B\u044D\u043B.","my":"\u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A \u1021\u1011\u1031\u102C\u1000\u103A\u1021\u1011\u102C\u1038\u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Ugyldig p\xE5loggingsinformasjon.","nl":"Ongeldige inloggegevens.","nn":"Ugyldig innloggingsinformasjon.","no":"Ugyldig p\xE5loggingsinformasjon.","pl":"Nieprawid\u0142owe dane.","pt":"Credenciais inv\xE1lidas.","pt_BR":"Credenciais inv\xE1lidas.","ro":"Date de autentificare invalide.","ru":"\u041D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0435 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435.","sk":"Neplatn\xE9 prihlasovacie \xFAdaje.","sl":"Neveljavne pravice.","sq":"Kredenciale t\xEB pavlefshme.","sr_Cyrl":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0438 \u043F\u043E\u0434\u0430\u0446\u0438 \u0437\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0443.","sr_Latn":"Nevalidni podaci za autentifikaciju.","sv":"Felaktiga uppgifter.","th":"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E01\u0E32\u0E23\u0E23\u0E31\u0E1A\u0E23\u0E2D\u0E07\u0E15\u0E31\u0E27\u0E15\u0E19\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Di-wastong mga kredensyal.","tr":"Ge\xE7ersiz kimlik bilgileri.","uk":"\u041D\u0435\u0432\u0456\u0440\u043D\u0456 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0439\u043D\u0456 \u0434\u0430\u043D\u0456.","ur":"\u063A\u0644\u0637 \u0688\u06CC\u0679\u0627","uz":"Noto'g'ri ma'lumot.","vi":"Th\xF4ng tin d\xF9ng \u0111\u1EC3 x\xE1c th\u1EF1c kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u65E0\u6548\u7684\u51ED\u8BC1\u3002","zh_TW":"\u7121\u6548\u7684\u6191\u8B49\u3002"},"authentication.login":{"fr":"Les identifiants sont incorrects, veuillez v\xE9rifier votre saisie ou utiliser la fonction \u201CMot de passe oubli\xE9\u201D."}}};var COOKIE_HAS_ALREADY_BEEN_USED_BY_SOMEONE_ELSE={"id":"Cookie has already been used by someone else.","translations":{"security":{"fr":"Le cookie a d\xE9j\xE0 \xE9t\xE9 utilis\xE9 par quelqu'un d'autre.","af":"Die koekie is alreeds deur iemand anders gebruik.","ar":"\u0645\u0644\u0641\u0627\u062A \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0627\u0631\u062A\u0628\u0627\u0637(cookies) \u062A\u0645 \u0627\u0633\u062A\u062E\u062F\u0627\u0645\u0647\u0627 \u0645\u0646 \u0642\u0628\u0644 \u0634\u062E\u0635 \u0627\u062E\u0631.","az":"Kuki ba\u015Fqas\u0131 t\u0259r\u0259find\u0259n istifad\u0259 edilib.","be":"\u041D\u0435\u0445\u0442\u0430 \u0456\u043D\u0448\u044B \u045E\u0436\u043E \u0432\u044B\u043A\u0430\u0440\u044B\u0441\u0442\u0430\u045E \u0433\u044D\u0442\u044B\u044F \u043A\u0443\u043A\u0456 (cookie).","bg":"\u0422\u0430\u0437\u0438 \u0431\u0438\u0441\u043A\u0432\u0438\u0442\u043A\u0430 \u0432\u0435\u0447\u0435 \u0441\u0435 \u043F\u043E\u043B\u0437\u0432\u0430 \u043E\u0442 \u043D\u044F\u043A\u043E\u0439 \u0434\u0440\u0443\u0433.","bs":"Neko drugi je ve\u0107 iskoristio ovaj kola\u010Di\u0107 (cookie).","ca":"La cookie ja ha estat utilitzada per una altra persona.","cs":"Cookie ji\u017E bylo pou\u017Eit\xE9 n\u011Bk\xFDm jin\xFDm.","da":"Cookie er allerede brugt af en anden.","de":"Cookie wurde bereits von jemand anderem verwendet.","el":"\u03A4\u03BF Cookie \u03AD\u03C7\u03B5\u03B9 \u03AE\u03B4\u03B7 \u03C7\u03C1\u03B7\u03C3\u03B9\u03BC\u03BF\u03C0\u03BF\u03B9\u03B7\u03B8\u03B5\u03AF \u03B1\u03C0\u03CC \u03BA\u03AC\u03C0\u03BF\u03B9\u03BF\u03BD \u03AC\u03BB\u03BB\u03BF.","en":"Cookie has already been used by someone else.","es":"La cookie ya ha sido usada por otra persona.","et":"K\xFCpsis on juba kellegi teise poolt kasutuses.","eu":"Dagoeneko beste pertsona batek erabili du cookiea.","fa":"Cookie \u0642\u0628\u0644\u0627 \u062A\u0648\u0633\u0637 \u0634\u062E\u0635 \u062F\u06CC\u06AF\u0631\u06CC \u0627\u0633\u062A\u0641\u0627\u062F\u0647 \u06AF\u0631\u062F\u06CC\u062F\u0647 \u0627\u0633\u062A.","fi":"Ev\xE4ste on jo jonkin muun k\xE4yt\xF6ss\xE4.","gl":"A cookie xa foi empregado por outro usuario.","he":"\u05E2\u05D5\u05D2\u05D9\u05D4 \u05DB\u05D1\u05E8 \u05E9\u05D5\u05DE\u05E9\u05D4.","hr":"Cookie je ve\u0107 netko drugi iskoristio.","hu":"Ezt a s\xFCtit valaki m\xE1s m\xE1r felhaszn\xE1lta.","hy":"Cookie-\u0576 \u0561\u0580\u0564\u0565\u0576 \u0585\u0563\u057F\u0561\u0563\u0578\u0580\u056E\u057E\u0578\u0582\u0574 \u0567 \u0578\u0582\u0580\u056B\u0577\u056B \u056F\u0578\u0572\u0574\u056B\u0581\u0589","id":"Cookie sudah digunakan oleh orang lain.","it":"Il cookie \xE8 gi\xE0 stato usato da qualcun altro.","ja":"Cookie \u304C\u5225\u306E\u30E6\u30FC\u30B6\u30FC\u3067\u4F7F\u7528\u3055\u308C\u3066\u3044\u307E\u3059\u3002","lb":"De Cookie gouf scho vun engem anere benotzt.","lt":"Slapukas buvo panaudotas ka\u017Ekam kitam.","lv":"K\u0101ds cits jau izmantoja s\u012Bkdatni.","mk":"\u041A\u043E\u043B\u0430\u0447\u0435\u0442\u043E \u0435 \u0432\u0435\u045C\u0435 \u043A\u043E\u0440\u0438\u0441\u0442\u0435\u043D\u043E \u043E\u0434 \u043D\u0435\u043A\u043E\u0458 \u0434\u0440\u0443\u0433.","mn":"\u041A\u04AF\u04AF\u043A\u0438 \u0444\u0430\u0439\u043B\u044B\u0433 \u0430\u043B\u044C \u0445\u044D\u0434\u0438\u0439\u043D \u04E9\u04E9\u0440 \u0445\u04AF\u043D \u0445\u044D\u0440\u044D\u0433\u043B\u044D\u0436 \u0431\u0430\u0439\u043D\u0430.","my":"Cookie \u1000\u102D\u102F \u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u1019\u103E \u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u1015\u103C\u102E\u1038\u1016\u103C\u1005\u103A\u101E\u100A\u103A\u104B","nb":"Cookie har allerede blitt brukt av noen andre.","nl":"Cookie is al door een ander persoon gebruikt.","nn":"Informasjonskapselen er allereie brukt av ein annan brukar.","no":"Cookie har allerede blitt brukt av noen andre.","pl":"To ciasteczko jest u\u017Cywane przez kogo\u015B innego.","pt":"Este cookie j\xE1 est\xE1 em uso.","pt_BR":"Este cookie j\xE1 foi usado por outra pessoa.","ro":"Cookie este folosit deja de altcineva.","ru":"Cookie \u0443\u0436\u0435 \u0431\u044B\u043B \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D \u043A\u0435\u043C-\u0442\u043E \u0434\u0440\u0443\u0433\u0438\u043C.","sk":"Cookie u\u017E bolo pou\u017Eit\xE9 niek\xFDm in\xFDm.","sl":"Pi\u0161kotek je uporabil \u017Ee nekdo drug.","sq":"Cookie \xEBsht\xEB p\xEBrdorur tashm\xEB nga dikush tjet\xEBr.","sr_Cyrl":"\u041A\u043E\u043B\u0430\u0447\u0438\u045B \u0458\u0435 \u0432\u0435\u045B \u0438\u0441\u043A\u043E\u0440\u0438\u0448\u045B\u0435\u043D \u043E\u0434 \u0441\u0442\u0440\u0430\u043D\u0435 \u043D\u0435\u043A\u043E\u0433 \u0434\u0440\u0443\u0433\u043E\u0433.","sr_Latn":"Kola\u010Di\u0107 je ve\u0107 iskori\u0161\u0107en od strane nekog drugog.","sv":"Cookien har redan anv\xE4nts av n\xE5gon annan.","th":"Cookie \u0E16\u0E39\u0E01\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\u0E14\u0E49\u0E27\u0E22\u0E1C\u0E39\u0E49\u0E2D\u0E37\u0E48\u0E19","tl":"Ang Cookie ay ginamit na ng ibang tao.","tr":"\xC7erez bir ba\u015Fkas\u0131 taraf\u0131ndan zaten kullan\u0131lm\u0131\u015Ft\u0131.","uk":"\u0425\u0442\u043E\u0441\u044C \u0456\u043D\u0448\u0438\u0439 \u0432\u0436\u0435 \u0432\u0438\u043A\u043E\u0440\u0438\u0441\u0442\u0430\u0432 \u0446\u0435\u0439 \u0441ookie.","ur":"\u06A9\u0648\u06A9\u06CC \u067E\u06C1\u0644\u06D2 \u06C1\u06CC \u06A9\u0633\u06CC \u0627\u0648\u0631 \u06A9\u06D2 \u0630\u0631\u06CC\u0639\u06C1 \u0627\u0633\u062A\u0639\u0645\u0627\u0644 \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06D2","uz":"Cookie faylini allaqachon kimdir ishlatgan.","vi":"Cookie \u0111\xE3 \u0111\u01B0\u1EE3c d\xF9ng b\u1EDFi ng\u01B0\u1EDDi d\xF9ng kh\xE1c.","zh_CN":"Cookie \u5DF2\u7ECF\u88AB\u5176\u4ED6\u4EBA\u4F7F\u7528\u3002","zh_TW":"Cookie \u5DF2\u7D93\u88AB\u5176\u4ED6\u4EBA\u4F7F\u7528\u3002"}}};var NOT_PRIVILEGED_TO_REQUEST_THE_RESOURCE={"id":"Not privileged to request the resource.","translations":{"security":{"fr":"Privil\xE8ges insuffisants pour acc\xE9der \xE0 la ressource.","af":"Nie bevoorreg om die hulpbron aan te vra nie.","ar":"\u0644\u064A\u0633\u062A \u0644\u062F\u064A\u0643 \u0627\u0644\u0635\u0644\u0627\u062D\u064A\u0627\u062A \u0627\u0644\u0643\u0627\u0641\u064A\u0629 \u0644\u0647\u0630\u0627 \u0627\u0644\u0637\u0644\u0628.","az":"Resurs ist\u0259yi \xFC\xE7\xFCn imtiyaz yoxdur.","be":"\u0410\u0434\u0441\u0443\u0442\u043D\u0456\u0447\u0430\u044E\u0446\u044C \u043F\u0440\u0430\u0432\u044B \u043D\u0430 \u0437\u0430\u043F\u044B\u0442 \u0433\u044D\u0442\u0430\u0433\u0430 \u0440\u044D\u0441\u0443\u0440\u0441\u0443.","bg":"\u041D\u044F\u043C\u0430\u0442\u0435 \u043F\u0440\u0430\u0432\u0430 \u0437\u0430 \u0434\u043E\u0441\u0442\u044A\u043F \u0434\u043E \u0442\u043E\u0437\u0438 \u0440\u0435\u0441\u0443\u0440\u0441.","bs":"Nemate privilegije potrebne za pristup ovom resursu.","ca":"No t\xE9 privilegis per solicitar el recurs.","cs":"Nem\xE1te opr\xE1vn\u011Bn\xED p\u0159istupovat k prost\u0159edku.","da":"Ingen adgang til at foresp\xF8rge ressourcen.","de":"Keine Rechte, um die Ressource anzufragen.","el":"\u0394\u03B5\u03BD \u03B5\u03AF\u03C3\u03C4\u03B5 \u03B5\u03BE\u03BF\u03C5\u03C3\u03B9\u03BF\u03B4\u03BF\u03C4\u03B7\u03BC\u03AD\u03BD\u03BF\u03C2 \u03B3\u03B9\u03B1 \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7 \u03C3\u03C4\u03BF \u03C3\u03C5\u03B3\u03BA\u03B5\u03BA\u03C1\u03B9\u03BC\u03AD\u03BD\u03BF \u03C0\u03B5\u03C1\u03B9\u03B5\u03C7\u03CC\u03BC\u03B5\u03BD\u03BF.","en":"Not privileged to request the resource.","es":"No tiene privilegios para solicitar el recurso.","et":"Ressursi p\xE4rimiseks pole piisavalt \xF5iguseid.","eu":"Ez duzu baliabidea eskatzeko aukerarik.","fa":"\u062F\u0633\u062A\u0631\u0633\u06CC \u0644\u0627\u0632\u0645 \u0628\u0631\u0627\u06CC \u062F\u0631\u062E\u0648\u0627\u0633\u062A \u0627\u0632 \u0627\u06CC\u0646 \u0645\u0646\u0628\u0639 \u0631\u0627 \u062F\u0627\u0631\u0627 \u0646\u0645\u06CC \u0628\u0627\u0634\u06CC\u062F.","fi":"Ei oikeutta resurssiin.","gl":"Non ten privilexios para solicitar o recurso.","he":"\u05D0\u05D9\u05DF \u05D4\u05E8\u05E9\u05D0\u05D4 \u05DE\u05EA\u05D0\u05D9\u05DE\u05D4.","hr":"Nemate privilegije zahtijevati resurs.","hu":"Nem rendelkezik az er\u0151forr\xE1s el\xE9r\xE9s\xE9hez sz\xFCks\xE9ges jogosults\xE1ggal.","hy":"\u054C\u0565\u057D\u0578\u0582\u0580\u057D\u056B \u0570\u0561\u0580\u0581\u0574\u0561\u0576 \u0570\u0561\u0574\u0561\u0580 \u0579\u056F\u0561 \u0569\u0578\u0582\u0575\u056C\u0561\u057F\u057E\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u0589","id":"Tidak berhak untuk meminta sumber daya.","it":"Non hai i privilegi per richiedere questa risorsa.","ja":"\u30EA\u30BD\u30FC\u30B9\u3092\u30EA\u30AF\u30A8\u30B9\u30C8\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093\u3002","lb":"Keng Rechter fir d'Ressource unzefroen.","lt":"Neturite teisi\u0173 pasiekt\u012F resurs\u0105.","lv":"Nav ties\u012Bbu \u0161\u012B resursa izsauk\u0161anai.","mk":"\u041D\u0435\u043C\u0430\u0442\u0435 \u043F\u0440\u0438\u0432\u0438\u043B\u0435\u0433\u0438\u0438 \u0437\u0430 \u0434\u0430 \u0433\u043E \u043F\u043E\u0431\u0430\u0440\u0430\u0442\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043E\u0442.","mn":"\u042D\u043D\u044D\u0445\u04AF\u04AF \u043C\u044D\u0434\u044D\u044D\u043B\u043B\u0438\u0439\u0433 \u0430\u0432\u0430\u0445 \u044D\u0440\u0445 \u0445\u04AF\u0440\u044D\u0445\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430.","my":"\u1021\u101B\u1004\u103A\u1038\u1021\u1019\u103C\u1005\u103A\u1000\u102D\u102F\u1010\u1031\u102C\u1004\u103A\u1038\u1006\u102D\u102F\u101B\u1014\u103A\u1021\u1001\u103D\u1004\u1037\u103A\u1011\u1030\u1038\u1019\u101B\u1015\u102B\u104B","nb":"Ingen tilgang til \xE5 be om gitt ressurs.","nl":"Onvoldoende rechten om de aanvraag te verwerken.","nn":"Du har ikkje \xE5tgang til \xE5 be om denne ressursen.","no":"Ingen tilgang til \xE5 be om gitt ressurs.","pl":"Brak uprawnie\u0144 dla \u017C\u0105dania wskazanego zasobu.","pt":"N\xE3o possui privil\xE9gios para aceder a este recurso.","pt_BR":"Sem privil\xE9gio para solicitar o recurso.","ro":"Permisiuni insuficiente pentru resursa cerut\u0103.","ru":"\u041E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u043F\u0440\u0430\u0432\u0430 \u043D\u0430 \u0437\u0430\u043F\u0440\u043E\u0441 \u044D\u0442\u043E\u0433\u043E \u0440\u0435\u0441\u0443\u0440\u0441\u0430.","sk":"Nem\xE1te opr\xE1vnenie pristupova\u0165 k prostriedku.","sl":"Nimate privilegijev za zahtevani vir.","sq":"Nuk \xEBsht\xEB i privilegjuar t\xEB k\xEBrkoj\xEB burimin.","sr_Cyrl":"\u041D\u0435\u043C\u0430\u0442\u0435 \u043F\u0440\u0430\u0432\u0430 \u043F\u0440\u0438\u0441\u0442\u0443\u043F\u0430 \u043E\u0432\u043E\u043C \u0440\u0435\u0441\u0443\u0440\u0441\u0443.","sr_Latn":"Nemate prava pristupa ovom resursu.","sv":"Saknar r\xE4ttigheter f\xF6r resursen.","th":"\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E2A\u0E34\u0E17\u0E18\u0E34\u0E4C\u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E2A\u0E48\u0E27\u0E19\u0E19\u0E35\u0E49\u0E44\u0E14\u0E49","tl":"Walang pribilehiyo upang humingi ng mga bagong mapagkukunan.","tr":"Kaynak talebi i\xE7in imtiyaz bulunamad\u0131.","uk":"\u0412\u0456\u0434\u0441\u0443\u0442\u043D\u0456 \u043F\u0440\u0430\u0432\u0430 \u043D\u0430 \u0437\u0430\u043F\u0438\u0442 \u0446\u044C\u043E\u0433\u043E \u0440\u0435\u0441\u0443\u0440\u0441\u0443.","ur":"\u0648\u0633\u0627\u0626\u0644 \u06A9\u06CC \u062F\u0631\u062E\u0648\u0627\u0633\u062A \u06A9\u0631\u0646\u06D2 \u06A9\u0627 \u0627\u062E\u062A\u06CC\u0627\u0631 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2","uz":"Sizda ushbu manbani talab qilishga ruxsat yo'q..","vi":"Kh\xF4ng \u0111\u01B0\u1EE3c ph\xE9p y\xEAu c\u1EA7u t\xE0i nguy\xEAn.","zh_CN":"\u6CA1\u6709\u6743\u9650\u8BF7\u6C42\u6B64\u8D44\u6E90\u3002","zh_TW":"\u6C92\u6709\u6B0A\u9650\u8ACB\u6C42\u6B64\u8CC7\u6E90\u3002"}}};var INVALID_CSRF_TOKEN={"id":"Invalid CSRF token.","translations":{"security":{"fr":"Jeton CSRF invalide.","af":"Ongeldige CSRF-teken.","ar":"\u0631\u0645\u0632 \u0627\u0644\u0645\u0648\u0642\u0639 \u063A\u064A\u0631 \u0635\u062D\u064A\u062D.","az":"Yanl\u0131\u015F CSRF ni\u015Fan\u0131.","be":"\u041D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u044B CSRF-\u0442\u043E\u043A\u0435\u043D.","bg":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D CSRF \u0442\u043E\u043A\u0435\u043D.","bs":"CSRF \u017Eeton (token) je neispravan.","ca":"Token CSRF no v\xE0lid.","cs":"Neplatn\xFD CSRF token.","da":"Ugyldig CSRF-token.","de":"Ung\xFCltiges CSRF-Token.","el":"\u039C\u03B7 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF CSRF token.","en":"Invalid CSRF token.","es":"Token CSRF no v\xE1lido.","et":"Vigane CSRF m\xE4rgis.","eu":"CSRF tokena okerra da.","fa":"\u062A\u0648\u06A9\u0646 CSRF \u0645\u0639\u062A\u0628\u0631 \u0646\u0645\u06CC \u0628\u0627\u0634\u062F.","fi":"Virheellinen CSRF tunnus.","gl":"Token CSRF non v\xE1lido.","he":"\u05D0\u05E1\u05D9\u05DE\u05D5\u05DF CSRF \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9.","hr":"Neispravan CSRF token.","hu":"\xC9rv\xE9nytelen CSRF token.","hy":"\u0531\u0576\u057E\u0561\u057E\u0565\u0580 CSRF \u0569\u0578\u0584\u0565\u0576\u0589","id":"Token CSRF salah.","it":"CSRF token non valido.","ja":"CSRF \u30C8\u30FC\u30AF\u30F3\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"Ong\xEBltegen CSRF-Token.","lt":"Neteisingas CSRF raktas.","lv":"Neder\u012Bgs CSRF talons.","mk":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D CSRF \u0442\u043E\u043A\u0435\u043D.","mn":"\u0422\u043E\u0445\u0438\u0440\u043E\u043C\u0436\u0433\u04AF\u0439 CSRF \u0442\u043E\u043A\u0435\u043D.","my":"\u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A CSRF token \u1019\u101F\u102F\u1010\u103A\u1015\u102B\u104B","nb":"Ugyldig CSRF token.","nl":"CSRF-code is ongeldig.","nn":"Ugyldig CSRF-teikn.","no":"Ugyldig CSRF token.","pl":"Nieprawid\u0142owy token CSRF.","pt":"Token CSRF inv\xE1lido.","pt_BR":"Token CSRF inv\xE1lido.","ro":"Token CSRF este invalid.","ru":"\u041D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0439 \u0442\u043E\u043A\u0435\u043D CSRF.","sk":"Neplatn\xFD CSRF token.","sl":"Neveljaven CSRF \u017Eeton.","sq":"Identifikues i pavlefsh\xEBm CSRF.","sr_Cyrl":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0430\u043D CSRF \u0442\u043E\u043A\u0435\u043D.","sr_Latn":"Nevalidan CSRF token.","sv":"Ogiltig CSRF-token.","th":"CSRF token \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07","tl":"Di-wastong token ng CSRF.","tr":"Ge\xE7ersiz CSRF fi\u015Fi.","uk":"\u041D\u0435\u0432\u0456\u0440\u043D\u0438\u0439 \u0442\u043E\u043A\u0435\u043D CSRF.","ur":"\u0679\u0648\u06A9\u0646 \u063A\u0644\u0637 \u06C1\u06D2 CSRF","uz":"Noto'g'ri CSRF belgisi.","vi":"M\xE3 CSRF kh\xF4ng h\u1EE3p l\u1EC7.","zh_CN":"\u65E0\u6548\u7684 CSRF token \u3002","zh_TW":"\u7121\u6548\u7684 CSRF token \u3002"}}};var NO_AUTHENTICATION_PROVIDER_FOUND_TO_SUPPORT_THE_AUTHENTICATION_TOKEN={"id":"No authentication provider found to support the authentication token.","translations":{"security":{"fr":"Aucun fournisseur d'authentification n'a \xE9t\xE9 trouv\xE9 pour supporter le jeton d'authentification.","af":"Geen verifikasieverskaffer is gevind wat die verifikasietoken kan ondersteun nie.","ar":"\u0644\u0627 \u064A\u0648\u062C\u062F \u0645\u0639\u0631\u0641 \u0644\u0644\u062F\u062E\u0648\u0644 \u064A\u062F\u0639\u0645 \u0627\u0644\u0631\u0645\u0632 \u0627\u0644\u0645\u0633\u062A\u062E\u062F\u0645 \u0644\u0644\u062F\u062E\u0648\u0644.","az":"Do\u011Frulama ni\u015Fan\u0131n\u0131 d\u0259st\u0259kl\u0259y\u0259c\u0259k provayder tap\u0131lmad\u0131.","be":"\u041D\u0435 \u0437\u043D\u043E\u0439\u0434\u0437\u0435\u043D \u043F\u0440\u0430\u0432\u0430\u0439\u0434\u0430\u0440 \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456, \u044F\u043A\u0456 \u043C\u043E\u0436\u0430 \u043F\u0430\u0434\u0442\u0440\u044B\u043C\u043B\u0456\u0432\u0430\u0446\u044C \u0433\u044D\u0442\u044B \u0442\u043E\u043A\u0435\u043D \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456.","bg":"\u041D\u0435 \u0435 \u043E\u0442\u043A\u0440\u0438\u0442 \u043F\u0440\u043E\u0432\u0430\u0439\u0434\u044A\u0440, \u043A\u043E\u0439\u0442\u043E \u0434\u0430 \u043F\u043E\u0434\u0434\u044A\u0440\u0436\u0430 \u0442\u043E\u0437\u0438 \u0442\u043E\u043A\u0435\u043D \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F.","bs":"Nije prona\u0111en autentifikacijski provajder koji bi podr\u017Eao dati autentifikacijski \u017Eeton (token).","ca":"No s'ha trobat un prove\xEFdor d'autenticaci\xF3 que suporti el token d'autenticaci\xF3.","cs":"Poskytovatel pro ov\u011B\u0159ovac\xED token nebyl nalezen.","da":"Ingen godkendelsesudbyder er fundet til underst\xF8ttelsen af godkendelsestoken.","de":"Es wurde kein Authentifizierungs-Provider gefunden, der das Authentifizierungs-Token unterst\xFCtzt.","el":"\u0394\u03B5 \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B5 \u03BA\u03AC\u03C0\u03BF\u03B9\u03BF\u03C2 \u03C0\u03AC\u03C1\u03BF\u03C7\u03BF\u03C2 \u03C0\u03B9\u03C3\u03C4\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2 \u03C0\u03BF\u03C5 \u03BD\u03B1 \u03C5\u03C0\u03BF\u03C3\u03C4\u03B7\u03C1\u03AF\u03B6\u03B5\u03B9 \u03C4\u03BF token \u03C0\u03B9\u03C3\u03C4\u03BF\u03C0\u03BF\u03AF\u03B7\u03C3\u03B7\u03C2.","en":"No authentication provider found to support the authentication token.","es":"No se encontr\xF3 un proveedor de autenticaci\xF3n que soporte el token de autenticaci\xF3n.","et":"Ei leitud sobivat autentimismeetodit, mis toetaks autentimism\xE4rgist.","eu":"Ez da aurkitu autentifikazio-tokena eutsi dezakeen autentifikazio-hornitzailerik.","fa":"\u0647\u06CC\u0686 \u0627\u0631\u0627\u0626\u0647 \u062F\u0647\u0646\u062F\u0647 \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A\u06CC \u0628\u0631\u0627\u06CC \u067E\u0634\u062A\u06CC\u0628\u0627\u0646\u06CC \u0627\u0632 \u062A\u0648\u06A9\u0646 \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u067E\u06CC\u062F\u0627 \u0646\u0634\u062F.","fi":"Autentikointi tunnukselle ei l\xF6ydetty tuettua autentikointi tarjoajaa.","gl":"Non se atopou un provedor de autenticaci\xF3n que soporte o token de autenticaci\xF3n.","he":"\u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0 \u05E1\u05E4\u05E7 \u05D0\u05D9\u05DE\u05D5\u05EA \u05D4\u05DE\u05EA\u05D0\u05D9\u05DE\u05D4 \u05DC\u05D1\u05E7\u05E9\u05D4.","hr":"Nije prona\u0111en autentifikacijski provider koji bi podr\u017Eao autentifikacijski token.","hu":"Nem tal\xE1lhat\xF3 a hiteles\xEDt\xE9si tokent t\xE1mogat\xF3 hiteles\xEDt\xE9si szolg\xE1ltat\xE1s.","hy":"\u0546\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u0578\u0579 \u0574\u056B \u0574\u0561\u057F\u0561\u056F\u0561\u0580\u0561\u0580 \u0579\u056B \u0563\u057F\u0576\u057E\u0565\u056C, \u0578\u0580 \u0561\u057B\u0561\u056F\u0581\u056B \u0576\u0578\u0582\u0575\u0576\u0561\u056F\u0561\u0576\u0561\u0581\u0574\u0561\u0576 \u0569\u0578\u0584\u0565\u0576\u0568\u0589","id":"Tidak ditemukan penyedia otentikasi untuk mendukung token otentikasi.","it":"Non \xE8 stato trovato un valido fornitore di autenticazione per supportare il token.","ja":"\u8A8D\u8A3C\u30C8\u30FC\u30AF\u30F3\u3092\u30B5\u30DD\u30FC\u30C8\u3059\u308B\u8A8D\u8A3C\u30D7\u30ED\u30D0\u30A4\u30C0\u30FC\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002","lb":"Et gouf keen Authentifiz\xE9ierungs-Provider fonnt deen den Authentifiz\xE9ierungs-Token \xEBnnerst\xEBtzt.","lt":"Nerastas autentifikacijos tiek\u0117jas, kuris palaikyt\u0173 autentifikacijos rakt\u0105.","lv":"Nav atrasts, autentifik\u0101cijas talonu atbalsto\u0161s, autentifik\u0101cijas sniedz\u0113js.","mk":"\u041D\u0435 \u0435 \u043F\u0440\u043E\u043D\u0430\u0458\u0434\u0435\u043D \u043F\u0440\u043E\u0432\u0430\u0458\u0434\u0435\u0440 \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u0458\u0430 \u043A\u043E\u0458 \u0433\u043E \u043F\u043E\u0434\u0434\u0440\u0436\u0443\u0432\u0430 \u0442\u043E\u043A\u0435\u043D\u043E\u0442 \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u0458\u0430.","mn":"\u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u0442\u043E\u043A\u0435\u043D\u0433 \u0434\u044D\u043C\u0436\u0438\u0445 \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u044D\u0440\u0445\u0438\u0439\u043D \u0445\u0430\u043D\u0433\u0430\u0433\u0447 \u043E\u043B\u0434\u0441\u043E\u043D\u0433\u04AF\u0439.","my":"\u1021\u1011\u1031\u102C\u1000\u103A\u1021\u1011\u102C\u1038\u1005\u102D\u1005\u1005\u103A\u1001\u103C\u1004\u103A\u1038\u101E\u1004\u103A\u1039\u1000\u1031\u1010\u1000\u102D\u102F\u1015\u1036\u1037\u1015\u102D\u102F\u1038\u101B\u1014\u103A \u1019\u100A\u103A\u101E\u100A\u1037\u103A\u1021\u1011\u1031\u102C\u1000\u103A\u1021\u1011\u102C\u1038\u1005\u102D\u1005\u1005\u103A\u101B\u1031\u1038 \u1040\u1014\u103A\u1006\u1031\u102C\u1004\u103A\u1019\u103E\u102F\u1019\u103E\u1019\u1010\u103D\u1031\u1037\u1015\u102B\u104B","nb":"Ingen autentiserings tilbyder funnet som st\xF8tter gitt autentiserings token.","nl":"Geen authenticatieprovider gevonden die de authenticatietoken ondersteunt.","nn":"Fann ingen innloggingstilbydar som st\xF8ttar dette innloggingsteiknet.","no":"Ingen autentiserings tilbyder funnet som st\xF8tter gitt autentiserings token.","pl":"Nie znaleziono mechanizmu uwierzytelniania zdolnego do obs\u0142ugi przes\u0142anego tokenu.","pt":"Nenhum fornecedor de autentica\xE7\xE3o encontrado para suportar o token de autentica\xE7\xE3o.","pt_BR":"Nenhum provedor de autentica\xE7\xE3o encontrado para suportar o token de autentica\xE7\xE3o.","ro":"Nu a fost g\u0103sit nici un agent de autentificare pentru tokenul specificat.","ru":"\u041D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u043F\u0440\u043E\u0432\u0430\u0439\u0434\u0435\u0440 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438, \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044E\u0449\u0438\u0439 \u0442\u043E\u043A\u0435\u043D \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0438.","sk":"Poskytovate\u013E pre overovac\xED token nebol n\xE1jden\xFD.","sl":"Ponudnika avtentikacije za podporo prijavnega \u017Eetona ni bilo mogo\u010De najti.","sq":"Asnj\xEB ofrues i v\xEBrtetimit nuk u gjet q\xEB t\xEB mb\xEBshtes\xEB simbolin e v\xEBrtetimit.","sr_Cyrl":"\u0410\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u0438 \u043F\u0440\u043E\u0432\u0430\u0458\u0434\u0435\u0440 \u0437\u0430 \u043F\u043E\u0434\u0440\u0448\u043A\u0443 \u0442\u043E\u043A\u0435\u043D\u0430 \u043D\u0438\u0458\u0435 \u043F\u0440\u043E\u043D\u0430\u0452\u0435\u043D.","sr_Latn":"Autentifikacioni provajder za podr\u0161ku tokena nije prona\u0111en.","sv":"Ingen leverant\xF6r f\xF6r autentisering hittades f\xF6r angiven autentiseringstoken.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A authentication provider \u0E17\u0E35\u0E48\u0E23\u0E2D\u0E07\u0E23\u0E31\u0E1A\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A authentication token","tl":"Walang nahanap na provider ng pagpapatotoo upang suportahan ang token ng pagpapatotoo.","tr":"Yetkilendirme fi\u015Fini destekleyecek yetkilendirme sa\u011Flay\u0131c\u0131s\u0131 bulunamad\u0131.","uk":"\u041D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E \u043F\u0440\u043E\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0457, \u0449\u043E \u043F\u0456\u0434\u0442\u0440\u0438\u043C\u0443\u0454 \u0442\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0456\u0457.","ur":"\u062A\u0635\u062F\u06CC\u0642\u06CC \u0679\u0648\u06A9\u0646 \u06A9\u0648 \u0633\u067E\u0648\u0631\u0679 \u06A9\u0631\u0646\u06D2 \u06A9\u06D2 \u0644\u06CC\u06D2 \u06A9\u0648\u0626\u06CC \u062A\u0635\u062F\u06CC\u0642\u06CC \u06A9\u0646\u0646\u062F\u06C1 \u0646\u06C1\u06CC\u06BA \u0645\u0644\u0627","uz":"Haqiqiylikni tasdiqlovchi belgini qo'llab-quvvatlovchi biron bir autentifikatsiya provayderi topilmadi.","vi":"Kh\xF4ng t\xECm th\u1EA5y nh\xE0 cung c\u1EA5p d\u1ECBch v\u1EE5 x\xE1c th\u1EF1c n\xE0o cho m\xE3 x\xE1c th\u1EF1c m\xE0 b\u1EA1n s\u1EED d\u1EE5ng.","zh_CN":"\u6CA1\u6709\u627E\u5230\u652F\u6301\u6B64 token \u7684\u8EAB\u4EFD\u9A8C\u8BC1\u670D\u52A1\u63D0\u4F9B\u65B9\u3002","zh_TW":"\u6C92\u6709\u627E\u5230\u652F\u6301\u6B64 token \u7684\u8EAB\u4EFD\u9A57\u8B49\u670D\u52D9\u63D0\u4F9B\u65B9\u3002"}}};var NO_SESSION_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED={"id":"No session available, it either timed out or cookies are not enabled.","translations":{"security":{"fr":"Aucune session disponible, celle-ci a expir\xE9 ou les cookies ne sont pas activ\xE9s.","af":"Geen sessie is beskikbaar, die het verval of koekies is nie geaktiveer nie.","ar":"\u0644\u0627 \u064A\u0648\u062C\u062F \u0635\u0644\u0629 \u0628\u064A\u0646\u0643 \u0648 \u0628\u064A\u0646 \u0627\u0644\u0645\u0648\u0642\u0639 \u0627\u0645\u0627 \u0627\u0646\u0647\u0627 \u0627\u0646\u062A\u0647\u062A \u0627\u0648 \u0627\u0646 \u0645\u062A\u0635\u0641\u062D\u0643 \u0644\u0627 \u064A\u062F\u0639\u0645 \u062E\u0627\u0635\u064A\u0629 \u0645\u0644\u0641\u0627\u062A \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0627\u0631\u062A\u0628\u0627\u0637 (cookies).","az":"Uy\u011Fun seans yoxdur, vaxt\u0131 ke\xE7ib v\u0259 ya kuki aktiv deyil.","be":"\u0421\u0435\u0441\u0456\u044F \u043D\u0435 \u0434\u0430\u0441\u0442\u0443\u043F\u043D\u0430, \u044F\u0435 \u0447\u0430\u0441 \u0441\u043A\u043E\u043D\u0447\u044B\u045E\u0441\u044F, \u0430\u0431\u043E \u043A\u0443\u043A\u0456 (cookies) \u0432\u044B\u043A\u043B\u044E\u0447\u0430\u043D\u044B.","bg":"\u0421\u0435\u0441\u0438\u044F\u0442\u0430 \u043D\u0435 \u0435 \u0434\u043E\u0441\u0442\u044A\u043F\u043D\u0430, \u0438\u043B\u0438 \u0432\u0440\u0435\u043C\u0435\u0442\u043E \u0437\u0430 \u0434\u043E\u0441\u0442\u044A\u043F \u0435 \u0438\u0437\u0442\u0435\u043A\u043B\u043E, \u0438\u043B\u0438 \u0431\u0438\u0441\u043A\u0432\u0438\u0442\u043A\u0438\u0442\u0435 \u043D\u0435 \u0441\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438.","bs":"Nema dostupnih sesija; ili je istekla ili su kola\u010Di\u0107i (cookies) ikslju\u010Deni.","ca":"No hi ha sessi\xF3 disponible, ha expirat o les cookies no estan habilitades.","cs":"Session nen\xED k dispozici, vypr\u0161ela jej\xED platnost, nebo jsou zak\xE1zan\xE9 cookies.","da":"Ingen session tilg\xE6ngelig, sessionen er enten udl\xF8bet eller cookies er ikke aktiveret.","de":"Keine Session verf\xFCgbar, entweder ist diese abgelaufen oder Cookies sind nicht aktiviert.","el":"\u0394\u03B5\u03BD \u03C5\u03C0\u03AC\u03C1\u03C7\u03B5\u03B9 \u03B5\u03BD\u03B5\u03C1\u03B3\u03AE \u03C3\u03CD\u03BD\u03BF\u03B4\u03BF\u03C2 (session), \u03B5\u03AF\u03C4\u03B5 \u03AD\u03C7\u03B5\u03B9 \u03BB\u03AE\u03BE\u03B5\u03B9 \u03AE \u03C4\u03B1 cookies \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B5\u03BD\u03B5\u03C1\u03B3\u03BF\u03C0\u03BF\u03B9\u03B7\u03BC\u03AD\u03BD\u03B1.","en":"No session available, it either timed out or cookies are not enabled.","es":"No hay ninguna sesi\xF3n disponible, ha expirado o las cookies no est\xE1n habilitados.","et":"Seanss puudub, see on kas aegunud v\xF5i pole k\xFCpsised lubatud.","eu":"Ez dago saiorik erabilgarri, iraungi egin da edo cookieak ez daude gaituta.","fa":"\u0647\u06CC\u0686 \u062C\u0644\u0633\u0647\u200C\u0627\u06CC \u062F\u0631 \u062F\u0633\u062A\u0631\u0633 \u0646\u0645\u06CC \u0628\u0627\u0634\u062F. \u0627\u06CC\u0646 \u0645\u06CC\u062A\u0648\u0627\u0646\u062F \u0628\u0647 \u062F\u0644\u06CC\u0644 \u067E\u0627\u06CC\u0627\u0646 \u06CC\u0627\u0641\u062A\u0646 \u0632\u0645\u0627\u0646 \u0648 \u06CC\u0627 \u0641\u0639\u0627\u0644 \u0646\u0628\u0648\u062F\u0646 \u06A9\u0648\u06A9\u06CC \u0647\u0627 \u0628\u0627\u0634\u062F.","fi":"Sessio ei ole saatavilla, se on joko vanhentunut tai ev\xE4steet eiv\xE4t ole k\xE4yt\xF6ss\xE4.","gl":"Non hai ningunha sesi\xF3n dispo\xF1ible, expirou ou as cookies non est\xE1n habilitadas.","he":"\u05D0\u05D9\u05DF \u05E1\u05D9\u05D9\u05E9\u05DF \u05D6\u05DE\u05D9\u05DF, \u05D0\u05D5 \u05E9\u05EA\u05DD \u05D4\u05D6\u05DE\u05DF \u05D4\u05E7\u05E6\u05D5\u05D1 \u05D0\u05D5 \u05D4\u05E2\u05D5\u05D2\u05D9\u05D5\u05EA \u05D0\u05D9\u05E0\u05DF \u05DE\u05D5\u05E4\u05E2\u05DC\u05D5\u05EA.","hr":"Sesija nije dostupna, ili je istekla ili cookies nisu omogu\u0107eni.","hu":"Munkamenet nem \xE1ll rendelkez\xE9sre, t\xFAll\xE9pte az id\u0151keretet vagy a s\xFCtik le vannak tiltva.","hy":"\u0540\u0561\u057D\u0561\u0576\u0565\u056C\u056B \u057D\u0565\u057D\u056B\u0561 \u0579\u056F\u0561, \u056F\u0561\u0574 \u0561\u0575\u0576 \u057D\u057A\u0561\u057C\u057E\u0565\u056C \u0567 \u056F\u0561\u0574 cookie-\u0576\u0565\u0580\u0568 \u0561\u0576\u057B\u0561\u057F\u057E\u0561\u056E \u0565\u0576:","id":"Tidak ada sesi yang tersedia, mungkin waktu sudah habis atau cookie tidak diaktifkan","it":"Nessuna sessione disponibile, pu\xF2 essere scaduta o i cookie non sono abilitati.","ja":"\u5229\u7528\u53EF\u80FD\u306A\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u3042\u308A\u307E\u305B\u3093\u3002\u30BF\u30A4\u30E0\u30A2\u30A6\u30C8\u3057\u305F\u304B\u3001Cookie \u304C\u7121\u52B9\u306B\u306A\u3063\u3066\u3044\u307E\u3059\u3002","lb":"Keng S\xEBtzung disponibel. Entweder ass se ofgelaf oder Cookies sinn net aktiv\xE9iert.","lt":"Sesija yra nepasiekiama, pasibaig\u0117 galiojimo laikas arba slapukai yra i\u0161jungti.","lv":"Sesija nav pieejama - vai nu t\u0101 beidz\u0101s, vai nu s\u012Bkdatnes nav iesp\u0113jotas.","mk":"\u0421\u0435\u0441\u0438\u0458\u0430\u0442\u0430 \u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0430\u043F\u043D\u0430, \u0438\u043B\u0438 \u0435 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0430, \u0438\u043B\u0438 \u043A\u043E\u043B\u0430\u0447\u0438\u045A\u0430\u0442\u0430 \u043D\u0435 \u0441\u0435 \u043E\u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D\u0438.","my":"Session \u1019\u1021\u102C\u1038\u101C\u1015\u103A\u1015\u102B\u104B Session \u1021\u1001\u103B\u102D\u1014\u103A\u1000\u102F\u1014\u103A\u101E\u103D\u102C\u1038\u1001\u103C\u1004\u103A\u1038 (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) cookies \u1019\u103B\u102C\u1038\u1000\u102D\u102F\u1016\u103D\u1004\u1037\u103A\u1011\u102C\u1038\u1001\u103C\u1004\u103A\u1038\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Ingen sesjon tilgjengelig, sesjonen er enten utl\xF8pt eller cookies ikke skrudd p\xE5.","nl":"Geen sessie beschikbaar, mogelijk is deze verlopen of cookies zijn uitgeschakeld.","nn":"Ingen sesjon tilgjengeleg. Sesjonen er anten ikkje lenger gyldig, eller informasjonskapslar er ikkje skrudd p\xE5 i nettlesaren.","no":"Ingen sesjon tilgjengelig, sesjonen er enten utl\xF8pt eller cookies ikke skrudd p\xE5.","pl":"Brak danych sesji, sesja wygas\u0142a lub ciasteczka nie s\u0105 w\u0142\u0105czone.","pt":"N\xE3o existe sess\xE3o dispon\xEDvel, esta expirou ou os cookies est\xE3o desativados.","pt_BR":"Nenhuma sess\xE3o dispon\xEDvel, ela expirou ou os cookies n\xE3o est\xE3o habilitados.","ro":"Sesiunea nu mai este disponibil\u0103, a expirat sau suportul pentru cookies nu este activat.","ru":"\u0421\u0435\u0441\u0441\u0438\u044F \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430, \u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0438\u0441\u0442\u0435\u043A\u043B\u043E, \u043B\u0438\u0431\u043E cookies \u043D\u0435 \u0432\u043A\u043B\u044E\u0447\u0435\u043D\u044B.","sk":"Session nie je k dispoz\xEDci, vypr\u0161ala jej platnos\u0165, alebo s\xFA zak\xE1zan\xE9 cookies.","sl":"Seja ni na voljo, ali je potekla ali pa pi\u0161kotki niso omogo\u010Deni.","sq":"Nuk ka asnj\xEB sesion t\xEB vlefsh\xEBm, i ka skaduar koha ose cookies nuk jan\xEB aktivizuar.","sr_Cyrl":"\u0421\u0435\u0441\u0438\u0458\u0430 \u043D\u0438\u0458\u0435 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430, \u0438\u0441\u0442\u0435\u043A\u043B\u0430 \u0458\u0435 \u0438\u043B\u0438 \u0441\u0443 \u043A\u043E\u043B\u0430\u0447\u0438\u045B\u0438 \u0438\u0441\u043A\u0459\u0443\u0447\u0435\u043D\u0438.","sr_Latn":"Sesija nije dostupna, istekla je ili su kola\u010Di\u0107i isklju\u010Deni.","sv":"Ingen session finns tillg\xE4nglig, antingen har den f\xF6rfallit eller \xE4r cookies inte aktiverat.","th":"\u0E44\u0E21\u0E48\u0E21\u0E35 session \u0E17\u0E35\u0E48\u0E1E\u0E23\u0E49\u0E2D\u0E21\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19, Session \u0E2B\u0E21\u0E14\u0E2D\u0E32\u0E22\u0E38\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27\u0E2B\u0E23\u0E37\u0E2D cookies \u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E40\u0E1B\u0E34\u0E14\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19","tl":"Walang magagamit na session, alinman sa nag-time out o ang cookies ay hindi pinagana.","tr":"Oturum bulunamad\u0131, zaman a\u015F\u0131m\u0131na u\u011Frad\u0131 veya \xE7erezler etkin de\u011Fil.","uk":"\u0421\u0435\u0441\u0456\u044F \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430, \u0457\u0457 \u0447\u0430\u0441 \u0432\u0438\u0439\u0448\u043E\u0432, \u0430\u0431\u043E cookies \u0432\u0438\u043C\u043A\u043D\u0435\u043D\u043E.","ur":"\u06A9\u0648\u0626\u06CC \u0633\u06CC\u0634\u0646 \u062F\u0633\u062A\u06CC\u0627\u0628 \u0646\u06C1\u06CC\u06BA \u06C1\u06D2\u060C \u06CC\u0627 \u062A\u0648 \u0627\u0633 \u06A9\u0627 \u0648\u0642\u062A \u062E\u062A\u0645 \u06C1\u0648 \u06AF\u06CC\u0627 \u06C1\u06D2 \u06CC\u0627 \u06A9\u0648\u06A9\u06CC\u0632 \u0641\u0639\u0627\u0644 \u0646\u06C1\u06CC\u06BA \u06C1\u06CC\u06BA","uz":"Sessiya topilmadi, muddati tugamadi yoki cookie-fayllar yoqilmagan.","vi":"Kh\xF4ng t\xECm th\u1EA5y phi\xEAn l\xE0m vi\u1EC7c. Phi\xEAn l\xE0m vi\u1EC7c ho\u1EB7c cookie c\xF3 th\u1EC3 b\u1ECB t\u1EAFt.","zh_CN":"Session \u4E0D\u53EF\u7528\u3002\u4F1A\u8BDD\u8D85\u65F6\u6216\u6CA1\u6709\u542F\u7528 cookies \u3002","zh_TW":"Session \u4E0D\u53EF\u7528\u3002\u56DE\u8A71\u8D85\u6642\u6216\u6C92\u6709\u5553\u7528 cookies \u3002"}}};var NO_TOKEN_COULD_BE_FOUND={"id":"No token could be found.","translations":{"security":{"fr":"Aucun jeton n'a pu \xEAtre trouv\xE9.","af":"Geen teken kon gevind word nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0644\u0631\u0645\u0632.","az":"Ni\u015Fan tap\u0131lmad\u0131.","be":"\u0422\u043E\u043A\u0435\u043D \u043D\u0435 \u0437\u043D\u043E\u0439\u0434\u0437\u0435\u043D.","bg":"\u0422\u043E\u043A\u0435\u043D\u044A\u0442 \u043D\u0435 \u0435 \u043E\u0442\u043A\u0440\u0438\u0442.","bs":"Nije prona\u0111en nijedan \u017Eeton (token).","ca":"No s'ha trobat cap token.","cs":"Token nebyl nalezen.","da":"Ingen token kan findes.","de":"Es wurde kein Token gefunden.","el":"\u0394\u03B5\u03BD \u03AE\u03C4\u03B1\u03BD \u03B4\u03C5\u03BD\u03B1\u03C4\u03CC\u03BD \u03BD\u03B1 \u03B2\u03C1\u03B5\u03B8\u03B5\u03AF \u03BA\u03AC\u03C0\u03BF\u03B9\u03BF token.","en":"No token could be found.","es":"No se encontr\xF3 ning\xFAn token.","et":"Identsust\xF5endit ei leitud.","eu":"Ez da tokenik aurkitu.","fa":"\u0647\u06CC\u0686 \u062A\u0648\u06A9\u0646\u06CC \u067E\u06CC\u062F\u0627 \u0646\u0634\u062F.","fi":"Tunnusta ei l\xF6ytynyt.","gl":"Non se atopou ning\xFAn token.","he":"\u05D4\u05D8\u05D5\u05E7\u05DF \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0.","hr":"Token nije prona\u0111en.","hu":"Nem tal\xE1lhat\xF3 token.","hy":"\u0539\u0578\u0584\u0565\u0576\u0568 \u0579\u056B \u0563\u057F\u0576\u057E\u0565\u056C\u0589","id":"Tidak ada token yang bisa ditemukan.","it":"Nessun token trovato.","ja":"\u30C8\u30FC\u30AF\u30F3\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002","lb":"Et konnt keen Token fonnt ginn.","lt":"Nepavyko rasti rakto.","lv":"Nevar atrast nevienu talonu.","mk":"\u0422\u043E\u043A\u0435\u043D\u043E\u0442 \u043D\u0435 \u0435 \u043D\u0430\u0458\u0434\u0435\u043D.","mn":"\u0422\u043E\u043A\u0435\u043D \u043E\u043B\u0434\u0441\u043E\u043D\u0433\u04AF\u0439.","my":"Toke  \u101B\u103E\u102C\u1019\u1010\u103D\u1031\u1037\u1015\u102B\u104B","nb":"Ingen token kunne bli funnet.","nl":"Er kon geen authenticatietoken worden gevonden.","nn":"Fann ingen innloggingsteikn.","no":"Ingen token kunne bli funnet.","pl":"Nie znaleziono tokenu.","pt":"O token n\xE3o foi encontrado.","pt_BR":"Nenhum token foi encontrado.","ro":"Tokenul nu a putut fi g\u0103sit.","ru":"\u0422\u043E\u043A\u0435\u043D \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D.","sk":"Token nebol n\xE1jden\xFD.","sl":"\u017Detona ni bilo mogo\u010De najti.","sq":"Asnj\xEB simbol identifikimi nuk mund t\xEB gjendej.","sr_Cyrl":"\u0422\u043E\u043A\u0435\u043D \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043F\u0440\u043E\u043D\u0430\u0452\u0435\u043D.","sr_Latn":"Token ne mo\u017Ee biti prona\u0111en.","sv":"Ingen token kunde hittas.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A token","tl":"Walang makitang token.","tr":"Fi\u015F bulunamad\u0131.","uk":"\u0422\u043E\u043A\u0435\u043D \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E.","ur":"\u06A9\u0648\u0626\u06CC \u0679\u0648\u06A9\u0646 \u0646\u06C1\u06CC\u06BA \u0645\u0644 \u0633\u06A9\u0627","uz":"To'ken topilmadi.","vi":"Kh\xF4ng t\xECm th\u1EA5y m\xE3 token.","zh_CN":"\u627E\u4E0D\u5230 token \u3002","zh_TW":"\u627E\u4E0D\u5230 token \u3002"}}};var USERNAME_COULD_NOT_BE_FOUND={"id":"Username could not be found.","translations":{"security":{"fr":"Le nom d'utilisateur n'a pas pu \xEAtre trouv\xE9.","af":"Gebruikersnaam kon nie gevind word nie.","ar":"\u0644\u0645 \u0627\u0633\u062A\u0637\u0639 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0627\u0633\u0645 \u0627\u0644\u062F\u062E\u0648\u0644.","az":"\u0130stifad\u0259\xE7i ad\u0131 tap\u0131lmad\u0131.","be":"\u0406\u043C\u044F \u043A\u0430\u0440\u044B\u0441\u0442\u0430\u043B\u044C\u043D\u0456\u043A\u0430 \u043D\u0435 \u0437\u043D\u043E\u0439\u0434\u0437\u0435\u043D\u0430.","bg":"\u041F\u043E\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043B\u0441\u043A\u043E\u0442\u043E \u0438\u043C\u0435 \u043D\u0435 \u0435 \u043E\u0442\u043A\u0440\u0438\u0442\u043E.","bs":"Korisni\u010Dko ime nije prona\u0111eno.","ca":"No s'ha trobat el nom d'usuari.","cs":"P\u0159ihla\u0161ovac\xED jm\xE9no nebylo nalezeno.","da":"Brugernavn kan ikke findes.","de":"Der Benutzername wurde nicht gefunden.","el":"\u03A4\u03BF \u03CC\u03BD\u03BF\u03BC\u03B1 \u03C7\u03C1\u03AE\u03C3\u03C4\u03B7 \u03B4\u03B5 \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B5.","en":"Username could not be found.","es":"No se encontr\xF3 el nombre de usuario.","et":"Kasutajanime ei leitud.","eu":"Ez da erabiltzaile-izena aurkitu.","fa":"\u0646\u0627\u0645 \u200C\u06A9\u0627\u0631\u0628\u0631\u06CC \u067E\u06CC\u062F\u0627 \u0646\u0634\u062F.","fi":"K\xE4ytt\xE4j\xE4tunnusta ei l\xF6ydetty.","gl":"Non se atopou o nome de usuario.","he":"\u05E9\u05DD \u05DE\u05E9\u05EA\u05DE\u05E9 \u05DC\u05D0 \u05E0\u05DE\u05E6\u05D0.","hr":"Korisni\u010Dko ime nije prona\u0111eno.","hu":"A felhaszn\xE1l\xF3n\xE9v nem tal\xE1lhat\xF3.","hy":"\u0555\u0563\u057F\u0561\u0576\u0578\u0582\u0576\u0568 \u0579\u056B \u0563\u057F\u0576\u057E\u0565\u056C\u0589","id":"Username tidak bisa ditemukan.","it":"Username non trovato.","ja":"\u30E6\u30FC\u30B6\u30FC\u540D\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002","lb":"De Benotzernumm konnt net fonnt ginn.","lt":"Tokio naudotojo vardo nepavyko rasti.","lv":"Nevar atrast lietot\u0101jv\u0101rdu.","mk":"\u041A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u043E\u0442\u043E \u0438\u043C\u0435 \u043D\u0435 \u0435 \u043D\u0430\u0458\u0434\u0435\u043D\u043E.","mn":"\u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u043D\u044D\u0440 \u043E\u043B\u0441\u043E\u043D\u0433\u04AF\u0439.","my":"\u1021\u101E\u102F\u1036\u1038\u1015\u103C\u102F\u101E\u1030\u1021\u1019\u100A\u103A \u101B\u103E\u102C\u1016\u103D\u1031\u1010\u103D\u1031\u1037\u101B\u103E\u102D\u1001\u103B\u1004\u103A\u1038\u1019\u101B\u103E\u102D\u1015\u102B\u104B","nb":"Brukernavn kunne ikke bli funnet.","nl":"Gebruikersnaam kon niet worden gevonden.","nn":"Fann ikkje brukarnamnet.","no":"Brukernavn kunne ikke bli funnet.","pl":"U\u017Cytkownik o podanej nazwie nie istnieje.","pt":"Nome de utilizador n\xE3o encontrado.","pt_BR":"Nome de usu\xE1rio n\xE3o encontrado.","ro":"Numele de utilizator nu a fost g\u0103sit.","ru":"\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E.","sk":"Prihlasovacie meno nebolo n\xE1jden\xE9.","sl":"Uporabni\u0161kega imena ni bilo mogo\u010De najti.","sq":"Emri i p\xEBrdoruesit nuk mund t\xEB gjendej.","sr_Cyrl":"\u041A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u043E \u0438\u043C\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435 \u0431\u0438\u0442\u0438 \u043F\u0440\u043E\u043D\u0430\u0452\u0435\u043D\u043E.","sr_Latn":"Korisni\u010Dko ime ne mo\u017Ee biti prona\u0111eno.","sv":"Anv\xE4ndarnamnet kunde inte hittas.","th":"\u0E44\u0E21\u0E48\u0E1E\u0E1A Username","tl":"Hindi makita ang username.","tr":"Kullan\u0131c\u0131 ad\u0131 bulunamad\u0131.","uk":"\u0406\u043C\u2019\u044F \u043A\u043E\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0430 \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E.","ur":"\u064A\u0648\u0630\u0631 \u0646\u06C1\u06CC\u06BA \u0645\u0644 \u0633\u06A9\u0627","uz":"Foydalanuvchi nomi topilmadi.","vi":"Kh\xF4ng t\xECm th\u1EA5y t\xEAn ng\u01B0\u1EDDi d\xF9ng.","zh_CN":"\u627E\u4E0D\u5230\u7528\u6237\u540D\u3002","zh_TW":"\u627E\u4E0D\u5230\u7528\u6236\u540D\u3002"}}};var ACCOUNT_HAS_EXPIRED={"id":"Account has expired.","translations":{"security":{"fr":"Le compte a expir\xE9.","af":"Rekening het verval.","ar":"\u0627\u0646\u062A\u0647\u062A \u0635\u0644\u0627\u062D\u064A\u0629 \u0627\u0644\u062D\u0633\u0627\u0628.","az":"Hesab\u0131n istifad\u0259 m\xFCdd\u0259ti bitib.","be":"\u0421\u043A\u043E\u043D\u0447\u044B\u045E\u0441\u044F \u0442\u044D\u0440\u043C\u0456\u043D \u0434\u0437\u0435\u044F\u043D\u043D\u044F \u0430\u043A\u0430\u045E\u043D\u0442\u0430.","bg":"\u0410\u043A\u0430\u0443\u043D\u0442\u044A\u0442 \u0435 \u0438\u0437\u0442\u0435\u043A\u044A\u043B.","bs":"Nalog je istekao.","ca":"El compte ha expirat.","cs":"Platnost \xFA\u010Dtu vypr\u0161ela.","da":"Brugerkonto er udl\xF8bet.","de":"Der Account ist abgelaufen.","el":"\u039F \u03BB\u03BF\u03B3\u03B1\u03C1\u03B9\u03B1\u03C3\u03BC\u03CC\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03BB\u03AE\u03BE\u03B5\u03B9.","en":"Account has expired.","es":"La cuenta ha expirado.","et":"Kasutajakonto on aegunud.","eu":"Kontua iraungi da.","fa":"\u062D\u0633\u0627\u0628 \u06A9\u0627\u0631\u0628\u0631\u06CC \u0645\u0646\u0642\u0636\u06CC \u06AF\u0631\u062F\u06CC\u062F\u0647 \u0627\u0633\u062A.","fi":"Tili on vanhentunut.","gl":"A conta expirou.","he":"\u05D4\u05D7\u05E9\u05D1\u05D5\u05DF \u05E4\u05D2 \u05EA\u05D5\u05E7\u05E3.","hr":"Ra\u010Dun je isteko.","hu":"A fi\xF3k lej\xE1rt.","hy":"\u0540\u0561\u0577\u056B\u057E\u0568 \u056A\u0561\u0574\u056F\u0565\u057F\u0561\u0576\u0581 \u0567\u0589","id":"Akun telah berakhir.","it":"Account scaduto.","ja":"\u30A2\u30AB\u30A6\u30F3\u30C8\u304C\u6709\u52B9\u671F\u9650\u5207\u308C\u3067\u3059\u3002","lb":"Den Account ass ofgelaf.","lt":"Paskyros galiojimo laikas baig\u0117si.","lv":"Konta der\u012Bguma termi\u0146\u0161 ir beidzies.","mk":"\u041A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u0430\u0442\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 \u0435 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0430.","mn":"\u0411\u04AF\u0440\u0442\u0433\u044D\u043B\u0438\u0439\u043D \u0445\u0443\u0433\u0430\u0446\u0430\u0430 \u0434\u0443\u0443\u0441\u0441\u0430\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1021\u1000\u1031\u102C\u1004\u103A\u1037 \u101E\u1000\u103A\u1010\u1019\u103A\u1038\u1000\u102F\u1014\u103A\u101C\u103D\u1014\u103A\u101E\u103D\u102C\u1038\u1015\u102B\u1015\u103C\u102E\u104B","nb":"Brukerkonto har utg\xE5tt.","nl":"Account is verlopen.","nn":"Brukarkontoen er utgjengen.","no":"Brukerkonto har utg\xE5tt.","pl":"Konto wygas\u0142o.","pt":"A conta expirou.","pt_BR":"A conta est\xE1 expirada.","ro":"Contul a expirat.","ru":"\u0412\u0440\u0435\u043C\u044F \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0443\u0447\u0435\u0442\u043D\u043E\u0439 \u0437\u0430\u043F\u0438\u0441\u0438 \u0438\u0441\u0442\u0435\u043A\u043B\u043E.","sk":"Platnos\u0165 \xFA\u010Dtu skon\u010Dila.","sl":"Ra\u010Dun je potekel.","sq":"Llogaria ka skaduar.","sr_Cyrl":"\u041D\u0430\u043B\u043E\u0433 \u0458\u0435 \u0438\u0441\u0442\u0435\u043A\u0430\u043E.","sr_Latn":"Nalog je istekao.","sv":"Kontot har f\xF6rfallit.","th":"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E2B\u0E21\u0E14\u0E2D\u0E32\u0E22\u0E38\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27","tl":"Nag-expire na ang account.","tr":"Hesap zaman a\u015F\u0131m\u0131na u\u011Frad\u0131.","uk":"\u0422\u0435\u0440\u043C\u0456\u043D \u0434\u0456\u0457 \u043E\u0431\u043B\u0456\u043A\u043E\u0432\u043E\u0433\u043E \u0437\u0430\u043F\u0438\u0441\u0443 \u0432\u0438\u0447\u0435\u0440\u043F\u0430\u043D\u043E.","ur":"\u0627\u06A9\u0627\u0624\u0646\u0679 \u06A9\u06CC \u0645\u06CC\u0639\u0627\u062F \u062E\u062A\u0645 \u06C1\u0648 \u06AF\u0626\u06CC \u06C1\u06D2","uz":"Akkunt muddati tugagan.","vi":"T\xE0i kho\u1EA3n \u0111\xE3 h\u1EBFt h\u1EA1n.","zh_CN":"\u5E10\u53F7\u5DF2\u8FC7\u671F\u3002","zh_TW":"\u8CEC\u865F\u5DF2\u903E\u671F\u3002"}}};var CREDENTIALS_HAVE_EXPIRED={"id":"Credentials have expired.","translations":{"security":{"fr":"Les identifiants ont expir\xE9.","af":"Verifikasiebewyse het verval.","ar":"\u0627\u0646\u062A\u0647\u062A \u0635\u0644\u0627\u062D\u064A\u0629 \u0645\u0639\u0644\u0648\u0645\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644.","az":"M\u0259lumatlar\u0131n istifad\u0259 m\xFCdd\u0259ti bitib.","be":"\u0421\u043A\u043E\u043D\u0447\u044B\u045E\u0441\u044F \u0442\u044D\u0440\u043C\u0456\u043D \u0434\u0437\u0435\u044F\u043D\u043D\u044F \u0434\u0430\u0434\u0437\u0435\u043D\u044B\u0445 \u0430\u045E\u0442\u044D\u043D\u0442\u044B\u0444\u0456\u043A\u0430\u0446\u044B\u0456.","bg":"\u0423\u0434\u043E\u0441\u0442\u043E\u0432\u0435\u0440\u0435\u043D\u0438\u0435\u0442\u043E \u0437\u0430 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u043A\u0430\u0446\u0438\u044F \u0435 \u0438\u0437\u0442\u0435\u043A\u043B\u043E.","bs":"Autentifikacijski podaci su istekli.","ca":"Les credencials han expirat.","cs":"Platnost p\u0159ihla\u0161ovac\xEDch \xFAdaj\u016F vypr\u0161ela.","da":"Loginoplysninger er udl\xF8bet.","de":"Die Zugangsdaten sind abgelaufen.","el":"\u03A4\u03B1 \u03C3\u03C4\u03BF\u03B9\u03C7\u03B5\u03AF\u03B1 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2 \u03AD\u03C7\u03BF\u03C5\u03BD \u03BB\u03AE\u03BE\u03B5\u03B9.","en":"Credentials have expired.","es":"Las credenciales han expirado.","et":"Autentimistunnused on aegunud.","eu":"Kredentzialak iraungi dira.","fa":"\u0645\u062C\u0648\u0632\u0647\u0627\u06CC \u0627\u062D\u0631\u0627\u0632 \u0647\u0648\u06CC\u062A \u0645\u0646\u0642\u0636\u06CC \u06AF\u0631\u062F\u06CC\u062F\u0647\u200C\u0627\u0646\u062F.","fi":"Tunnistetiedot ovat vanhentuneet.","gl":"As credenciais expiraron.","he":"\u05E4\u05E8\u05D8\u05D9 \u05D4\u05EA\u05D7\u05D1\u05E8\u05D5\u05EA \u05E4\u05E7\u05E2\u05D5 \u05EA\u05D5\u05E7\u05E3.","hr":"Akreditacijski podaci su istekli.","hu":"A hiteles\xEDt\xE9si inform\xE1ci\xF3k lej\xE1rtak.","hy":"\u0544\u0578\u0582\u057F\u0584\u0561\u0575\u056B\u0576 \u057F\u057E\u0575\u0561\u056C\u0576\u0565\u0580\u0568 \u056A\u0561\u0574\u056F\u0565\u057F\u0561\u0576\u0581 \u0565\u0576\u0589","id":"Kredensial telah berakhir.","it":"Credenziali scadute.","ja":"\u8CC7\u683C\u304C\u6709\u52B9\u671F\u9650\u5207\u308C\u3067\u3059\u3002","lb":"D'Zouganksdate sinn ofgelaf.","lt":"Autentifikacijos duomen\u0173 galiojimo laikas baig\u0117si.","lv":"Autentifik\u0101cijas datu der\u012Bguma termi\u0146\u0161 ir beidzies.","mk":"\u0410\u043A\u0440\u0435\u0434\u0438\u0442\u0438\u0432\u0438\u0442\u0435 \u0441\u0435 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0438.","mn":"\u041D\u044D\u0432\u0442\u0440\u044D\u0445 \u044D\u0440\u0445\u0438\u0439\u043D \u0445\u0443\u0433\u0430\u0446\u0430\u0430 \u0434\u0443\u0443\u0441\u0441\u0430\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1021\u1011\u1031\u102C\u1000\u103A\u1021\u1011\u102C\u1038\u101E\u1000\u103A\u1010\u1014\u103A\u1038 \u1000\u102F\u1014\u103A\u101C\u103D\u1014\u103A\u101E\u103D\u102C\u1038\u1015\u102B\u1015\u103C\u102E\u104B","nb":"P\xE5loggingsinformasjon har utl\xF8pt.","nl":"Authenticatiegegevens zijn verlopen.","nn":"Innloggingsinformasjonen er utgjengen.","no":"P\xE5loggingsinformasjon har utl\xF8pt.","pl":"Dane uwierzytelniania wygas\u0142y.","pt":"As credenciais expiraram.","pt_BR":"As credenciais est\xE3o expiradas.","ro":"Datele de autentificare au expirat.","ru":"\u0412\u0440\u0435\u043C\u044F \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u0438\u0441\u0442\u0435\u043A\u043B\u043E.","sk":"Platnos\u0165 prihlasovac\xEDch \xFAdajov skon\u010Dila.","sl":"Poverilnice so potekle.","sq":"Kredencialet kan\xEB skaduar.","sr_Cyrl":"\u041F\u043E\u0434\u0430\u0446\u0438 \u0437\u0430 \u0430\u0443\u0442\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0443 \u0441\u0443 \u0438\u0441\u0442\u0435\u043A\u043B\u0438.","sr_Latn":"Podaci za autentifikaciju su istekli.","sv":"Uppgifterna har f\xF6rfallit.","th":"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E01\u0E32\u0E23\u0E23\u0E30\u0E1A\u0E38\u0E15\u0E31\u0E27\u0E15\u0E19\u0E2B\u0E21\u0E14\u0E2D\u0E32\u0E22\u0E38\u0E41\u0E25\u0E49\u0E27","tl":"Nag-expire na ang mga kredensyal.","tr":"Kimlik bilgileri zaman a\u015F\u0131m\u0131na u\u011Frad\u0131.","uk":"\u0422\u0435\u0440\u043C\u0456\u043D \u0434\u0456\u0457 \u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0446\u0456\u0439\u043D\u0438\u0445 \u0434\u0430\u043D\u0438\u0445 \u0432\u0438\u0447\u0435\u0440\u043F\u0430\u043D\u043E.","ur":"\u0627\u0633\u0646\u0627\u062F \u06A9\u06CC \u0645\u06CC\u0639\u0627\u062F \u062E\u062A\u0645 \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06D2","uz":"Autentifikatsiya ma'lumotlari muddati tugagan.","vi":"Th\xF4ng tin x\xE1c th\u1EF1c \u0111\xE3 h\u1EBFt h\u1EA1n.","zh_CN":"\u51ED\u8BC1\u5DF2\u8FC7\u671F\u3002","zh_TW":"\u6191\u8B49\u5DF2\u903E\u671F\u3002"}}};var ACCOUNT_IS_DISABLED={"id":"Account is disabled.","translations":{"security":{"fr":"Le compte est d\xE9sactiv\xE9.","af":"Rekening is deaktiveer.","ar":"\u0627\u0644\u062D\u0633\u0627\u0628 \u0645\u0648\u0642\u0648\u0641.","az":"Hesab qeyri-aktiv edilib.","be":"\u0410\u043A\u0430\u045E\u043D\u0442 \u0430\u0434\u043A\u043B\u044E\u0447\u0430\u043D.","bg":"\u0410\u043A\u0430\u0443\u043D\u0442\u044A\u0442 \u0435 \u0434\u0435\u0430\u043A\u0442\u0438\u0432\u0438\u0440\u0430\u043D.","bs":"Nalog je onemogu\u0107en.","ca":"El compte est\xE0 deshabilitat.","cs":"\xDA\u010Det je zak\xE1zan\xFD.","da":"Brugerkonto er deaktiveret.","de":"Der Account ist deaktiviert.","el":"\u039F \u03BB\u03BF\u03B3\u03B1\u03C1\u03B9\u03B1\u03C3\u03BC\u03CC\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03B1\u03C0\u03B5\u03BD\u03B5\u03C1\u03B3\u03BF\u03C0\u03BF\u03B9\u03B7\u03BC\u03AD\u03BD\u03BF\u03C2.","en":"Account is disabled.","es":"La cuenta est\xE1 deshabilitada.","et":"Kasutajakonto on keelatud.","eu":"Kontua desgaituta dago.","fa":"\u062D\u0633\u0627\u0628 \u06A9\u0627\u0631\u0628\u0631\u06CC \u063A\u06CC\u0631\u0641\u0639\u0627\u0644 \u0645\u06CC \u0628\u0627\u0634\u062F.","fi":"Tili on poistettu k\xE4yt\xF6st\xE4.","gl":"A conta est\xE1 deshabilitada.","he":"\u05D4\u05D7\u05E9\u05D1\u05D5\u05DF \u05DE\u05D1\u05D5\u05D8\u05DC.","hr":"Ra\u010Dun je onemogu\u0107en.","hu":"Felf\xFCggesztett fi\xF3k.","hy":"\u0540\u0561\u0577\u056B\u057E\u0568 \u0564\u0565\u056F\u0561\u057F\u056B\u057E\u0561\u0581\u057E\u0561\u056E \u0567\u0589","id":"Akun dinonaktifkan.","it":"L'account \xE8 disabilitato.","ja":"\u30A2\u30AB\u30A6\u30F3\u30C8\u304C\u7121\u52B9\u3067\u3059\u3002","lb":"De Konto ass deaktiv\xE9iert.","lt":"Paskyra yra i\u0161jungta.","lv":"Konts ir atsp\u0113jots.","mk":"\u041A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u0430\u0442\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 \u0435 \u0434\u0435\u0430\u043A\u0442\u0438\u0432\u0438\u0440\u0430\u043D\u0430.","mn":"\u0411\u04AF\u0440\u0442\u0433\u044D\u043B\u0438\u0439\u0433 \u0445\u0430\u0430\u0441\u0430\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1021\u1000\u1031\u102C\u1004\u103A\u1037\u1015\u102D\u1010\u103A\u1011\u102C\u1038\u1015\u102B\u101E\u100A\u103A\u104B","nb":"Brukerkonto er deaktivert.","nl":"Account is gedeactiveerd.","nn":"Brukarkontoen er sperra.","no":"Brukerkonto er deaktivert.","pl":"Konto jest wy\u0142\u0105czone.","pt":"Conta desativada.","pt_BR":"Conta desativada.","ro":"Contul este dezactivat.","ru":"\u0423\u0447\u0435\u0442\u043D\u0430\u044F \u0437\u0430\u043F\u0438\u0441\u044C \u043E\u0442\u043A\u043B\u044E\u0447\u0435\u043D\u0430.","sk":"\xDA\u010Det je zak\xE1zan\xFD.","sl":"Ra\u010Dun je onemogo\u010Den.","sq":"Llogaria \xEBsht\xEB \xE7aktivizuar.","sr_Cyrl":"\u041D\u0430\u043B\u043E\u0433 \u0458\u0435 \u043E\u043D\u0435\u043C\u043E\u0433\u0443\u045B\u0435\u043D.","sr_Latn":"Nalog je onemogu\u0107en.","sv":"Kontot \xE4r inaktiverat.","th":"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E16\u0E39\u0E01\u0E23\u0E30\u0E07\u0E31\u0E1A\u0E41\u0E25\u0E49\u0E27","tl":"Ang account ay hindi pinagana.","tr":"Hesap engellenmi\u015F.","uk":"\u041E\u0431\u043B\u0456\u043A\u043E\u0432\u0438\u0439 \u0437\u0430\u043F\u0438\u0441 \u0432\u0456\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u043E.","ur":"\u0627\u06A9\u0627\u0624\u0646\u0679 \u0628\u0646\u062F \u06A9\u0631 \u062F\u06CC\u0627 \u06AF\u06CC\u0627 \u06C1\u06D2","uz":"Akkunt o'chirilgan.","vi":"T\xE0i kho\u1EA3n b\u1ECB t\u1EA1m ng\u1EEBng.","zh_CN":"\u5E10\u53F7\u5DF2\u88AB\u7981\u7528\u3002","zh_TW":"\u8CEC\u865F\u5DF2\u88AB\u7981\u7528\u3002"}}};var ACCOUNT_IS_LOCKED={"id":"Account is locked.","translations":{"security":{"fr":"Le compte est bloqu\xE9.","af":"Rekening is gesluit.","ar":"\u0627\u0644\u062D\u0633\u0627\u0628 \u0645\u063A\u0644\u0642.","az":"Hesab kilitl\u0259nib.","be":"\u0410\u043A\u0430\u045E\u043D\u0442 \u0437\u0430\u0431\u043B\u0430\u043A\u0456\u0440\u0430\u0432\u0430\u043D.","bg":"\u0410\u043A\u0430\u0443\u043D\u0442\u044A\u0442 \u0435 \u0437\u0430\u043A\u043B\u044E\u0447\u0435\u043D.","bs":"Nalog je zaklju\u010Dan.","ca":"El compte est\xE0 bloquejat.","cs":"\xDA\u010Det je zablokovan\xFD.","da":"Brugerkonto er l\xE5st.","de":"Der Account ist gesperrt.","el":"\u039F \u03BB\u03BF\u03B3\u03B1\u03C1\u03B9\u03B1\u03C3\u03BC\u03CC\u03C2 \u03B5\u03AF\u03BD\u03B1\u03B9 \u03BA\u03BB\u03B5\u03B9\u03B4\u03C9\u03BC\u03AD\u03BD\u03BF\u03C2.","en":"Account is locked.","es":"La cuenta est\xE1 bloqueada.","et":"Kasutajakonto on lukustatud.","eu":"Kontua blokeatuta dago.","fa":"\u062D\u0633\u0627\u0628 \u06A9\u0627\u0631\u0628\u0631\u06CC \u0642\u0641\u0644 \u06AF\u0631\u062F\u06CC\u062F\u0647 \u0627\u0633\u062A.","fi":"Tili on lukittu.","gl":"A conta est\xE1 bloqueada.","he":"\u05D4\u05D7\u05E9\u05D1\u05D5\u05DF \u05E0\u05E2\u05D5\u05DC.","hr":"Ra\u010Dun je zaklju\u010Dan.","hu":"Z\xE1rolt fi\xF3k.","hy":"\u0540\u0561\u0577\u056B\u057E\u0576 \u0561\u0580\u0563\u0565\u056C\u0561\u0583\u0561\u056F\u057E\u0561\u056E \u0567\u0589","id":"Akun terkunci.","it":"L'account \xE8 bloccato.","ja":"\u30A2\u30AB\u30A6\u30F3\u30C8\u306F\u30ED\u30C3\u30AF\u3055\u308C\u3066\u3044\u307E\u3059\u3002","lb":"De Konto ass gespaart.","lt":"Paskyra yra u\u017Eblokuota.","lv":"Konts ir sl\u0113gts.","mk":"\u041A\u043E\u0440\u0438\u0441\u043D\u0438\u0447\u043A\u0430\u0442\u0430 \u0441\u043C\u0435\u0442\u043A\u0430 \u0435 \u0437\u0430\u043A\u043B\u0443\u0447\u0435\u043D\u0430.","mn":"\u0411\u04AF\u0440\u0442\u0433\u044D\u043B\u0438\u0439\u0433 \u0446\u043E\u043E\u0436\u0438\u043B\u0441\u043E\u043D \u0431\u0430\u0439\u043D\u0430.","my":"\u1021\u1000\u1031\u102C\u1004\u103A\u1037 \u101C\u1031\u102C\u1001\u103A\u1000\u103B\u101E\u103D\u102C\u1038\u1015\u102B\u1015\u103C\u102E\u104B","nb":"Brukerkonto er sperret.","nl":"Account is geblokkeerd.","nn":"Brukarkontoen er sperra.","no":"Brukerkonto er sperret.","pl":"Konto jest zablokowane.","pt":"A conta est\xE1 trancada.","pt_BR":"A conta est\xE1 travada.","ro":"Contul este blocat.","ru":"\u0423\u0447\u0435\u0442\u043D\u0430\u044F \u0437\u0430\u043F\u0438\u0441\u044C \u0437\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D\u0430.","sk":"\xDA\u010Det je zablokovan\xFD.","sl":"Ra\u010Dun je zaklenjen.","sq":"Llogaria \xEBsht\xEB e ky\xE7ur.","sr_Cyrl":"\u041D\u0430\u043B\u043E\u0433 \u0458\u0435 \u0437\u0430\u043A\u0459\u0443\u0447\u0430\u043D.","sr_Latn":"Nalog je zaklju\u010Dan.","sv":"Kontot \xE4r l\xE5st.","th":"\u0E1A\u0E31\u0E0D\u0E0A\u0E35\u0E16\u0E39\u0E01\u0E25\u0E47\u0E2D\u0E01\u0E41\u0E25\u0E49\u0E27","tl":"Ang account ay naka-lock.","tr":"Hesap kilitlenmi\u015F.","uk":"\u041E\u0431\u043B\u0456\u043A\u043E\u0432\u0438\u0439 \u0437\u0430\u043F\u0438\u0441 \u0437\u0430\u0431\u043B\u043E\u043A\u043E\u0432\u0430\u043D\u043E.","ur":"\u0627\u06A9\u0627\u0624\u0646\u0679 \u0644\u0627\u06A9 \u06C1\u06D2","uz":"Akkunt bloklangan.","vi":"T\xE0i kho\u1EA3n b\u1ECB kh\xF3a.","zh_CN":"\u5E10\u53F7\u5DF2\u88AB\u9501\u5B9A\u3002","zh_TW":"\u8CEC\u865F\u5DF2\u88AB\u9396\u5B9A\u3002"}}};var TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_LATER={"id":"Too many failed login attempts, please try again later.","translations":{"security":{"fr":"Plusieurs tentatives de connexion ont \xE9chou\xE9, veuillez r\xE9essayer plus tard.","af":"Te veel mislukte aanmeldpogings, probeer asseblief later weer.","ar":"\u0639\u062F\u062F \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 \u0645\u0646 \u0645\u062D\u0627\u0648\u0644\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629\u060C \u064A\u0631\u062C\u0649 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629 \u0645\u0631\u0629 \u0623\u062E\u0631\u0649 \u0641\u064A \u0648\u0642\u062A \u0644\u0627\u062D\u0642.","az":"\xC7oxlu u\u011Fursuz giri\u015F t\u0259\u015F\u0259bb\xFCs\xFC, z\u0259hm\u0259t olmasa daha sonra yeniden yoxlay\u0131n.","be":"\u0417\u0430\u0448\u043C\u0430\u0442 \u043D\u044F\u045E\u0434\u0430\u043B\u044B\u0445 \u0441\u043F\u0440\u043E\u0431 \u0443\u0432\u0430\u0445\u043E\u0434\u0443, \u043A\u0430\u043B\u0456 \u043B\u0430\u0441\u043A\u0430, \u043F\u0430\u0441\u043F\u0440\u0430\u0431\u0443\u0439\u0446\u0435 \u043F\u0430\u0437\u043D\u0435\u0439.","bg":"\u0422\u0432\u044A\u0440\u0434\u0435 \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u043F\u0438\u0442\u0438 \u0437\u0430 \u0432\u0445\u043E\u0434, \u043C\u043E\u043B\u044F \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043F\u043E-\u043A\u044A\u0441\u043D\u043E.","bs":"Previ\u0161e neuspje\u0161nih poku\u0161aja prijavljivanja, molim poku\u0161ajte ponovo kasnije.","ca":"Massa intents d'inici de sessi\xF3 fallits, torneu-ho a provar m\xE9s tard.","cs":"P\u0159\xEDli\u0161 mnoho nepoveden\xFDch pokus\u016F p\u0159ihl\xE1\u0161en\xED. Zkuste to pros\xEDm pozd\u011Bji.","da":"For mange fejlede login fors\xF8g, pr\xF8v venligst senere.","de":"Zu viele fehlgeschlagene Anmeldeversuche, bitte versuchen Sie es sp\xE4ter noch einmal.","el":"\u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B1\u03C0\u03BF\u03C4\u03C5\u03C7\u03B7\u03BC\u03AD\u03BD\u03B5\u03C2 \u03B1\u03C0\u03CC\u03C0\u03B5\u03B9\u03C1\u03B5\u03C2 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2, \u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BE\u03B1\u03BD\u03B1\u03B4\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03B1\u03C1\u03B3\u03CC\u03C4\u03B5\u03C1\u03B1.","en":"Too many failed login attempts, please try again later.","es":"Demasiados intentos fallidos de inicio de sesi\xF3n, int\xE9ntelo de nuevo m\xE1s tarde.","et":"Liiga palju eba\xF5nnestunud autentimise katseid, palun proovi hiljem uuesti.","eu":"Saioa hasteko saio huts gehiegi, saiatu berriro geroago.","fa":"\u062A\u0644\u0627\u0634\u200C\u0647\u0627\u06CC \u0646\u0627\u0645\u0648\u0641\u0642 \u0632\u06CC\u0627\u062F\u06CC \u0628\u0631\u0627\u06CC \u0648\u0631\u0648\u062F \u0635\u0648\u0631\u062A \u06AF\u0631\u0641\u062A\u0647 \u0627\u0633\u062A\u060C \u0644\u0637\u0641\u0627\u064B \u0628\u0639\u062F\u0627\u064B \u062F\u0648\u0628\u0627\u0631\u0647 \u0627\u0645\u062A\u062D\u0627\u0646 \u06A9\u0646\u06CC\u062F.","fi":"Liian monta ep\xE4onnistunutta kirjautumisyrityst\xE4, yrit\xE4 my\xF6hemmin uudelleen.","gl":"Demasiados intentos de inicio de sesi\xF3n fallados. T\xE9ntao de novo m\xE1is tarde.","he":"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05D3\u05D9 \u05E0\u05D9\u05E1\u05D9\u05D5\u05E0\u05D5\u05EA \u05DB\u05E0\u05D9\u05E1\u05D4 \u05DB\u05D5\u05E9\u05DC\u05D9\u05DD, \u05D0\u05E0\u05D0 \u05E0\u05E1\u05D4 \u05E9\u05D5\u05D1 \u05DE\u05D0\u05D5\u05D7\u05E8 \u05D9\u05D5\u05EA\u05E8.","hr":"Previ\u0161e neuspjelih poku\u0161aja prijave, molim poku\u0161ajte ponovo kasnije.","hu":"T\xFAl sok sikertelen bejelentkez\xE9si k\xEDs\xE9rlet, k\xE9rj\xFCk pr\xF3b\xE1lja \xFAjra k\xE9s\u0151bb.","hy":"\u0549\u0561\u0583\u056B\u0581 \u0577\u0561\u057F \u0574\u0578\u0582\u057F\u0584\u056B \u0583\u0578\u0580\u0571\u0565\u0580, \u056D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u0583\u0578\u0580\u0571\u0565\u056C \u0574\u056B \u0583\u0578\u0584\u0580 \u0578\u0582\u0577","id":"Terlalu banyak percobaan login yang salah, silahkan coba lagi nanti.","it":"Troppi tentativi di login falliti, riprova tra un po'.","ja":"\u30ED\u30B0\u30A4\u30F3\u8A66\u884C\u56DE\u6570\u3092\u8D85\u3048\u307E\u3057\u305F\u3002\u3057\u3070\u3089\u304F\u3057\u3066\u518D\u5EA6\u304A\u8A66\u3057\u304F\u3060\u3055\u3044\u3002","lb":"Ze vill m\xEBsslonge Login-Versich, w.e.g. m\xE9i sp\xE9it nach emol prob\xE9ieren.","lt":"Per daug nepavykusi\u0173 prisijungimo bandym\u0173, pabandykite dar kart\u0105 v\u0117liau.","lv":"P\u0101r\u0101k daudz atteiktu autentifik\u0101cijas m\u0113\u0123in\u0101jumu, l\u016Bdzu, m\u0113\u0123iniet v\u0113lreiz v\u0113l\u0101k.","mk":"\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u0431\u0438\u0434\u0438 \u0437\u0430 \u043D\u0430\u0458\u0430\u0432\u0443\u0432\u0430\u045A\u0435, \u0432\u0435 \u043C\u043E\u043B\u0438\u043C\u0435 \u043E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u043F\u043E\u0434\u043E\u0446\u043D\u0430.","mn":"\u0425\u044D\u0442\u044D\u0440\u0445\u0438\u0439 \u043E\u043B\u043E\u043D \u0430\u043C\u0436\u0438\u043B\u0442\u0433\u04AF\u0439 \u043E\u0440\u043E\u043B\u0434\u043B\u043E\u0433\u043E, \u0442\u04AF\u0440 \u0445\u04AF\u043B\u044D\u044D\u0433\u044D\u044D\u0434 \u0434\u0430\u0445\u0438\u043D \u043E\u0440\u043E\u043B\u0434\u043E\u043D\u043E \u0443\u0443.","my":"Login \u1040\u1004\u103A\u101B\u1014\u103A\u1000\u103C\u102D\u102F\u1038\u1005\u102C\u1038\u1019\u103E\u102F\u1019\u103B\u102C\u1038\u101C\u103D\u1014\u103A\u1038\u1015\u102B\u101E\u100A\u103A\u104A \u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1014\u1031\u102C\u1000\u103A\u1019\u103E\u1011\u1015\u103A\u1000\u103C\u102D\u102F\u1038\u1005\u102C\u1038\u1015\u102B\u104B","nb":"For mange mislykkede p\xE5loggingsfors\xF8k. Pr\xF8v igjen senere.","nl":"Te veel onjuiste inlogpogingen, probeer het later nogmaals.","nn":"For mange innloggingsfors\xF8k har feila, pr\xF8v igjen seinare.","no":"For mange mislykkede p\xE5loggingsfors\xF8k. Pr\xF8v igjen senere.","pl":"Zbyt du\u017Co nieudanych pr\xF3b logowania, prosz\u0119 spr\xF3bowa\u0107 ponownie p\xF3\u017Aniej.","pt":"V\xE1rias tentativas de login falhadas, por favor tente mais tarde.","pt_BR":"Muitas tentativas de login malsucedidas, tente novamente mais tarde.","ro":"Prea multe \xEEncerc\u0103ri de autentificare e\u0219uate, v\u0103 rug\u0103m s\u0103 \xEEncerca\u021Bi mai t\xE2rziu.","ru":"\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0434\u0430\u0447\u043D\u044B\u0445 \u043F\u043E\u043F\u044B\u0442\u043E\u043A \u0432\u0445\u043E\u0434\u0430, \u043F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u043F\u043E\u0437\u0436\u0435.","sk":"Pr\xEDli\u0161 mnoho ne\xFAspe\u0161n\xFDch pokusov o prihl\xE1senie. Sk\xFAste to pros\xEDm znovu nesk\xF4r.","sl":"Preve\u010D neuspelih poskusov prijave, poskusite znova pozneje.","sq":"Shum\xEB p\xEBrpjekje t\xEB d\xEBshtuara autentikimi, provo p\xEBrs\xEBri m\xEB von\xEB.","sr_Cyrl":"\u041F\u0440\u0435\u0432\u0438\u0448\u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438\u0445 \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0430 \u043F\u0440\u0438\u0458\u0430\u0432\u0459\u0438\u0432\u0430\u045A\u0430, \u043C\u043E\u043B\u0438\u043C \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0442\u0435 \u043F\u043E\u043D\u043E\u0432\u043E \u043A\u0430\u0441\u043D\u0438\u0458\u0435.","sr_Latn":"Previ\u0161e neuspe\u0161nih poku\u0161aja prijavljivanja, molim poku\u0161ajte ponovo kasnije.","sv":"F\xF6r m\xE5nga misslyckade inloggningsf\xF6rs\xF6k, f\xF6rs\xF6k igen senare.","th":"\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E1E\u0E22\u0E32\u0E22\u0E32\u0E21\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27\u0E21\u0E32\u0E01\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E01\u0E23\u0E38\u0E13\u0E32\u0E25\u0E2D\u0E07\u0E43\u0E2B\u0E21\u0E48\u0E20\u0E32\u0E22\u0E2B\u0E25\u0E31\u0E07","tl":"Napakaraming nabigong mga pagtatangka sa pag-login, mangyaring subukang muli sa ibang pagkakataon.","tr":"\xC7ok fazla ba\u015Far\u0131s\u0131z giri\u015F denemesi, l\xFCtfen daha sonra tekrar deneyin.","uk":"\u0417\u0430\u0431\u0430\u0433\u0430\u0442\u043E \u043D\u0435\u0432\u0434\u0430\u043B\u0438\u0445 \u0441\u043F\u0440\u043E\u0431 \u0432\u0445\u043E\u0434\u0443. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u043F\u0456\u0437\u043D\u0456\u0448\u0435.","ur":"\u0644\u0627\u06AF \u0627\u0646 \u06A9\u06CC \u0628\u06C1\u062A \u0632\u06CC\u0627\u062F\u06C1 \u0646\u0627\u06A9\u0627\u0645 \u06A9\u0648\u0634\u0634\u06CC\u06BA \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06CC\u06BA\u060C \u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u0628\u0639\u062F \u0645\u06CC\u06BA \u062F\u0648\u0628\u0627\u0631\u06C1 \u06A9\u0648\u0634\u0634 \u06A9\u0631\u06CC\u06BA","uz":"Kirish urinishlari muvaffaqiyatsiz tugadi, keyinroq qayta urinib ko'ring.","vi":"\u0110\u0103ng nh\xE2\u0323p sai qua\u0301 nhi\xEA\u0300u l\xE2\u0300n, vui lo\u0300ng th\u01B0\u0309 la\u0323i l\xE2\u0300n n\u01B0\u0303a.","zh_CN":"\u767B\u5165\u5931\u8D25\u7684\u6B21\u6570\u8FC7\u591A\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5\u3002","zh_TW":"\u767B\u5165\u5931\u6557\u7684\u6B21\u6578\u904E\u591A\uFF0C\u8ACB\u7A0D\u5F8C\u518D\u8A66\u3002"}}};var INVALID_OR_EXPIRED_LOGIN_LINK={"id":"Invalid or expired login link.","translations":{"security":{"fr":"Lien de connexion invalide ou expir\xE9.","af":"Ongeldige of vervalde aanmeldskakel.","ar":"\u0631\u0627\u0628\u0637 \u062A\u0633\u062C\u064A\u0644 \u0627\u0644\u062F\u062E\u0648\u0644 \u063A\u064A\u0631 \u0635\u0627\u0644\u062D \u0623\u0648 \u0645\u0646\u062A\u0647\u064A \u0627\u0644\u0635\u0644\u0627\u062D\u064A\u0629.","az":"Yanl\u0131\u015F v\u0259 ya m\xFCdd\u0259ti ke\xE7mi\u015F giri\u015F ke\xE7idi.","be":"\u0421\u043F\u0430\u0441\u044B\u043B\u043A\u0430 \u0434\u043B\u044F \u045E\u0432\u0430\u0445\u043E\u0434\u0443 \u043D\u0435\u0441\u0430\u043F\u0440\u0430\u045E\u0434\u043D\u0430\u044F \u0430\u0431\u043E \u043F\u0440\u0430\u0442\u044D\u0440\u043C\u0456\u043D\u0430\u0432\u0430\u043D\u0430\u044F.","bg":"\u041D\u0435\u0432\u0430\u043B\u0438\u0434\u0435\u043D \u0438\u043B\u0438 \u0438\u0437\u0442\u0435\u043A\u044A\u043B \u043B\u0438\u043D\u043A \u0437\u0430 \u0432\u0445\u043E\u0434.","bs":"Link za prijavljivanje je istekao ili je neispravan.","ca":"Enlla\xE7 d'inici de sessi\xF3 no v\xE0lid o caducat.","cs":"Neplatn\xFD nebo expirovan\xFD odkaz na p\u0159ihl\xE1\u0161en\xED.","da":"Ugyldigt eller udl\xF8bet login link.","de":"Ung\xFCltiger oder abgelaufener Anmelde-Link.","el":"\u039C\u03B7 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2 \u03AE \u03BB\u03B7\u03B3\u03BC\u03AD\u03BD\u03BF\u03C2 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03BC\u03BF\u03C2 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2.","en":"Invalid or expired login link.","es":"Enlace de inicio de sesi\xF3n inv\xE1lido o expirado.","et":"Vigane v\xF5i aegunud sisselogimise link.","eu":"Sartzeko esteka baliogabea edo iraungia.","fa":"\u0644\u06CC\u0646\u06A9 \u0648\u0631\u0648\u062F \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u06CC\u0627 \u062A\u0627\u0631\u06CC\u062E\u200C\u06AF\u0630\u0634\u062A\u0647 \u0627\u0633\u062A.","fi":"Virheellinen tai vanhentunut kirjautumislinkki.","gl":"Ligaz\xF3n de inicio de sesi\xF3n non v\xE1lida ou caducada.","he":"\u05E7\u05D9\u05E9\u05D5\u05E8 \u05DB\u05E0\u05D9\u05E1\u05D4 \u05DC\u05D0 \u05D7\u05D5\u05E7\u05D9 \u05D0\u05D5 \u05E9\u05E4\u05D2 \u05EA\u05D5\u05E7\u05E4\u05D5.","hr":"Link za prijavu je isteako ili je neispravan.","hu":"\xC9rv\xE9nytelen vagy lej\xE1rt bejelentkez\xE9si link.","hy":"\u0531\u0576\u057E\u0561\u057E\u0565\u0580 \u056F\u0561\u0574 \u056A\u0561\u0574\u056F\u0565\u057F\u0561\u0576\u0581 \u0574\u0578\u0582\u057F\u0584\u056B \u0570\u0572\u0578\u0582\u0574\u0589","id":"Link login salah atau sudah kedaluwarsa.","it":"Link di login scaduto o non valido.","ja":"\u30ED\u30B0\u30A4\u30F3\u30EA\u30F3\u30AF\u304C\u6709\u52B9\u671F\u9650\u5207\u308C\u3001\u3082\u3057\u304F\u306F\u7121\u52B9\u3067\u3059\u3002","lb":"Ong\xEBltegen oder ofgelafene Login-Link.","lt":"Netinkama arba pasibaigusio galiojimo laiko prisijungimo nuoroda.","lv":"Autentifik\u0101cijas saite ir neder\u012Bga vai ar\u012B tai ir beidzies der\u012Bguma termi\u0146\u0161.","mk":"\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u0438\u043B\u0438 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0430 \u0432\u0440\u0441\u043A\u0430 \u0437\u0430 \u043D\u0430\u0458\u0430\u0432\u0443\u0432\u0430\u045A\u0435.","mn":"\u0411\u0443\u0440\u0443\u0443 \u044D\u0441\u0432\u044D\u043B \u0445\u0443\u0433\u0430\u0446\u0430\u0430 \u043D\u044C \u0434\u0443\u0443\u0441\u0441\u0430\u043D \u043D\u044D\u0432\u0442\u0440\u044D\u0445 \u0437\u0430\u043C.","my":"\u1019\u101E\u1004\u103A\u1037\u101C\u103B\u103E\u1031\u102C\u103A\u101E\u1031\u102C\u103A (\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A) \u101E\u1000\u103A\u1010\u1014\u103A\u1038\u1000\u102F\u1014\u103A\u101E\u1031\u102C login link \u1016\u103C\u1005\u103A\u1015\u102B\u101E\u100A\u103A\u104B","nb":"Ugyldig eller utl\xF8pt p\xE5loggingskobling.","nl":"Ongeldige of verlopen inloglink.","nn":"Innloggingslenka er ugyldig eller utgjengen.","no":"Ugyldig eller utl\xF8pt p\xE5loggingskobling.","pl":"Nieprawid\u0142owy lub wygas\u0142y link logowania.","pt":"Liga\xE7\xE3o de login inv\xE1lida ou expirada.","pt_BR":"Link de login inv\xE1lido ou expirado.","ro":"Link de autentificare invalid sau expirat.","ru":"\u0421\u0441\u044B\u043B\u043A\u0430 \u0434\u043B\u044F \u0432\u0445\u043E\u0434\u0430 \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0430 \u0438\u043B\u0438 \u043F\u0440\u043E\u0441\u0440\u043E\u0447\u0435\u043D\u0430.","sk":"Neplatn\xFD alebo expirovan\xFD odkaz na prihl\xE1senie.","sl":"Neveljavna ali potekla povezava prijave.","sq":"Link hyrje i pavlefsh\xEBm ose i skaduar.","sr_Cyrl":"\u041B\u0438\u043D\u043A \u0437\u0430 \u043F\u0440\u0438\u0458\u0430\u0432\u0459\u0438\u0432\u0430\u045A\u0435 \u0458\u0435 \u0438\u0441\u0442\u0435\u043A\u0430\u043E \u0438\u043B\u0438 \u0458\u0435 \u043D\u0435\u0438\u0441\u043F\u0440\u0430\u0432\u0430\u043D.","sr_Latn":"Link za prijavljivanje je istekao ili je neispravan.","sv":"Ogiltig eller utg\xE5ngen inloggningsl\xE4nk.","th":"\u0E25\u0E34\u0E07\u0E04\u0E4C\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E2B\u0E23\u0E37\u0E2D\u0E2B\u0E21\u0E14\u0E2D\u0E32\u0E22\u0E38\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27","tl":"Inbalido o nagexpire na ang link para makapaglogin.","tr":"Ge\xE7ersiz veya s\xFCresi dolmu\u015F oturum a\xE7ma ba\u011Flant\u0131s\u0131.","uk":"\u041F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0434\u043B\u044F \u0432\u0445\u043E\u0434\u0443 \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0435, \u0430\u0431\u043E \u0442\u0435\u0440\u043C\u0456\u043D \u0439\u043E\u0433\u043E \u0434\u0456\u0457 \u0437\u0430\u043A\u0456\u043D\u0447\u0438\u0432\u0441\u044F.","ur":"\u063A\u0644\u0637 \u06CC\u0627 \u062E\u062A\u0645 \u0634\u062F\u06BE \u0644\u0627\u06AF \u0627\u0646 \u0644\u0646\u06A9","uz":"Kirish havolasi yaroqsiz yoki muddati tugagan.","vi":"Li\xEAn k\xEA\u0301t \u0111\u0103ng nh\xE2\u0323p kh\xF4ng h\u01A1\u0323p l\xEA\u0323 ho\u0103\u0323c qua\u0301 ha\u0323n.","zh_CN":"\u5931\u6548\u6216\u8FC7\u671F\u7684\u767B\u5165\u94FE\u63A5\u3002","zh_TW":"\u5931\u6548\u6216\u904E\u671F\u7684\u767B\u5165\u93C8\u63A5\u3002"}}};var TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTE={"id":"Too many failed login attempts, please try again in %minutes% minute.","translations":{"security":{"fr":"Plusieurs tentatives de connexion ont \xE9chou\xE9, veuillez r\xE9essayer dans %minutes% minute.","ar":"\u0639\u062F\u062F \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 \u0645\u0646 \u0645\u062D\u0627\u0648\u0644\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629\u060C \u064A\u0631\u062C\u0649 \u0627\u0639\u0627\u062F\u0629 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629 \u0628\u0639\u062F %minutes% \u062F\u0642\u064A\u0642\u0629.","az":"H\u0259ddind\u0259n art\u0131q u\u011Fursuz giri\u015F c\u0259hdi, l\xFCtf\u0259n %minutes% d\u0259qiq\u0259 \u0259rzind\u0259 yenid\u0259n yoxlay\u0131n.","be":"\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0448\u043C\u0430\u0442 \u043D\u044F\u045E\u0434\u0430\u043B\u044B\u0445 \u0441\u043F\u0440\u043E\u0431 \u0443\u0432\u0430\u0445\u043E\u0434\u0443 \u045E \u0441\u0456\u0441\u0442\u044D\u043C\u0443, \u043F\u0430\u0441\u043F\u0440\u0430\u0431\u0443\u0439\u0446\u0435 \u0441\u043F\u0440\u043E\u0431\u0443 \u043F\u0440\u0430\u0437 %minutes% \u0445\u0432\u0456\u043B\u0456\u043D\u0443.","bg":"\u0422\u0432\u044A\u0440\u0434\u0435 \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u043F\u0438\u0442\u0438 \u0437\u0430 \u0432\u0445\u043E\u0434, \u043C\u043E\u043B\u044F \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E \u0441\u043B\u0435\u0434 %minutes% \u043C\u0438\u043D\u0443\u0442\u0430.","bs":"Previ\u0161e neuspjelih poku\u0161aja prijave, poku\u0161ajte ponovo za %minutes% minuta.","ca":"Massa intents d'inici de sessi\xF3 fallits, torneu-ho a provar en %minutes% minut.","cs":"P\u0159\xEDli\u0161 mnoho ne\xFAsp\u011B\u0161n\xFDch pokus\u016F o p\u0159ihl\xE1\u0161en\xED, zkuste to pros\xEDm znovu za %minutes% minutu.","da":"For mange fejlede login fors\xF8g, pr\xF8v igen om %minutes% minut.","de":"Zu viele fehlgeschlagene Anmeldeversuche, bitte versuchen Sie es in einer Minute noch einmal.","el":"\u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B1\u03C0\u03BF\u03C4\u03C5\u03C7\u03B7\u03BC\u03AD\u03BD\u03B5\u03C2 \u03B1\u03C0\u03CC\u03C0\u03B5\u03B9\u03C1\u03B5\u03C2 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2, \u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BE\u03B1\u03BD\u03B1\u03B4\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03C3\u03B5 %minutes% \u03BB\u03B5\u03C0\u03C4\u03CC.","en":"Too many failed login attempts, please try again in %minutes% minute.","es":"Demasiados intentos fallidos de inicio de sesi\xF3n, int\xE9ntelo de nuevo en %minutes% minuto.","et":"Liiga palju eba\xF5nnestunud autentimise katseid, palun proovi uuesti %minutes% minuti p\xE4rast.","eu":"Saioa hasteko huts gehiegi egin dira, saiatu berriro minutu %minutes% geroago.","fa":"\u062A\u0644\u0627\u0634\u200C\u0647\u0627\u06CC \u0646\u0627\u0645\u0648\u0641\u0642 \u0632\u06CC\u0627\u062F\u06CC \u0628\u0631\u0627\u06CC \u0648\u0631\u0648\u062F \u0635\u0648\u0631\u062A \u06AF\u0631\u0641\u062A\u0647 \u0627\u0633\u062A\u060C \u0644\u0637\u0641\u0627\u064B %minutes% \u062F\u0642\u06CC\u0642\u0647 \u062F\u06CC\u06AF\u0631 \u062F\u0648\u0628\u0627\u0631\u0647 \u0627\u0645\u062A\u062D\u0627\u0646 \u06A9\u0646\u06CC\u062F.","fi":"Liian monta ep\xE4onnistunutta kirjautumisyrityst\xE4, yrit\xE4 uudelleen %minutes% minuutin kuluttua.","gl":"Demasiados intentos de inicio de sesi\xF3n errados, por favor, t\xE9nteo de novo en %minutes% minuto.","he":"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05D3\u05D9 \u05E0\u05D9\u05E1\u05D9\u05D5\u05E0\u05D5\u05EA \u05DB\u05E0\u05D9\u05E1\u05D4 \u05DB\u05D5\u05E9\u05DC\u05D9\u05DD, \u05D0\u05E0\u05D0 \u05E0\u05E1\u05D4 \u05E9\u05D5\u05D1 \u05D1\u05D5\u05D3 %minutes% \u05D3\u05E7\u05D4.","hr":"Previ\u0161e neuspjelih poku\u0161aja prijave, molim poku\u0161ajte ponovo za %minutes% minutu.","hu":"T\xFAl sok sikertelen bejelentkez\xE9si k\xEDs\xE9rlet, k\xE9rj\xFCk pr\xF3b\xE1lja \xFAjra %minutes% perc m\xFAlva.","hy":"\u0544\u0578\u0582\u057F\u0584\u056B \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0577\u0561\u057F \u0561\u0576\u0570\u0561\u057B\u0578\u0572 \u0583\u0578\u0580\u0571\u0565\u0580: \u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u056F\u0580\u056F\u056B\u0576 \u0583\u0578\u0580\u0571\u0565\u056C %minutes \u0580\u0578\u057A\u0565:","id":"Terlalu banyak percobaan login yang salah, silahkan coba lagi dalam %minutes% menit.","it":"Troppi tentativi di login falliti, riprova tra %minutes% minuto.","ja":"\u30ED\u30B0\u30A4\u30F3\u8A66\u884C\u56DE\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002%minutes%\u5206\u5F8C\u306B\u518D\u5EA6\u304A\u8A66\u3057\u304F\u3060\u3055\u3044\u3002","lb":"Zu vill fehlgeschloen Loginversich, w. e. g. prob\xE9iert nach am %minutes% Minutt.","lt":"Per daug nepavykusi\u0173 prisijungimo bandym\u0173, pabandykite dar kart\u0105 po %minutes% minut\u0117s.","lv":"P\u0101r\u0101k daudz nesekm\u012Bgu autentifik\u0101cijas m\u0113\u0123in\u0101jumu, l\u016Bdzu m\u0113\u0123iniet v\u0113lreiz p\u0113c %minutes% min\u016Btes.","mk":"\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u0431\u0438\u0434\u0438 \u0437\u0430 \u043D\u0430\u0458\u0430\u0432\u0443\u0432\u0430\u045A\u0435, \u043E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u0437\u0430 %minutes% \u043C\u0438\u043D\u0443\u0442\u0430.","my":"Too many failed login attempts, please try again in %minutes% minute.","nb":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutt.","nl":"Te veel onjuiste inlogpogingen, probeer het opnieuw over %minutes% minuut.","nn":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutt.","no":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutt.","pl":"Zbyt wiele nieudanych pr\xF3b logowania, spr\xF3buj ponownie po up\u0142ywie %minutes% minut.","pt":"Demasiadas tentativas de login, tente novamente num minuto.","pt_BR":"Muitas tentativas de login inv\xE1lidas, por favor, tente novamente em um minuto.","ro":"Prea multe \xEEncerc\u0103ri nereu\u0219ite, \xEEncearc\u0103 din nou \xEEn %minutes% minut.","ru":"\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0434\u0430\u0447\u043D\u044B\u0445 \u043F\u043E\u043F\u044B\u0442\u043E\u043A \u0432\u0445\u043E\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0443, \u043F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u0435 \u043F\u043E\u043F\u044B\u0442\u043A\u0443 \u0447\u0435\u0440\u0435\u0437 %minutes% \u043C\u0438\u043D\u0443\u0442\u0443.","sk":"Pr\xEDli\u0161 ve\u013Ea ne\xFAspe\u0161n\xFDch pokusov o prihl\xE1senie. Sk\xFAste to znova o %minutes% min\xFAtu.","sl":"Preve\u010D neuspelih poskusov prijave, poskusite znova \u010Dez %minutes% minuto.","sr_Cyrl":"\u041F\u0440\u0435\u0432\u0438\u0448\u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438\u0445 \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0430 \u043F\u0440\u0438\u0458\u0430\u0432\u0459\u0438\u0432\u0430\u045A\u0430, \u043C\u043E\u043B\u0438\u043C \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0442\u0435 \u043F\u043E\u043D\u043E\u0432\u043E \u0437\u0430 %minutes% \u043C\u0438\u043D\u0443\u0442.","sr_Latn":"Previ\u0161e neuspe\u0161nih poku\u0161aja prijavljivanja, molim poku\u0161ajte ponovo za %minutes% minut.","sv":"F\xF6r m\xE5nga misslyckade inloggningsf\xF6rs\xF6k, f\xF6rs\xF6k igen om %minutes% minut.","th":"\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E1E\u0E22\u0E32\u0E22\u0E32\u0E21\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27\u0E21\u0E32\u0E01\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E42\u0E1B\u0E23\u0E14\u0E25\u0E2D\u0E07\u0E2D\u0E35\u0E01\u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 %minutes% \u0E19\u0E32\u0E17\u0E35","tl":"Napakaraming nabigong mga pagtatangka sa pag-login, pakisubukan ulit sa% minuto% minuto.","tr":"\xC7ok fazla ba\u015Far\u0131s\u0131z giri\u015F denemesi, l\xFCtfen %minutes% dakika sonra tekrar deneyin.","uk":"\u0417\u0430\u0431\u0430\u0433\u0430\u0442\u043E \u043D\u0435\u0432\u0434\u0430\u043B\u0438\u0445 \u0441\u043F\u0440\u043E\u0431 \u0432\u0445\u043E\u0434\u0443. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0437\u043D\u043E\u0432\u0443 \u0447\u0435\u0440\u0435\u0437 %minutes% \u0445\u0432\u0438\u043B\u0438\u043D\u0443.","ur":"\u0645\u0646\u0679 \u0628\u0627\u062F %minutes% \u0644\u0627\u06AF \u0627\u0646 \u06A9\u06CC \u0628\u06C1\u062A \u0632\u06CC\u0627\u062F\u06C1 \u0646\u0627\u06A9\u0627\u0645 \u06A9\u0648\u0634\u0634\u06CC\u06BA \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06CC\u06BA\u060C \u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u062F\u0648\u0628\u0627\u0631\u06BE \u06A9\u0648\u0634\u064A\u0634 \u06A9\u0631\u064A\u06BA ","uz":"Kirish uchun muvaffaqiyatsiz urinishlar, %minutes% daqiqadan so'ng qayta urinib ko'ring.","vi":"Qu\xE1 nhi\u1EC1u l\u1EA7n th\u1EED \u0111\u0103ng nh\u1EADp kh\xF4ng th\xE0nh c\xF4ng, vui l\xF2ng th\u1EED l\u1EA1i sau %minutes% ph\xFAt.","zh_CN":"\u767B\u5165\u5931\u8D25\u7684\u6B21\u6570\u8FC7\u591A\uFF0C\u8BF7\u5728%minutes%\u5206\u949F\u540E\u518D\u8BD5\u3002","zh_TW":"\u767B\u9304\u5931\u6557\u7684\u6B21\u6578\u904E\u591A\uFF0C\u8ACB\u5728%minutes%\u5206\u9418\u5F8C\u518D\u8A66\u3002"}}};var TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTES={"id":"Too many failed login attempts, please try again in %minutes% minutes.","translations":{"security":{"fr":"Plusieurs tentatives de connexion ont \xE9chou\xE9, veuillez r\xE9essayer dans %minutes% minutes.","ar":"\u0639\u062F\u062F \u0643\u0628\u064A\u0631 \u062C\u062F\u0627 \u0645\u0646 \u0645\u062D\u0627\u0648\u0644\u0627\u062A \u0627\u0644\u062F\u062E\u0648\u0644 \u0627\u0644\u0641\u0627\u0634\u0644\u0629\u060C \u064A\u0631\u062C\u0649 \u0627\u0639\u0627\u062F\u0629 \u0627\u0644\u0645\u062D\u0627\u0648\u0644\u0629 \u0628\u0639\u062F %minutes% \u062F\u0642\u064A\u0642\u0629.","az":"H\u0259ddind\u0259n art\u0131q u\u011Fursuz giri\u015F c\u0259hdi, l\xFCtf\u0259n %minutes% d\u0259qiq\u0259 \u0259rzind\u0259 yenid\u0259n yoxlay\u0131n.","be":"\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0448\u043C\u0430\u0442 \u043D\u044F\u045E\u0434\u0430\u043B\u044B\u0445 \u0441\u043F\u0440\u043E\u0431 \u0443\u0432\u0430\u0445\u043E\u0434\u0443 \u045E \u0441\u0456\u0441\u0442\u044D\u043C\u0443, \u043F\u0430\u0441\u043F\u0440\u0430\u0431\u0443\u0439\u0446\u0435 \u0441\u043F\u0440\u043E\u0431\u0443 \u043F\u0440\u0430\u0437 %minutes% \u0445\u0432\u0456\u043B\u0456\u043D.","bg":"\u0422\u0432\u044A\u0440\u0434\u0435 \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u043F\u0438\u0442\u0438 \u0437\u0430 \u0432\u0445\u043E\u0434, \u043C\u043E\u043B\u044F \u043E\u043F\u0438\u0442\u0430\u0439\u0442\u0435 \u043E\u0442\u043D\u043E\u0432\u043E \u0441\u043B\u0435\u0434 %minutes% \u043C\u0438\u043D\u0443\u0442\u0438.","bs":"Previ\u0161e neuspjelih poku\u0161aja prijave, poku\u0161ajte ponovo za %minutes% minuta.","ca":"Massa intents d'inici de sessi\xF3 fallits, torneu-ho a provar en %minutes% minuts.","cs":"P\u0159\xEDli\u0161 mnoho ne\xFAsp\u011B\u0161n\xFDch pokus\u016F o p\u0159ihl\xE1\u0161en\xED, zkuste to pros\xEDm znovu za %minutes% minut.","da":"For mange fejlede login fors\xF8g, pr\xF8v igen om %minutes% minutter.","de":"Zu viele fehlgeschlagene Anmeldeversuche, bitte versuchen Sie es in %minutes% Minuten noch einmal.","el":"\u03A0\u03BF\u03BB\u03BB\u03B1\u03C0\u03BB\u03AD\u03C2 \u03B1\u03C0\u03BF\u03C4\u03C5\u03C7\u03B7\u03BC\u03AD\u03BD\u03B5\u03C2 \u03B1\u03C0\u03CC\u03C0\u03B5\u03B9\u03C1\u03B5\u03C2 \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03B7\u03C2, \u03C0\u03B1\u03C1\u03B1\u03BA\u03B1\u03BB\u03BF\u03CD\u03BC\u03B5 \u03BE\u03B1\u03BD\u03B1\u03B4\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03C3\u03B5 %minutes% \u03BB\u03B5\u03C0\u03C4\u03AC.","en":"Too many failed login attempts, please try again in %minutes% minutes.","es":"Demasiados intentos fallidos de inicio de sesi\xF3n, int\xE9ntelo de nuevo en %minutes% minutos.","et":"Liiga palju eba\xF5nnestunud autentimise katseid, palun proovi uuesti %minutes% minuti p\xE4rast.","eu":"Saioa hasteko huts gehiegi egin dira, saiatu berriro %minutes% minututan.","fa":"\u062A\u0644\u0627\u0634\u200C\u0647\u0627\u06CC \u0646\u0627\u0645\u0648\u0641\u0642 \u0632\u06CC\u0627\u062F\u06CC \u0628\u0631\u0627\u06CC \u0648\u0631\u0648\u062F \u0635\u0648\u0631\u062A \u06AF\u0631\u0641\u062A\u0647 \u0627\u0633\u062A\u060C \u0644\u0637\u0641\u0627\u064B %minutes% \u062F\u0642\u06CC\u0642\u0647 \u062F\u06CC\u06AF\u0631 \u062F\u0648\u0628\u0627\u0631\u0647 \u0627\u0645\u062A\u062D\u0627\u0646 \u06A9\u0646\u06CC\u062F.","fi":"Liian monta ep\xE4onnistunutta kirjautumisyrityst\xE4, yrit\xE4 uudelleen %minutes% minuutin kuluttua.","gl":"Demasiados intentos de inicio de sesi\xF3n errados, por favor, t\xE9nteo de novo en %minutes% minutos.","he":"\u05D9\u05D5\u05EA\u05E8 \u05DE\u05D3\u05D9 \u05E0\u05D9\u05E1\u05D9\u05D5\u05E0\u05D5\u05EA \u05DB\u05E0\u05D9\u05E1\u05D4 \u05DB\u05D5\u05E9\u05DC\u05D9\u05DD, \u05D0\u05E0\u05D0 \u05E0\u05E1\u05D4 \u05E9\u05D5\u05D1 \u05D1\u05D5\u05D3 %minutes% \u05D3\u05E7\u05D5\u05EA.","hr":"Previ\u0161e neuspjelih poku\u0161aja prijave, molim poku\u0161ajte ponovo za %minutes% minutu.|Previ\u0161e neuspjelih poku\u0161aja prijave, molim poku\u0161ajte ponovo za %minutes% minute.|Previ\u0161e neuspjelih poku\u0161aja prijave, molim poku\u0161ajte ponovo za %minutes% minuta.","hu":"T\xFAl sok sikertelen bejelentkez\xE9si k\xEDs\xE9rlet, k\xE9rj\xFCk pr\xF3b\xE1lja \xFAjra %minutes% perc m\xFAlva.","hy":"\u0544\u0578\u0582\u057F\u0584\u056B \u0579\u0561\u0583\u0561\u0566\u0561\u0576\u0581 \u0577\u0561\u057F \u0561\u0576\u0570\u0561\u057B\u0578\u0572 \u0583\u0578\u0580\u0571\u0565\u0580: \u053D\u0576\u0564\u0580\u0578\u0582\u0574 \u0565\u0576\u0584 \u056F\u0580\u056F\u056B\u0576 \u0583\u0578\u0580\u0571\u0565\u056C %minutes \u0580\u0578\u057A\u0565:","id":"Terlalu banyak percobaan login yang salah, silahkan coba lagi dalam %minutes% menit.","it":"Troppi tentativi di login falliti, riprova tra %minutes% minuti.","ja":"\u30ED\u30B0\u30A4\u30F3\u8A66\u884C\u56DE\u6570\u304C\u591A\u3059\u304E\u307E\u3059\u3002%minutes%\u5206\u5F8C\u306B\u518D\u5EA6\u304A\u8A66\u3057\u304F\u3060\u3055\u3044\u3002","lb":"Zu vill fehlgeschloen Loginversich, w. e. g. prob\xE9iert nach an %minutes% Minutten.","lt":"Per daug nepavykusi\u0173 prisijungimo bandym\u0173, pabandykite dar kart\u0105 po %minutes% minut\u0117s.|Per daug nepavykusi\u0173 prisijungimo bandym\u0173, pabandykite dar kart\u0105 po %minutes% minu\u010Di\u0173.|Per daug nepavykusi\u0173 prisijungimo bandym\u0173, pabandykite dar kart\u0105 po %minutes% minu\u010Di\u0173.","lv":"P\u0101r\u0101k daudz nesekm\u012Bgu autentifik\u0101cijas m\u0113\u0123in\u0101jumu, l\u016Bdzu m\u0113\u0123iniet v\u0113lreiz p\u0113c %minutes% min\u016Bt\u0113m.","mk":"\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438 \u043E\u0431\u0438\u0434\u0438 \u0437\u0430 \u043D\u0430\u0458\u0430\u0432\u0443\u0432\u0430\u045A\u0435, \u043E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u0437\u0430 %minutes% \u043C\u0438\u043D\u0443\u0442\u0438.","my":"Login \u1040\u1004\u103A\u101B\u1014\u103A\u1000\u103C\u102D\u102F\u1038\u1005\u102C\u1038\u1019\u103E\u102F\u1019\u103B\u102C\u1038\u101C\u103D\u1014\u103A\u1038\u1015\u102B\u101E\u100A\u103A\u104A \u1000\u103B\u1031\u1038\u1007\u1030\u1038\u1015\u103C\u102F\u104D \u1014\u1031\u102C\u1000\u103A %minutes% \u1019\u103E\u1011\u1015\u103A\u1019\u1036\u1000\u103C\u102D\u102F\u1038\u1005\u102C\u1038\u1015\u102B\u104B","nb":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutter.","nl":"Te veel onjuiste inlogpogingen, probeer het opnieuw over %minutes% minuten.","nn":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutter.","no":"For mange mislykkede p\xE5loggingsfors\xF8k, pr\xF8v igjen om %minutes% minutter.","pl":"Zbyt wiele nieudanych pr\xF3b logowania, spr\xF3buj ponownie po up\u0142ywie %minutes% minut.","pt":"Demasiadas tentativas de login, tente novamente em %minutes% minutos.","pt_BR":"Muitas tentativas de login inv\xE1lidas, por favor, tente novamente em %minutes% minutos.","ro":"Prea multe \xEEncerc\u0103ri nereu\u0219ite, \xEEncearc\u0103 din nou \xEEn %minutes% minute.","ru":"\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u043D\u043E\u0433\u043E \u043D\u0435\u0443\u0434\u0430\u0447\u043D\u044B\u0445 \u043F\u043E\u043F\u044B\u0442\u043E\u043A \u0432\u0445\u043E\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043C\u0443, \u043F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u0435 \u043F\u043E\u043F\u044B\u0442\u043A\u0443 \u0447\u0435\u0440\u0435\u0437 %minutes% \u043C\u0438\u043D.","sk":"Pr\xEDli\u0161 ve\u013Ea ne\xFAspe\u0161n\xFDch pokusov o prihl\xE1senie. Sk\xFAste to znova o %minutes% min\xFAt.","sl":"Preve\u010D neuspelih poskusov prijave, poskusite znova \u010Dez %minutes% minut.","sr_Cyrl":"\u041F\u0440\u0435\u0432\u0438\u0448\u0435 \u043D\u0435\u0443\u0441\u043F\u0435\u0448\u043D\u0438\u0445 \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0430 \u043F\u0440\u0438\u0458\u0430\u0432\u0459\u0438\u0432\u0430\u045A\u0430, \u043C\u043E\u043B\u0438\u043C \u043F\u043E\u043A\u0443\u0448\u0430\u0458\u0442\u0435 \u043F\u043E\u043D\u043E\u0432\u043E \u0437\u0430 %minutes% \u043C\u0438\u043D\u0443\u0442\u0430.","sr_Latn":"Previ\u0161e neuspe\u0161nih poku\u0161aja prijavljivanja, molim poku\u0161ajte ponovo za %minutes% minuta.","sv":"F\xF6r m\xE5nga misslyckade inloggningsf\xF6rs\xF6k, f\xF6rs\xF6k igen om %minutes% minuter.","th":"\u0E21\u0E35\u0E04\u0E27\u0E32\u0E21\u0E1E\u0E22\u0E32\u0E22\u0E32\u0E21\u0E40\u0E02\u0E49\u0E32\u0E2A\u0E39\u0E48\u0E23\u0E30\u0E1A\u0E1A\u0E25\u0E49\u0E21\u0E40\u0E2B\u0E25\u0E27\u0E21\u0E32\u0E01\u0E40\u0E01\u0E34\u0E19\u0E44\u0E1B \u0E42\u0E1B\u0E23\u0E14\u0E25\u0E2D\u0E07\u0E2D\u0E35\u0E01\u0E04\u0E23\u0E31\u0E49\u0E07\u0E43\u0E19 %minutes% \u0E19\u0E32\u0E17\u0E35","tr":"\xC7ok fazla ba\u015Far\u0131s\u0131z giri\u015F denemesi, l\xFCtfen %minutes% dakika sonra tekrar deneyin.","uk":"\u0417\u0430\u0431\u0430\u0433\u0430\u0442\u043E \u043D\u0435\u0432\u0434\u0430\u043B\u0438\u0445 \u0441\u043F\u0440\u043E\u0431 \u0432\u0445\u043E\u0434\u0443. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0441\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0437\u043D\u043E\u0432\u0443 \u0447\u0435\u0440\u0435\u0437 %minutes% \u0445\u0432.","ur":"\u0645\u0646\u0679 \u0628\u0627\u062F %minutes% \u0644\u0627\u06AF \u0627\u0646 \u06A9\u06CC \u0628\u06C1\u062A \u0632\u06CC\u0627\u062F\u06C1 \u0646\u0627\u06A9\u0627\u0645 \u06A9\u0648\u0634\u0634\u06CC\u06BA \u06C1\u0648 \u0686\u06A9\u06CC \u06C1\u06CC\u06BA\u060C \u0628\u0631\u0627\u06D3 \u06A9\u0631\u0645 \u062F\u0648\u0628\u0627\u0631\u06BE \u06A9\u0648\u0634\u064A\u0634 \u06A9\u0631\u064A\u06BA ","uz":"Kirish uchun muvaffaqiyatsiz urinishlar, %minutes% daqiqadan so'ng qayta urinib ko'ring.","vi":"Qu\xE1 nhi\u1EC1u l\u1EA7n th\u1EED \u0111\u0103ng nh\u1EADp kh\xF4ng th\xE0nh c\xF4ng, vui l\xF2ng th\u1EED l\u1EA1i sau %minutes% ph\xFAt.","zh_CN":"\u767B\u5165\u5931\u8D25\u7684\u6B21\u6570\u8FC7\u591A\uFF0C\u8BF7\u5728%minutes%\u5206\u949F\u540E\u518D\u8BD5\u3002","zh_TW":"\u767B\u9304\u5931\u6557\u7684\u6B21\u6578\u904E\u591A\uFF0C\u8ACB\u5728%minutes%\u5206\u9418\u5F8C\u518D\u8A66\u3002"}}};var COUNT_YEAR_COUNT_YEARS={"id":"%count% year|%count% years","translations":{"ResetPasswordBundle":{"fr":"%count% an|%count% ans","ar":"\u0633\u0646\u0629 %count% | \u0633\u0646\u0648\u0627\u062A %count%","ca":"%count% any|%count% anys","cs":"%count% rok|%count% roky|%count% let","de":"%count% Jahr|%count% Jahren","el":"%count% \u03AD\u03C4\u03BF\u03C2|%count% \u03AD\u03C4\u03B7","en":"%count% year|%count% years","es":"%count% a\xF1o|%count% a\xF1os","fi":"%count% vuoden|%count% vuoden","hu":"%count% \xE9v","it":"%count% anno|%count% anni","ja":"%count% \u5E74|%count% \u5E74","mk":"%count% \u0433\u043E\u0434\u0438\u043D\u0430|%count% \u0433\u043E\u0434\u0438\u043D\u0438","pl":"%count% rok|%count% lata|%count% lat","pt":"%count% ano|%count% anos","ru":"%count% \u0433\u043E\u0434|%count% \u0433\u043E\u0434\u0430|%count% \u043B\u0435\u0442","sk":"%count% rok|%count% roky|%count% rokov","tr":"%count% y\u0131l|%count% y\u0131l","uk":"%count% \u0440\u0456\u043A|%count% \u0440\u043E\u043A\u0438|%count% \u0440\u043E\u043A\u0456\u0432","sr":"%count% godina|%count% godine"},"ResetPasswordBundle+intl-icu":{"nl":"{count, plural, =0 {0 jaar} one {1 jaar} other {# jaren}}"}}};var COUNT_MONTH_COUNT_MONTHS={"id":"%count% month|%count% months","translations":{"ResetPasswordBundle":{"fr":"%count% mois|%count% mois","ar":"\u0634\u0647\u0631 %count% | \u0623\u0634\u0647\u0631 %count%","ca":"%count% mes|%count% mesos","cs":"%count% m\u011Bs\xEDc|%count% m\u011Bs\xEDce|%count% m\u011Bs\xEDc\u016F","de":"%count% Monat|%count% Monaten","el":"%count% \u03BC\u03AE\u03BD\u03B1\u03C2|%count% \u03BC\u03AE\u03BD\u03B5\u03C2","en":"%count% month|%count% months","es":"%count% mes|%count% meses","fi":"%count% kuukauden|%count% kuukauden","hu":"%count% h\xF3nap","it":"%count% mese|%count% mesi","ja":"%count% \u6708|%count% \u6708","mk":"%count% \u043C\u0435\u0441\u0435\u0446|%count% \u043C\u0435\u0441\u0435\u0446\u0438","pl":"%count% miesi\u0105c|%count% miesi\u0105ce|%count% miesi\u0119cy","pt":"%count% m\xEAs|%count% meses","ru":"%count% \u043C\u0435\u0441\u044F\u0446|%count% \u043C\u0435\u0441\u044F\u0446\u0430|%count% \u043C\u0435\u0441\u044F\u0446\u0435\u0432","sk":"%count% mesiac|%count% mesiace|%count% mesiacov","tr":"%count% ay|%count% ay","uk":"%count% \u043C\u0456\u0441\u044F\u0446\u044C|%count% \u043C\u0456\u0441\u044F\u0446\u0456|%count% \u043C\u0456\u0441\u044F\u0446\u0456\u0432","sr":"%count% mesec|%count% meseca"},"ResetPasswordBundle+intl-icu":{"nl":"{count, plural, =0 {0 maanden} one {1 maand} other {# maanden}}"}}};var COUNT_DAY_COUNT_DAYS={"id":"%count% day|%count% days","translations":{"ResetPasswordBundle":{"fr":"%count% jour|%count% jours","ar":"\u064A\u0648\u0645 %count% | \u0623\u064A\u0627\u0645 %count%","ca":"%count% dia|%count% dies","cs":"%count% den|%count% dny|%count% dn\xED","de":"%count% Tag|%count% Tagen","el":"%count% \u03B7\u03BC\u03AD\u03C1\u03B1|%count% \u03B7\u03BC\u03AD\u03C1\u03B5\u03C2","en":"%count% day|%count% days","es":"%count% d\xEDa|%count% d\xEDas","fi":"%count% p\xE4iv\xE4n|%count% p\xE4iv\xE4n","hu":"%count% nap","it":"%count% giorno|%count% giorni","ja":"%count% \u65E5|%count% \u65E5","mk":"%count% \u0434\u0435\u043D|%count% \u0434\u0435\u043D\u043E\u0432\u0438","pl":"%count% dzie\u0144|%count% dni|%count% dni","pt":"%count% dia|%count% dias","ru":"%count% \u0434\u0435\u043D\u044C|%count% \u0434\u043D\u044F|%count% \u0434\u043D\u0435\u0439","sk":"%count% den|%count% dni|%count% dn\xED","tr":"%count% g\xFCn|%count% g\xFCn","uk":"%count% \u0434\u0435\u043D\u044C|%count% \u0434\u043D\u0456|%count% \u0434\u043D\u0456\u0432","sr":"%count% dan|%count% dana"},"ResetPasswordBundle+intl-icu":{"nl":"{count, plural, =0 {0 dagen} one {1 dag} other {# dagen}}"}}};var COUNT_HOUR_COUNT_HOURS={"id":"%count% hour|%count% hours","translations":{"ResetPasswordBundle":{"fr":"%count% heure|%count% heures","ar":"\u0633\u0627\u0639\u0629 %count% | \u0633\u0627\u0639\u0627\u062A %count%","ca":"%count% hora|%count% hores","cs":"%count% hodina|%count% hodiny|%count% hodin","de":"%count% Stunde|%count% Stunden","el":"%count% \u03CE\u03C1\u03B1|%count% \u03CE\u03C1\u03B5\u03C2","en":"%count% hour|%count% hours","es":"%count% hora|%count% horas","fi":"%count% tunnin|%count% tunnin","hu":"%count% \xF3ra","it":"%count% ora|%count% ore","ja":"%count% \u6642\u9593|%count% \u6642\u9593","mk":"%count% \u0447\u0430\u0441|%count% \u0447\u0430\u0441\u043E\u0432\u0438","pl":"%count% godzin\u0119|%count% godziny|%count% godzin","pt":"%count% hora|%count% horas","ru":"%count% \u0447\u0430\u0441|%count% \u0447\u0430\u0441\u0430|%count% \u0447\u0430\u0441\u043E\u0432","sk":"%count% hodina|%count% hodiny|%count% hod\xEDn","tr":"%count% saat|%count% saat","uk":"%count% \u0433\u043E\u0434\u0438\u043D\u0430|%count% \u0433\u043E\u0434\u0438\u043D\u0438|%count% \u0433\u043E\u0434\u0438\u043D","sr":"%count% sat|%count% sata"},"ResetPasswordBundle+intl-icu":{"nl":"{count, plural, =0 {0 uur} one {1 uur} other {# uren}}"}}};var COUNT_MINUTE_COUNT_MINUTES={"id":"%count% minute|%count% minutes","translations":{"ResetPasswordBundle":{"fr":"%count% minute|%count% minutes","ar":"\u062F\u0642\u064A\u0642\u0629 %count% | \u062F\u0642\u0627\u0626\u0642 %count%","ca":"%count% minut|%count% minuts","cs":"%count% minuta|%count% minuty|%count% minut","de":"%count% Minute|%count% Minuten","el":"%count% \u03BB\u03B5\u03C0\u03C4\u03CC|%count% \u03BB\u03B5\u03C0\u03C4\u03AC","en":"%count% minute|%count% minutes","es":"%count% minuto|%count% minutos","fi":"%count% minuutin|%count% minuutin","hu":"%count% perc","it":"%count% minuto|%count% minuti","ja":"%count% \u5206|%count% \u5206","mk":"%count% \u043C\u0438\u043D\u0443\u0442\u0430|%count% \u043C\u0438\u043D\u0443\u0442\u0438","pl":"%count% minut\u0119|%count% minuty|%count% minut","pt":"%count% minuto|%count% minutos","ru":"%count% \u043C\u0438\u043D\u0443\u0442\u0430|%count% \u043C\u0438\u043D\u0443\u0442\u044B|%count% \u043C\u0438\u043D\u0443\u0442","sk":"%count% min\xFAta|%count% min\xFAty|%count% min\xFAt","tr":"%count% dakika|%count% dakika","uk":"%count% \u0445\u0432\u0438\u043B\u0438\u043D\u0430|%count% \u0445\u0432\u0438\u043B\u0438\u043D\u0438|%count% \u0445\u0432\u0438\u043B\u0438\u043D","sr":"%count% minut|%count% minuta"},"ResetPasswordBundle+intl-icu":{"nl":"{count, plural, =0 {0 minuten} one {1 minuut} other {# minuten}}"}}};var THERE_WAS_A_PROBLEM_VALIDATING_YOUR_PASSWORD_RESET_REQUEST={"id":"There was a problem validating your password reset request","translations":{"ResetPasswordBundle":{"fr":"Un probl\xE8me est survenu lors de la validation de votre demande de r\xE9initialisation de mot de passe","ca":"S'ha produ\xEFt un problema en validar la vostra sol\xB7licitud de restabliment de la contrasenya","de":"Es gab ein Problem bei der Validierung Ihrer Anfrage zum Zur\xFCcksetzen des Passworts","el":"\u03A0\u03B1\u03C1\u03BF\u03C5\u03C3\u03B9\u03AC\u03C3\u03C4\u03B7\u03BA\u03B5 \u03C0\u03C1\u03CC\u03B2\u03BB\u03B7\u03BC\u03B1 \u03BA\u03B1\u03C4\u03AC \u03C4\u03B7\u03BD \u03B5\u03C0\u03B1\u03BB\u03AE\u03B8\u03B5\u03C5\u03C3\u03B7 \u03C4\u03BF\u03C5 \u03B1\u03B9\u03C4\u03AE\u03BC\u03B1\u03C4\u03BF\u03C2 \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03AC\u03C2 \u03C4\u03BF\u03C5 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03AE\u03C2 \u03C3\u03B1\u03C2","en":"There was a problem validating your password reset request","es":"Error al validar la solicitud de restablecimiento de contrase\xF1a","mk":"\u041D\u0430\u0441\u0442\u0430\u043D\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C \u043F\u0440\u0438 \u0432\u0435\u0440\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0458\u0430\u0442\u0430 \u043D\u0430 \u0431\u0430\u0440\u0430\u045A\u0435\u0442\u043E \u0437\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u045A\u0435 \u043D\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430","pl":"Wyst\u0105pi\u0142 problem podczas potwierdzania pro\u015Bby o zresetowanie has\u0142a","ru":"\u0412\u043E\u0437\u043D\u0438\u043A\u043B\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430 \u0441 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u043E\u0439 \u0432\u0430\u0448\u0435\u0433\u043E \u0437\u0430\u043F\u0440\u043E\u0441\u0430 \u043D\u0430 \u0441\u0431\u0440\u043E\u0441 \u043F\u0430\u0440\u043E\u043B\u044F","uk":"\u0412\u0438\u043D\u0438\u043A\u043B\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430 \u043F\u0456\u0434 \u0447\u0430\u0441 \u043F\u0435\u0440\u0435\u0432\u0456\u0440\u043A\u0438 \u0432\u0430\u0448\u043E\u0433\u043E \u0437\u0430\u043F\u0438\u0442\u0443 \u043D\u0430 \u0441\u043A\u0438\u0434\u0430\u043D\u043D\u044F \u043F\u0430\u0440\u043E\u043B\u044F"},"ResetPasswordBundle+intl-icu":{"nl":"Er is een probleem opgetreden bij het valideren van het verzoek om je wachtwoord te herstellen"}}};var THERE_WAS_A_PROBLEM_HANDLING_YOUR_PASSWORD_RESET_REQUEST={"id":"There was a problem handling your password reset request","translations":{"ResetPasswordBundle":{"fr":"Un probl\xE8me est survenu lors du traitement de votre demande de r\xE9initialisation de mot de passe","ca":"S'ha produ\xEFt un problema en gestionar la vostra sol\xB7licitud de restabliment de la contrasenya","de":"Es gab ein Problem bei der Bearbeitung Ihrer Anfrage zum Zur\xFCcksetzen des Passworts","el":"\u03A0\u03B1\u03C1\u03BF\u03C5\u03C3\u03B9\u03AC\u03C3\u03C4\u03B7\u03BA\u03B5 \u03C0\u03C1\u03CC\u03B2\u03BB\u03B7\u03BC\u03B1 \u03BC\u03B5 \u03C4\u03BF\u03BD \u03C7\u03B5\u03B9\u03C1\u03B9\u03C3\u03BC\u03CC \u03C4\u03BF\u03C5 \u03B1\u03B9\u03C4\u03AE\u03BC\u03B1\u03C4\u03BF\u03C2 \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03AC\u03C2 \u03C4\u03BF\u03C5 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03AE\u03C2 \u03C3\u03B1\u03C2","en":"There was a problem handling your password reset request","es":"Se ha producido un problema al gestionar la solicitud de restablecimiento de contrase\xF1a","mk":"\u041D\u0430\u0441\u0442\u0430\u043D\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C \u043F\u0440\u0438 \u0441\u043F\u0440\u0430\u0432\u0443\u0432\u0430\u045A\u0435\u0442\u043E \u0441\u043E \u0431\u0430\u0440\u0430\u045A\u0435\u0442\u043E \u0437\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u045A\u0435 \u043B\u043E\u0437\u0438\u043D\u043A\u0430","pl":"Wyst\u0105pi\u0142 problem z obs\u0142ug\u0105 Twojej pro\u015Bby o zresetowanie has\u0142a","ru":"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0432\u0430\u0448 \u0437\u0430\u043F\u0440\u043E\u0441 \u043D\u0430 \u0441\u0431\u0440\u043E\u0441 \u043F\u0430\u0440\u043E\u043B\u044F","uk":"\u0412\u0438\u043D\u0438\u043A\u043B\u0430 \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0430 \u0437 \u043E\u0431\u0440\u043E\u0431\u043A\u043E\u044E \u0432\u0430\u0448\u043E\u0433\u043E \u0437\u0430\u043F\u0438\u0442\u0443 \u043D\u0430 \u0441\u043A\u0438\u0434\u0430\u043D\u043D\u044F \u043F\u0430\u0440\u043E\u043B\u044F"},"ResetPasswordBundle+intl-icu":{"nl":"Er is een probleem opgetreden bij het afhandelen van het verzoek om je wachtwoord te herstellen"}}};var THE_LINK_IN_YOUR_EMAIL_IS_EXPIRED_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN={"id":"The link in your email is expired. Please try to reset your password again.","translations":{"ResetPasswordBundle":{"fr":"Le lien dans votre e-mail est expir\xE9. Veuillez r\xE9essayer de r\xE9initialiser votre mot de passe.","ca":"L'enlla\xE7 del vostre correu electr\xF2nic ha caducat. Si us plau, proveu de restablir la contrasenya de nou.","de":"Der Link in Ihrer E-Mail ist abgelaufen. Bitte versuchen Sie erneut, Ihr Passwort zur\xFCckzusetzen.","el":"\u039F \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03BC\u03BF\u03C2 \u03C3\u03C4\u03BF email \u03C3\u03B1\u03C2 \u03AD\u03C7\u03B5\u03B9 \u03BB\u03AE\u03BE\u03B5\u03B9. \u0394\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03BD\u03B1 \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03AD\u03C1\u03B5\u03C4\u03B5 \u03C4\u03BF\u03BD \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03AE\u03C2 \u03C3\u03B1\u03C2 \u03BE\u03B1\u03BD\u03AC.","en":"The link in your email is expired. Please try to reset your password again.","es":"El enlace de tu correo electr\xF3nico ha caducado. Intente restablecer la contrase\xF1a de nuevo.","mk":"\u0412\u0440\u0441\u043A\u0430\u0442\u0430 \u0432\u043E \u0432\u0430\u0448\u0430\u0442\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430 \u0435 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0430. \u041E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u0434\u0430 \u0458\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u0442\u0435 \u043B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430.","pl":"Link w Twoim e-mailu wygas\u0142. Spr\xF3buj ponownie zresetowa\u0107 has\u0142o.","ru":"\u0421\u0441\u044B\u043B\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u043F\u0438\u0441\u044C\u043C\u0435 \u0443\u0441\u0442\u0430\u0440\u0435\u043B\u0430. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0441\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044C \u0435\u0449\u0435 \u0440\u0430\u0437.","uk":"\u0422\u0435\u0440\u043C\u0456\u043D \u0434\u0456\u0457 \u043F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0443 \u0432\u0430\u0448\u0456\u0439 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0456\u0439 \u043F\u043E\u0448\u0442\u0456 \u0437\u0430\u043A\u0456\u043D\u0447\u0438\u0432\u0441\u044F. \u0421\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0441\u043A\u0438\u043D\u0443\u0442\u0438 \u043F\u0430\u0440\u043E\u043B\u044C \u0449\u0435 \u0440\u0430\u0437."},"ResetPasswordBundle+intl-icu":{"nl":"De link in je e-mail is verlopen. Probeer opnieuw je wachtwoord te herstellen."}}};var PLEASE_UPDATE_THE_REQUEST_PASSWORD_REPOSITORY_CONFIGURATION_IN_CONFIG_PACKAGES_RESET_PASSWORD_YAML_TO_POINT_TO_YOUR_REQUEST_PASSWORD_REPOSITORY_SERVICE={"id":"Please update the request_password_repository configuration in config\/packages\/reset_password.yaml to point to your \"request password repository\" service.","translations":{"ResetPasswordBundle":{"fr":"Veuillez mettre \xE0 jour la configuration de request_password_repository dans config/packages/reset_password.yaml pour pointer vers votre service \"request password repository\"","ca":"Actualitzeu la configuraci\xF3 request_password_repository a config/packages/reset_password.yaml per apuntar al vostre servei \"repositori de sol\xB7licitud de restabliment de la contrasenya\".","de":"Bitte aktualisieren Sie die request_password_repository-Konfiguration in config\/packages\/reset_password.yaml, um auf Ihren \"request password repository\"-Dienst zu verweisen.","el":"\u0395\u03BD\u03B7\u03BC\u03B5\u03C1\u03CE\u03C3\u03C4\u03B5 \u03C4\u03B7 \u03B4\u03B9\u03B1\u03BC\u03CC\u03C1\u03C6\u03C9\u03C3\u03B7 request_password_repository \u03C3\u03C4\u03BF config/packages/reset_password.yaml \u03B3\u03B9\u03B1 \u03BD\u03B1 \u03BF\u03B4\u03B7\u03B3\u03B5\u03AF \u03C3\u03C4\u03B7\u03BD \u03C5\u03C0\u03B7\u03C1\u03B5\u03C3\u03AF\u03B1 \"request password repository\".","en":"Please update the request_password_repository configuration in config\/packages\/reset_password.yaml to point to your \"request password repository\" service.","es":"Por favor, actualice la configuraci\xF3n de request_password_repository en config/packages/reset_password.yaml para que apunte a su servicio \"request password repository\".","mk":"\u0410\u0436\u0443\u0440\u0438\u0440\u0430\u0458\u0442\u0435 \u0458\u0430 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0458\u0430\u0442\u0430 \u043D\u0430 request_password_repository \u043E\u043F\u0446\u0438\u0438\u0458\u0430\u0442\u0430 \u0432\u043E config/packages/reset_password.yaml \u0437\u0430 \u0434\u0430 \u043F\u043E\u043A\u0430\u0436\u0443\u0432\u0430 \u043A\u043E\u043D \u0432\u0430\u0448\u0438\u043E\u0442 \u0441\u0435\u0440\u0432\u0438\u0441 \"request password repository\".","pl":"Zaktualizuj konfiguracj\u0119 request_password_repository w config/packages/reset_password.yaml, aby wskazywa\u0142a na us\u0142ug\u0119 \"repozytorium \u017C\u0105da\u0144 hase\u0142\".","ru":"\u041E\u0431\u043D\u043E\u0432\u0438\u0442\u0435 \u043A\u043E\u043D\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044E request_password_repository \u0432 config/packages/reset_password.yaml, \u0447\u0442\u043E\u0431\u044B \u043E\u043D\u0430 \u0443\u043A\u0430\u0437\u044B\u0432\u0430\u043B\u0430 \u043D\u0430 \u0432\u0430\u0448 \"request password repository\" \u0441\u0435\u0440\u0432\u0438\u0441.","uk":"\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043E\u043D\u043E\u0432\u0456\u0442\u044C \u043A\u043E\u043D\u0444\u0456\u0433\u0443\u0440\u0430\u0446\u0456\u044E request_password_repository \u0443 config/packages/reset_password.yaml, \u0449\u043E\u0431 \u0432\u043A\u0430\u0437\u0430\u0442\u0438 \u043D\u0430 \u0432\u0430\u0448 \"request password repository\" \u0441\u0435\u0440\u0432\u0456\u0441."},"ResetPasswordBundle+intl-icu":{"nl":"Update de request_password_repository waarde in config\/packages\/reset_password.yaml met een verwijzing naar je \"request password repository\" service."}}};var THE_RESET_PASSWORD_LINK_IS_INVALID_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN={"id":"The reset password link is invalid. Please try to reset your password again.","translations":{"ResetPasswordBundle":{"fr":"Le lien de r\xE9initialisation du mot de passe n'est pas valide. Veuillez r\xE9essayer de r\xE9initialiser votre mot de passe","ca":"L'enlla\xE7 de restabliment de la contrasenya no \xE9s v\xE0lid. Si us plau, proveu de restablir la contrasenya de nou.","de":"Der Link zum Zur\xFCcksetzen des Passworts ist ung\xFCltig. Bitte versuchen Sie erneut, Ihr Passwort zur\xFCckzusetzen.","el":"\u039F \u03C3\u03CD\u03BD\u03B4\u03B5\u03C3\u03BC\u03BF\u03C2 \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03AC\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7\u03C2 \u03B4\u03B5\u03BD \u03B5\u03AF\u03BD\u03B1\u03B9 \u03AD\u03B3\u03BA\u03C5\u03C1\u03BF\u03C2. \u0394\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03BD\u03B1 \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03AD\u03C1\u03B5\u03C4\u03B5 \u03C4\u03BF\u03BD \u03BA\u03C9\u03B4\u03B9\u03BA\u03CC \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03AE\u03C2 \u03C3\u03B1\u03C2 \u03BE\u03B1\u03BD\u03AC.","en":"The reset password link is invalid. Please try to reset your password again.","es":"El enlace para restablecer la contrase\xF1a no es v\xE1lido. Por favor, intente restablecer su contrase\xF1a de nuevo.","mk":"\u0412\u0440\u0441\u043A\u0430\u0442\u0430 \u0437\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u045A\u0435 \u043D\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430 \u0435 \u043D\u0435\u0432\u0430\u043B\u0438\u0434\u043D\u0430. \u041E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u0434\u0430 \u0458\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u0442\u0435 \u043B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430.","pl":"Link do resetowania has\u0142a jest nieprawid\u0142owy. Spr\xF3buj ponownie zresetowa\u0107 has\u0142o.","ru":"\u0421\u0441\u044B\u043B\u043A\u0430 \u0434\u043B\u044F \u0441\u0431\u0440\u043E\u0441\u0430 \u043F\u0430\u0440\u043E\u043B\u044F \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u0430. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0441\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044C \u0435\u0449\u0435 \u0440\u0430\u0437.","uk":"\u041F\u043E\u0441\u0438\u043B\u0430\u043D\u043D\u044F \u0434\u043B\u044F \u0441\u043A\u0438\u0434\u0430\u043D\u043D\u044F \u043F\u0430\u0440\u043E\u043B\u044F \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0435. \u0421\u043F\u0440\u043E\u0431\u0443\u0439\u0442\u0435 \u0441\u043A\u0438\u043D\u0443\u0442\u0438 \u043F\u0430\u0440\u043E\u043B\u044C \u0449\u0435 \u0440\u0430\u0437."},"ResetPasswordBundle+intl-icu":{"nl":"De link om je wachtwoord te herstellen is niet geldig. Probeer opnieuw je wachtwoord te herstellen."}}};var YOU_HAVE_ALREADY_REQUESTED_A_RESET_PASSWORD_EMAIL_PLEASE_CHECK_YOUR_EMAIL_OR_TRY_AGAIN_SOON={"id":"You have already requested a reset password email. Please check your email or try again soon.","translations":{"ResetPasswordBundle":{"fr":"Vous avez d\xE9j\xE0 demand\xE9 un e-mail de r\xE9initialisation du mot de passe. Veuillez v\xE9rifier votre e-mail ou r\xE9essayer bient\xF4t.","ca":"Ja heu sol\xB7licitat un correu electr\xF2nic de restabliment de la contrasenya. Si us plau, comproveu el vostre correu electr\xF2nic o torneu-ho a provar aviat.","de":"Sie haben bereits eine E-Mail mit einem neuen Passwort angefordert. Bitte \xFCberpr\xFCfen Sie Ihre E-Mail oder versuchen Sie es sp\xE4ter erneut.","el":"\u0388\u03C7\u03B5\u03C4\u03B5 \u03AE\u03B4\u03B7 \u03B6\u03B7\u03C4\u03AE\u03C3\u03B5\u03B9 email \u03B5\u03C0\u03B1\u03BD\u03B1\u03C6\u03BF\u03C1\u03AC\u03C2 \u03BA\u03C9\u03B4\u03B9\u03BA\u03BF\u03CD \u03C0\u03C1\u03CC\u03C3\u03B2\u03B1\u03C3\u03B7\u03C2. \u0395\u03BB\u03AD\u03B3\u03BE\u03C4\u03B5 \u03C4\u03BF email \u03C3\u03B1\u03C2 \u03AE \u03B4\u03BF\u03BA\u03B9\u03BC\u03AC\u03C3\u03C4\u03B5 \u03BE\u03B1\u03BD\u03AC \u03C3\u03CD\u03BD\u03C4\u03BF\u03BC\u03B1.","en":"You have already requested a reset password email. Please check your email or try again soon.","es":"Ya has solicitado un correo electr\xF3nico para restablecer la contrase\xF1a. Por favor, compruebe su correo electr\xF3nico o int\xE9ntelo de nuevo pronto.","mk":"\u0412\u0435\u045C\u0435 \u043F\u043E\u0431\u0430\u0440\u0430\u0432\u0442\u0435 \u0434\u0430 \u0432\u0438 \u0431\u0438\u0434\u0435 \u0438\u0441\u043F\u0440\u0430\u0442\u0435\u043D\u0430 \u043F\u043E\u0440\u0430\u043A\u0430 \u0432\u043E \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u0441\u043A\u0430\u0442\u0430 \u043F\u043E\u0448\u0442\u0430 \u0437\u0430 \u0440\u0435\u0441\u0435\u0442\u0438\u0440\u0430\u045A\u0435 \u043D\u0430 \u043B\u043E\u0437\u0438\u043D\u043A\u0430\u0442\u0430. \u041F\u0440\u043E\u0432\u0435\u0440\u0435\u0442\u0435 \u0458\u0430 \u0432\u0430\u0448\u0430\u0442\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430 \u0438\u043B\u0438 \u043E\u0431\u0438\u0434\u0435\u0442\u0435 \u0441\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u043D\u0430\u0441\u043A\u043E\u0440\u043E.","pl":"Ju\u017C za\u017C\u0105da\u0142e\u015B wiadomo\u015Bci e-mail dotycz\u0105cej resetowania has\u0142a. Sprawd\u017A poczt\u0119 lub spr\xF3buj ponownie wkr\xF3tce.","ru":"\u0412\u044B \u0443\u0436\u0435 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u043B\u0438 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0435 \u043F\u0438\u0441\u044C\u043C\u043E \u0434\u043B\u044F \u0441\u0431\u0440\u043E\u0441\u0430 \u043F\u0430\u0440\u043E\u043B\u044F. \u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u0441\u0432\u043E\u044E \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0443\u044E \u043F\u043E\u0447\u0442\u0443 \u0438\u043B\u0438 \u043F\u043E\u0432\u0442\u043E\u0440\u0438\u0442\u0435 \u043F\u043E\u043F\u044B\u0442\u043A\u0443 \u0435\u0449\u0435 \u0440\u0430\u0437 \u0432 \u0431\u043B\u0438\u0436\u0430\u0439\u0448\u0435\u0435 \u0432\u0440\u0435\u043C\u044F.","uk":"\u0412\u0438 \u0432\u0436\u0435 \u043F\u043E\u0434\u0430\u043B\u0438 \u0437\u0430\u043F\u0438\u0442 \u043D\u0430 \u0441\u043A\u0438\u0434\u0430\u043D\u043D\u044F \u043F\u0430\u0440\u043E\u043B\u044F \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u044E \u043F\u043E\u0448\u0442\u043E\u044E. \u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u043F\u0435\u0440\u0435\u0432\u0456\u0440\u0442\u0435 \u0441\u0432\u043E\u044E \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u0443 \u043F\u043E\u0448\u0442\u0443 \u0430\u0431\u043E \u043F\u043E\u0432\u0442\u043E\u0440\u0456\u0442\u044C \u0441\u043F\u0440\u043E\u0431\u0443 \u0449\u0435 \u0440\u0430\u0437 \u043D\u0435\u0437\u0430\u0431\u0430\u0440\u043E\u043C."},"ResetPasswordBundle+intl-icu":{"nl":"Je hebt al een verzoek ingediend voor een e-mail om je wachtwoord te herstellen. Controleer of je een e-mail hebt ontvangen of probeer het later nog eens."}}};var NO_RESULTS_FOUND={"id":"No results found","translations":{"AutocompleteBundle":{"fr":"Aucun r\xE9sultat trouv\xE9","ar":"\u0644\u0645 \u064A\u062A\u0645 \u0627\u0644\u0639\u062B\u0648\u0631 \u0639\u0644\u0649 \u0623\u064A \u0646\u062A\u0627\u0626\u062C","bg":"\u041D\u044F\u043C\u0430 \u043D\u0430\u043C\u0435\u0440\u0435\u043D\u0438 \u0441\u044A\u0432\u043F\u0430\u0434\u0435\u043D\u0438\u044F","ca":"No s'han trobat resultats","cs":"Nenalezeny \u017E\xE1dn\xE9 polo\u017Eky","da":"Ingen resultater fundet","de":"Keine \xDCbereinstimmungen gefunden","el":"\u0394\u03B5\u03BD \u03B2\u03C1\u03AD\u03B8\u03B7\u03BA\u03B1\u03BD \u03B1\u03C0\u03BF\u03C4\u03B5\u03BB\u03AD\u03C3\u03BC\u03B1\u03C4\u03B1","en":"No results found","es":"No se han encontrado resultados","eu":"Ez da bat datorrenik aurkitu","fa":"\u0647\u06CC\u0686 \u0646\u062A\u06CC\u062C\u0647\u200C\u0627\u06CC \u06CC\u0627\u0641\u062A \u0646\u0634\u062F","fi":"Ei tuloksia","gl":"Non se atoparon resultados","hr":"Nema rezultata","hu":"Nincs tal\xE1lat","id":"Tidak ada hasil yang ditemukan","it":"Nessun risultato trovato","lb":"Keng Resultater fonnt","lt":"Atitikmen\u0173 nerasta","nl":"Geen resultaten gevonden\u2026","pl":"Brak wynik\xF3w","pt":"Sem resultados","pt_BR":"Nenhum resultado encontrado","ro":"Nu au fost g\u0103site rezultate","ru":"\u0421\u043E\u0432\u043F\u0430\u0434\u0435\u043D\u0438\u0439 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u043E","sl":"Ni zadetkov","sv":"Inga tr\xE4ffar","tr":"Sonu\xE7 bulunamad\u0131","uk":"\u041D\u0456\u0447\u043E\u0433\u043E \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E","zh_CN":"\u672A\u627E\u5230\u7ED3\u679C","sr_RS":"Nema rezultata"}}};var NO_MORE_RESULTS={"id":"No more results","translations":{"AutocompleteBundle":{"fr":"Aucun autre r\xE9sultat trouv\xE9","ar":"\u0644\u0627 \u062A\u0648\u062C\u062F \u0646\u062A\u0627\u0626\u062C \u0623\u064C\u062E\u0631\u0649","bg":"\u041D\u044F\u043C\u0430 \u043F\u043E\u0432\u0435\u0447\u0435 \u0440\u0435\u0437\u0443\u043B\u0442\u0430\u0442\u0438","ca":"No hi ha m\xE9s resultats","de":"Keine weiteren Ergebnisse","en":"No more results","es":"No hay m\xE1s resultados","fa":"\u0646\u062A\u06CC\u062C\u0647 \u062F\u06CC\u06AF\u0631\u06CC \u0648\u062C\u0648\u062F \u0646\u062F\u0627\u0631\u062F","hu":"Nincs t\xF6bb tal\xE1lat","id":"Tidak ada hasil lagi","it":"Non ci sono altri risultati","lb":"Keng weider Resultater","nl":"Niet meer resultaten gevonden\u2026","sr_RS":"Nema vi\u0161e rezultata"}}};var VICH_UPLOADER_FORM_LABEL_DELETE_CONFIRM={"id":"vich_uploader.form_label.delete_confirm","translations":{"messages":{"fr":"Supprimer?","ar":"\u062D\u0630\u0641 \u061F","bg":"\u0418\u0437\u0442\u0440\u0438\u0432\u0430\u043D\u0435?","ca":"Eliminar?","cs":"Smazat?","de":"L\xF6schen?","en":"Delete?","es":"\xBFEliminar?","fi":"Poista?","hu":"Kor\xE1bban felt\xF6lt\xF6tt f\xE1jl t\xF6rl\xE9se?","it":"Rimuovere?","lt":"I\u0161trinti?","nl":"Verwijderen?","pl":"Usun\u0105\u0107?","pt":"Apagar?","ru":"\u0423\u0434\u0430\u043B\u0438\u0442\u044C?","sl":"Izbris?","tr":"Sil?","uk":"\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438?","vn":"Xo\xE1?"}}};var VICH_UPLOADER_LINK_DOWNLOAD={"id":"vich_uploader.link.download","translations":{"messages":{"fr":"T\xE9l\xE9charger","ar":"\u062A\u062D\u0645\u064A\u0644","bg":"\u0418\u0437\u0442\u0435\u0433\u043B\u0438","ca":"Descarregar","cs":"St\xE1hnout","de":"herunterladen","en":"Download","es":"Descargar","fi":"Lataa","hu":"Jelenlegi f\xE1jl let\xF6lt\xE9se","it":"Scaricare","lt":"Parsisi\u0173sti","nl":"Downloaden","pl":"Pobierz","pt":"Descarregar","ru":"\u0421\u043A\u0430\u0447\u0430\u0442\u044C","sl":"Prenesi","tr":"\u0130ndir","uk":"\u0417\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0438\u0442\u0438","vn":"T\u1EA3i"}}};var LABEL_PREVIOUS={"id":"label_previous","translations":{"KnpPaginatorBundle":{"fr":"Pr\xE9c\xE9dent","ar":"\u0627\u0644\u0633\u0627\u0628\u0642","bg":"\u041F\u0440\u0435\u0434\u0438\u0448\u043D\u0430","ca":"Anterior","cs":"P\u0159edchoz\xED","da":"Forrige","de":"Vorherige","en":"Previous","es":"Anterior","eu":"Aurrekoa","fa":"\u0642\u0628\u0644\u06CC","fi":"Edellinen","hr":"Prethodna","hu":"El\u0151z\u0151","id":"Sebelumnya","it":"Precedente","ja":"\u524D\u3078","lt":"Ankstesnis","nl":"Vorige","no":"Forrige","pl":"Poprzednia","pt_BR":"Anterior","ru":"\u041D\u0430\u0437\u0430\u0434","sv":"F\xF6reg\xE5ende","tr":"\xD6nceki","uk":"\u041D\u0430\u0437\u0430\u0434","ky":"\u041C\u0443\u0440\u0443\u043D\u043A\u0443","sw":"Kabla"}}};var LABEL_NEXT={"id":"label_next","translations":{"KnpPaginatorBundle":{"fr":"Suivant","ar":"\u0627\u0644\u062A\u0627\u0644\u064A","bg":"\u0421\u043B\u0435\u0434\u0432\u0430\u0449\u0430","ca":"Seg\xFCent","cs":"Dal\u0161\xED","da":"N\xE6ste","de":"N\xE4chste","en":"Next","es":"Siguiente","eu":"Hurrengoa","fa":"\u0628\u0639\u062F\u06CC","fi":"Seuraava","hr":"Sljede\u0107a","hu":"K\xF6vetkez\u0151","id":"Berikutnya","it":"Successivo","ja":"\u6B21\u3078","lt":"Sekantis","nl":"Volgende","no":"Neste","pl":"Nast\u0119pna","pt_BR":"Pr\xF3ximo","ru":"\u0412\u043F\u0435\u0440\u0435\u0434","sv":"N\xE4sta","tr":"Sonraki","uk":"\u0414\u0430\u043B\u0456","ky":"\u041A\u0438\u0439\u0438\u043D\u043A\u0438","sw":"Ijayo"}}};var FILTER_SEARCHWORD={"id":"filter_searchword","translations":{"KnpPaginatorBundle":{"fr":"Recherche...","ar":"\u0628\u062D\u062B...","bg":"\u0442\u044A\u0440\u0441\u0435\u043D\u0435...","ca":"Cercar...","cs":"Vyhled\xE1vat...","da":"S\xF8g...","de":"Suchbegriff...","en":"Searchword...","es":"Buscar...","eu":"Bilatu...","fa":"\u06A9\u0644\u0645\u0647 \u062C\u0633\u062A\u062C\u0648...","fi":"Etsi...","hr":"Tra\u017Eena rije\u010D...","hu":"Keres\xE9s...","id":"Cari...","it":"Ricerca...","ja":"\u63A2\u3059...","lt":"Paie\u0161ka...","nl":"Zoekterm...","no":"S\xF8k...","pl":"Szukaj...","pt_BR":"Procurar...","ro":"C\u0103utare...","ru":"\u041F\u043E\u0438\u0441\u043A...","sv":"S\xF6k...","tr":"Kelime ara...","uk":"\u041F\u043E\u0448\u0443\u043A...","ky":"\u0438\u0437\u0434\u04E9\u04E9...","sw":"Utaftaji..."}}};var CANCEL={"id":"cancel","translations":{"authentication.first_login":{"fr":"Annuler"},"authentication.reset_password":{"fr":"Annuler"},"common":{"fr":"Annuler"}}};var LOGIN_TITLE={"id":"login.title","translations":{"authentication.first_login":{"fr":"Bienvenue !"}}};var LOGIN_SUBTITLE={"id":"login.subtitle","translations":{"authentication.first_login":{"fr":"Pour d\xE9buter la cr\xE9ation de votre compte, saisissez les informations de connexion envoy\xE9es par mail"}}};var CONFIRM_PASSWORD_PAGE_TITLE={"id":"confirm_password.page_title","translations":{"authentication.first_login":{"fr":"Confirmation du mot de passe"}}};var CONFIRM_PASSWORD_TITLE={"id":"confirm_password.title","translations":{"authentication.first_login":{"fr":"Choix du mot de passe"}}};var CONFIRM_PASSWORD_SUBTITLE={"id":"confirm_password.subtitle","translations":{"authentication.first_login":{"fr":"Veuillez choisir un nouveau mot de passe pour votre compte"}}};var CONFIRM_PASSWORD_FORM_PASSWORD_LABEL={"id":"confirm_password.form.password_label","translations":{"authentication.first_login":{"fr":"Mot de passe"}}};var CONFIRM_PASSWORD_FORM_PASSWORD_PLACEHOLDER={"id":"confirm_password.form.password_placeholder","translations":{"authentication.first_login":{"fr":"********"}}};var CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL={"id":"confirm_password.form.password_confirmation_label","translations":{"authentication.first_login":{"fr":"Confirmation du mot de passe"}}};var CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER={"id":"confirm_password.form.password_confirmation_placeholder","translations":{"authentication.first_login":{"fr":"********"}}};var CONFIRM_PASSWORD_FORM_SUBMIT_LABEL={"id":"confirm_password.form.submit_label","translations":{"authentication.first_login":{"fr":"Valider le mot de passe"}}};var CONFIRM_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED={"id":"confirm_password.flash.success.password_updated","translations":{"authentication.first_login":{"fr":"Votre mot de passe a \xE9t\xE9 mis \xE0 jour avec succ\xE8s."}}};var COMPLETE_PROFILE_PAGE_TITLE={"id":"complete_profile.page_title","translations":{"authentication.first_login":{"fr":"Compl\xE9ter mon profil"}}};var COMPLETE_PROFILE_TITLE={"id":"complete_profile.title","translations":{"authentication.first_login":{"fr":"Cr\xE9ation de mon compte"}}};var COMPLETE_PROFILE_SUBTITLE={"id":"complete_profile.subtitle","translations":{"authentication.first_login":{"fr":"Veuillez remplir les champs du formulaire afin de pouvoir finaliser la cr\xE9ation de votre compte Canop\xE9e"}}};var COMPLETE_PROFILE_FLASH_ERROR_ALREADY_ASKED={"id":"complete_profile.flash.error.already_asked","translations":{"authentication.first_login":{"fr":"Vous avez d\xE9j\xE0 demand\xE9 un changement de mot de passe, veuillez v\xE9rifier vos emails."}}};var COMPLETE_PROFILE_FLASH_SUCCESS_DATA_UPDATED={"id":"complete_profile.flash.success.data_updated","translations":{"authentication.first_login":{"fr":"Votre compte a bien \xE9t\xE9 mis \xE0 jour."}}};var COMPLETE_PROFILE_FORM_GENERAL={"id":"complete_profile.form.general","translations":{"authentication.first_login":{"fr":"Informations g\xE9n\xE9rales"}}};var COMPLETE_PROFILE_FORM_CONTACT={"id":"complete_profile.form.contact","translations":{"authentication.first_login":{"fr":"Informations de contact"}}};var COMPLETE_PROFILE_FORM_ADDRESS={"id":"complete_profile.form.address","translations":{"authentication.first_login":{"fr":"Domiciliation"}}};var COMPLETE_PROFILE_FORM_SUBMIT_LABEL={"id":"complete_profile.form.submit_label","translations":{"authentication.first_login":{"fr":"Valider"}}};var PAGE_TITLE={"id":"page_title","translations":{"authentication":{"fr":"Authentification"},"authentication.login":{"fr":"Connexion"}}};var LOGOUT={"id":"logout","translations":{"authentication":{"fr":"Se d\xE9connecter"}}};var ALREADY_LOGGED_IN={"id":"already_logged_in","translations":{"authentication.login":{"fr":"Vous \xEAtes d\xE9j\xE0 connect\xE9 en tant que %userIdentifier%, <a href=\"%logout%\">d\xE9connectez-vous</a> ou <a href=\"%dashboard%\">acc\xE9dez \xE0 votre tableau de bord</a>"}}};var TITLE={"id":"title","translations":{"authentication.login":{"fr":"Connectez vous \xE0 votre compte"}}};var SUBTITLE={"id":"subtitle","translations":{"authentication.login":{"fr":"Saisissez vos informations de connexion"}}};var FORGOT_PASSWORD={"id":"forgot_password","translations":{"authentication.login":{"fr":"Mot de passe oubli\xE9 ?"}}};var FORM_EMAIL_LABEL={"id":"form.email_label","translations":{"authentication.login":{"fr":"E-mail"}}};var FORM_EMAIL_PLACEHOLDER={"id":"form.email_placeholder","translations":{"authentication.login":{"fr":"john@canovia.fr"}}};var FORM_PASSWORD_LABEL={"id":"form.password_label","translations":{"authentication.login":{"fr":"Mot de passe"}}};var FORM_PASSWORD_PLACEHOLDER={"id":"form.password_placeholder","translations":{"authentication.login":{"fr":"**********"}}};var FORM_SUBMIT_LABEL={"id":"form.submit_label","translations":{"authentication.login":{"fr":"Se connecter"}}};var BACK={"id":"back","translations":{"authentication.reset_password":{"fr":"Retour"}}};var FLASH_ERROR_COMMON={"id":"flash.error.common","translations":{"authentication.reset_password":{"fr":"Une erreur est survenue, veuillez r\xE9essayer. Si le probl\xE8me persiste, contactez l'\xE9quipe technique."}}};var FORGOT_PASSWORD_PAGE_TITLE={"id":"forgot_password.page_title","translations":{"authentication.reset_password":{"fr":"Mot de passe oubli\xE9"}}};var FORGOT_PASSWORD_TITLE={"id":"forgot_password.title","translations":{"authentication.reset_password":{"fr":"Mot de passe oubli\xE9"}}};var FORGOT_PASSWORD_SUBTITLE={"id":"forgot_password.subtitle","translations":{"authentication.reset_password":{"fr":"Saisissez votre mail afin de recevoir un lien de r\xE9initialisation"}}};var FORGOT_PASSWORD_FLASH_ERROR_ALREADY_ASKED={"id":"forgot_password.flash.error.already_asked","translations":{"authentication.reset_password":{"fr":"Vous avez d\xE9j\xE0 demand\xE9 un changement de mot de passe, veuillez v\xE9rifier vos emails."}}};var FORGOT_PASSWORD_FORM_EMAIL_LABEL={"id":"forgot_password.form.email_label","translations":{"authentication.reset_password":{"fr":"E-mail"}}};var FORGOT_PASSWORD_FORM_EMAIL_PLACEHOLDER={"id":"forgot_password.form.email_placeholder","translations":{"authentication.reset_password":{"fr":"john@administrateur.fr"}}};var FORGOT_PASSWORD_FORM_SUBMIT_LABEL={"id":"forgot_password.form.submit_label","translations":{"authentication.reset_password":{"fr":"Valider l'email"}}};var CHECK_EMAIL_PAGE_TITLE={"id":"check_email.page_title","translations":{"authentication.reset_password":{"fr":"Email envoy\xE9"}}};var CHECK_EMAIL_TITLE={"id":"check_email.title","translations":{"authentication.reset_password":{"fr":"R\xE9initialisation de mot de passe"}}};var CHECK_EMAIL_SUBTITLE={"id":"check_email.subtitle","translations":{"authentication.reset_password":{"fr":"Veuillez v\xE9rifier votre bo\xEEte mail"}}};var CHECK_EMAIL_ACCOUNT_EXISTS={"id":"check_email.account_exists","translations":{"authentication.reset_password":{"fr":"Si un compte correspondant \xE0 votre adresse e-mail existe, un e-mail contenant un lien que vous pouvez utiliser pour r\xE9initialiser votre mot de passe vient d'\xEAtre envoy\xE9."}}};var CHECK_EMAIL_LINK_EXPIRES_IN={"id":"check_email.link_expires_in","translations":{"authentication.reset_password":{"fr":"Ce lien expirera dans"}}};var CHECK_EMAIL_DIDNT_RECEIVE={"id":"check_email.didnt_receive","translations":{"authentication.reset_password":{"fr":"Si vous ne recevez pas d'e-mail, veuillez v\xE9rifier votre dossier spam ou <a href=\"%try_again%\">r\xE9essayez</a>."}}};var RESET_PASSWORD_PAGE_TITLE={"id":"reset_password.page_title","translations":{"authentication.reset_password":{"fr":"R\xE9initialisation du mot de passe"}}};var RESET_PASSWORD_TITLE={"id":"reset_password.title","translations":{"authentication.reset_password":{"fr":"Nouveau mot de passe"}}};var RESET_PASSWORD_SUBTITLE_FIRST_LOGIN={"id":"reset_password.subtitle_first_login","translations":{"authentication.reset_password":{"fr":"Veuillez choisir un nouveau mot de passe pour votre compte"}}};var RESET_PASSWORD_FORM_PASSWORD_LABEL={"id":"reset_password.form.password_label","translations":{"authentication.reset_password":{"fr":"Mot de passe"}}};var RESET_PASSWORD_FORM_PASSWORD_PLACEHOLDER={"id":"reset_password.form.password_placeholder","translations":{"authentication.reset_password":{"fr":"********"}}};var RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL={"id":"reset_password.form.password_confirmation_label","translations":{"authentication.reset_password":{"fr":"Confirmation du mot de passe"}}};var RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER={"id":"reset_password.form.password_confirmation_placeholder","translations":{"authentication.reset_password":{"fr":"********"}}};var RESET_PASSWORD_FORM_SUBMIT_LABEL={"id":"reset_password.form.submit_label","translations":{"authentication.reset_password":{"fr":"Valider le mot de passe"}}};var RESET_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED={"id":"reset_password.flash.success.password_updated","translations":{"authentication.reset_password":{"fr":"Votre mot de passe a \xE9t\xE9 mis \xE0 jour avec succ\xE8s."}}};var SEARCH={"id":"search","translations":{"common":{"fr":"Recherche"}}};var SELECT={"id":"select","translations":{"common":{"fr":"S\xE9lectionner"}}};var CUSTOMER={"id":"customer","translations":{"common":{"fr":"Client"}}};var BROWSE={"id":"browse","translations":{"common":{"fr":"Parcourir"}}};var DASHBOARD={"id":"dashboard","translations":{"common":{"fr":"Tableau de bord"}}};var APP={"id":"app","translations":{"common":{"fr":"Application"}}};var SAVE_LABEL={"id":"save_label","translations":{"common":{"fr":"Valider"}}};var EDIT_LABEL={"id":"edit_label","translations":{"common":{"fr":"\xC9diter"}}};var EXPORT={"id":"export","translations":{"common":{"fr":"Exporter"}}};var NO_ELEMENTS={"id":"no_elements","translations":{"common":{"fr":"Aucun \xE9l\xE9ment trouv\xE9"}}};var CUSTOMER_DELETE_SUCCESS_FLASH={"id":"customer.delete.success_flash","translations":{"customer.delete":{"fr":"Le client a \xE9t\xE9 supprim\xE9 avec succ\xE8s"}}};var CUSTOMER_DELETE_ERROR_FLASH={"id":"customer.delete.error_flash","translations":{"customer.delete":{"fr":"Une erreur est survenue lors de la suppression du client"}}};var CUSTOMER_EDIT_SUCCESS={"id":"customer.edit.success","translations":{"customer.edit":{"fr":"Client \xE9dit\xE9 avec succ\xE8s"}}};var CUSTOMER_EDIT_TITLE={"id":"customer.edit.title","translations":{"customer.edit":{"fr":"\xC9dition d'un client"}}};var CUSTOMER_EDIT_SAVE_BUTTON={"id":"customer.edit.save_button","translations":{"customer.edit":{"fr":"Valider"}}};var CUSTOMER_EDIT_EDIT_BUTTON={"id":"customer.edit.edit_button","translations":{"customer.edit":{"fr":"\xC9diter"}}};var CUSTOMER_EDIT_BACK_BUTTON={"id":"customer.edit.back_button","translations":{"customer.edit":{"fr":"Retour"}}};var CUSTOMER_EDIT_DELETE_BUTTON={"id":"customer.edit.delete_button","translations":{"customer.edit":{"fr":"Supprimer le client"}}};var CUSTOMER_EDIT_ADD_BUTTON={"id":"customer.edit.add_button","translations":{"customer.edit":{"fr":"Ajouter une filiale"}}};var FORM_GENERAL={"id":"form.general","translations":{"customer.form":{"fr":"INFORMATIONS G\xC9N\xC9RALES"}}};var FORM_GRAPHIC_CHARTER={"id":"form.graphic_charter","translations":{"customer.form":{"fr":"CHARTE GRAPHIQUE"}}};var FORM_MODULES={"id":"form.modules","translations":{"customer.form":{"fr":"MODULES AUTORIS\xC9S"}}};var FORM_MODULES_ROLES={"id":"form.modules_roles","translations":{"customer.form":{"fr":"Modules autoris\xE9s et roles"}}};var FORM_SUB_ORGANIZATION={"id":"form.subOrganization","translations":{"customer.form":{"fr":"FILIALES"}}};var FORM_CREATED_AT={"id":"form.created_at","translations":{"customer.form":{"fr":"Date de cr\xE9ation"}}};var FORM_UPDATED_AT={"id":"form.updated_at","translations":{"customer.form":{"fr":"Derni\xE8re modification"}}};var GENERAL_LEGALNAME_LABEL={"id":"general.legalname_label","translations":{"customer.form":{"fr":"Nom de l'entreprise"}}};var GENERAL_LEGALNAME_PLACEHOLDER={"id":"general.legalname_placeholder","translations":{"customer.form":{"fr":"Nom de l'entreprise"}}};var GENERAL_EMAIL_ADMINISTRATOR_LABEL={"id":"general.emailAdministrator_label","translations":{"customer.form":{"fr":"Email du compte admin"}}};var GENERAL_EMAIL_ADMINISTRATOR_PLACEHOLDER={"id":"general.emailAdministrator_placeholder","translations":{"customer.form":{"fr":"Identifiant du compte admin"}}};var GENERAL_FAMILY_NAME_ADMINISTRATOR_LABEL={"id":"general.familyNameAdministrator_label","translations":{"customer.form":{"fr":"Nom du contact"}}};var GENERAL_FAMILY_NAME_ADMINISTRATOR_PLACEHOLDER={"id":"general.familyNameAdministrator_placeholder","translations":{"customer.form":{"fr":"Nom du contact"}}};var GENERAL_GIVEN_NAME_ADMINISTRATOR_LABEL={"id":"general.givenNameAdministrator_label","translations":{"customer.form":{"fr":"Pr\xE9nom du contact"}}};var GENERAL_GIVEN_NAME_ADMINISTRATOR_PLACEHOLDER={"id":"general.givenNameAdministrator_placeholder","translations":{"customer.form":{"fr":"Pr\xE9nom du contact"}}};var GENERAL_ADMINISTRATOR_LABEL={"id":"general.administrator_label","translations":{"customer.form":{"fr":"Administrateur client"}}};var GENERAL_ADMINISTRATOR_PLACEHOLDER={"id":"general.administrator_placeholder","translations":{"customer.form":{"fr":"S\xE9lectionnez un administrateur"}}};var GRAPHIC_CHARTER_LOGO={"id":"graphic_charter.logo","translations":{"customer.form":{"fr":"Logo principal"}}};var GRAPHIC_CHARTER_MINIFIED_LOGO={"id":"graphic_charter.minifiedLogo","translations":{"customer.form":{"fr":"Logo minifi\xE9"}}};var GRAPHIC_CHARTER_PRIMARY_COLOR={"id":"graphic_charter.primaryColor","translations":{"customer.form":{"fr":"Couleur principale"}}};var GRAPHIC_CHARTER_SECONDARY_COLOR={"id":"graphic_charter.secondaryColor","translations":{"customer.form":{"fr":"Couleur secondaire"}}};var GRAPHIC_CHARTER_COMPLEMENTARY_COLOR={"id":"graphic_charter.complementaryColor","translations":{"customer.form":{"fr":"Couleur suppl\xE9mentaire"}}};var SUB_ORGANIZATION_HAS_SUB_ORGANIZATION={"id":"subOrganization.hasSubOrganization","translations":{"customer.form":{"fr":"Autoris\xE9 \xE0 cr\xE9er des filiales"}}};var CUSTOMER_COMMON_FAMILY_NAME={"id":"customer.common.familyName","translations":{"customer":{"fr":"Nom"}}};var CUSTOMER_COMMON_GIVEN_NAME={"id":"customer.common.givenName","translations":{"customer":{"fr":"Pr\xE9nom"}}};var CUSTOMER_COMMON_FULL_NAME={"id":"customer.common.fullName","translations":{"customer":{"fr":"Nom & Pr\xE9nom"}}};var CUSTOMER_COMMON_EMAIL={"id":"customer.common.email","translations":{"customer":{"fr":"Email"}}};var CUSTOMER_COMMON_ADMINISTRATOR={"id":"customer.common.administrator","translations":{"customer":{"fr":"Administrateur"}}};var CUSTOMER_COMMON_SUB_ORGANIZATION={"id":"customer.common.subOrganization","translations":{"customer":{"fr":"Filiales"}}};var CUSTOMER_COMMON_USERS_LIST={"id":"customer.common.usersList","translations":{"customer":{"fr":"Liste des utilisateurs"}}};var CUSTOMER_COMMON_EXTERNAL_LINKS={"id":"customer.common.externalLinks","translations":{"customer":{"fr":"Liens externes"}}};var CUSTOMER_COMMON_URL={"id":"customer.common.url","translations":{"customer":{"fr":"url"}}};var CUSTOMER_COMMON_CUSTOMIZATIONS={"id":"customer.common.customizations","translations":{"customer":{"fr":"Personnalisation"}}};var CUSTOMER_COMMON_BACK={"id":"customer.common.back","translations":{"customer":{"fr":"Retour"}}};var CUSTOMER_COMMON_SAVE={"id":"customer.common.save","translations":{"customer":{"fr":"Valider"}}};var COMMON_TITLE={"id":"common.title","translations":{"customer.list":{"fr":"Listing des clients"}}};var COMMON_ADD_BUTTON={"id":"common.add_button","translations":{"customer.list":{"fr":"Cr\xE9er un client"},"widget":{"fr":"Cr\xE9er un widget"}}};var COMMON_ADD_BUTTON_SUBORGANIZATION={"id":"common.add_button_suborganization","translations":{"customer.list":{"fr":"Ajouter une filiale"}}};var FORM_SEARCH_LABEL={"id":"form.search_label","translations":{"customer.list":{"fr":"Nom"}}};var FORM_SEARCH_PLACEHOLDER={"id":"form.search_placeholder","translations":{"customer.list":{"fr":"Rechercher"}}};var LIST_EMPTY={"id":"list.empty","translations":{"customer.list":{"fr":"Aucun client trouv\xE9"}}};var CUSTOMER_NEW_SUCCESS_FLASH={"id":"customer.new.success_flash","translations":{"customer.new":{"fr":"Client enregistr\xE9 avec succ\xE8s"}}};var CUSTOMER_NEW_TITLE={"id":"customer.new.title","translations":{"customer.new":{"fr":"Cr\xE9ation d'un client"}}};var CUSTOMER_SHOW_ADMINISTRATOR_LABEL={"id":"customer.show.administrator_label","translations":{"customer.show":{"fr":"Identifiant administrateur"}}};var CUSTOMER_SHOW_ADMINISTRATOR_FAMILY_NAME_LABEL={"id":"customer.show.administrator_familyName_label","translations":{"customer.show":{"fr":"Nom administrateur"}}};var CUSTOMER_SHOW_ADMINISTRATOR_GIVEN_NAME_LABEL={"id":"customer.show.administrator_givenName_label","translations":{"customer.show":{"fr":"Pr\xE9nom administrateur"}}};var CUSTOMER_SHOW_MODULES={"id":"customer.show.modules","translations":{"customer.show":{"fr":"Modules"}}};var CUSTOMER_SHOW_ROLES={"id":"customer.show.roles","translations":{"customer.show":{"fr":"R\xF4le(s)"}}};var EXTERNAL_LINK_CRUD_ICON_LABEL={"id":"externalLink.crud.icon_label","translations":{"externalLink.form":{"fr":"Pictogramme"}}};var EXTERNAL_LINK_CRUD_ICON_PLACEHOLDER={"id":"externalLink.crud.icon_placeholder","translations":{"externalLink.form":{"fr":"Pictogramme"}}};var EXTERNAL_LINK_CRUD_NAME_LABEL={"id":"externalLink.crud.name_label","translations":{"externalLink.form":{"fr":"Nom"}}};var EXTERNAL_LINK_CRUD_NAME_PLACEHOLDER={"id":"externalLink.crud.name_placeholder","translations":{"externalLink.form":{"fr":"Nom"}}};var EXTERNAL_LINK_CRUD_URL_LABEL={"id":"externalLink.crud.url_label","translations":{"externalLink.form":{"fr":"URL"}}};var EXTERNAL_LINK_CRUD_URL_PLACEHOLDER={"id":"externalLink.crud.url_placeholder","translations":{"externalLink.form":{"fr":"URL"}}};var EXTERNAL_LINK_CRUD_DELETE_BUTTON={"id":"externalLink.crud.delete_button","translations":{"externalLink.form":{"fr":"Supprimer le lien"}}};var EXTERNAL_LINK_CRUD_SAVE_BUTTON={"id":"externalLink.crud.save_button","translations":{"externalLink.form":{"fr":"Valider"}}};var EXTERNAL_LINK_CRUD_ADD_BUTTON={"id":"externalLink.crud.add_button","translations":{"externalLink.form":{"fr":"Ajouter un lien"}}};var EXTERNAL_LINK_CRUD_DEFAULT_NAME={"id":"externalLink.crud.default_name","translations":{"externalLink.form":{"fr":"Nouveau lien externe"}}};var EXTERNAL_LINK_CRUD_TITLE={"id":"externalLink.crud.title","translations":{"externalLink.form":{"fr":"Liens Externes"}}};var EXTERNAL_LINK_COMMON_NEW_SUCCESS={"id":"externalLink.common.new_success","translations":{"externalLink":{"fr":"Le lien externe a bien \xE9t\xE9 cr\xE9\xE9"}}};var EXTERNAL_LINK_COMMON_DELETE_SUCCESS={"id":"externalLink.common.delete_success","translations":{"externalLink":{"fr":"Le lien externe a bien \xE9t\xE9 supprim\xE9"}}};var EXTERNAL_LINK_COMMON_EDIT_SUCCESS={"id":"externalLink.common.edit_success","translations":{"externalLink":{"fr":"Le lien externe a bien \xE9t\xE9 modifi\xE9"}}};var EXTERNAL_LINK_COMMON_ERROR={"id":"externalLink.common.error","translations":{"externalLink":{"fr":"Une erreur est survenue"}}};var FILE_LOG_ID={"id":"file.log.id","translations":{"file":{"fr":"Id"}}};var FILE_LOG_SENDER={"id":"file.log.sender","translations":{"file":{"fr":"Utilisateur"}}};var FILE_LOG_SITE={"id":"file.log.site","translations":{"file":{"fr":"Module"}}};var FILE_LOG_CUSTOMER={"id":"file.log.customer","translations":{"file":{"fr":"Client"}}};var FILE_LOG_TYPE={"id":"file.log.type","translations":{"file":{"fr":"Type"}}};var FILE_LOG_CREATED_AT={"id":"file.log.createdAt","translations":{"file":{"fr":"Date & heure"}}};var FILE_LOG_CONTENT={"id":"file.log.content","translations":{"file":{"fr":"Contenu"}}};var ALERT_CONFIRM_BUTTON_TEXT={"id":"alert.confirm.button_text","translations":{"js.alert":{"fr":"Confirmer"}}};var ALERT_CONFIRM_DENY_BUTTON_TEXT={"id":"alert.confirm.deny_button_text","translations":{"js.alert":{"fr":"Annuler"}}};var ALERT_CONFIRM_TITLE={"id":"alert.confirm.title","translations":{"js.alert":{"fr":"Confirmation"}}};var ALERT_CONFIRM_TEXT={"id":"alert.confirm.text","translations":{"js.alert":{"fr":"\xCAtes-vous s\xFBr de vouloir continuer ?"}}};var ALERT_CONFIRM_INPUT_VALIDATOR_TEXT={"id":"alert.confirm.input_validator_text","translations":{"js.alert":{"fr":"Veuillez saisir la valeur {{ value }}"}}};var ALERT_USER_DELETE={"id":"alert.user.delete","translations":{"js.alert":{"fr":"ATTENTION"}}};var ALERT_USER_DELETE_TEXT={"id":"alert.user.deleteText","translations":{"js.alert":{"fr":"Cette action peut conduire \xE0 la perte de donn\xE9es ou emp\xEAcher certains utilisateurs d'utiliser correctement le site. Pour \xE9viter les actions accidentelles, nous vous demandons de confirmer votre intention. Veuillez entrer <span class=''><b>value</b></span> pour continuer ou fermez cette modale pour annuler."}}};var ALERT_CUSTOMER_DELETE={"id":"alert.customer.delete","translations":{"js.alert":{"fr":"\xCAtes-vous s\xFBr de vouloir supprimer ce client ?"}}};var ALERT_CUSTOMER_DELETE_TEXT={"id":"alert.customer.deleteText","translations":{"js.alert":{"fr":"Pour supprimer ce client, veuillez saisir son nom complet : <span class=''><b>value</b></span> <br> ATTENTION: cette action est irr\xE9versible !"}}};var ALERT_WIDGET_DELETE={"id":"alert.widget.delete","translations":{"js.alert":{"fr":"ATTENTION"}}};var ALERT_WIDGET_DELETE_TEXT={"id":"alert.widget.deleteText","translations":{"js.alert":{"fr":"Cette action peut conduire \xE0 la perte de donn\xE9es ou emp\xEAcher certains utilisateurs d'utiliser correctement le site. Pour \xE9viter les actions accidentelles, nous vous demandons de confirmer votre intention. Veuillez entrer <span class=''><b>value</b></span> pour continuer ou fermez cette modale pour annuler."}}};var LEGISLATION_EDIT_TITLE_LABEL={"id":"legislation.edit.title_label","translations":{"legislation.edit":{"fr":"Titre"}}};var LEGISLATION_EDIT_TITLE_PLACEHOLDER={"id":"legislation.edit.title_placeholder","translations":{"legislation.edit":{"fr":"Titre de vos mentions l\xE9gales"}}};var LEGISLATION_EDIT_CONTENT_LABEL={"id":"legislation.edit.content_label","translations":{"legislation.edit":{"fr":"Contenu"}}};var LEGISLATION_EDIT_CONTENT_PLACEHOLDER={"id":"legislation.edit.content_placeholder","translations":{"legislation.edit":{"fr":"Contenu de vos mentions l\xE9gales"}}};var LEGAL_PAGE_TITLE={"id":"legal_page.title","translations":{"legislation":{"fr":"Mentions l\xE9gales"}}};var LEGAL_PAGE_FLASH_SUCCESS={"id":"legal_page.flash_success","translations":{"legislation":{"fr":"Vos mentions l\xE9gales ont \xE9t\xE9 mises \xE0 jour avec succ\xE8s."}}};var LOG_TITLE={"id":"log.title","translations":{"log":{"fr":"Logs"}}};var LOG_ERROR_MODULE={"id":"log.error.module","translations":{"log":{"fr":"Le module 'moduleName' n'existe pas"}}};var LOG_ERROR_TOKEN_TRADUCTION={"id":"log.error.tokenTraduction","translations":{"log":{"fr":"Le token de traduction n'existe pas"}}};var LOG_COMMON_SITE={"id":"log.common.site","translations":{"log":{"fr":"Site"}}};var LOG_COMMON_CREATED={"id":"log.common.created","translations":{"log":{"fr":"Date & heure"}}};var LOG_COMMON_TYPE={"id":"log.common.type","translations":{"log":{"fr":"Type"}}};var LOG_COMMON_SENDER={"id":"log.common.sender","translations":{"log":{"fr":"Utilisateur"}}};var LOG_COMMON_CUSTOMER={"id":"log.common.customer","translations":{"log":{"fr":"Client"}}};var LOG_COMMON_TITLE={"id":"log.common.title","translations":{"log":{"fr":"Log"}}};var LOG_COMMON_SUBTITLE={"id":"log.common.subtitle","translations":{"log":{"fr":"Logs des 12 derniers mois"}}};var LOG_COMMON_CONTENT={"id":"log.common.content","translations":{"log":{"fr":"Message"}}};var LOG_COMMON_ATTACHEMENT={"id":"log.common.attachement","translations":{"log":{"fr":"Pi\xE8ce jointe"}}};var LOG_WIDGET_DELETE={"id":"log.widget.delete","translations":{"log":{"fr":"%0% %1% (%2%) a supprim\xE9 le widget %3% (%4%)"}}};var LOG_WIDGET_EDIT={"id":"log.widget.edit","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 le widget %3% (%4%)"}}};var LOG_WIDGET_NEW={"id":"log.widget.new","translations":{"log":{"fr":"%0% %1% (%2%) a cr\xE9\xE9 le widget %3% (%4%)"}}};var LOG_USER_DELETE={"id":"log.user.delete","translations":{"log":{"fr":"%0% %1% (%2%) a supprim\xE9 l'utilisateur %3% %4% %5% (%6%)"}}};var LOG_USER_EDIT_GENERAL={"id":"log.user.edit_general","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 les donn\xE9es g\xE9n\xE9rales de l'utilisateur %3% %4% %5% (%6%)"}}};var LOG_USER_EDIT_COMPLEMENTARY={"id":"log.user.edit_complementary","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 les donn\xE9es compl\xE9mentaires de l'utilisateur %3% %4% %5% (%6%)"}}};var LOG_USER_NEW={"id":"log.user.new","translations":{"log":{"fr":"%0% %1% (%2%) a cr\xE9\xE9 le nouvel utilisateur %3% %4% %5% (%6%)"}}};var LOG_ROLE_ADD_FOR_ALL_USERS={"id":"log.role.add_for_all_users","translations":{"log":{"fr":"%0% %1% (%2%) a ajout\xE9 le r\xF4le %3% (%4%) du module %5% (%6%) a tous les utilisateurs du client %7% (%8%)"}}};var LOG_ROLE_ADD_FOR_USER={"id":"log.role.add_for_user","translations":{"log":{"fr":"%0% %1% (%2%) a ajout\xE9 le r\xF4le %3% (%4%) du module %5% (%6%) a l'utilisateur %7% %8% (%9%)"}}};var LOG_ROLE_REMOVE_FOR_USER={"id":"log.role.remove_for_user","translations":{"log":{"fr":"%0% %1% (%2%) a retir\xE9 le r\xF4le %3% (%4%) du module %5% (%6%) a l'utilisateur %7% %8% (%9%)"}}};var LOG_EXTERNAL_LINK_DELETE={"id":"log.externalLink.delete","translations":{"log":{"fr":"%0% %1% (%2%) a supprim\xE9 le lien externe %3% (%4%)"}}};var LOG_EXTERNAL_LINK_EDIT={"id":"log.externalLink.edit","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 le lien externe %3% (%4%)"}}};var LOG_EXTERNAL_LINK_NEW={"id":"log.externalLink.new","translations":{"log":{"fr":"%0% %1% (%2%) a cr\xE9\xE9 le lien externe %3% (%4%)"}}};var LOG_CUSTOMER_DELETE={"id":"log.customer.delete","translations":{"log":{"fr":"%0% %1% (%2%) a supprim\xE9 le client %3% (%4%)"}}};var LOG_CUSTOMER_EDIT_GENERAL={"id":"log.customer.edit_general","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 les donn\xE9es g\xE9n\xE9rales du  client %3% (%4%)"}}};var LOG_CUSTOMER_EDIT_GRAPHIC_CHARTER={"id":"log.customer.edit_graphic_charter","translations":{"log":{"fr":"%0% %1% (%2%) a modifi\xE9 la charte graphique du client %3% (%4%)"}}};var LOG_CUSTOMER_NEW={"id":"log.customer.new","translations":{"log":{"fr":"%0% %1% (%2%) a cr\xE9\xE9 le client %3% (%4%)"}}};var LOG_CUSTOMER_ADD_MODULE={"id":"log.customer.add_module","translations":{"log":{"fr":"%0% %1% (%2%) a ajout\xE9 au client %3% (%4%) le module %5% (%6%)"}}};var LOG_CUSTOMER_REMOVE_MODULE={"id":"log.customer.remove_module","translations":{"log":{"fr":"%0% %1% (%2%) a retir\xE9 au client %3% (%4%) le module %5% (%6%)"}}};var LOG_CUSTOMER_NEW_CHILD={"id":"log.customer.new_child","translations":{"log":{"fr":"%0% %1% (%2%) a ajout\xE9 au client %3% (%4%) la filiale %5% (%6%)"}}};var LOG_AUTHENTICATION_LOGIN={"id":"log.authentication.login","translations":{"log":{"fr":"%0% %1% (%2%) s'est connect\xE9"}}};var LOG_AUTHENTICATION_LOGOUT={"id":"log.authentication.logout","translations":{"log":{"fr":"%0% %1% (%2%) s'est d\xE9connect\xE9"}}};var LOG_AUTHENTICATION_RESET_PASSWORD_REQUEST={"id":"log.authentication.reset_password_request","translations":{"log":{"fr":"%0% %1% (%2%) a effectu\xE9 une demande de r\xE9initialisation de mot de passe, sa demande est valide jusqu'au %3%"}}};var LOG_AUTHENTICATION_RESET_PASSWORD={"id":"log.authentication.reset_password","translations":{"log":{"fr":"%0% %1% (%2%) a r\xE9initialis\xE9 son mot de passe"}}};var LOG_AUTHENTICATION_MODULE_LOGIN={"id":"log.authentication.module_login","translations":{"log":{"fr":"%0% %1% (%2%) s'est connect\xE9 au module %3% (%4%)"}}};var LOG_AUTHENTICATION_FIRST_LOGIN={"id":"log.authentication.first_login","translations":{"log":{"fr":"Premi\xE8re connexion de l'utilisateur %0% %1% (%2%)"}}};var LOG_AUTHENTICATION_COMPLETE_PROFILE={"id":"log.authentication.complete_profile","translations":{"log":{"fr":"%0% %1% (%2%) a compl\xE9t\xE9 son profile"}}};var LOG_EMAIL_SEND={"id":"log.email.send","translations":{"log":{"fr":"Envoi du mail %0% \xE0 l'adresse %1%"}}};var NOT_GRANTED={"id":"not_granted","translations":{"module":{"fr":"Vous n\u2019\xEAtes pas autoris\xE9 \xE0 consulter cet onglet. Pour plus d\u2019informations, contactez votre administrateur"}}};var PREFIX={"id":"prefix","translations":{"module":{"fr":"Module"}}};var DEFAULT_ROLES={"id":"default_roles","translations":{"module":{"fr":"Par d\xE9faut, pour ce module, tous vos utilisateurs ont le r\xF4le collaborateur"}}};var MODULE_LOGIN_FLASH_ERROR_GET_LINK={"id":"module_login.flash.error.getLink","translations":{"module.service":{"fr":"Une erreur est survenue lors de la connexion au module."}}};var USER_NEW_SUBJECT={"id":"user.new.subject","translations":{"user.new.email":{"fr":"Votre compte administrateur"}}};var RESET_PASSWORD_SUBJECT={"id":"reset_password.subject","translations":{"authentication.email":{"fr":"Demande de mot de passe oubli\xE9"}}};var ROLE_EDIT_ROLE={"id":"role.edit.role","translations":{"role.edit":{"fr":"R\xF4le \"role\""}}};var ROLE_EDIT_NAME={"id":"role.edit.name","translations":{"role.edit":{"fr":"Nom"}}};var ROLE_EDIT_ADD_ALL={"id":"role.edit.add_all","translations":{"role.edit":{"fr":"Ajouter tous"}}};var ROLE_EDIT_REMOVE_ALL={"id":"role.edit.remove_all","translations":{"role.edit":{"fr":"Supprimer tous"}}};var ROLE_INDEX_TITLE={"id":"role.index.title","translations":{"role.index":{"fr":"Modules autoris\xE9s et r\xF4les"}}};var USER_EDIT_TITLE={"id":"user.edit.title","translations":{"user.edit":{"fr":"\xC9dition d'un utilisateur"}}};var USER_EDIT_GENERAL_INFORMATION={"id":"user.edit.general_information","translations":{"user.edit":{"fr":"Informations g\xE9n\xE9rales"}}};var USER_EDIT_EDIT_BUTTON={"id":"user.edit.edit_button","translations":{"user.edit":{"fr":"\xC9diter"}}};var USER_EDIT_SAVE_BUTTON={"id":"user.edit.save_button","translations":{"user.edit":{"fr":"Valider"}}};var USER_EDIT_SUCCESS={"id":"user.edit.success","translations":{"user.edit":{"fr":"Utilisateur \xE9dit\xE9 avec succ\xE8s"}}};var USER_EDIT_COMPLEMENTARY_INFORMATION={"id":"user.edit.complementary_information","translations":{"user.edit":{"fr":"Informations compl\xE9mentaires"}}};var USER_EDIT_ROLES={"id":"user.edit.roles","translations":{"user.edit":{"fr":"Modules autoris\xE9s et r\xF4les"}}};var USER_EDIT_DELETE={"id":"user.edit.delete","translations":{"user.edit":{"fr":"Supprimer l'utilisateur"}}};var USER_EDIT_CANCEL={"id":"user.edit.cancel","translations":{"user.edit":{"fr":"Annuler"}}};var USER_COMMON_USERS={"id":"user.common.users","translations":{"user":{"fr":"Utilisateurs"}}};var USER_COMMON_USER={"id":"user.common.user","translations":{"user":{"fr":"Utilisateur"}}};var USER_COMMON_FAMILY_NAME={"id":"user.common.familyName","translations":{"user":{"fr":"Nom"}}};var USER_COMMON_FAMILY_NAME_PLACEHOLDER={"id":"user.common.familyNamePlaceholder","translations":{"user":{"fr":"Nom"}}};var USER_COMMON_GIVE_NAME={"id":"user.common.giveName","translations":{"user":{"fr":"Pr\xE9nom"}}};var USER_COMMON_GIVE_NAME_PLACEHOLDER={"id":"user.common.giveNamePlaceholder","translations":{"user":{"fr":"Pr\xE9nom"}}};var USER_COMMON_BIRTH_GIVEN_NAME={"id":"user.common.birthGivenName","translations":{"user":{"fr":"Nom de naissance"}}};var USER_COMMON_BIRTH_GIVEN_NAME_PLACEHOLDER={"id":"user.common.birthGivenNamePlaceholder","translations":{"user":{"fr":"Nom de naissance"}}};var USER_COMMON_EMAIL={"id":"user.common.email","translations":{"user":{"fr":"Email"}}};var USER_COMMON_EMAIL_PLACEHOLDER={"id":"user.common.emailPlaceholder","translations":{"user":{"fr":"Email"}}};var USER_COMMON_GENDER={"id":"user.common.gender","translations":{"user":{"fr":"Civilit\xE9"}}};var USER_COMMON_GENDER_PLACEHOLDER={"id":"user.common.genderPlaceholder","translations":{"user":{"fr":"Civilit\xE9"}}};var USER_COMMON_CUSTOMER={"id":"user.common.customer","translations":{"user":{"fr":"Client associ\xE9"}}};var USER_COMMON_PROFESIONNAL_TELEPHONE={"id":"user.common.profesionnalTelephone","translations":{"user":{"fr":"T\xE9l\xE9phone"}}};var USER_COMMON_PROFESIONNAL_TELEPHONE_PLACEHOLDER={"id":"user.common.profesionnalTelephonePlaceholder","translations":{"user":{"fr":"T\xE9l\xE9phone"}}};var USER_COMMON_ACTIVE={"id":"user.common.active","translations":{"user":{"fr":"Actif"}}};var USER_COMMON_ACTIVATED={"id":"user.common.activated","translations":{"user":{"fr":"Oui"}}};var USER_COMMON_DEACTIVATED={"id":"user.common.deactivated","translations":{"user":{"fr":"Non"}}};var USER_COMMON_AVATAR={"id":"user.common.avatar","translations":{"user":{"fr":"Photo de profil"}}};var USER_COMMON_MARITAL_STATUS={"id":"user.common.maritalStatus","translations":{"user":{"fr":"Statut marital"}}};var USER_COMMON_MARITAL_STATUS_PLACEHOLDER={"id":"user.common.maritalStatusPlaceholder","translations":{"user":{"fr":"Statut marital"}}};var USER_COMMON_PERSONNAL_TELEPHONE={"id":"user.common.personnalTelephone","translations":{"user":{"fr":"T\xE9l\xE9phone personnel"}}};var USER_COMMON_PERSONNAL_TELEPHONE_PLACEHOLDER={"id":"user.common.personnalTelephonePlaceholder","translations":{"user":{"fr":"T\xE9l\xE9phone personnel"}}};var USER_COMMON_ADDRESS_STREET_ADDRESS={"id":"user.common.address.streetAddress","translations":{"user":{"fr":"Adresse"}}};var USER_COMMON_ADDRESS_CITY={"id":"user.common.address.city","translations":{"user":{"fr":"Ville"}}};var USER_COMMON_ADDRESS_POSTAL_CODE={"id":"user.common.address.postalCode","translations":{"user":{"fr":"Code postal"}}};var USER_COMMON_PERSONNAL_EMAIL={"id":"user.common.personnalEmail","translations":{"user":{"fr":"Email personnel"}}};var USER_COMMON_PERSONNAL_EMAIL_PLACEHOLDER={"id":"user.common.personnalEmailPlaceholder","translations":{"user":{"fr":"Email personnel"}}};var USER_COMMON_BIRTH_PLACE={"id":"user.common.birthPlace","translations":{"user":{"fr":"D\xE9partement de naissance"}}};var USER_COMMON_BIRTH_PLACE_PLACEHOLDER={"id":"user.common.birthPlacePlaceholder","translations":{"user":{"fr":"D\xE9partement de naissance"}}};var USER_COMMON_JOB_TITLE={"id":"user.common.jobTitle","translations":{"user":{"fr":"Profession"}}};var USER_COMMON_JOB_TITLE_PLACEHOLDER={"id":"user.common.jobTitlePlaceholder","translations":{"user":{"fr":"Profession"}}};var USER_COMMON_CATEGORY_CSP={"id":"user.common.categoryCSP","translations":{"user":{"fr":"Cat\xE9gorie CSP"}}};var USER_COMMON_CATEGORY_CSP_PLACEHOLDER={"id":"user.common.categoryCSPPlaceholder","translations":{"user":{"fr":"Veuillez s\xE9lectionner une cat\xE9gorie CSP"}}};var USER_ROLES_ROLECOLLABORATOR={"id":"user.roles.ROLE_COLLABORATOR","translations":{"user":{"fr":"Collaborateur"}}};var USER_ROLES_ROLEADMIN={"id":"user.roles.ROLE_ADMIN","translations":{"user":{"fr":"Administrateur"}}};var USER_ROLES_ROLESUPERADMIN={"id":"user.roles.ROLE_SUPER_ADMIN","translations":{"user":{"fr":"Super administrateur"}}};var USER_INDEX_EMPTY_TABLE={"id":"user.index.empty_table","translations":{"user.index":{"fr":"Aucun utilisateur trouv\xE9"}}};var USER_INDEX_FAMILY_NAME_GIVE_NAME={"id":"user.index.familyName_giveName","translations":{"user.index":{"fr":"Nom & Pr\xE9nom"}}};var USER_INDEX_IS_ACTIVE={"id":"user.index.isActive","translations":{"user.index":{"fr":"Actif"}}};var USER_INDEX_ACTIONS={"id":"user.index.actions","translations":{"user.index":{"fr":"Actions"}}};var USER_INDEX_LAST_LOGIN={"id":"user.index.lastLogin","translations":{"user.index":{"fr":"Derni\xE8re connexion"}}};var USER_INDEX_ALERT_DELETE={"id":"user.index.alert.delete","translations":{"user.index":{"fr":"\xCAtes-vous s\xFBr de vouloir supprimer cet utilisateur ?"}}};var USER_INDEX_DELETE_SUCCESS={"id":"user.index.delete.success","translations":{"user.index":{"fr":"Utilisateur supprim\xE9 avec succ\xE8s"}}};var USER_INDEX_CREATE={"id":"user.index.create","translations":{"user.index":{"fr":"Cr\xE9er un utilisateur"}}};var USER_INDEX_ROLES={"id":"user.index.roles","translations":{"user.index":{"fr":"G\xE9rer les r\xF4les"}}};var USER_NEW_SUCCESS_FLASH={"id":"user.new.success_flash","translations":{"user.new":{"fr":"Utilisateur enregistr\xE9 avec succ\xE8s"}}};var USER_NEW_TITLE={"id":"user.new.title","translations":{"user.new":{"fr":"Cr\xE9ation d'un utilisateur"}}};var USER_NEW_CANCEL={"id":"user.new.cancel","translations":{"user.new":{"fr":"Annuler"}}};var USER_NEW_SAVE_BUTTON={"id":"user.new.save_button","translations":{"user.new":{"fr":"Valider"}}};var USER_PROFIL_TITLE={"id":"user.profil.title","translations":{"user.profil":{"fr":"Mon compte"}}};var COMMON_NAME={"id":"common.name","translations":{"widget.form":{"fr":"Nom"}}};var COMMON_DESCRIPTION={"id":"common.description","translations":{"widget.form":{"fr":"Description"}}};var COMMON_IMAGE={"id":"common.image","translations":{"widget.form":{"fr":"Image"}}};var COMMON_ICON={"id":"common.icon","translations":{"widget.form":{"fr":"Ic\xF4ne"}}};var COMMON_COLOR={"id":"common.color","translations":{"widget.form":{"fr":"Couleur"}}};var COMMON_LINK={"id":"common.link","translations":{"widget.form":{"fr":"Url"}}};var WIDGET_TYPE_SUBMIT={"id":"widget_type.submit","translations":{"widget.form":{"fr":"Valider"}}};var WIDGET_TYPE_CANCEL={"id":"widget_type.cancel","translations":{"widget.form":{"fr":"Annuler"}}};var WIDGET_TYPE_DELETE={"id":"widget_type.delete","translations":{"widget.form":{"fr":"Supprimer"}}};var WIDGET_TYPE_SAVE_BUTTON={"id":"widget_type.save_button","translations":{"widget.form":{"fr":"Valider"}}};var WIDGET_TYPE_EDIT_BUTTON={"id":"widget_type.edit_button","translations":{"widget.form":{"fr":"\xC9diter"}}};var COMMON_BACK={"id":"common.back","translations":{"widget":{"fr":"Annuler"}}};var COMMON_EDIT_BUTTON={"id":"common.edit_button","translations":{"widget":{"fr":"\xC9diter"}}};var COMMON_SEARCH={"id":"common.search","translations":{"widget":{"fr":"Recherche"}}};var COMMON_SEARCH_PLACEHOLDER={"id":"common.search_placeholder","translations":{"widget":{"fr":"Rechercher"}}};var INDEX_HEADER_TITLE={"id":"index.header.title","translations":{"widget":{"fr":"Widgets"}}};var INDEX_EMPTY={"id":"index.empty","translations":{"widget":{"fr":"Aucun widget trouv\xE9"}}};var EDIT_HEADER_TITLE={"id":"edit.header.title","translations":{"widget":{"fr":"\xC9dition du widget"}}};var EDIT_FLASH_SUCCESS={"id":"edit.flash.success","translations":{"widget":{"fr":"Le widget a \xE9t\xE9 \xE9dit\xE9 avec succ\xE8s"}}};var NEW_HEADER_TITLE={"id":"new.header.title","translations":{"widget":{"fr":"Cr\xE9ation du widget"}}};var NEW_FLASH_SUCCESS={"id":"new.flash.success","translations":{"widget":{"fr":"Le widget a \xE9t\xE9 cr\xE9\xE9 avec succ\xE8s"}}};var FLASH_DELETE={"id":"flash.delete","translations":{"widget":{"fr":"Le widget a \xE9t\xE9 supprim\xE9 avec succ\xE8s"}}};var DELETE_NOT_IMPLEMENTED={"id":"delete.not_implemented","translations":{"workflow.delete":{"fr":"La fonctionnalit\xE9 de suppression n'est pas encore impl\xE9ment\xE9e. Veuillez contacter l'administrateur du site."}}};var DELETE_ALREADY_DELETE={"id":"delete.already_delete","translations":{"workflow.delete":{"fr":"Cet \xE9l\xE9ment a d\xE9j\xE0 \xE9t\xE9 supprim\xE9."}}};var GUARD_CURRENT_USER={"id":"guard.current_user","translations":{"workflow.user_first_login":{"fr":"Impossible de changer le statut d'un autre utilisateur, celui-ci doit valider son compte par lui-m\xEAme."}}};var THE_CSRF_TOKEN_IS_INVALID={"id":"The CSRF token is invalid.","translations":{"validators":{"eu":"CSRF tokena ez da egokia.","nb":"CSRF n\xF8kkelen er ugyldig.","nn":"CSRF-n\xF8kkelen er ikkje gyldig.","no":"CSRF n\xF8kkelen er ugyldig."}}};var THE_FIELDS_FIELDS_WERE_NOT_EXPECTED={"id":"The fields {{ fields }} were not expected.","translations":{"validators":{"fa":"\u0641\u06CC\u0644\u062F\u0647\u0627\u06CC {{ fields }} \u0645\u0648\u0631\u062F \u0627\u0646\u062A\u0638\u0627\u0631 \u0646\u0628\u0648\u062F."}}};var THE_FIELDS_FIELDS_ARE_MISSING={"id":"The fields {{ fields }} are missing.","translations":{"validators":{"fa":"\u0641\u06CC\u0644\u062F\u0647\u0627\u06CC {{ fields }} \u0645\u0641\u0642\u0648\u062F \u0634\u062F\u0647 \u0627\u0646\u062F."}}};var THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE_1={"id":"The number of elements in this collection should be a multiple of {{ compared_value }}\u2024","translations":{"validators":{"hy":"\u0531\u0575\u057D \u0570\u0561\u0574\u0561\u056D\u0574\u0562\u056B \u057F\u0561\u0580\u0580\u0565\u0580\u056B \u0584\u0561\u0576\u0561\u056F\u0568 \u057A\u0565\u057F\u0584 \u0567 \u0570\u0561\u057E\u0561\u057D\u0561\u0580 \u056C\u056B\u0576\u056B {{ compared_value }}-\u056B \u0562\u0561\u0566\u0574\u0561\u057A\u0561\u057F\u056B\u056F\u0576\u0565\u0580\u056B\u0576\u0589"}}};var NO_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED={"id":"No  available, it either timed out or cookies are not enabled.","translations":{"security":{"mn":"\u0425\u044D\u0440\u044D\u0433\u043B\u044D\u0433\u0447\u0438\u0439\u043D session \u043E\u043B\u0434\u0441\u043E\u043D\u0433\u04AF\u0439, \u0445\u0443\u0433\u0430\u0446\u0430\u0430 \u043D\u044C \u0434\u0443\u0443\u0441\u0441\u0430\u043D \u044D\u0441\u0432\u044D\u043B \u043A\u04AF\u04AF\u043A\u0438 \u0438\u0434\u044D\u0432\u0445\u0438\u0436\u04AF\u04AF\u043B\u044D\u044D\u0433\u04AF\u0439 \u0431\u0430\u0439\u043D\u0430."}}};var PREVIOUS={"id":"Previous","translations":{"KnpPaginatorBundle":{"ro":"Pagina anterioara"}}};var NEXT={"id":"Next","translations":{"KnpPaginatorBundle":{"ro":"Pagina urmatoare"}}};var ERROR_1={"id":"Error.","translations":{"validators":{"zh_TW":"\u932F\u8AA4\u3002"}}};

/***/ }),

/***/ "./assets/bootstrap.js":
/*!*****************************!*\
  !*** ./assets/bootstrap.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   app: () => (/* binding */ app)
/* harmony export */ });
/* harmony import */ var _symfony_stimulus_bridge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @symfony/stimulus-bridge */ "./node_modules/@symfony/stimulus-bridge/dist/index.js");

var app = (0,_symfony_stimulus_bridge__WEBPACK_IMPORTED_MODULE_0__.startStimulusApp)(__webpack_require__("./assets/controllers sync recursive ./node_modules/@symfony/stimulus-bridge/lazy-controller-loader.js! \\.[jt]sx?$"));

/***/ }),

/***/ "./assets/js/components/Sidebar.js":
/*!*****************************************!*\
  !*** ./assets/js/components/Sidebar.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sidebar)
/* harmony export */ });
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var Sidebar = /*#__PURE__*/function () {
  function Sidebar() {
    var _this = this;
    _classCallCheck(this, Sidebar);
    this.app = document.querySelector('.l-app');
    if (this.app === null) return;
    document.querySelectorAll('*[trigger-sidebar]').forEach(function (el) {
      el.addEventListener('click', _this.toggleSidebar.bind(_this));
    });
    document.querySelectorAll('*[collapsable]').forEach(function (el) {
      var icon = document.createElement('i');
      icon.classList.add('icomoon-arrow-down', 'c-collapsable-trigger');
      el.appendChild(icon);
      icon.addEventListener('click', function (e) {
        var target = document.querySelector(el.getAttribute('collapsable'));
        if (target === null) return;
        e.preventDefault();
        el.classList.toggle('is-collapsed');
        target.classList.toggle('is-collapsed');
        _this.collapseSidebar(target);
      });
    });
  }
  _createClass(Sidebar, [{
    key: "toggleSidebar",
    value: function toggleSidebar(e) {
      e.preventDefault();
      this.app.classList.toggle('is-sidebar-closed');
    }
  }, {
    key: "collapseSidebar",
    value: function collapseSidebar(target) {
      var isCollapsed = target.classList.contains('is-collapsed');
      if (isCollapsed) {
        gsap__WEBPACK_IMPORTED_MODULE_0__["default"].to(target, {
          height: 0,
          duration: 0.3
        });
      } else {
        gsap__WEBPACK_IMPORTED_MODULE_0__["default"].set(target, {
          height: 'auto'
        });
        gsap__WEBPACK_IMPORTED_MODULE_0__["default"].from(target, {
          height: 0,
          duration: 0.3
        });
      }
    }
  }]);
  return Sidebar;
}();


/***/ }),

/***/ "./assets/js/components/Toast.js":
/*!***************************************!*\
  !*** ./assets/js/components/Toast.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Toast)
/* harmony export */ });
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
/* harmony import */ var _canopee_app_assets_js_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @canopee_app/assets/js/utils */ "./assets/js/utils/index.ts");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Toast = /*#__PURE__*/function () {
  function Toast() {
    var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'info';
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 600;
    _classCallCheck(this, Toast);
    this.body = document.querySelector('body');
    this.status = status;
    this.duration = duration;
    this.data = data;
    this.createToast();
  }
  _createClass(Toast, [{
    key: "createToastContainer",
    value: function createToastContainer() {
      var node = document.createElement("div");
      node.classList.add("c-toast-container");
      return this.body.appendChild(node);
    }
  }, {
    key: "createToast",
    value: function createToast() {
      var _this = this;
      var containerToast = this.body.querySelector('.c-toast-container');
      if (!containerToast) {
        containerToast = this.createToastContainer();
      }
      var template = document.getElementById("toast-template");
      var clone = template.content.cloneNode(true);
      clone.querySelector('.c-toast').classList.add("c-toast-".concat(this.status));
      // Replace all placeholders in the content
      clone.querySelector('.c-toast').innerHTML = clone.querySelector('.c-toast').innerHTML.replace(/%([^%]+)%/g, function (match, placeholder) {
        switch (placeholder) {
          case 'status':
            return _this.status;
          case 'ico':
            return (0,_canopee_app_assets_js_utils__WEBPACK_IMPORTED_MODULE_0__.getStatusIcon)(_this.status);
          // Replace with the actual value
          default:
            return _this.data[placeholder] || match;
          // Use the data or keep the placeholder
        }
      });
      containerToast.appendChild(clone);
      var toast = containerToast.querySelector('.c-toast:last-child');
      if (toast) {
        gsap__WEBPACK_IMPORTED_MODULE_1__["default"].fromTo(toast, {
          opacity: 0,
          y: -50
        }, {
          opacity: 1,
          y: 0
        });

        // remove toast after duration
        var timeout = this.timer(toast);

        // reset timeout on mouseover
        toast.addEventListener('mouseover', function () {
          clearTimeout(timeout);
        });

        // reset timeout on mouseout
        toast.addEventListener('mouseout', function () {
          _this.timer(toast);
        });

        // remove toast on click
        toast.addEventListener('click', function () {
          _this.removeToast(toast);
        });
      }
    }
  }, {
    key: "timer",
    value: function timer(toast) {
      var _this2 = this;
      return setTimeout(function () {
        _this2.removeToast(toast);
      }, this.duration);
    }
  }, {
    key: "removeToast",
    value: function removeToast(toast) {
      gsap__WEBPACK_IMPORTED_MODULE_1__["default"].to(toast, {
        opacity: 0,
        y: -50,
        onComplete: function onComplete() {
          return toast.remove();
        }
      });
    }
  }]);
  return Toast;
}();


/***/ }),

/***/ "./assets/react/components/Widget/List.jsx":
/*!*************************************************!*\
  !*** ./assets/react/components/Widget/List.jsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _canopee_app_assets_react_components_Widget_ListItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canopee_app/assets/react/components/Widget/ListItem */ "./assets/react/components/Widget/ListItem.jsx");
/* harmony import */ var _canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canopee_app/assets/react/provider/Widget/widgetCreateProvider */ "./assets/react/provider/Widget/widgetCreateProvider.jsx");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(_ref) {
  var loading = _ref.loading;
  var widgetContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_2__.WidgetContext);
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
      search: ''
    }),
    _useState2 = _slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var filterWidgets = function filterWidgets() {
    if (!state.search) {
      return widgetContext.widgets;
    }
    return widgetContext.widgets.filter(function (widget) {
      return widget.name.toLowerCase().includes(state.search.toLowerCase());
    });
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("header", {
    className: "c-modal__header"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", {
    className: "c-title c-title--h2"
  }, "Widgets"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "form-group"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    htmlFor: "search"
  }, "Rechercher"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "search",
    placeholder: "Rechercher",
    id: "search",
    value: state.search,
    onChange: function onChange(e) {
      return setState(_objectSpread(_objectSpread({}, state), {}, {
        search: e.target.value
      }));
    }
  }))), loading && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, "Loading..."), filterWidgets().map(function (widget) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_canopee_app_assets_react_components_Widget_ListItem__WEBPACK_IMPORTED_MODULE_1__["default"], {
      key: widget.id,
      widget: widget
    });
  }));
}

/***/ }),

/***/ "./assets/react/components/Widget/ListItem.jsx":
/*!*****************************************************!*\
  !*** ./assets/react/components/Widget/ListItem.jsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canopee_app/assets/react/provider/Widget/widgetCreateProvider */ "./assets/react/provider/Widget/widgetCreateProvider.jsx");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var ListItem = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (_ref) {
  var widget = _ref.widget;
  var widgetContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_1__.WidgetContext);
  var dispatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_1__.WidgetDispatchContext);
  var addWidget = function addWidget() {
    var _widgetContext$contro;
    (_widgetContext$contro = widgetContext.controller) === null || _widgetContext$contro === void 0 || _widgetContext$contro.action('add', {
      widget: widget.id
    }).then(function () {
      widget = _objectSpread(_objectSpread({}, widget), {}, {
        instanceId: widgetContext.controller.valueStore.props.lastInstanceAdded
      });
      dispatch({
        type: 'add',
        payload: widget
      });
    });
  };
  var removeWidget = function removeWidget() {
    var _widgetContext$contro2;
    (_widgetContext$contro2 = widgetContext.controller) === null || _widgetContext$contro2 === void 0 || _widgetContext$contro2.action('remove', {
      instance: widget.instanceId
    }).then(function () {
      widget = _objectSpread(_objectSpread({}, widget), {}, {
        instanceId: null
      });
      dispatch({
        type: 'remove',
        payload: widget
      });
    });
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-widget-instance ".concat(widget.instanceId ? 'added' : '')
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-widget-instance__ico",
    onClick: function onClick() {
      if (widget.instanceId) {
        removeWidget();
      } else {
        addWidget();
      }
    }
  }, widget.instanceId ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("i", {
    className: "icomoon-minus-circle"
  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("i", {
    className: "icomoon-plus-circle"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-widget-instance__thumb"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
    src: "/stream_document?file=/uploads/widget/" + widget.image,
    alt: widget.name
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-widget-instance__content"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", {
    className: "c-title c-title--h3"
  }, widget.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", {
    className: "c-text"
  }, widget.description)));
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ListItem);

/***/ }),

/***/ "./assets/react/controllers/Hello.jsx":
/*!********************************************!*\
  !*** ./assets/react/controllers/Hello.jsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, "Hello ", props.fullName);
}

/***/ }),

/***/ "./assets/react/controllers/Widget/Instance/Create.jsx":
/*!*************************************************************!*\
  !*** ./assets/react/controllers/Widget/Instance/Create.jsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _canopee_app_assets_react_components_Widget_List__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @canopee_app/assets/react/components/Widget/List */ "./assets/react/components/Widget/List.jsx");
/* harmony import */ var _canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @canopee_app/assets/react/provider/Widget/widgetCreateProvider */ "./assets/react/provider/Widget/widgetCreateProvider.jsx");
/* harmony import */ var _symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @symfony/ux-live-component */ "./node_modules/@symfony/ux-live-component/dist/live_controller.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(_ref) {
  var widgets = _ref.widgets,
    instances = _ref.instances,
    controller = _ref.controller;
  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
      loading: false,
      controller: null
    }),
    _useState2 = _slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var dialog = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  var widgetAlreadyAdded = function widgetAlreadyAdded(widget) {
    return instances.find(function (instance) {
      return instance.widget.id === widget.id;
    });
  };
  var initWidgets = widgets.map(function (widget) {
    var _widgetAlreadyAdded;
    return _objectSpread(_objectSpread({}, widget), {}, {
      instanceId: (_widgetAlreadyAdded = widgetAlreadyAdded(widget)) === null || _widgetAlreadyAdded === void 0 ? void 0 : _widgetAlreadyAdded.id
    });
  });
  var toggleIsOpen = function toggleIsOpen() {
    if (dialog.current.open) {
      dialog.current.close();
    } else {
      dialog.current.showModal();
    }
  };
  var fetchComponent = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var component;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0,_symfony_ux_live_component__WEBPACK_IMPORTED_MODULE_3__.getComponent)(document.querySelector("*[data-live-id=".concat(controller, "]")));
          case 2:
            component = _context.sent;
            setState(_objectSpread(_objectSpread({}, state), {}, {
              controller: component
            }));
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function fetchComponent() {
      return _ref2.apply(this, arguments);
    };
  }();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    dialog.current && dialog.current.addEventListener('click', function (evt) {
      if (evt.target === dialog.current) {
        toggleIsOpen();
      }
    });
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    fetchComponent()["catch"](function (err) {
      return console.error(err);
    });
  }, []);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_canopee_app_assets_react_provider_Widget_widgetCreateProvider__WEBPACK_IMPORTED_MODULE_2__.WidgetCreateProvider, {
    widgets: initWidgets,
    controller: state.controller
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", {
    className: "c-button c-button--primary c-button--style-default",
    onClick: toggleIsOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-button__ico"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("i", {
    className: "icomoon-create-dashboard"
  })), "Ajouter un widget"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("dialog", {
    className: "c-modal c-modal--widget",
    ref: dialog
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "c-modal__content"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_canopee_app_assets_react_components_Widget_List__WEBPACK_IMPORTED_MODULE_1__["default"], null))));
}

/***/ }),

/***/ "./assets/react/provider/Widget/widgetCreateProvider.jsx":
/*!***************************************************************!*\
  !*** ./assets/react/provider/Widget/widgetCreateProvider.jsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WidgetContext: () => (/* binding */ WidgetContext),
/* harmony export */   WidgetCreateProvider: () => (/* binding */ WidgetCreateProvider),
/* harmony export */   WidgetDispatchContext: () => (/* binding */ WidgetDispatchContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var WidgetContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  widgets: [],
  controller: null
});
var WidgetDispatchContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
var reducer = function reducer(state, action) {
  switch (action.type) {
    case 'add':
      return _objectSpread(_objectSpread({}, state), {}, {
        widgets: state.widgets.map(function (widget) {
          if (widget.id === action.payload.id) {
            return _objectSpread(_objectSpread({}, widget), {}, {
              instanceId: action.payload.instanceId
            });
          }
          return widget;
        })
      });
    case 'remove':
      // find widget in state by id and set alreadyAdded to false
      return _objectSpread(_objectSpread({}, state), {}, {
        widgets: state.widgets.map(function (widget) {
          if (widget.id === action.payload.id) {
            return _objectSpread(_objectSpread({}, widget), {}, {
              instanceId: null
            });
          }
          return widget;
        })
      });
    case 'setController':
      return _objectSpread(_objectSpread({}, state), {}, {
        controller: action.payload
      });
    default:
      return state;
  }
};
function WidgetCreateProvider(_ref) {
  var widgets = _ref.widgets,
    controller = _ref.controller,
    children = _ref.children;
  var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, {
      widgets: widgets,
      controller: controller
    }),
    _useReducer2 = _slicedToArray(_useReducer, 2),
    ws = _useReducer2[0],
    dispatch = _useReducer2[1];
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    if (controller) {
      dispatch({
        type: 'setController',
        payload: controller
      });
    }
  }, [controller]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(WidgetContext.Provider, {
    value: ws
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(WidgetDispatchContext.Provider, {
    value: dispatch
  }, children));
}

/***/ }),

/***/ "./assets/translator.js":
/*!******************************!*\
  !*** ./assets/translator.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ACCOUNT_HAS_EXPIRED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_HAS_EXPIRED),
/* harmony export */   ACCOUNT_IS_DISABLED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_IS_DISABLED),
/* harmony export */   ACCOUNT_IS_LOCKED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_IS_LOCKED),
/* harmony export */   ALERT_CONFIRM_BUTTON_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_BUTTON_TEXT),
/* harmony export */   ALERT_CONFIRM_DENY_BUTTON_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_DENY_BUTTON_TEXT),
/* harmony export */   ALERT_CONFIRM_INPUT_VALIDATOR_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_INPUT_VALIDATOR_TEXT),
/* harmony export */   ALERT_CONFIRM_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_TEXT),
/* harmony export */   ALERT_CONFIRM_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CONFIRM_TITLE),
/* harmony export */   ALERT_CUSTOMER_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CUSTOMER_DELETE),
/* harmony export */   ALERT_CUSTOMER_DELETE_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_CUSTOMER_DELETE_TEXT),
/* harmony export */   ALERT_USER_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_USER_DELETE),
/* harmony export */   ALERT_USER_DELETE_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_USER_DELETE_TEXT),
/* harmony export */   ALERT_WIDGET_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_WIDGET_DELETE),
/* harmony export */   ALERT_WIDGET_DELETE_TEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALERT_WIDGET_DELETE_TEXT),
/* harmony export */   ALREADY_LOGGED_IN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ALREADY_LOGGED_IN),
/* harmony export */   AN_AUTHENTICATION_EXCEPTION_OCCURRED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.AN_AUTHENTICATION_EXCEPTION_OCCURRED),
/* harmony export */   AN_EMPTY_FILE_IS_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.AN_EMPTY_FILE_IS_NOT_ALLOWED),
/* harmony export */   APP: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.APP),
/* harmony export */   AUTHENTICATION_CREDENTIALS_COULD_NOT_BE_FOUND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.AUTHENTICATION_CREDENTIALS_COULD_NOT_BE_FOUND),
/* harmony export */   AUTHENTICATION_FORGOT_PASSWORD_EMPTY_EMAIL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.AUTHENTICATION_FORGOT_PASSWORD_EMPTY_EMAIL),
/* harmony export */   AUTHENTICATION_REQUEST_COULD_NOT_BE_PROCESSED_DUE_TO_A_SYSTEM_PROBLEM: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.AUTHENTICATION_REQUEST_COULD_NOT_BE_PROCESSED_DUE_TO_A_SYSTEM_PROBLEM),
/* harmony export */   A_PHP_EXTENSION_CAUSED_THE_UPLOAD_TO_FAIL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.A_PHP_EXTENSION_CAUSED_THE_UPLOAD_TO_FAIL),
/* harmony export */   BACK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.BACK),
/* harmony export */   BROWSE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.BROWSE),
/* harmony export */   CANCEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CANCEL),
/* harmony export */   CANNOT_WRITE_TEMPORARY_FILE_TO_DISK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CANNOT_WRITE_TEMPORARY_FILE_TO_DISK),
/* harmony export */   CHECK_EMAIL_ACCOUNT_EXISTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_ACCOUNT_EXISTS),
/* harmony export */   CHECK_EMAIL_DIDNT_RECEIVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_DIDNT_RECEIVE),
/* harmony export */   CHECK_EMAIL_LINK_EXPIRES_IN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_LINK_EXPIRES_IN),
/* harmony export */   CHECK_EMAIL_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_PAGE_TITLE),
/* harmony export */   CHECK_EMAIL_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_SUBTITLE),
/* harmony export */   CHECK_EMAIL_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CHECK_EMAIL_TITLE),
/* harmony export */   COMMON_ADD_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_ADD_BUTTON),
/* harmony export */   COMMON_ADD_BUTTON_SUBORGANIZATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_ADD_BUTTON_SUBORGANIZATION),
/* harmony export */   COMMON_BACK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_BACK),
/* harmony export */   COMMON_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_COLOR),
/* harmony export */   COMMON_DESCRIPTION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_DESCRIPTION),
/* harmony export */   COMMON_EDIT_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_EDIT_BUTTON),
/* harmony export */   COMMON_ICON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_ICON),
/* harmony export */   COMMON_IMAGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_IMAGE),
/* harmony export */   COMMON_LINK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_LINK),
/* harmony export */   COMMON_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_NAME),
/* harmony export */   COMMON_NOT_BLANK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_NOT_BLANK),
/* harmony export */   COMMON_SEARCH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_SEARCH),
/* harmony export */   COMMON_SEARCH_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_SEARCH_PLACEHOLDER),
/* harmony export */   COMMON_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMMON_TITLE),
/* harmony export */   COMPLETE_PROFILE_FLASH_ERROR_ALREADY_ASKED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FLASH_ERROR_ALREADY_ASKED),
/* harmony export */   COMPLETE_PROFILE_FLASH_SUCCESS_DATA_UPDATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FLASH_SUCCESS_DATA_UPDATED),
/* harmony export */   COMPLETE_PROFILE_FORM_ADDRESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FORM_ADDRESS),
/* harmony export */   COMPLETE_PROFILE_FORM_CONTACT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FORM_CONTACT),
/* harmony export */   COMPLETE_PROFILE_FORM_GENERAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FORM_GENERAL),
/* harmony export */   COMPLETE_PROFILE_FORM_SUBMIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_FORM_SUBMIT_LABEL),
/* harmony export */   COMPLETE_PROFILE_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_PAGE_TITLE),
/* harmony export */   COMPLETE_PROFILE_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_SUBTITLE),
/* harmony export */   COMPLETE_PROFILE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COMPLETE_PROFILE_TITLE),
/* harmony export */   CONFIRM_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FORM_PASSWORD_LABEL),
/* harmony export */   CONFIRM_PASSWORD_FORM_PASSWORD_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   CONFIRM_PASSWORD_FORM_SUBMIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   CONFIRM_PASSWORD_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_PAGE_TITLE),
/* harmony export */   CONFIRM_PASSWORD_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_SUBTITLE),
/* harmony export */   CONFIRM_PASSWORD_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CONFIRM_PASSWORD_TITLE),
/* harmony export */   COOKIE_HAS_ALREADY_BEEN_USED_BY_SOMEONE_ELSE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COOKIE_HAS_ALREADY_BEEN_USED_BY_SOMEONE_ELSE),
/* harmony export */   COUNT_DAY_COUNT_DAYS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COUNT_DAY_COUNT_DAYS),
/* harmony export */   COUNT_HOUR_COUNT_HOURS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COUNT_HOUR_COUNT_HOURS),
/* harmony export */   COUNT_MINUTE_COUNT_MINUTES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COUNT_MINUTE_COUNT_MINUTES),
/* harmony export */   COUNT_MONTH_COUNT_MONTHS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COUNT_MONTH_COUNT_MONTHS),
/* harmony export */   COUNT_YEAR_COUNT_YEARS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.COUNT_YEAR_COUNT_YEARS),
/* harmony export */   CREDENTIALS_HAVE_EXPIRED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CREDENTIALS_HAVE_EXPIRED),
/* harmony export */   CUSTOMER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER),
/* harmony export */   CUSTOMER_COMMON_ADMINISTRATOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_ADMINISTRATOR),
/* harmony export */   CUSTOMER_COMMON_BACK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_BACK),
/* harmony export */   CUSTOMER_COMMON_CUSTOMIZATIONS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_CUSTOMIZATIONS),
/* harmony export */   CUSTOMER_COMMON_EMAIL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_EMAIL),
/* harmony export */   CUSTOMER_COMMON_EXTERNAL_LINKS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_EXTERNAL_LINKS),
/* harmony export */   CUSTOMER_COMMON_FAMILY_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_FAMILY_NAME),
/* harmony export */   CUSTOMER_COMMON_FULL_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_FULL_NAME),
/* harmony export */   CUSTOMER_COMMON_GIVEN_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_GIVEN_NAME),
/* harmony export */   CUSTOMER_COMMON_SAVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_SAVE),
/* harmony export */   CUSTOMER_COMMON_SUB_ORGANIZATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_SUB_ORGANIZATION),
/* harmony export */   CUSTOMER_COMMON_URL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_URL),
/* harmony export */   CUSTOMER_COMMON_USERS_LIST: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_COMMON_USERS_LIST),
/* harmony export */   CUSTOMER_DELETE_ERROR_FLASH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_DELETE_ERROR_FLASH),
/* harmony export */   CUSTOMER_DELETE_SUCCESS_FLASH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_DELETE_SUCCESS_FLASH),
/* harmony export */   CUSTOMER_EDIT_ADD_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_ADD_BUTTON),
/* harmony export */   CUSTOMER_EDIT_BACK_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_BACK_BUTTON),
/* harmony export */   CUSTOMER_EDIT_DELETE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_DELETE_BUTTON),
/* harmony export */   CUSTOMER_EDIT_EDIT_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_EDIT_BUTTON),
/* harmony export */   CUSTOMER_EDIT_SAVE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_SAVE_BUTTON),
/* harmony export */   CUSTOMER_EDIT_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_SUCCESS),
/* harmony export */   CUSTOMER_EDIT_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_EDIT_TITLE),
/* harmony export */   CUSTOMER_NEW_SUCCESS_FLASH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_NEW_SUCCESS_FLASH),
/* harmony export */   CUSTOMER_NEW_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_NEW_TITLE),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_FAMILY_NAME_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_SHOW_ADMINISTRATOR_FAMILY_NAME_LABEL),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_GIVEN_NAME_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_SHOW_ADMINISTRATOR_GIVEN_NAME_LABEL),
/* harmony export */   CUSTOMER_SHOW_ADMINISTRATOR_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_SHOW_ADMINISTRATOR_LABEL),
/* harmony export */   CUSTOMER_SHOW_MODULES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_SHOW_MODULES),
/* harmony export */   CUSTOMER_SHOW_ROLES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.CUSTOMER_SHOW_ROLES),
/* harmony export */   DASHBOARD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.DASHBOARD),
/* harmony export */   DEFAULT_ROLES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ROLES),
/* harmony export */   DELETE_ALREADY_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.DELETE_ALREADY_DELETE),
/* harmony export */   DELETE_NOT_IMPLEMENTED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.DELETE_NOT_IMPLEMENTED),
/* harmony export */   EACH_ELEMENT_OF_THIS_COLLECTION_SHOULD_SATISFY_ITS_OWN_SET_OF_CONSTRAINTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EACH_ELEMENT_OF_THIS_COLLECTION_SHOULD_SATISFY_ITS_OWN_SET_OF_CONSTRAINTS),
/* harmony export */   EDIT_FLASH_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EDIT_FLASH_SUCCESS),
/* harmony export */   EDIT_HEADER_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EDIT_HEADER_TITLE),
/* harmony export */   EDIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EDIT_LABEL),
/* harmony export */   ERROR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ERROR),
/* harmony export */   ERROR_1: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ERROR_1),
/* harmony export */   EXPORT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXPORT),
/* harmony export */   EXTERNAL_LINK_COMMON_DELETE_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_COMMON_DELETE_SUCCESS),
/* harmony export */   EXTERNAL_LINK_COMMON_EDIT_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_COMMON_EDIT_SUCCESS),
/* harmony export */   EXTERNAL_LINK_COMMON_ERROR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_COMMON_ERROR),
/* harmony export */   EXTERNAL_LINK_COMMON_NEW_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_COMMON_NEW_SUCCESS),
/* harmony export */   EXTERNAL_LINK_CRUD_ADD_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_ADD_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_DEFAULT_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_DEFAULT_NAME),
/* harmony export */   EXTERNAL_LINK_CRUD_DELETE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_DELETE_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_ICON_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_ICON_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_ICON_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_ICON_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_CRUD_NAME_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_NAME_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_NAME_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_NAME_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_CRUD_SAVE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_SAVE_BUTTON),
/* harmony export */   EXTERNAL_LINK_CRUD_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_TITLE),
/* harmony export */   EXTERNAL_LINK_CRUD_URL_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_URL_LABEL),
/* harmony export */   EXTERNAL_LINK_CRUD_URL_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_CRUD_URL_PLACEHOLDER),
/* harmony export */   EXTERNAL_LINK_URL_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.EXTERNAL_LINK_URL_INVALID),
/* harmony export */   FILE_LOG_CONTENT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_CONTENT),
/* harmony export */   FILE_LOG_CREATED_AT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_CREATED_AT),
/* harmony export */   FILE_LOG_CUSTOMER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_CUSTOMER),
/* harmony export */   FILE_LOG_ID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_ID),
/* harmony export */   FILE_LOG_SENDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_SENDER),
/* harmony export */   FILE_LOG_SITE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_SITE),
/* harmony export */   FILE_LOG_TYPE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILE_LOG_TYPE),
/* harmony export */   FILTER_SEARCHWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FILTER_SEARCHWORD),
/* harmony export */   FLASH_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FLASH_DELETE),
/* harmony export */   FLASH_ERROR_COMMON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FLASH_ERROR_COMMON),
/* harmony export */   FORGOT_PASSWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD),
/* harmony export */   FORGOT_PASSWORD_FLASH_ERROR_ALREADY_ASKED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_FLASH_ERROR_ALREADY_ASKED),
/* harmony export */   FORGOT_PASSWORD_FORM_EMAIL_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_FORM_EMAIL_LABEL),
/* harmony export */   FORGOT_PASSWORD_FORM_EMAIL_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_FORM_EMAIL_PLACEHOLDER),
/* harmony export */   FORGOT_PASSWORD_FORM_SUBMIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   FORGOT_PASSWORD_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_PAGE_TITLE),
/* harmony export */   FORGOT_PASSWORD_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_SUBTITLE),
/* harmony export */   FORGOT_PASSWORD_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORGOT_PASSWORD_TITLE),
/* harmony export */   FORM_CREATED_AT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_CREATED_AT),
/* harmony export */   FORM_EMAIL_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_EMAIL_LABEL),
/* harmony export */   FORM_EMAIL_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_EMAIL_PLACEHOLDER),
/* harmony export */   FORM_GENERAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_GENERAL),
/* harmony export */   FORM_GRAPHIC_CHARTER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_GRAPHIC_CHARTER),
/* harmony export */   FORM_MODULES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_MODULES),
/* harmony export */   FORM_MODULES_ROLES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_MODULES_ROLES),
/* harmony export */   FORM_PASSWORD_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_PASSWORD_LABEL),
/* harmony export */   FORM_PASSWORD_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   FORM_SEARCH_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_SEARCH_LABEL),
/* harmony export */   FORM_SEARCH_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_SEARCH_PLACEHOLDER),
/* harmony export */   FORM_SUBMIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_SUBMIT_LABEL),
/* harmony export */   FORM_SUB_ORGANIZATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_SUB_ORGANIZATION),
/* harmony export */   FORM_UPDATED_AT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.FORM_UPDATED_AT),
/* harmony export */   GENERAL_ADMINISTRATOR_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_ADMINISTRATOR_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_EMAIL_ADMINISTRATOR_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_EMAIL_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_EMAIL_ADMINISTRATOR_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_EMAIL_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_FAMILY_NAME_ADMINISTRATOR_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_FAMILY_NAME_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_FAMILY_NAME_ADMINISTRATOR_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_FAMILY_NAME_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_GIVEN_NAME_ADMINISTRATOR_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_GIVEN_NAME_ADMINISTRATOR_LABEL),
/* harmony export */   GENERAL_GIVEN_NAME_ADMINISTRATOR_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_GIVEN_NAME_ADMINISTRATOR_PLACEHOLDER),
/* harmony export */   GENERAL_LEGALNAME_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_LEGALNAME_LABEL),
/* harmony export */   GENERAL_LEGALNAME_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GENERAL_LEGALNAME_PLACEHOLDER),
/* harmony export */   GRAPHIC_CHARTER_COMPLEMENTARY_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GRAPHIC_CHARTER_COMPLEMENTARY_COLOR),
/* harmony export */   GRAPHIC_CHARTER_LOGO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GRAPHIC_CHARTER_LOGO),
/* harmony export */   GRAPHIC_CHARTER_MINIFIED_LOGO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GRAPHIC_CHARTER_MINIFIED_LOGO),
/* harmony export */   GRAPHIC_CHARTER_PRIMARY_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GRAPHIC_CHARTER_PRIMARY_COLOR),
/* harmony export */   GRAPHIC_CHARTER_SECONDARY_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GRAPHIC_CHARTER_SECONDARY_COLOR),
/* harmony export */   GUARD_CURRENT_USER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.GUARD_CURRENT_USER),
/* harmony export */   INDEX_EMPTY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INDEX_EMPTY),
/* harmony export */   INDEX_HEADER_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INDEX_HEADER_TITLE),
/* harmony export */   INVALID_CARD_NUMBER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INVALID_CARD_NUMBER),
/* harmony export */   INVALID_CREDENTIALS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INVALID_CREDENTIALS),
/* harmony export */   INVALID_CSRF_TOKEN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INVALID_CSRF_TOKEN),
/* harmony export */   INVALID_OR_EXPIRED_LOGIN_LINK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.INVALID_OR_EXPIRED_LOGIN_LINK),
/* harmony export */   LABEL_NEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LABEL_NEXT),
/* harmony export */   LABEL_PREVIOUS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LABEL_PREVIOUS),
/* harmony export */   LEGAL_PAGE_FLASH_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGAL_PAGE_FLASH_SUCCESS),
/* harmony export */   LEGAL_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGAL_PAGE_TITLE),
/* harmony export */   LEGISLATION_EDIT_CONTENT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGISLATION_EDIT_CONTENT_LABEL),
/* harmony export */   LEGISLATION_EDIT_CONTENT_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGISLATION_EDIT_CONTENT_PLACEHOLDER),
/* harmony export */   LEGISLATION_EDIT_TITLE_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGISLATION_EDIT_TITLE_LABEL),
/* harmony export */   LEGISLATION_EDIT_TITLE_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LEGISLATION_EDIT_TITLE_PLACEHOLDER),
/* harmony export */   LIST_EMPTY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LIST_EMPTY),
/* harmony export */   LOGIN_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOGIN_SUBTITLE),
/* harmony export */   LOGIN_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOGIN_TITLE),
/* harmony export */   LOGOUT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOGOUT),
/* harmony export */   LOG_AUTHENTICATION_COMPLETE_PROFILE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_COMPLETE_PROFILE),
/* harmony export */   LOG_AUTHENTICATION_FIRST_LOGIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_FIRST_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_LOGIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_LOGOUT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_LOGOUT),
/* harmony export */   LOG_AUTHENTICATION_MODULE_LOGIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_MODULE_LOGIN),
/* harmony export */   LOG_AUTHENTICATION_RESET_PASSWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_RESET_PASSWORD),
/* harmony export */   LOG_AUTHENTICATION_RESET_PASSWORD_REQUEST: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_AUTHENTICATION_RESET_PASSWORD_REQUEST),
/* harmony export */   LOG_COMMON_ATTACHEMENT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_ATTACHEMENT),
/* harmony export */   LOG_COMMON_CONTENT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_CONTENT),
/* harmony export */   LOG_COMMON_CREATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_CREATED),
/* harmony export */   LOG_COMMON_CUSTOMER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_CUSTOMER),
/* harmony export */   LOG_COMMON_SENDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_SENDER),
/* harmony export */   LOG_COMMON_SITE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_SITE),
/* harmony export */   LOG_COMMON_SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_SUBTITLE),
/* harmony export */   LOG_COMMON_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_TITLE),
/* harmony export */   LOG_COMMON_TYPE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_COMMON_TYPE),
/* harmony export */   LOG_CUSTOMER_ADD_MODULE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_ADD_MODULE),
/* harmony export */   LOG_CUSTOMER_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_DELETE),
/* harmony export */   LOG_CUSTOMER_EDIT_GENERAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_EDIT_GENERAL),
/* harmony export */   LOG_CUSTOMER_EDIT_GRAPHIC_CHARTER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_EDIT_GRAPHIC_CHARTER),
/* harmony export */   LOG_CUSTOMER_NEW: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_NEW),
/* harmony export */   LOG_CUSTOMER_NEW_CHILD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_NEW_CHILD),
/* harmony export */   LOG_CUSTOMER_REMOVE_MODULE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_CUSTOMER_REMOVE_MODULE),
/* harmony export */   LOG_EMAIL_SEND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_EMAIL_SEND),
/* harmony export */   LOG_ERROR_MODULE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_ERROR_MODULE),
/* harmony export */   LOG_ERROR_TOKEN_TRADUCTION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_ERROR_TOKEN_TRADUCTION),
/* harmony export */   LOG_EXTERNAL_LINK_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_EXTERNAL_LINK_DELETE),
/* harmony export */   LOG_EXTERNAL_LINK_EDIT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_EXTERNAL_LINK_EDIT),
/* harmony export */   LOG_EXTERNAL_LINK_NEW: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_EXTERNAL_LINK_NEW),
/* harmony export */   LOG_ROLE_ADD_FOR_ALL_USERS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_ROLE_ADD_FOR_ALL_USERS),
/* harmony export */   LOG_ROLE_ADD_FOR_USER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_ROLE_ADD_FOR_USER),
/* harmony export */   LOG_ROLE_REMOVE_FOR_USER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_ROLE_REMOVE_FOR_USER),
/* harmony export */   LOG_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_TITLE),
/* harmony export */   LOG_USER_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_USER_DELETE),
/* harmony export */   LOG_USER_EDIT_COMPLEMENTARY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_USER_EDIT_COMPLEMENTARY),
/* harmony export */   LOG_USER_EDIT_GENERAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_USER_EDIT_GENERAL),
/* harmony export */   LOG_USER_NEW: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_USER_NEW),
/* harmony export */   LOG_WIDGET_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_WIDGET_DELETE),
/* harmony export */   LOG_WIDGET_EDIT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_WIDGET_EDIT),
/* harmony export */   LOG_WIDGET_NEW: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.LOG_WIDGET_NEW),
/* harmony export */   MIXING_NUMBERS_FROM_DIFFERENT_SCRIPTS_IS_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.MIXING_NUMBERS_FROM_DIFFERENT_SCRIPTS_IS_NOT_ALLOWED),
/* harmony export */   MODULE_LOGIN_FLASH_ERROR_GET_LINK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.MODULE_LOGIN_FLASH_ERROR_GET_LINK),
/* harmony export */   MODULE_SLUG_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.MODULE_SLUG_INVALID),
/* harmony export */   MODULE_URL_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.MODULE_URL_INVALID),
/* harmony export */   NEW_FLASH_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NEW_FLASH_SUCCESS),
/* harmony export */   NEW_HEADER_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NEW_HEADER_TITLE),
/* harmony export */   NEXT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NEXT),
/* harmony export */   NOT_GRANTED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NOT_GRANTED),
/* harmony export */   NOT_PRIVILEGED_TO_REQUEST_THE_RESOURCE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NOT_PRIVILEGED_TO_REQUEST_THE_RESOURCE),
/* harmony export */   NO_AUTHENTICATION_PROVIDER_FOUND_TO_SUPPORT_THE_AUTHENTICATION_TOKEN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_AUTHENTICATION_PROVIDER_FOUND_TO_SUPPORT_THE_AUTHENTICATION_TOKEN),
/* harmony export */   NO_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED),
/* harmony export */   NO_ELEMENTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_ELEMENTS),
/* harmony export */   NO_FILE_WAS_UPLOADED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_FILE_WAS_UPLOADED),
/* harmony export */   NO_MORE_RESULTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_MORE_RESULTS),
/* harmony export */   NO_RESULTS_FOUND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_RESULTS_FOUND),
/* harmony export */   NO_SESSION_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_SESSION_AVAILABLE_IT_EITHER_TIMED_OUT_OR_COOKIES_ARE_NOT_ENABLED),
/* harmony export */   NO_TEMPORARY_FOLDER_WAS_CONFIGURED_IN_PHP_INI: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_TEMPORARY_FOLDER_WAS_CONFIGURED_IN_PHP_INI),
/* harmony export */   NO_TOKEN_COULD_BE_FOUND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.NO_TOKEN_COULD_BE_FOUND),
/* harmony export */   ONE_OR_MORE_OF_THE_GIVEN_VALUES_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ONE_OR_MORE_OF_THE_GIVEN_VALUES_IS_INVALID),
/* harmony export */   PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PAGE_TITLE),
/* harmony export */   PLEASE_CHOOSE_A_VALID_DATE_INTERVAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_CHOOSE_A_VALID_DATE_INTERVAL),
/* harmony export */   PLEASE_ENTER_AN_INTEGER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_AN_INTEGER),
/* harmony export */   PLEASE_ENTER_A_NUMBER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_NUMBER),
/* harmony export */   PLEASE_ENTER_A_PERCENTAGE_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_PERCENTAGE_VALUE),
/* harmony export */   PLEASE_ENTER_A_VALID_BIRTHDATE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_BIRTHDATE),
/* harmony export */   PLEASE_ENTER_A_VALID_DATE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_DATE),
/* harmony export */   PLEASE_ENTER_A_VALID_DATE_AND_TIME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_DATE_AND_TIME),
/* harmony export */   PLEASE_ENTER_A_VALID_EMAIL_ADDRESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_EMAIL_ADDRESS),
/* harmony export */   PLEASE_ENTER_A_VALID_MONEY_AMOUNT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_MONEY_AMOUNT),
/* harmony export */   PLEASE_ENTER_A_VALID_SEARCH_TERM: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_SEARCH_TERM),
/* harmony export */   PLEASE_ENTER_A_VALID_TIME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_TIME),
/* harmony export */   PLEASE_ENTER_A_VALID_URL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_URL),
/* harmony export */   PLEASE_ENTER_A_VALID_WEEK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_ENTER_A_VALID_WEEK),
/* harmony export */   PLEASE_PROVIDE_A_VALID_PHONE_NUMBER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_PROVIDE_A_VALID_PHONE_NUMBER),
/* harmony export */   PLEASE_SELECT_A_VALID_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_COLOR),
/* harmony export */   PLEASE_SELECT_A_VALID_COUNTRY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_COUNTRY),
/* harmony export */   PLEASE_SELECT_A_VALID_CURRENCY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_CURRENCY),
/* harmony export */   PLEASE_SELECT_A_VALID_FILE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_FILE),
/* harmony export */   PLEASE_SELECT_A_VALID_LANGUAGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_LANGUAGE),
/* harmony export */   PLEASE_SELECT_A_VALID_LOCALE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_LOCALE),
/* harmony export */   PLEASE_SELECT_A_VALID_OPTION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_OPTION),
/* harmony export */   PLEASE_SELECT_A_VALID_RANGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_RANGE),
/* harmony export */   PLEASE_SELECT_A_VALID_TIMEZONE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_SELECT_A_VALID_TIMEZONE),
/* harmony export */   PLEASE_UPDATE_THE_REQUEST_PASSWORD_REPOSITORY_CONFIGURATION_IN_CONFIG_PACKAGES_RESET_PASSWORD_YAML_TO_POINT_TO_YOUR_REQUEST_PASSWORD_REPOSITORY_SERVICE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PLEASE_UPDATE_THE_REQUEST_PASSWORD_REPOSITORY_CONFIGURATION_IN_CONFIG_PACKAGES_RESET_PASSWORD_YAML_TO_POINT_TO_YOUR_REQUEST_PASSWORD_REPOSITORY_SERVICE),
/* harmony export */   PREFIX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PREFIX),
/* harmony export */   PREVIOUS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.PREVIOUS),
/* harmony export */   RESET_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FLASH_SUCCESS_PASSWORD_UPDATED),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_LABEL),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FORM_PASSWORD_CONFIRMATION_PLACEHOLDER),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FORM_PASSWORD_LABEL),
/* harmony export */   RESET_PASSWORD_FORM_PASSWORD_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FORM_PASSWORD_PLACEHOLDER),
/* harmony export */   RESET_PASSWORD_FORM_SUBMIT_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_FORM_SUBMIT_LABEL),
/* harmony export */   RESET_PASSWORD_PAGE_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_PAGE_TITLE),
/* harmony export */   RESET_PASSWORD_SUBJECT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_SUBJECT),
/* harmony export */   RESET_PASSWORD_SUBTITLE_FIRST_LOGIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_SUBTITLE_FIRST_LOGIN),
/* harmony export */   RESET_PASSWORD_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.RESET_PASSWORD_TITLE),
/* harmony export */   ROLE_EDIT_ADD_ALL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ROLE_EDIT_ADD_ALL),
/* harmony export */   ROLE_EDIT_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ROLE_EDIT_NAME),
/* harmony export */   ROLE_EDIT_REMOVE_ALL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ROLE_EDIT_REMOVE_ALL),
/* harmony export */   ROLE_EDIT_ROLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ROLE_EDIT_ROLE),
/* harmony export */   ROLE_INDEX_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.ROLE_INDEX_TITLE),
/* harmony export */   SAVE_LABEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.SAVE_LABEL),
/* harmony export */   SEARCH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.SEARCH),
/* harmony export */   SELECT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.SELECT),
/* harmony export */   SUBTITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.SUBTITLE),
/* harmony export */   SUB_ORGANIZATION_HAS_SUB_ORGANIZATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.SUB_ORGANIZATION_HAS_SUB_ORGANIZATION),
/* harmony export */   THERE_WAS_A_PROBLEM_HANDLING_YOUR_PASSWORD_RESET_REQUEST: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THERE_WAS_A_PROBLEM_HANDLING_YOUR_PASSWORD_RESET_REQUEST),
/* harmony export */   THERE_WAS_A_PROBLEM_VALIDATING_YOUR_PASSWORD_RESET_REQUEST: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THERE_WAS_A_PROBLEM_VALIDATING_YOUR_PASSWORD_RESET_REQUEST),
/* harmony export */   THE_CHECKBOX_HAS_AN_INVALID_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_CHECKBOX_HAS_AN_INVALID_VALUE),
/* harmony export */   THE_COLLECTION_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_COLLECTION_IS_INVALID),
/* harmony export */   THE_CSRF_TOKEN_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_CSRF_TOKEN_IS_INVALID),
/* harmony export */   THE_CSRF_TOKEN_IS_INVALID_PLEASE_TRY_TO_RESUBMIT_THE_FORM: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_CSRF_TOKEN_IS_INVALID_PLEASE_TRY_TO_RESUBMIT_THE_FORM),
/* harmony export */   THE_FIELDS_FIELDS_ARE_MISSING: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FIELDS_FIELDS_ARE_MISSING),
/* harmony export */   THE_FIELDS_FIELDS_WERE_NOT_EXPECTED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FIELDS_FIELDS_WERE_NOT_EXPECTED),
/* harmony export */   THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTER_OR_LESS_THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTERS_OR_LESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTER_OR_LESS_THE_FILENAME_IS_TOO_LONG_IT_SHOULD_HAVE_FILENAME_MAX_LENGTH_CHARACTERS_OR_LESS),
/* harmony export */   THE_FILE_COULD_NOT_BE_FOUND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_COULD_NOT_BE_FOUND),
/* harmony export */   THE_FILE_COULD_NOT_BE_UPLOADED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_COULD_NOT_BE_UPLOADED),
/* harmony export */   THE_FILE_IS_NOT_READABLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_IS_NOT_READABLE),
/* harmony export */   THE_FILE_IS_TOO_LARGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_IS_TOO_LARGE),
/* harmony export */   THE_FILE_IS_TOO_LARGE_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_IS_TOO_LARGE_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX),
/* harmony export */   THE_FILE_IS_TOO_LARGE_SIZE_SUFFIX_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_IS_TOO_LARGE_SIZE_SUFFIX_ALLOWED_MAXIMUM_SIZE_IS_LIMIT_SUFFIX),
/* harmony export */   THE_FILE_WAS_ONLY_PARTIALLY_UPLOADED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_FILE_WAS_ONLY_PARTIALLY_UPLOADED),
/* harmony export */   THE_HIDDEN_FIELD_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_HIDDEN_FIELD_IS_INVALID),
/* harmony export */   THE_HOST_COULD_NOT_BE_RESOLVED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_HOST_COULD_NOT_BE_RESOLVED),
/* harmony export */   THE_IMAGE_HEIGHT_IS_TOO_BIG_HEIGHT_PX_ALLOWED_MAXIMUM_HEIGHT_IS_MAX_HEIGHT_PX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_HEIGHT_IS_TOO_BIG_HEIGHT_PX_ALLOWED_MAXIMUM_HEIGHT_IS_MAX_HEIGHT_PX),
/* harmony export */   THE_IMAGE_HEIGHT_IS_TOO_SMALL_HEIGHT_PX_MINIMUM_HEIGHT_EXPECTED_IS_MIN_HEIGHT_PX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_HEIGHT_IS_TOO_SMALL_HEIGHT_PX_MINIMUM_HEIGHT_EXPECTED_IS_MIN_HEIGHT_PX),
/* harmony export */   THE_IMAGE_IS_LANDSCAPE_ORIENTED_WIDTH_X_HEIGHT_PX_LANDSCAPE_ORIENTED_IMAGES_ARE_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_IS_LANDSCAPE_ORIENTED_WIDTH_X_HEIGHT_PX_LANDSCAPE_ORIENTED_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_IS_PORTRAIT_ORIENTED_WIDTH_X_HEIGHT_PX_PORTRAIT_ORIENTED_IMAGES_ARE_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_IS_PORTRAIT_ORIENTED_WIDTH_X_HEIGHT_PX_PORTRAIT_ORIENTED_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_IS_SQUARE_WIDTH_X_HEIGHT_PX_SQUARE_IMAGES_ARE_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_IS_SQUARE_WIDTH_X_HEIGHT_PX_SQUARE_IMAGES_ARE_NOT_ALLOWED),
/* harmony export */   THE_IMAGE_RATIO_IS_TOO_BIG_RATIO_ALLOWED_MAXIMUM_RATIO_IS_MAX_RATIO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_RATIO_IS_TOO_BIG_RATIO_ALLOWED_MAXIMUM_RATIO_IS_MAX_RATIO),
/* harmony export */   THE_IMAGE_RATIO_IS_TOO_SMALL_RATIO_MINIMUM_RATIO_EXPECTED_IS_MIN_RATIO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_RATIO_IS_TOO_SMALL_RATIO_MINIMUM_RATIO_EXPECTED_IS_MIN_RATIO),
/* harmony export */   THE_IMAGE_WIDTH_IS_TOO_BIG_WIDTH_PX_ALLOWED_MAXIMUM_WIDTH_IS_MAX_WIDTH_PX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_WIDTH_IS_TOO_BIG_WIDTH_PX_ALLOWED_MAXIMUM_WIDTH_IS_MAX_WIDTH_PX),
/* harmony export */   THE_IMAGE_WIDTH_IS_TOO_SMALL_WIDTH_PX_MINIMUM_WIDTH_EXPECTED_IS_MIN_WIDTH_PX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_IMAGE_WIDTH_IS_TOO_SMALL_WIDTH_PX_MINIMUM_WIDTH_EXPECTED_IS_MIN_WIDTH_PX),
/* harmony export */   THE_LINK_IN_YOUR_EMAIL_IS_EXPIRED_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_LINK_IN_YOUR_EMAIL_IS_EXPIRED_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN),
/* harmony export */   THE_MIME_TYPE_OF_THE_FILE_IS_INVALID_TYPE_ALLOWED_MIME_TYPES_ARE_TYPES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_MIME_TYPE_OF_THE_FILE_IS_INVALID_TYPE_ALLOWED_MIME_TYPES_ARE_TYPES),
/* harmony export */   THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE),
/* harmony export */   THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE_1: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_NUMBER_OF_ELEMENTS_IN_THIS_COLLECTION_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE_1),
/* harmony export */   THE_PASSWORD_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_PASSWORD_IS_INVALID),
/* harmony export */   THE_PASSWORD_STRENGTH_IS_TOO_LOW_PLEASE_USE_A_STRONGER_PASSWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_PASSWORD_STRENGTH_IS_TOO_LOW_PLEASE_USE_A_STRONGER_PASSWORD),
/* harmony export */   THE_RESET_PASSWORD_LINK_IS_INVALID_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_RESET_PASSWORD_LINK_IS_INVALID_PLEASE_TRY_TO_RESET_YOUR_PASSWORD_AGAIN),
/* harmony export */   THE_SELECTED_CHOICE_IS_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_SELECTED_CHOICE_IS_INVALID),
/* harmony export */   THE_SIZE_OF_THE_IMAGE_COULD_NOT_BE_DETECTED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_SIZE_OF_THE_IMAGE_COULD_NOT_BE_DETECTED),
/* harmony export */   THE_TWO_VALUES_SHOULD_BE_EQUAL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_TWO_VALUES_SHOULD_BE_EQUAL),
/* harmony export */   THE_UPLOADED_FILE_WAS_TOO_LARGE_PLEASE_TRY_TO_UPLOAD_A_SMALLER_FILE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_UPLOADED_FILE_WAS_TOO_LARGE_PLEASE_TRY_TO_UPLOAD_A_SMALLER_FILE),
/* harmony export */   THE_VALUES_DO_NOT_MATCH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_VALUES_DO_NOT_MATCH),
/* harmony export */   THE_VALUE_OF_THE_NETMASK_SHOULD_BE_BETWEEN_MIN_AND_MAX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_VALUE_OF_THE_NETMASK_SHOULD_BE_BETWEEN_MIN_AND_MAX),
/* harmony export */   THE_VALUE_YOU_SELECTED_IS_NOT_A_VALID_CHOICE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THE_VALUE_YOU_SELECTED_IS_NOT_A_VALID_CHOICE),
/* harmony export */   THIS_BUSINESS_IDENTIFIER_CODE_BIC_IS_NOT_ASSOCIATED_WITH_IBAN_IBAN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_BUSINESS_IDENTIFIER_CODE_BIC_IS_NOT_ASSOCIATED_WITH_IBAN_IBAN),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENT_THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENT_THIS_COLLECTION_SHOULD_CONTAIN_EXACTLY_LIMIT_ELEMENTS),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_LESS_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_LESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_LESS_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_LESS),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_MORE_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_MORE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENT_OR_MORE_THIS_COLLECTION_SHOULD_CONTAIN_LIMIT_ELEMENTS_OR_MORE),
/* harmony export */   THIS_COLLECTION_SHOULD_CONTAIN_ONLY_UNIQUE_ELEMENTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_COLLECTION_SHOULD_CONTAIN_ONLY_UNIQUE_ELEMENTS),
/* harmony export */   THIS_FIELD_IS_MISSING: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_FIELD_IS_MISSING),
/* harmony export */   THIS_FIELD_WAS_NOT_EXPECTED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_FIELD_WAS_NOT_EXPECTED),
/* harmony export */   THIS_FILE_IS_NOT_A_VALID_IMAGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_FILE_IS_NOT_A_VALID_IMAGE),
/* harmony export */   THIS_FORM_SHOULD_NOT_CONTAIN_EXTRA_FIELDS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_FORM_SHOULD_NOT_CONTAIN_EXTRA_FIELDS),
/* harmony export */   THIS_IS_NOT_A_VALID_BUSINESS_IDENTIFIER_CODE_BIC: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_IS_NOT_A_VALID_BUSINESS_IDENTIFIER_CODE_BIC),
/* harmony export */   THIS_IS_NOT_A_VALID_INTERNATIONAL_BANK_ACCOUNT_NUMBER_IBAN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_IS_NOT_A_VALID_INTERNATIONAL_BANK_ACCOUNT_NUMBER_IBAN),
/* harmony export */   THIS_IS_NOT_A_VALID_IP_ADDRESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_IS_NOT_A_VALID_IP_ADDRESS),
/* harmony export */   THIS_IS_NOT_A_VALID_UUID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_IS_NOT_A_VALID_UUID),
/* harmony export */   THIS_PASSWORD_HAS_BEEN_LEAKED_IN_A_DATA_BREACH_IT_MUST_NOT_BE_USED_PLEASE_USE_ANOTHER_PASSWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_PASSWORD_HAS_BEEN_LEAKED_IN_A_DATA_BREACH_IT_MUST_NOT_BE_USED_PLEASE_USE_ANOTHER_PASSWORD),
/* harmony export */   THIS_VALUE_CONTAINS_CHARACTERS_THAT_ARE_NOT_ALLOWED_BY_THE_CURRENT_RESTRICTION_LEVEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_CONTAINS_CHARACTERS_THAT_ARE_NOT_ALLOWED_BY_THE_CURRENT_RESTRICTION_LEVEL),
/* harmony export */   THIS_VALUE_DOES_NOT_MATCH_THE_EXPECTED_CHARSET_CHARSET: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_DOES_NOT_MATCH_THE_EXPECTED_CHARSET_CHARSET),
/* harmony export */   THIS_VALUE_IS_ALREADY_USED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_ALREADY_USED),
/* harmony export */   THIS_VALUE_IS_NEITHER_A_VALID_ISBN10_NOR_A_VALID_ISBN13: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NEITHER_A_VALID_ISBN10_NOR_A_VALID_ISBN13),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CIDR_NOTATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_CIDR_NOTATION),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_COUNTRY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_COUNTRY),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CSS_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_CSS_COLOR),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_CURRENCY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_CURRENCY),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_DATE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_DATE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_DATETIME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_DATETIME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_EMAIL_ADDRESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_EMAIL_ADDRESS),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_HOSTNAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_HOSTNAME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_HTML5_COLOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_HTML5_COLOR),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_INTERNATIONAL_SECURITIES_IDENTIFICATION_NUMBER_ISIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_INTERNATIONAL_SECURITIES_IDENTIFICATION_NUMBER_ISIN),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISBN10: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_ISBN10),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISBN13: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_ISBN13),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_ISSN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_ISSN),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_LANGUAGE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_LANGUAGE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_LOCALE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_LOCALE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_TIME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_TIME),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_TIMEZONE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_TIMEZONE),
/* harmony export */   THIS_VALUE_IS_NOT_A_VALID_URL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_A_VALID_URL),
/* harmony export */   THIS_VALUE_IS_NOT_VALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_NOT_VALID),
/* harmony export */   THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_LESS_THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_LESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_LESS_THIS_VALUE_IS_TOO_LONG_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_LESS),
/* harmony export */   THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_MORE_THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_MORE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTER_OR_MORE_THIS_VALUE_IS_TOO_SHORT_IT_SHOULD_HAVE_LIMIT_CHARACTERS_OR_MORE),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_A_MULTIPLE_OF_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_VALID_EXPRESSION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_A_VALID_EXPRESSION),
/* harmony export */   THIS_VALUE_SHOULD_BE_A_VALID_NUMBER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_A_VALID_NUMBER),
/* harmony export */   THIS_VALUE_SHOULD_BE_BETWEEN_MIN_AND_MAX: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_BETWEEN_MIN_AND_MAX),
/* harmony export */   THIS_VALUE_SHOULD_BE_BLANK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_BLANK),
/* harmony export */   THIS_VALUE_SHOULD_BE_EITHER_NEGATIVE_OR_ZERO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_EITHER_NEGATIVE_OR_ZERO),
/* harmony export */   THIS_VALUE_SHOULD_BE_EITHER_POSITIVE_OR_ZERO: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_EITHER_POSITIVE_OR_ZERO),
/* harmony export */   THIS_VALUE_SHOULD_BE_EQUAL_TO_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_FALSE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_FALSE),
/* harmony export */   THIS_VALUE_SHOULD_BE_GREATER_THAN_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_GREATER_THAN_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LESS_THAN_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_LESS_THAN_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LESS_THAN_OR_EQUAL_TO_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_LESS_THAN_OR_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_LIMIT_OR_LESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_LIMIT_OR_LESS),
/* harmony export */   THIS_VALUE_SHOULD_BE_LIMIT_OR_MORE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_LIMIT_OR_MORE),
/* harmony export */   THIS_VALUE_SHOULD_BE_NEGATIVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_NEGATIVE),
/* harmony export */   THIS_VALUE_SHOULD_BE_NULL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_NULL),
/* harmony export */   THIS_VALUE_SHOULD_BE_OF_TYPE_TYPE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_OF_TYPE_TYPE),
/* harmony export */   THIS_VALUE_SHOULD_BE_POSITIVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_POSITIVE),
/* harmony export */   THIS_VALUE_SHOULD_BE_THE_USER_S_CURRENT_PASSWORD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_THE_USER_S_CURRENT_PASSWORD),
/* harmony export */   THIS_VALUE_SHOULD_BE_TRUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_TRUE),
/* harmony export */   THIS_VALUE_SHOULD_BE_VALID_JSON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_BE_VALID_JSON),
/* harmony export */   THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTER_THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTERS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTER_THIS_VALUE_SHOULD_HAVE_EXACTLY_LIMIT_CHARACTERS),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_BLANK: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_NOT_BE_BLANK),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_EQUAL_TO_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_NOT_BE_EQUAL_TO_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_NOT_BE_IDENTICAL_TO_COMPARED_VALUE_TYPE_COMPARED_VALUE),
/* harmony export */   THIS_VALUE_SHOULD_NOT_BE_NULL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_NOT_BE_NULL),
/* harmony export */   THIS_VALUE_SHOULD_SATISFY_AT_LEAST_ONE_OF_THE_FOLLOWING_CONSTRAINTS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.THIS_VALUE_SHOULD_SATISFY_AT_LEAST_ONE_OF_THE_FOLLOWING_CONSTRAINTS),
/* harmony export */   TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.TITLE),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTE),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_IN_MINUTES_MINUTES),
/* harmony export */   TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_LATER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.TOO_MANY_FAILED_LOGIN_ATTEMPTS_PLEASE_TRY_AGAIN_LATER),
/* harmony export */   UNSUPPORTED_CARD_TYPE_OR_INVALID_CARD_NUMBER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.UNSUPPORTED_CARD_TYPE_OR_INVALID_CARD_NUMBER),
/* harmony export */   USERNAME_COULD_NOT_BE_FOUND: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USERNAME_COULD_NOT_BE_FOUND),
/* harmony export */   USER_COMMON_ACTIVATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_ACTIVATED),
/* harmony export */   USER_COMMON_ACTIVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_ACTIVE),
/* harmony export */   USER_COMMON_ADDRESS_CITY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_ADDRESS_CITY),
/* harmony export */   USER_COMMON_ADDRESS_POSTAL_CODE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_ADDRESS_POSTAL_CODE),
/* harmony export */   USER_COMMON_ADDRESS_STREET_ADDRESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_ADDRESS_STREET_ADDRESS),
/* harmony export */   USER_COMMON_AVATAR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_AVATAR),
/* harmony export */   USER_COMMON_BIRTH_GIVEN_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_BIRTH_GIVEN_NAME),
/* harmony export */   USER_COMMON_BIRTH_GIVEN_NAME_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_BIRTH_GIVEN_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_BIRTH_PLACE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_BIRTH_PLACE),
/* harmony export */   USER_COMMON_BIRTH_PLACE_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_BIRTH_PLACE_PLACEHOLDER),
/* harmony export */   USER_COMMON_CATEGORY_CSP: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_CATEGORY_CSP),
/* harmony export */   USER_COMMON_CATEGORY_CSP_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_CATEGORY_CSP_PLACEHOLDER),
/* harmony export */   USER_COMMON_CUSTOMER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_CUSTOMER),
/* harmony export */   USER_COMMON_DEACTIVATED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_DEACTIVATED),
/* harmony export */   USER_COMMON_EMAIL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_EMAIL),
/* harmony export */   USER_COMMON_EMAIL_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_EMAIL_PLACEHOLDER),
/* harmony export */   USER_COMMON_FAMILY_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_FAMILY_NAME),
/* harmony export */   USER_COMMON_FAMILY_NAME_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_FAMILY_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_GENDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_GENDER),
/* harmony export */   USER_COMMON_GENDER_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_GENDER_PLACEHOLDER),
/* harmony export */   USER_COMMON_GIVE_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_GIVE_NAME),
/* harmony export */   USER_COMMON_GIVE_NAME_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_GIVE_NAME_PLACEHOLDER),
/* harmony export */   USER_COMMON_JOB_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_JOB_TITLE),
/* harmony export */   USER_COMMON_JOB_TITLE_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_JOB_TITLE_PLACEHOLDER),
/* harmony export */   USER_COMMON_MARITAL_STATUS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_MARITAL_STATUS),
/* harmony export */   USER_COMMON_MARITAL_STATUS_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_MARITAL_STATUS_PLACEHOLDER),
/* harmony export */   USER_COMMON_PERSONNAL_EMAIL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PERSONNAL_EMAIL),
/* harmony export */   USER_COMMON_PERSONNAL_EMAIL_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PERSONNAL_EMAIL_PLACEHOLDER),
/* harmony export */   USER_COMMON_PERSONNAL_TELEPHONE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PERSONNAL_TELEPHONE),
/* harmony export */   USER_COMMON_PERSONNAL_TELEPHONE_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PERSONNAL_TELEPHONE_PLACEHOLDER),
/* harmony export */   USER_COMMON_PROFESIONNAL_TELEPHONE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PROFESIONNAL_TELEPHONE),
/* harmony export */   USER_COMMON_PROFESIONNAL_TELEPHONE_PLACEHOLDER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_PROFESIONNAL_TELEPHONE_PLACEHOLDER),
/* harmony export */   USER_COMMON_USER: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_USER),
/* harmony export */   USER_COMMON_USERS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_COMMON_USERS),
/* harmony export */   USER_EDIT_CANCEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_CANCEL),
/* harmony export */   USER_EDIT_COMPLEMENTARY_INFORMATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_COMPLEMENTARY_INFORMATION),
/* harmony export */   USER_EDIT_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_DELETE),
/* harmony export */   USER_EDIT_EDIT_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_EDIT_BUTTON),
/* harmony export */   USER_EDIT_GENERAL_INFORMATION: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_GENERAL_INFORMATION),
/* harmony export */   USER_EDIT_ROLES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_ROLES),
/* harmony export */   USER_EDIT_SAVE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_SAVE_BUTTON),
/* harmony export */   USER_EDIT_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_SUCCESS),
/* harmony export */   USER_EDIT_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EDIT_TITLE),
/* harmony export */   USER_EMAIL_UNIQUE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_EMAIL_UNIQUE),
/* harmony export */   USER_INDEX_ACTIONS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_ACTIONS),
/* harmony export */   USER_INDEX_ALERT_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_ALERT_DELETE),
/* harmony export */   USER_INDEX_CREATE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_CREATE),
/* harmony export */   USER_INDEX_DELETE_SUCCESS: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_DELETE_SUCCESS),
/* harmony export */   USER_INDEX_EMPTY_TABLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_EMPTY_TABLE),
/* harmony export */   USER_INDEX_FAMILY_NAME_GIVE_NAME: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_FAMILY_NAME_GIVE_NAME),
/* harmony export */   USER_INDEX_IS_ACTIVE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_IS_ACTIVE),
/* harmony export */   USER_INDEX_LAST_LOGIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_LAST_LOGIN),
/* harmony export */   USER_INDEX_ROLES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_INDEX_ROLES),
/* harmony export */   USER_NEW_CANCEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_NEW_CANCEL),
/* harmony export */   USER_NEW_SAVE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_NEW_SAVE_BUTTON),
/* harmony export */   USER_NEW_SUBJECT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_NEW_SUBJECT),
/* harmony export */   USER_NEW_SUCCESS_FLASH: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_NEW_SUCCESS_FLASH),
/* harmony export */   USER_NEW_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_NEW_TITLE),
/* harmony export */   USER_PASSWORD_CONFIRMATION_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_PASSWORD_CONFIRMATION_INVALID),
/* harmony export */   USER_PASSWORD_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_PASSWORD_INVALID),
/* harmony export */   USER_PROFIL_TITLE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_PROFIL_TITLE),
/* harmony export */   USER_ROLES_ROLEADMIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_ROLES_ROLEADMIN),
/* harmony export */   USER_ROLES_ROLECOLLABORATOR: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_ROLES_ROLECOLLABORATOR),
/* harmony export */   USER_ROLES_ROLESUPERADMIN: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_ROLES_ROLESUPERADMIN),
/* harmony export */   USER_ROLE_EMPTY: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_ROLE_EMPTY),
/* harmony export */   USER_ROLE_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USER_ROLE_INVALID),
/* harmony export */   USING_HIDDEN_OVERLAY_CHARACTERS_IS_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USING_HIDDEN_OVERLAY_CHARACTERS_IS_NOT_ALLOWED),
/* harmony export */   USING_INVISIBLE_CHARACTERS_IS_NOT_ALLOWED: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.USING_INVISIBLE_CHARACTERS_IS_NOT_ALLOWED),
/* harmony export */   VICH_UPLOADER_FORM_LABEL_DELETE_CONFIRM: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.VICH_UPLOADER_FORM_LABEL_DELETE_CONFIRM),
/* harmony export */   VICH_UPLOADER_LINK_DOWNLOAD: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.VICH_UPLOADER_LINK_DOWNLOAD),
/* harmony export */   WIDGET_SLUG_INVALID: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_SLUG_INVALID),
/* harmony export */   WIDGET_SLUG_INVALID_CHOICE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_SLUG_INVALID_CHOICE),
/* harmony export */   WIDGET_TYPE_CANCEL: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_TYPE_CANCEL),
/* harmony export */   WIDGET_TYPE_DELETE: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_TYPE_DELETE),
/* harmony export */   WIDGET_TYPE_EDIT_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_TYPE_EDIT_BUTTON),
/* harmony export */   WIDGET_TYPE_SAVE_BUTTON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_TYPE_SAVE_BUTTON),
/* harmony export */   WIDGET_TYPE_SUBMIT: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.WIDGET_TYPE_SUBMIT),
/* harmony export */   YOU_HAVE_ALREADY_REQUESTED_A_RESET_PASSWORD_EMAIL_PLEASE_CHECK_YOUR_EMAIL_OR_TRY_AGAIN_SOON: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.YOU_HAVE_ALREADY_REQUESTED_A_RESET_PASSWORD_EMAIL_PLEASE_CHECK_YOUR_EMAIL_OR_TRY_AGAIN_SOON),
/* harmony export */   YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_LEAST_LIMIT_CHOICES),
/* harmony export */   YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICES: () => (/* reexport safe */ _var_translations__WEBPACK_IMPORTED_MODULE_2__.YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICE_YOU_MUST_SELECT_AT_MOST_LIMIT_CHOICES),
/* harmony export */   trans: () => (/* reexport safe */ _symfony_ux_translator__WEBPACK_IMPORTED_MODULE_1__.trans)
/* harmony export */ });
/* harmony import */ var _var_translations_configuration__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../var/translations/configuration */ "../../../var/translations/configuration.js");
/* harmony import */ var _symfony_ux_translator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @symfony/ux-translator */ "./node_modules/@symfony/ux-translator/dist/translator_controller.js");
/* harmony import */ var _var_translations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../var/translations */ "../../../var/translations/index.js");


/*
 * This file is part of the Symfony UX Translator package.
 *
 * If folder "../var/translations" does not exist, or some translations are missing,
 * you must warmup your Symfony cache to refresh JavaScript translations.
 *
 * If you use TypeScript, you can rename this file to "translator.ts" to take advantage of types checking.
 */

(0,_symfony_ux_translator__WEBPACK_IMPORTED_MODULE_1__.setLocaleFallbacks)(_var_translations_configuration__WEBPACK_IMPORTED_MODULE_0__.localeFallbacks);



/***/ }),

/***/ "./assets/js/components/FlashMessages.ts":
/*!***********************************************!*\
  !*** ./assets/js/components/FlashMessages.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FlashMessages: () => (/* binding */ FlashMessages)
/* harmony export */ });
/* harmony import */ var _Toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Toast */ "./assets/js/components/Toast.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { try { return Function.toString.call(fn).indexOf("[native code]") !== -1; } catch (e) { return typeof fn === "function"; } }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var FlashMessagesElement = /*#__PURE__*/function (_HTMLElement) {
  _inherits(FlashMessagesElement, _HTMLElement);
  var _super = _createSuper(FlashMessagesElement);
  function FlashMessagesElement() {
    _classCallCheck(this, FlashMessagesElement);
    return _super.apply(this, arguments);
  }
  _createClass(FlashMessagesElement, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      var _flashMessages = JSON.parse(this.getAttribute('data') || '[]');
      _flashMessages.forEach(function (flashMessage) {
        new _Toast__WEBPACK_IMPORTED_MODULE_0__["default"](flashMessage.type, flashMessage.data, 5000);
      });
      window.addEventListener('flash-message:add', function (event) {
        console.log('flash-message:add', event);
        var flashMessage = event.detail;
        new _Toast__WEBPACK_IMPORTED_MODULE_0__["default"](flashMessage.type, flashMessage.data, 5000);
      });
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {}
  }], [{
    key: "observedAttributes",
    value: function observedAttributes() {
      return ['data'];
    }
  }]);
  return FlashMessagesElement;
}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));
var FlashMessages = /*#__PURE__*/function () {
  function FlashMessages() {
    _classCallCheck(this, FlashMessages);
  }
  _createClass(FlashMessages, null, [{
    key: "register",
    value: function register() {
      customElements.define('flash-messages', FlashMessagesElement);
    }
  }]);
  return FlashMessages;
}();

/***/ }),

/***/ "./assets/js/components/Tooltip.ts":
/*!*****************************************!*\
  !*** ./assets/js/components/Tooltip.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ "./assets/js/utils/index.ts");
/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! gsap */ "./node_modules/gsap/index.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// @ts-ignore

// @ts-ignore

var Tooltip = /*#__PURE__*/function () {
  function Tooltip(el) {
    _classCallCheck(this, Tooltip);
    this._tooltip = null;
    this._tl = null;
    el.addEventListener('mouseenter', this.showTooltip);
    el.addEventListener('mouseleave', this.hideTooltip);
  }
  _createClass(Tooltip, [{
    key: "showTooltip",
    value: function showTooltip(e) {
      var _this = this;
      var el = e.target;
      // call template named tooltip-template
      var template = document.getElementById('tooltip-template');
      var tooltipTemplate = template.content.cloneNode(true);
      var tooltip = document.createElement('div');
      tooltip.innerHTML = tooltipTemplate.querySelector('.c-tooltip').innerHTML;
      tooltip.classList.add('c-tooltip');
      // @ts-ignore
      var data = JSON.parse(el.getAttribute('tooltip'));
      tooltip.innerHTML = tooltip.innerHTML.replace(/%(\w+)%/g, function (match, key) {
        switch (key) {
          case 'ico':
            return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getStatusIcon)('info');
          // Replace with the actual value
          default:
            return data[key] || match;
          // Use the data or keep the placeholder
        }
      });
      this._tooltip = tooltip;
      document.body.appendChild(this._tooltip);
      (0,_utils__WEBPACK_IMPORTED_MODULE_0__.positioningElement)(el, this._tooltip, 0, 16);
      this._tl = gsap__WEBPACK_IMPORTED_MODULE_1__["default"].timeline({
        paused: true
      });
      this._tl.fromTo(this._tooltip, {
        opacity: 0,
        y: 10
      }, {
        opacity: 1,
        y: 0,
        duration: .2
      });
      window.addEventListener('resize', function () {
        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.positioningElement)(el, _this._tooltip, 0, 16);
      });
      window.addEventListener('scroll', function () {
        (0,_utils__WEBPACK_IMPORTED_MODULE_0__.positioningElement)(el, _this._tooltip, 0, 16);
      });
      this._tl.play();
    }
  }, {
    key: "hideTooltip",
    value: function hideTooltip() {
      var _this2 = this;
      if (this._tooltip) {
        this._tl.reverse().then(function () {
          document.body.removeChild(_this2._tooltip);
        });
      }
    }
  }], [{
    key: "register",
    value: function register() {
      document.querySelectorAll('[tooltip]').forEach(function (el) {
        return new Tooltip(el);
      });
    }
  }]);
  return Tooltip;
}();


/***/ }),

/***/ "./assets/js/utils/index.ts":
/*!**********************************!*\
  !*** ./assets/js/utils/index.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getStatusIcon: () => (/* binding */ getStatusIcon),
/* harmony export */   positioningElement: () => (/* binding */ positioningElement),
/* harmony export */   uniqueId: () => (/* binding */ uniqueId)
/* harmony export */ });
function positioningElement(root, endpoint) {
  var left = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;
  var bottom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 25;
  if (root && endpoint) {
    var rootRect = root.getBoundingClientRect();
    endpoint.style.left = "".concat(rootRect.left - left, "px");
    endpoint.style.top = "".concat(rootRect.bottom + bottom, "px");
    var endpointRect = endpoint.getBoundingClientRect();
    if (endpointRect.right > window.innerWidth) {
      endpoint.style.left = "".concat(window.innerWidth - endpointRect.width - bottom, "px");
    }
    if (endpointRect.left < 0) {
      endpoint.style.left = "".concat(rootRect.left - left, "px");
    }
    if (endpointRect.bottom > window.innerHeight) {
      endpoint.style.top = "".concat(window.innerHeight - endpointRect.height - bottom, "px");
    }
  }
}
function getStatusIcon(status) {
  var ico = 'exclamation-circle';
  switch (status) {
    case 'success':
      ico = 'check';
      break;
    case 'error':
      ico = 'exclamation-triangle';
      break;
  }
  return ico;
}
function uniqueId() {
  return Math.random().toString(36).substr(2, 9);
}

/***/ }),

/***/ "./node_modules/gsap/CSSPlugin.js":
/*!****************************************!*\
  !*** ./node_modules/gsap/CSSPlugin.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CSSPlugin: () => (/* binding */ CSSPlugin),
/* harmony export */   _createElement: () => (/* binding */ _createElement),
/* harmony export */   _getBBox: () => (/* binding */ _getBBox),
/* harmony export */   checkPrefix: () => (/* binding */ _checkPropPrefix),
/* harmony export */   "default": () => (/* binding */ CSSPlugin)
/* harmony export */ });
/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gsap-core.js */ "./node_modules/gsap/gsap-core.js");
/*!
 * CSSPlugin 3.12.3
 * https://gsap.com
 *
 * Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/

/* eslint-disable */


var _win,
    _doc,
    _docElement,
    _pluginInitted,
    _tempDiv,
    _tempDivStyler,
    _recentSetterPlugin,
    _reverting,
    _windowExists = function _windowExists() {
  return typeof window !== "undefined";
},
    _transformProps = {},
    _RAD2DEG = 180 / Math.PI,
    _DEG2RAD = Math.PI / 180,
    _atan2 = Math.atan2,
    _bigNum = 1e8,
    _capsExp = /([A-Z])/g,
    _horizontalExp = /(left|right|width|margin|padding|x)/i,
    _complexExp = /[\s,\(]\S/,
    _propertyAliases = {
  autoAlpha: "opacity,visibility",
  scale: "scaleX,scaleY",
  alpha: "opacity"
},
    _renderCSSProp = function _renderCSSProp(ratio, data) {
  return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
},
    _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
  return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
},
    _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
  return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
},
    //if units change, we need a way to render the original unit/value when the tween goes all the way back to the beginning (ratio:0)
_renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
  var value = data.s + data.c * ratio;
  data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);
},
    _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
  return data.set(data.t, data.p, ratio ? data.e : data.b, data);
},
    _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
  return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
},
    _setterCSSStyle = function _setterCSSStyle(target, property, value) {
  return target.style[property] = value;
},
    _setterCSSProp = function _setterCSSProp(target, property, value) {
  return target.style.setProperty(property, value);
},
    _setterTransform = function _setterTransform(target, property, value) {
  return target._gsap[property] = value;
},
    _setterScale = function _setterScale(target, property, value) {
  return target._gsap.scaleX = target._gsap.scaleY = value;
},
    _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
  var cache = target._gsap;
  cache.scaleX = cache.scaleY = value;
  cache.renderTransform(ratio, cache);
},
    _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
  var cache = target._gsap;
  cache[property] = value;
  cache.renderTransform(ratio, cache);
},
    _transformProp = "transform",
    _transformOriginProp = _transformProp + "Origin",
    _saveStyle = function _saveStyle(property, isNotCSS) {
  var _this = this;

  var target = this.target,
      style = target.style,
      cache = target._gsap;

  if (property in _transformProps && style) {
    this.tfm = this.tfm || {};

    if (property !== "transform") {
      property = _propertyAliases[property] || property;
      ~property.indexOf(",") ? property.split(",").forEach(function (a) {
        return _this.tfm[a] = _get(target, a);
      }) : this.tfm[property] = cache.x ? cache[property] : _get(target, property); // note: scale would map to "scaleX,scaleY", thus we loop and apply them both.

      property === _transformOriginProp && (this.tfm.zOrigin = cache.zOrigin);
    } else {
      return _propertyAliases.transform.split(",").forEach(function (p) {
        return _saveStyle.call(_this, p, isNotCSS);
      });
    }

    if (this.props.indexOf(_transformProp) >= 0) {
      return;
    }

    if (cache.svg) {
      this.svgo = target.getAttribute("data-svg-origin");
      this.props.push(_transformOriginProp, isNotCSS, "");
    }

    property = _transformProp;
  }

  (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
},
    _removeIndependentTransforms = function _removeIndependentTransforms(style) {
  if (style.translate) {
    style.removeProperty("translate");
    style.removeProperty("scale");
    style.removeProperty("rotate");
  }
},
    _revertStyle = function _revertStyle() {
  var props = this.props,
      target = this.target,
      style = target.style,
      cache = target._gsap,
      i,
      p;

  for (i = 0; i < props.length; i += 3) {
    // stored like this: property, isNotCSS, value
    props[i + 1] ? target[props[i]] = props[i + 2] : props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].substr(0, 2) === "--" ? props[i] : props[i].replace(_capsExp, "-$1").toLowerCase());
  }

  if (this.tfm) {
    for (p in this.tfm) {
      cache[p] = this.tfm[p];
    }

    if (cache.svg) {
      cache.renderTransform();
      target.setAttribute("data-svg-origin", this.svgo || "");
    }

    i = _reverting();

    if ((!i || !i.isStart) && !style[_transformProp]) {
      _removeIndependentTransforms(style);

      if (cache.zOrigin && style[_transformOriginProp]) {
        style[_transformOriginProp] += " " + cache.zOrigin + "px"; // since we're uncaching, we must put the zOrigin back into the transformOrigin so that we can pull it out accurately when we parse again. Otherwise, we'd lose the z portion of the origin since we extract it to protect from Safari bugs.

        cache.zOrigin = 0;
        cache.renderTransform();
      }

      cache.uncache = 1; // if it's a startAt that's being reverted in the _initTween() of the core, we don't need to uncache transforms. This is purely a performance optimization.
    }
  }
},
    _getStyleSaver = function _getStyleSaver(target, properties) {
  var saver = {
    target: target,
    props: [],
    revert: _revertStyle,
    save: _saveStyle
  };
  target._gsap || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.getCache(target); // just make sure there's a _gsap cache defined because we read from it in _saveStyle() and it's more efficient to just check it here once.

  properties && properties.split(",").forEach(function (p) {
    return saver.save(p);
  });
  return saver;
},
    _supports3D,
    _createElement = function _createElement(type, ns) {
  var e = _doc.createElementNS ? _doc.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making "style" inaccessible.

  return e && e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://gsap.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).
},
    _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
  var cs = getComputedStyle(target);
  return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || ""; //css variables may not need caps swapped out for dashes and lowercase.
},
    _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
    _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
  var e = element || _tempDiv,
      s = e.style,
      i = 5;

  if (property in s && !preferPrefix) {
    return property;
  }

  property = property.charAt(0).toUpperCase() + property.substr(1);

  while (i-- && !(_prefixes[i] + property in s)) {}

  return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
},
    _initCore = function _initCore() {
  if (_windowExists() && window.document) {
    _win = window;
    _doc = _win.document;
    _docElement = _doc.documentElement;
    _tempDiv = _createElement("div") || {
      style: {}
    };
    _tempDivStyler = _createElement("div");
    _transformProp = _checkPropPrefix(_transformProp);
    _transformOriginProp = _transformProp + "Origin";
    _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0"; //make sure to override certain properties that may contaminate measurements, in case the user has overreaching style sheets.

    _supports3D = !!_checkPropPrefix("perspective");
    _reverting = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.reverting;
    _pluginInitted = 1;
  }
},
    _getBBoxHack = function _getBBoxHack(swapIfPossible) {
  //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).
  var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
      oldParent = this.parentNode,
      oldSibling = this.nextSibling,
      oldCSS = this.style.cssText,
      bbox;

  _docElement.appendChild(svg);

  svg.appendChild(this);
  this.style.display = "block";

  if (swapIfPossible) {
    try {
      bbox = this.getBBox();
      this._gsapBBox = this.getBBox; //store the original

      this.getBBox = _getBBoxHack;
    } catch (e) {}
  } else if (this._gsapBBox) {
    bbox = this._gsapBBox();
  }

  if (oldParent) {
    if (oldSibling) {
      oldParent.insertBefore(this, oldSibling);
    } else {
      oldParent.appendChild(this);
    }
  }

  _docElement.removeChild(svg);

  this.style.cssText = oldCSS;
  return bbox;
},
    _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
  var i = attributesArray.length;

  while (i--) {
    if (target.hasAttribute(attributesArray[i])) {
      return target.getAttribute(attributesArray[i]);
    }
  }
},
    _getBBox = function _getBBox(target) {
  var bounds;

  try {
    bounds = target.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118
  } catch (error) {
    bounds = _getBBoxHack.call(target, true);
  }

  bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true)); //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.

  return bounds && !bounds.width && !bounds.x && !bounds.y ? {
    x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
    y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
    width: 0,
    height: 0
  } : bounds;
},
    _isSVG = function _isSVG(e) {
  return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
},
    //reports if the element is an SVG on which getBBox() actually works
_removeProperty = function _removeProperty(target, property) {
  if (property) {
    var style = target.style,
        first2Chars;

    if (property in _transformProps && property !== _transformOriginProp) {
      property = _transformProp;
    }

    if (style.removeProperty) {
      first2Chars = property.substr(0, 2);

      if (first2Chars === "ms" || property.substr(0, 6) === "webkit") {
        //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be "ms-transform" instead of "-ms-transform" for IE9, for example)
        property = "-" + property;
      }

      style.removeProperty(first2Chars === "--" ? property : property.replace(_capsExp, "-$1").toLowerCase());
    } else {
      //note: old versions of IE use "removeAttribute()" instead of "removeProperty()"
      style.removeAttribute(property);
    }
  }
},
    _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
  var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
  plugin._pt = pt;
  pt.b = beginning;
  pt.e = end;

  plugin._props.push(property);

  return pt;
},
    _nonConvertibleUnits = {
  deg: 1,
  rad: 1,
  turn: 1
},
    _nonStandardLayouts = {
  grid: 1,
  flex: 1
},
    //takes a single value like 20px and converts it to the unit specified, like "%", returning only the numeric amount.
_convertToUnit = function _convertToUnit(target, property, value, unit) {
  var curValue = parseFloat(value) || 0,
      curUnit = (value + "").trim().substr((curValue + "").length) || "px",
      // some browsers leave extra whitespace at the beginning of CSS variables, hence the need to trim()
  style = _tempDiv.style,
      horizontal = _horizontalExp.test(property),
      isRootSVG = target.tagName.toLowerCase() === "svg",
      measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
      amount = 100,
      toPixels = unit === "px",
      toPercent = unit === "%",
      px,
      parent,
      cache,
      isSVG;

  if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
    return curValue;
  }

  curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
  isSVG = target.getCTM && _isSVG(target);

  if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
    px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(toPercent ? curValue / px * amount : curValue / 100 * px);
  }

  style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
  parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;

  if (isSVG) {
    parent = (target.ownerSVGElement || {}).parentNode;
  }

  if (!parent || parent === _doc || !parent.appendChild) {
    parent = _doc.body;
  }

  cache = parent._gsap;

  if (cache && toPercent && cache.width && horizontal && cache.time === _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._ticker.time && !cache.uncache) {
    return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(curValue / cache.width * amount);
  } else {
    if (toPercent && (property === "height" || property === "width")) {
      // if we're dealing with width/height that's inside a container with padding and/or it's a flexbox/grid container, we must apply it to the target itself rather than the _tempDiv in order to ensure complete accuracy, factoring in the parent's padding.
      var v = target.style[property];
      target.style[property] = amount + unit;
      px = target[measureProperty];
      v ? target.style[property] = v : _removeProperty(target, property);
    } else {
      (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static"); // like for borderRadius, if it's a % we must have it relative to the target itself but that may not have position: relative or position: absolute in which case it'd go up the chain until it finds its offsetParent (bad). position: static protects against that.

      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";
    }

    if (horizontal && toPercent) {
      cache = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getCache)(parent);
      cache.time = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._ticker.time;
      cache.width = parent[measureProperty];
    }
  }

  return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
},
    _get = function _get(target, property, unit, uncache) {
  var value;
  _pluginInitted || _initCore();

  if (property in _propertyAliases && property !== "transform") {
    property = _propertyAliases[property];

    if (~property.indexOf(",")) {
      property = property.split(",")[0];
    }
  }

  if (_transformProps[property] && property !== "transform") {
    value = _parseTransform(target, uncache);
    value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
  } else {
    value = target.style[property];

    if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
      value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getProperty)(target, property) || (property === "opacity" ? 1 : 0); // note: some browsers, like Firefox, don't report borderRadius correctly! Instead, it only reports every corner like  borderTopLeftRadius
    }
  }

  return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
},
    _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
  // note: we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
  if (!start || start === "none") {
    // some browsers like Safari actually PREFER the prefixed property and mis-report the unprefixed value like clipPath (BUG). In other words, even though clipPath exists in the style ("clipPath" in target.style) and it's set in the CSS properly (along with -webkit-clip-path), Safari reports clipPath as "none" whereas WebkitClipPath reports accurately like "ellipse(100% 0% at 50% 0%)", so in this case we must SWITCH to using the prefixed property instead. See https://gsap.com/forums/topic/18310-clippath-doesnt-work-on-ios/
    var p = _checkPropPrefix(prop, target, 1),
        s = p && _getComputedProperty(target, p, 1);

    if (s && s !== start) {
      prop = p;
      start = s;
    } else if (prop === "borderColor") {
      start = _getComputedProperty(target, "borderTopColor"); // Firefox bug: always reports "borderColor" as "", so we must fall back to borderTopColor. See https://gsap.com/forums/topic/24583-how-to-return-colors-that-i-had-after-reverse/
    }
  }

  var pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, target.style, prop, 0, 1, _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._renderComplexString),
      index = 0,
      matchIndex = 0,
      a,
      result,
      startValues,
      startNum,
      color,
      startValue,
      endValue,
      endNum,
      chunk,
      endUnit,
      startUnit,
      endValues;
  pt.b = start;
  pt.e = end;
  start += ""; // ensure values are strings

  end += "";

  if (end === "auto") {
    startValue = target.style[prop];
    target.style[prop] = end;
    end = _getComputedProperty(target, prop) || end;
    startValue ? target.style[prop] = startValue : _removeProperty(target, prop);
  }

  a = [start, end];

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorStringFilter)(a); // pass an array with the starting and ending values and let the filter do whatever it needs to the values. If colors are found, it returns true and then we must match where the color shows up order-wise because for things like boxShadow, sometimes the browser provides the computed values with the color FIRST, but the user provides it with the color LAST, so flip them if necessary. Same for drop-shadow().


  start = a[0];
  end = a[1];
  startValues = start.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp) || [];
  endValues = end.match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp) || [];

  if (endValues.length) {
    while (result = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp.exec(end)) {
      endValue = result[0];
      chunk = end.substring(index, result.index);

      if (color) {
        color = (color + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
        color = 1;
      }

      if (endValue !== (startValue = startValues[matchIndex++] || "")) {
        startNum = parseFloat(startValue) || 0;
        startUnit = startValue.substr((startNum + "").length);
        endValue.charAt(1) === "=" && (endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, endValue) + startUnit);
        endNum = parseFloat(endValue);
        endUnit = endValue.substr((endNum + "").length);
        index = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numWithUnitExp.lastIndex - endUnit.length;

        if (!endUnit) {
          //if something like "perspective:300" is passed in and we must add a unit to the end
          endUnit = endUnit || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[prop] || startUnit;

          if (index === end.length) {
            end += endUnit;
            pt.e += endUnit;
          }
        }

        if (startUnit !== endUnit) {
          startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
        } // these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.


        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
          s: startNum,
          c: endNum - startNum,
          m: color && color < 4 || prop === "zIndex" ? Math.round : 0
        };
      }
    }

    pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)
  } else {
    pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
  }

  _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._relExp.test(end) && (pt.e = 0); //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).

  this._pt = pt; //start the linked list with this new PropTween. Remember, we call _tweenComplexCSSString.call(pluginInstance...) to ensure that it's scoped properly. We may call it from within another plugin too, thus "this" would refer to the plugin.

  return pt;
},
    _keywordToPercent = {
  top: "0%",
  bottom: "100%",
  left: "0%",
  right: "100%",
  center: "50%"
},
    _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
  var split = value.split(" "),
      x = split[0],
      y = split[1] || "50%";

  if (x === "top" || x === "bottom" || y === "left" || y === "right") {
    //the user provided them in the wrong order, so flip them
    value = x;
    x = y;
    y = value;
  }

  split[0] = _keywordToPercent[x] || x;
  split[1] = _keywordToPercent[y] || y;
  return split.join(" ");
},
    _renderClearProps = function _renderClearProps(ratio, data) {
  if (data.tween && data.tween._time === data.tween._dur) {
    var target = data.t,
        style = target.style,
        props = data.u,
        cache = target._gsap,
        prop,
        clearTransforms,
        i;

    if (props === "all" || props === true) {
      style.cssText = "";
      clearTransforms = 1;
    } else {
      props = props.split(",");
      i = props.length;

      while (--i > -1) {
        prop = props[i];

        if (_transformProps[prop]) {
          clearTransforms = 1;
          prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
        }

        _removeProperty(target, prop);
      }
    }

    if (clearTransforms) {
      _removeProperty(target, _transformProp);

      if (cache) {
        cache.svg && target.removeAttribute("transform");

        _parseTransform(target, 1); // force all the cached values back to "normal"/identity, otherwise if there's another tween that's already set to render transforms on this element, it could display the wrong values.


        cache.uncache = 1;

        _removeIndependentTransforms(style);
      }
    }
  }
},
    // note: specialProps should return 1 if (and only if) they have a non-zero priority. It indicates we need to sort the linked list.
_specialProps = {
  clearProps: function clearProps(plugin, target, property, endValue, tween) {
    if (tween.data !== "isFromStart") {
      var pt = plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
      pt.u = endValue;
      pt.pr = -10;
      pt.tween = tween;

      plugin._props.push(property);

      return 1;
    }
  }
  /* className feature (about 0.4kb gzipped).
  , className(plugin, target, property, endValue, tween) {
  	let _renderClassName = (ratio, data) => {
  			data.css.render(ratio, data.css);
  			if (!ratio || ratio === 1) {
  				let inline = data.rmv,
  					target = data.t,
  					p;
  				target.setAttribute("class", ratio ? data.e : data.b);
  				for (p in inline) {
  					_removeProperty(target, p);
  				}
  			}
  		},
  		_getAllStyles = (target) => {
  			let styles = {},
  				computed = getComputedStyle(target),
  				p;
  			for (p in computed) {
  				if (isNaN(p) && p !== "cssText" && p !== "length") {
  					styles[p] = computed[p];
  				}
  			}
  			_setDefaults(styles, _parseTransform(target, 1));
  			return styles;
  		},
  		startClassList = target.getAttribute("class"),
  		style = target.style,
  		cssText = style.cssText,
  		cache = target._gsap,
  		classPT = cache.classPT,
  		inlineToRemoveAtEnd = {},
  		data = {t:target, plugin:plugin, rmv:inlineToRemoveAtEnd, b:startClassList, e:(endValue.charAt(1) !== "=") ? endValue : startClassList.replace(new RegExp("(?:\\s|^)" + endValue.substr(2) + "(?![\\w-])"), "") + ((endValue.charAt(0) === "+") ? " " + endValue.substr(2) : "")},
  		changingVars = {},
  		startVars = _getAllStyles(target),
  		transformRelated = /(transform|perspective)/i,
  		endVars, p;
  	if (classPT) {
  		classPT.r(1, classPT.d);
  		_removeLinkedListItem(classPT.d.plugin, classPT, "_pt");
  	}
  	target.setAttribute("class", data.e);
  	endVars = _getAllStyles(target, true);
  	target.setAttribute("class", startClassList);
  	for (p in endVars) {
  		if (endVars[p] !== startVars[p] && !transformRelated.test(p)) {
  			changingVars[p] = endVars[p];
  			if (!style[p] && style[p] !== "0") {
  				inlineToRemoveAtEnd[p] = 1;
  			}
  		}
  	}
  	cache.classPT = plugin._pt = new PropTween(plugin._pt, target, "className", 0, 0, _renderClassName, data, 0, -11);
  	if (style.cssText !== cssText) { //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://gsap.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.
  		style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
  	}
  	_parseTransform(target, true); //to clear the caching of transforms
  	data.css = new gsap.plugins.css();
  	data.css.init(target, changingVars, tween);
  	plugin._props.push(...data.css._props);
  	return 1;
  }
  */

},

/*
 * --------------------------------------------------------------------------------------
 * TRANSFORMS
 * --------------------------------------------------------------------------------------
 */
_identity2DMatrix = [1, 0, 0, 1, 0, 0],
    _rotationalProperties = {},
    _isNullTransform = function _isNullTransform(value) {
  return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
},
    _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
  var matrixString = _getComputedProperty(target, _transformProp);

  return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._numExp).map(_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round);
},
    _getMatrix = function _getMatrix(target, force2D) {
  var cache = target._gsap || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getCache)(target),
      style = target.style,
      matrix = _getComputedTransformMatrixAsArray(target),
      parent,
      nextSibling,
      temp,
      addedToDOM;

  if (cache.svg && target.getAttribute("transform")) {
    temp = target.transform.baseVal.consolidate().matrix; //ensures that even complex values like "translate(50,60) rotate(135,0,0)" are parsed because it mashes it into a matrix.

    matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
    return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
  } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
    //note: if offsetParent is null, that means the element isn't in the normal document flow, like if it has display:none or one of its ancestors has display:none). Firefox returns null for getComputedStyle() if the element is in an iframe that has display:none. https://bugzilla.mozilla.org/show_bug.cgi?id=548397
    //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not "none". Firefox and Microsoft browsers have a partial bug where they'll report transforms even if display:none BUT not any percentage-based values like translate(-50%, 8px) will be reported as if it's translate(0, 8px).
    temp = style.display;
    style.display = "block";
    parent = target.parentNode;

    if (!parent || !target.offsetParent) {
      // note: in 3.3.0 we switched target.offsetParent to _doc.body.contains(target) to avoid [sometimes unnecessary] MutationObserver calls but that wasn't adequate because there are edge cases where nested position: fixed elements need to get reparented to accurately sense transforms. See https://github.com/greensock/GSAP/issues/388 and https://github.com/greensock/GSAP/issues/375
      addedToDOM = 1; //flag

      nextSibling = target.nextElementSibling;

      _docElement.appendChild(target); //we must add it to the DOM in order to get values properly

    }

    matrix = _getComputedTransformMatrixAsArray(target);
    temp ? style.display = temp : _removeProperty(target, "display");

    if (addedToDOM) {
      nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
    }
  }

  return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
},
    _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
  var cache = target._gsap,
      matrix = matrixArray || _getMatrix(target, true),
      xOriginOld = cache.xOrigin || 0,
      yOriginOld = cache.yOrigin || 0,
      xOffsetOld = cache.xOffset || 0,
      yOffsetOld = cache.yOffset || 0,
      a = matrix[0],
      b = matrix[1],
      c = matrix[2],
      d = matrix[3],
      tx = matrix[4],
      ty = matrix[5],
      originSplit = origin.split(" "),
      xOrigin = parseFloat(originSplit[0]) || 0,
      yOrigin = parseFloat(originSplit[1]) || 0,
      bounds,
      determinant,
      x,
      y;

  if (!originIsAbsolute) {
    bounds = _getBBox(target);
    xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
    yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);

    if (!("xOrigin" in cache) && (xOrigin || yOrigin)) {
      xOrigin -= bounds.x;
      yOrigin -= bounds.y;
    }
  } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
    //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.
    x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
    y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
    xOrigin = x;
    yOrigin = y; // theory: we only had to do this for smoothing and it assumes that the previous one was not originIsAbsolute.
  }

  if (smooth || smooth !== false && cache.smooth) {
    tx = xOrigin - xOriginOld;
    ty = yOrigin - yOriginOld;
    cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
    cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
  } else {
    cache.xOffset = cache.yOffset = 0;
  }

  cache.xOrigin = xOrigin;
  cache.yOrigin = yOrigin;
  cache.smooth = !!smooth;
  cache.origin = origin;
  cache.originIsAbsolute = !!originIsAbsolute;
  target.style[_transformOriginProp] = "0px 0px"; //otherwise, if someone sets  an origin via CSS, it will likely interfere with the SVG transform attribute ones (because remember, we're baking the origin into the matrix() value).

  if (pluginToAddPropTweensTo) {
    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);

    _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
  }

  target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
},
    _parseTransform = function _parseTransform(target, uncache) {
  var cache = target._gsap || new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.GSCache(target);

  if ("x" in cache && !uncache && !cache.uncache) {
    return cache;
  }

  var style = target.style,
      invertedScaleX = cache.scaleX < 0,
      px = "px",
      deg = "deg",
      cs = getComputedStyle(target),
      origin = _getComputedProperty(target, _transformOriginProp) || "0",
      x,
      y,
      z,
      scaleX,
      scaleY,
      rotation,
      rotationX,
      rotationY,
      skewX,
      skewY,
      perspective,
      xOrigin,
      yOrigin,
      matrix,
      angle,
      cos,
      sin,
      a,
      b,
      c,
      d,
      a12,
      a22,
      t1,
      t2,
      t3,
      a13,
      a23,
      a33,
      a42,
      a43,
      a32;
  x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
  scaleX = scaleY = 1;
  cache.svg = !!(target.getCTM && _isSVG(target));

  if (cs.translate) {
    // accommodate independent transforms by combining them into normal ones.
    if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") {
      style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
    }

    style.scale = style.rotate = style.translate = "none";
  }

  matrix = _getMatrix(target, cache.svg);

  if (cache.svg) {
    if (cache.uncache) {
      // if cache.uncache is true (and maybe if origin is 0,0), we need to set element.style.transformOrigin = (cache.xOrigin - bbox.x) + "px " + (cache.yOrigin - bbox.y) + "px". Previously we let the data-svg-origin stay instead, but when introducing revert(), it complicated things.
      t2 = target.getBBox();
      origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
      t1 = "";
    } else {
      t1 = !uncache && target.getAttribute("data-svg-origin"); //  Remember, to work around browser inconsistencies we always force SVG elements' transformOrigin to 0,0 and offset the translation accordingly.
    }

    _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
  }

  xOrigin = cache.xOrigin || 0;
  yOrigin = cache.yOrigin || 0;

  if (matrix !== _identity2DMatrix) {
    a = matrix[0]; //a11

    b = matrix[1]; //a21

    c = matrix[2]; //a31

    d = matrix[3]; //a41

    x = a12 = matrix[4];
    y = a22 = matrix[5]; //2D matrix

    if (matrix.length === 6) {
      scaleX = Math.sqrt(a * a + b * b);
      scaleY = Math.sqrt(d * d + c * c);
      rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).

      skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
      skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));

      if (cache.svg) {
        x -= xOrigin - (xOrigin * a + yOrigin * c);
        y -= yOrigin - (xOrigin * b + yOrigin * d);
      } //3D matrix

    } else {
      a32 = matrix[6];
      a42 = matrix[7];
      a13 = matrix[8];
      a23 = matrix[9];
      a33 = matrix[10];
      a43 = matrix[11];
      x = matrix[12];
      y = matrix[13];
      z = matrix[14];
      angle = _atan2(a32, a33);
      rotationX = angle * _RAD2DEG; //rotationX

      if (angle) {
        cos = Math.cos(-angle);
        sin = Math.sin(-angle);
        t1 = a12 * cos + a13 * sin;
        t2 = a22 * cos + a23 * sin;
        t3 = a32 * cos + a33 * sin;
        a13 = a12 * -sin + a13 * cos;
        a23 = a22 * -sin + a23 * cos;
        a33 = a32 * -sin + a33 * cos;
        a43 = a42 * -sin + a43 * cos;
        a12 = t1;
        a22 = t2;
        a32 = t3;
      } //rotationY


      angle = _atan2(-c, a33);
      rotationY = angle * _RAD2DEG;

      if (angle) {
        cos = Math.cos(-angle);
        sin = Math.sin(-angle);
        t1 = a * cos - a13 * sin;
        t2 = b * cos - a23 * sin;
        t3 = c * cos - a33 * sin;
        a43 = d * sin + a43 * cos;
        a = t1;
        b = t2;
        c = t3;
      } //rotationZ


      angle = _atan2(b, a);
      rotation = angle * _RAD2DEG;

      if (angle) {
        cos = Math.cos(angle);
        sin = Math.sin(angle);
        t1 = a * cos + b * sin;
        t2 = a12 * cos + a22 * sin;
        b = b * cos - a * sin;
        a22 = a22 * cos - a12 * sin;
        a = t1;
        a12 = t2;
      }

      if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
        //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.
        rotationX = rotation = 0;
        rotationY = 180 - rotationY;
      }

      scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(Math.sqrt(a * a + b * b + c * c));
      scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(Math.sqrt(a22 * a22 + a32 * a32));
      angle = _atan2(a12, a22);
      skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
      perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
    }

    if (cache.svg) {
      //sense if there are CSS transforms applied on an SVG element in which case we must overwrite them when rendering. The transform attribute is more reliable cross-browser, but we can't just remove the CSS ones because they may be applied in a CSS rule somewhere (not just inline).
      t1 = target.getAttribute("transform");
      cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
      t1 && target.setAttribute("transform", t1);
    }
  }

  if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
    if (invertedScaleX) {
      scaleX *= -1;
      skewX += rotation <= 0 ? 180 : -180;
      rotation += rotation <= 0 ? 180 : -180;
    } else {
      scaleY *= -1;
      skewX += skewX <= 0 ? 180 : -180;
    }
  }

  uncache = uncache || cache.uncache;
  cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
  cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
  cache.z = z + px;
  cache.scaleX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(scaleX);
  cache.scaleY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(scaleY);
  cache.rotation = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotation) + deg;
  cache.rotationX = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotationX) + deg;
  cache.rotationY = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(rotationY) + deg;
  cache.skewX = skewX + deg;
  cache.skewY = skewY + deg;
  cache.transformPerspective = perspective + px;

  if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || !uncache && cache.zOrigin || 0) {
    style[_transformOriginProp] = _firstTwoOnly(origin);
  }

  cache.svg || (cache.xOffset = cache.yOffset = 0);
  cache.force3D = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.force3D;
  cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
  cache.uncache = 0;
  return cache;
},
    _firstTwoOnly = function _firstTwoOnly(value) {
  return (value = value.split(" "))[0] + " " + value[1];
},
    //for handling transformOrigin values, stripping out the 3rd dimension
_addPxTranslate = function _addPxTranslate(target, start, value) {
  var unit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(start);
  return (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
},
    _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
  cache.z = "0px";
  cache.rotationY = cache.rotationX = "0deg";
  cache.force3D = 0;

  _renderCSSTransforms(ratio, cache);
},
    _zeroDeg = "0deg",
    _zeroPx = "0px",
    _endParenthesis = ") ",
    _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
  var _ref = cache || this,
      xPercent = _ref.xPercent,
      yPercent = _ref.yPercent,
      x = _ref.x,
      y = _ref.y,
      z = _ref.z,
      rotation = _ref.rotation,
      rotationY = _ref.rotationY,
      rotationX = _ref.rotationX,
      skewX = _ref.skewX,
      skewY = _ref.skewY,
      scaleX = _ref.scaleX,
      scaleY = _ref.scaleY,
      transformPerspective = _ref.transformPerspective,
      force3D = _ref.force3D,
      target = _ref.target,
      zOrigin = _ref.zOrigin,
      transforms = "",
      use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true; // Safari has a bug that causes it not to render 3D transform-origin values properly, so we force the z origin to 0, record it in the cache, and then do the math here to offset the translate values accordingly (basically do the 3D transform-origin part manually)


  if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
    var angle = parseFloat(rotationY) * _DEG2RAD,
        a13 = Math.sin(angle),
        a33 = Math.cos(angle),
        cos;

    angle = parseFloat(rotationX) * _DEG2RAD;
    cos = Math.cos(angle);
    x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
    y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
    z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
  }

  if (transformPerspective !== _zeroPx) {
    transforms += "perspective(" + transformPerspective + _endParenthesis;
  }

  if (xPercent || yPercent) {
    transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
  }

  if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
    transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
  }

  if (rotation !== _zeroDeg) {
    transforms += "rotate(" + rotation + _endParenthesis;
  }

  if (rotationY !== _zeroDeg) {
    transforms += "rotateY(" + rotationY + _endParenthesis;
  }

  if (rotationX !== _zeroDeg) {
    transforms += "rotateX(" + rotationX + _endParenthesis;
  }

  if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
    transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
  }

  if (scaleX !== 1 || scaleY !== 1) {
    transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
  }

  target.style[_transformProp] = transforms || "translate(0, 0)";
},
    _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
  var _ref2 = cache || this,
      xPercent = _ref2.xPercent,
      yPercent = _ref2.yPercent,
      x = _ref2.x,
      y = _ref2.y,
      rotation = _ref2.rotation,
      skewX = _ref2.skewX,
      skewY = _ref2.skewY,
      scaleX = _ref2.scaleX,
      scaleY = _ref2.scaleY,
      target = _ref2.target,
      xOrigin = _ref2.xOrigin,
      yOrigin = _ref2.yOrigin,
      xOffset = _ref2.xOffset,
      yOffset = _ref2.yOffset,
      forceCSS = _ref2.forceCSS,
      tx = parseFloat(x),
      ty = parseFloat(y),
      a11,
      a21,
      a12,
      a22,
      temp;

  rotation = parseFloat(rotation);
  skewX = parseFloat(skewX);
  skewY = parseFloat(skewY);

  if (skewY) {
    //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.
    skewY = parseFloat(skewY);
    skewX += skewY;
    rotation += skewY;
  }

  if (rotation || skewX) {
    rotation *= _DEG2RAD;
    skewX *= _DEG2RAD;
    a11 = Math.cos(rotation) * scaleX;
    a21 = Math.sin(rotation) * scaleX;
    a12 = Math.sin(rotation - skewX) * -scaleY;
    a22 = Math.cos(rotation - skewX) * scaleY;

    if (skewX) {
      skewY *= _DEG2RAD;
      temp = Math.tan(skewX - skewY);
      temp = Math.sqrt(1 + temp * temp);
      a12 *= temp;
      a22 *= temp;

      if (skewY) {
        temp = Math.tan(skewY);
        temp = Math.sqrt(1 + temp * temp);
        a11 *= temp;
        a21 *= temp;
      }
    }

    a11 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a11);
    a21 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a21);
    a12 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a12);
    a22 = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(a22);
  } else {
    a11 = scaleX;
    a22 = scaleY;
    a21 = a12 = 0;
  }

  if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
    tx = _convertToUnit(target, "x", x, "px");
    ty = _convertToUnit(target, "y", y, "px");
  }

  if (xOrigin || yOrigin || xOffset || yOffset) {
    tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
    ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
  }

  if (xPercent || yPercent) {
    //The SVG spec doesn't support percentage-based translation in the "transform" attribute, so we merge it into the translation to simulate it.
    temp = target.getBBox();
    tx = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(tx + xPercent / 100 * temp.width);
    ty = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._round)(ty + yPercent / 100 * temp.height);
  }

  temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
  target.setAttribute("transform", temp);
  forceCSS && (target.style[_transformProp] = temp); //some browsers prioritize CSS transforms over the transform attribute. When we sense that the user has CSS transforms applied, we must overwrite them this way (otherwise some browser simply won't render the transform attribute changes!)
},
    _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {
  var cap = 360,
      isString = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isString)(endValue),
      endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
      change = endNum - startNum,
      finalValue = startNum + change + "deg",
      direction,
      pt;

  if (isString) {
    direction = endValue.split("_")[1];

    if (direction === "short") {
      change %= cap;

      if (change !== change % (cap / 2)) {
        change += change < 0 ? cap : -cap;
      }
    }

    if (direction === "cw" && change < 0) {
      change = (change + cap * _bigNum) % cap - ~~(change / cap) * cap;
    } else if (direction === "ccw" && change > 0) {
      change = (change - cap * _bigNum) % cap - ~~(change / cap) * cap;
    }
  }

  plugin._pt = pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
  pt.e = finalValue;
  pt.u = "deg";

  plugin._props.push(property);

  return pt;
},
    _assign = function _assign(target, source) {
  // Internet Explorer doesn't have Object.assign(), so we recreate it here.
  for (var p in source) {
    target[p] = source[p];
  }

  return target;
},
    _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
  //for handling cases where someone passes in a whole transform string, like transform: "scale(2, 3) rotate(20deg) translateY(30em)"
  var startCache = _assign({}, target._gsap),
      exclude = "perspective,force3D,transformOrigin,svgOrigin",
      style = target.style,
      endCache,
      p,
      startValue,
      endValue,
      startNum,
      endNum,
      startUnit,
      endUnit;

  if (startCache.svg) {
    startValue = target.getAttribute("transform");
    target.setAttribute("transform", "");
    style[_transformProp] = transforms;
    endCache = _parseTransform(target, 1);

    _removeProperty(target, _transformProp);

    target.setAttribute("transform", startValue);
  } else {
    startValue = getComputedStyle(target)[_transformProp];
    style[_transformProp] = transforms;
    endCache = _parseTransform(target, 1);
    style[_transformProp] = startValue;
  }

  for (p in _transformProps) {
    startValue = startCache[p];
    endValue = endCache[p];

    if (startValue !== endValue && exclude.indexOf(p) < 0) {
      //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.
      startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue);
      endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue);
      startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
      endNum = parseFloat(endValue);
      plugin._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
      plugin._pt.u = endUnit || 0;

      plugin._props.push(p);
    }
  }

  _assign(endCache, startCache);
}; // handle splitting apart padding, margin, borderWidth, and borderRadius into their 4 components. Firefox, for example, won't report borderRadius correctly - it will only do borderTopLeftRadius and the other corners. We also want to handle paddingTop, marginLeft, borderRightWidth, etc.


(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)("padding,margin,Width,Radius", function (name, index) {
  var t = "Top",
      r = "Right",
      b = "Bottom",
      l = "Left",
      props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function (side) {
    return index < 2 ? name + side : "border" + side + name;
  });

  _specialProps[index > 1 ? "border" + name : name] = function (plugin, target, property, endValue, tween) {
    var a, vars;

    if (arguments.length < 4) {
      // getter, passed target, property, and unit (from _get())
      a = props.map(function (prop) {
        return _get(plugin, prop, property);
      });
      vars = a.join(" ");
      return vars.split(a[0]).length === 5 ? a[0] : vars;
    }

    a = (endValue + "").split(" ");
    vars = {};
    props.forEach(function (prop, i) {
      return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
    });
    plugin.init(target, vars, tween);
  };
});

var CSSPlugin = {
  name: "css",
  register: _initCore,
  targetTest: function targetTest(target) {
    return target.style && target.nodeType;
  },
  init: function init(target, vars, tween, index, targets) {
    var props = this._props,
        style = target.style,
        startAt = tween.vars.startAt,
        startValue,
        endValue,
        endNum,
        startNum,
        type,
        specialProp,
        p,
        startUnit,
        endUnit,
        relative,
        isTransformRelated,
        transformPropTween,
        cache,
        smooth,
        hasPriority,
        inlineProps;
    _pluginInitted || _initCore(); // we may call init() multiple times on the same plugin instance, like when adding special properties, so make sure we don't overwrite the revert data or inlineProps

    this.styles = this.styles || _getStyleSaver(target);
    inlineProps = this.styles.props;
    this.tween = tween;

    for (p in vars) {
      if (p === "autoRound") {
        continue;
      }

      endValue = vars[p];

      if (_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._plugins[p] && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._checkPlugin)(p, vars, tween, index, target, targets)) {
        // plugins
        continue;
      }

      type = typeof endValue;
      specialProp = _specialProps[p];

      if (type === "function") {
        endValue = endValue.call(tween, index, target, targets);
        type = typeof endValue;
      }

      if (type === "string" && ~endValue.indexOf("random(")) {
        endValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._replaceRandom)(endValue);
      }

      if (specialProp) {
        specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
      } else if (p.substr(0, 2) === "--") {
        //CSS variable
        startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
        endValue += "";
        _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorExp.lastIndex = 0;

        if (!_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._colorExp.test(startValue)) {
          // colors don't have units
          startUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue);
          endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue);
        }

        endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
        this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
        props.push(p);
        inlineProps.push(p, 0, style[p]);
      } else if (type !== "undefined") {
        if (startAt && p in startAt) {
          // in case someone hard-codes a complex value as the start, like top: "calc(2vh / 2)". Without this, it'd use the computed value (always in px)
          startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
          (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isString)(startValue) && ~startValue.indexOf("random(") && (startValue = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._replaceRandom)(startValue));
          (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(startValue + "") || startValue === "auto" || (startValue += _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[p] || (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(_get(target, p)) || ""); // for cases when someone passes in a unitless value like {x: 100}; if we try setting translate(100, 0px) it won't work.

          (startValue + "").charAt(1) === "=" && (startValue = _get(target, p)); // can't work with relative values
        } else {
          startValue = _get(target, p);
        }

        startNum = parseFloat(startValue);
        relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
        relative && (endValue = endValue.substr(2));
        endNum = parseFloat(endValue);

        if (p in _propertyAliases) {
          if (p === "autoAlpha") {
            //special case where we control the visibility along with opacity. We still allow the opacity value to pass through and get tweened.
            if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
              //if visibility is initially set to "hidden", we should interpret that as intent to make opacity 0 (a convenience)
              startNum = 0;
            }

            inlineProps.push("visibility", 0, style.visibility);

            _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
          }

          if (p !== "scale" && p !== "transform") {
            p = _propertyAliases[p];
            ~p.indexOf(",") && (p = p.split(",")[0]);
          }
        }

        isTransformRelated = p in _transformProps; //--- TRANSFORM-RELATED ---

        if (isTransformRelated) {
          this.styles.save(p);

          if (!transformPropTween) {
            cache = target._gsap;
            cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform); // if, for example, gsap.set(... {transform:"translateX(50vw)"}), the _get() call doesn't parse the transform, thus cache.renderTransform won't be set yet so force the parsing of the transform here.

            smooth = vars.smoothOrigin !== false && cache.smooth;
            transformPropTween = this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1); //the first time through, create the rendering PropTween so that it runs LAST (in the linked list, we keep adding to the beginning)

            transformPropTween.dep = 1; //flag it as dependent so that if things get killed/overwritten and this is the only PropTween left, we can safely kill the whole tween.
          }

          if (p === "scale") {
            this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, cache, "scaleY", cache.scaleY, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);
            this._pt.u = 0;
            props.push("scaleY", p);
            p += "X";
          } else if (p === "transformOrigin") {
            inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
            endValue = _convertKeywordsToPercentages(endValue); //in case something like "left top" or "bottom right" is passed in. Convert to percentages.

            if (cache.svg) {
              _applySVGOrigin(target, endValue, 0, smooth, 0, this);
            } else {
              endUnit = parseFloat(endValue.split(" ")[2]) || 0; //handle the zOrigin separately!

              endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);

              _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
            }

            continue;
          } else if (p === "svgOrigin") {
            _applySVGOrigin(target, endValue, 1, smooth, 0, this);

            continue;
          } else if (p in _rotationalProperties) {
            _addRotationalPropTween(this, cache, p, startNum, relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, relative + endValue) : endValue);

            continue;
          } else if (p === "smoothOrigin") {
            _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);

            continue;
          } else if (p === "force3D") {
            cache[p] = endValue;
            continue;
          } else if (p === "transform") {
            _addRawTransformPTs(this, endValue, target);

            continue;
          }
        } else if (!(p in style)) {
          p = _checkPropPrefix(p) || p;
        }

        if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
          startUnit = (startValue + "").substr((startNum + "").length);
          endNum || (endNum = 0); // protect against NaN

          endUnit = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.getUnit)(endValue) || (p in _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units ? _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[p] : startUnit);
          startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
          this._pt = new _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._parseRelative)(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
          this._pt.u = endUnit || 0;

          if (startUnit !== endUnit && endUnit !== "%") {
            //when the tween goes all the way back to the beginning, we need to revert it to the OLD/ORIGINAL value (with those units). We record that as a "b" (beginning) property and point to a render method that handles that. (performance optimization)
            this._pt.b = startValue;
            this._pt.r = _renderCSSPropWithBeginning;
          }
        } else if (!(p in style)) {
          if (p in target) {
            //maybe it's not a style - it could be a property added directly to an element in which case we'll try to animate that.
            this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
          } else if (p !== "parseTransform") {
            (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._missingPlugin)(p, endValue);

            continue;
          }
        } else {
          _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
        }

        isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));
        props.push(p);
      }
    }

    hasPriority && (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._sortPropTweensByPriority)(this);
  },
  render: function render(ratio, data) {
    if (data.tween._time || !_reverting()) {
      var pt = data._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }
    } else {
      data.styles.revert();
    }
  },
  get: _get,
  aliases: _propertyAliases,
  getSetter: function getSetter(target, property, plugin) {
    //returns a setter function that accepts target, property, value and applies it accordingly. Remember, properties like "x" aren't as simple as target.style.property = value because they've got to be applied to a proxy object and then merged into a transform string in a renderer.
    var p = _propertyAliases[property];
    p && p.indexOf(",") < 0 && (property = p);
    return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._isUndefined)(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._getSetter)(target, property);
  },
  core: {
    _removeProperty: _removeProperty,
    _getMatrix: _getMatrix
  }
};
_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.utils.checkPrefix = _checkPropPrefix;
_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.core.getStyleSaver = _getStyleSaver;

(function (positionAndScale, rotation, others, aliases) {
  var all = (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(positionAndScale + "," + rotation + "," + others, function (name) {
    _transformProps[name] = 1;
  });

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(rotation, function (name) {
    _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[name] = "deg";
    _rotationalProperties[name] = 1;
  });

  _propertyAliases[all[13]] = positionAndScale + "," + rotation;

  (0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)(aliases, function (name) {
    var split = name.split(":");
    _propertyAliases[split[1]] = all[split[0]];
  });
})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");

(0,_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._forEachName)("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
  _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__._config.units[name] = "px";
});

_gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.registerPlugin(CSSPlugin);


/***/ }),

/***/ "./node_modules/gsap/gsap-core.js":
/*!****************************************!*\
  !*** ./node_modules/gsap/gsap-core.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Animation: () => (/* binding */ Animation),
/* harmony export */   Back: () => (/* binding */ Back),
/* harmony export */   Bounce: () => (/* binding */ Bounce),
/* harmony export */   Circ: () => (/* binding */ Circ),
/* harmony export */   Cubic: () => (/* binding */ Cubic),
/* harmony export */   Elastic: () => (/* binding */ Elastic),
/* harmony export */   Expo: () => (/* binding */ Expo),
/* harmony export */   GSCache: () => (/* binding */ GSCache),
/* harmony export */   Linear: () => (/* binding */ Linear),
/* harmony export */   Power0: () => (/* binding */ Power0),
/* harmony export */   Power1: () => (/* binding */ Power1),
/* harmony export */   Power2: () => (/* binding */ Power2),
/* harmony export */   Power3: () => (/* binding */ Power3),
/* harmony export */   Power4: () => (/* binding */ Power4),
/* harmony export */   PropTween: () => (/* binding */ PropTween),
/* harmony export */   Quad: () => (/* binding */ Quad),
/* harmony export */   Quart: () => (/* binding */ Quart),
/* harmony export */   Quint: () => (/* binding */ Quint),
/* harmony export */   Sine: () => (/* binding */ Sine),
/* harmony export */   SteppedEase: () => (/* binding */ SteppedEase),
/* harmony export */   Strong: () => (/* binding */ Strong),
/* harmony export */   Timeline: () => (/* binding */ Timeline),
/* harmony export */   TimelineLite: () => (/* binding */ Timeline),
/* harmony export */   TimelineMax: () => (/* binding */ Timeline),
/* harmony export */   Tween: () => (/* binding */ Tween),
/* harmony export */   TweenLite: () => (/* binding */ Tween),
/* harmony export */   TweenMax: () => (/* binding */ Tween),
/* harmony export */   _checkPlugin: () => (/* binding */ _checkPlugin),
/* harmony export */   _colorExp: () => (/* binding */ _colorExp),
/* harmony export */   _colorStringFilter: () => (/* binding */ _colorStringFilter),
/* harmony export */   _config: () => (/* binding */ _config),
/* harmony export */   _forEachName: () => (/* binding */ _forEachName),
/* harmony export */   _getCache: () => (/* binding */ _getCache),
/* harmony export */   _getProperty: () => (/* binding */ _getProperty),
/* harmony export */   _getSetter: () => (/* binding */ _getSetter),
/* harmony export */   _isString: () => (/* binding */ _isString),
/* harmony export */   _isUndefined: () => (/* binding */ _isUndefined),
/* harmony export */   _missingPlugin: () => (/* binding */ _missingPlugin),
/* harmony export */   _numExp: () => (/* binding */ _numExp),
/* harmony export */   _numWithUnitExp: () => (/* binding */ _numWithUnitExp),
/* harmony export */   _parseRelative: () => (/* binding */ _parseRelative),
/* harmony export */   _plugins: () => (/* binding */ _plugins),
/* harmony export */   _relExp: () => (/* binding */ _relExp),
/* harmony export */   _removeLinkedListItem: () => (/* binding */ _removeLinkedListItem),
/* harmony export */   _renderComplexString: () => (/* binding */ _renderComplexString),
/* harmony export */   _replaceRandom: () => (/* binding */ _replaceRandom),
/* harmony export */   _round: () => (/* binding */ _round),
/* harmony export */   _roundModifier: () => (/* binding */ _roundModifier),
/* harmony export */   _setDefaults: () => (/* binding */ _setDefaults),
/* harmony export */   _sortPropTweensByPriority: () => (/* binding */ _sortPropTweensByPriority),
/* harmony export */   _ticker: () => (/* binding */ _ticker),
/* harmony export */   clamp: () => (/* binding */ clamp),
/* harmony export */   "default": () => (/* binding */ gsap),
/* harmony export */   distribute: () => (/* binding */ distribute),
/* harmony export */   getUnit: () => (/* binding */ getUnit),
/* harmony export */   gsap: () => (/* binding */ gsap),
/* harmony export */   interpolate: () => (/* binding */ interpolate),
/* harmony export */   mapRange: () => (/* binding */ mapRange),
/* harmony export */   normalize: () => (/* binding */ normalize),
/* harmony export */   pipe: () => (/* binding */ pipe),
/* harmony export */   random: () => (/* binding */ random),
/* harmony export */   selector: () => (/* binding */ selector),
/* harmony export */   shuffle: () => (/* binding */ shuffle),
/* harmony export */   snap: () => (/* binding */ snap),
/* harmony export */   splitColor: () => (/* binding */ splitColor),
/* harmony export */   toArray: () => (/* binding */ toArray),
/* harmony export */   unitize: () => (/* binding */ unitize),
/* harmony export */   wrap: () => (/* binding */ wrap),
/* harmony export */   wrapYoyo: () => (/* binding */ wrapYoyo)
/* harmony export */ });
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*!
 * GSAP 3.12.3
 * https://gsap.com
 *
 * @license Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/

/* eslint-disable */
var _config = {
  autoSleep: 120,
  force3D: "auto",
  nullTargetWarn: 1,
  units: {
    lineHeight: ""
  }
},
    _defaults = {
  duration: .5,
  overwrite: false,
  delay: 0
},
    _suppressOverwrites,
    _reverting,
    _context,
    _bigNum = 1e8,
    _tinyNum = 1 / _bigNum,
    _2PI = Math.PI * 2,
    _HALF_PI = _2PI / 4,
    _gsID = 0,
    _sqrt = Math.sqrt,
    _cos = Math.cos,
    _sin = Math.sin,
    _isString = function _isString(value) {
  return typeof value === "string";
},
    _isFunction = function _isFunction(value) {
  return typeof value === "function";
},
    _isNumber = function _isNumber(value) {
  return typeof value === "number";
},
    _isUndefined = function _isUndefined(value) {
  return typeof value === "undefined";
},
    _isObject = function _isObject(value) {
  return typeof value === "object";
},
    _isNotFalse = function _isNotFalse(value) {
  return value !== false;
},
    _windowExists = function _windowExists() {
  return typeof window !== "undefined";
},
    _isFuncOrString = function _isFuncOrString(value) {
  return _isFunction(value) || _isString(value);
},
    _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function () {},
    // note: IE10 has ArrayBuffer, but NOT ArrayBuffer.isView().
_isArray = Array.isArray,
    _strictNumExp = /(?:-?\.?\d|\.)+/gi,
    //only numbers (including negatives and decimals) but NOT relative values.
_numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
    //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.
_numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
    _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
    //duplicate so that while we're looping through matches from exec(), it doesn't contaminate the lastIndex of _numExp which we use to search for colors too.
_relExp = /[+-]=-?[.\d]+/,
    _delimitedValueExp = /[^,'"\[\]\s]+/gi,
    // previously /[#\-+.]*\b[a-z\d\-=+%.]+/gi but didn't catch special characters.
_unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
    _globalTimeline,
    _win,
    _coreInitted,
    _doc,
    _globals = {},
    _installScope = {},
    _coreReady,
    _install = function _install(scope) {
  return (_installScope = _merge(scope, _globals)) && gsap;
},
    _missingPlugin = function _missingPlugin(property, value) {
  return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
},
    _warn = function _warn(message, suppress) {
  return !suppress && console.warn(message);
},
    _addGlobal = function _addGlobal(name, obj) {
  return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
},
    _emptyFunc = function _emptyFunc() {
  return 0;
},
    _startAtRevertConfig = {
  suppressEvents: true,
  isStart: true,
  kill: false
},
    _revertConfigNoKill = {
  suppressEvents: true,
  kill: false
},
    _revertConfig = {
  suppressEvents: true
},
    _reservedProps = {},
    _lazyTweens = [],
    _lazyLookup = {},
    _lastRenderedFrame,
    _plugins = {},
    _effects = {},
    _nextGCFrame = 30,
    _harnessPlugins = [],
    _callbackNames = "",
    _harness = function _harness(targets) {
  var target = targets[0],
      harnessPlugin,
      i;
  _isObject(target) || _isFunction(target) || (targets = [targets]);

  if (!(harnessPlugin = (target._gsap || {}).harness)) {
    // find the first target with a harness. We assume targets passed into an animation will be of similar type, meaning the same kind of harness can be used for them all (performance optimization)
    i = _harnessPlugins.length;

    while (i-- && !_harnessPlugins[i].targetTest(target)) {}

    harnessPlugin = _harnessPlugins[i];
  }

  i = targets.length;

  while (i--) {
    targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
  }

  return targets;
},
    _getCache = function _getCache(target) {
  return target._gsap || _harness(toArray(target))[0]._gsap;
},
    _getProperty = function _getProperty(target, property, v) {
  return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
},
    _forEachName = function _forEachName(names, func) {
  return (names = names.split(",")).forEach(func) || names;
},
    //split a comma-delimited list of names into an array, then run a forEach() function and return the split array (this is just a way to consolidate/shorten some code).
_round = function _round(value) {
  return Math.round(value * 100000) / 100000 || 0;
},
    _roundPrecise = function _roundPrecise(value) {
  return Math.round(value * 10000000) / 10000000 || 0;
},
    // increased precision mostly for timing values.
_parseRelative = function _parseRelative(start, value) {
  var operator = value.charAt(0),
      end = parseFloat(value.substr(2));
  start = parseFloat(start);
  return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
},
    _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
  //searches one array to find matches for any of the items in the toFind array. As soon as one is found, it returns true. It does NOT return all the matches; it's simply a boolean search.
  var l = toFind.length,
      i = 0;

  for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l;) {}

  return i < l;
},
    _lazyRender = function _lazyRender() {
  var l = _lazyTweens.length,
      a = _lazyTweens.slice(0),
      i,
      tween;

  _lazyLookup = {};
  _lazyTweens.length = 0;

  for (i = 0; i < l; i++) {
    tween = a[i];
    tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
  }
},
    _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
  _lazyTweens.length && !_reverting && _lazyRender();
  animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
  _lazyTweens.length && !_reverting && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.
},
    _numericIfPossible = function _numericIfPossible(value) {
  var n = parseFloat(value);
  return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
},
    _passThrough = function _passThrough(p) {
  return p;
},
    _setDefaults = function _setDefaults(obj, defaults) {
  for (var p in defaults) {
    p in obj || (obj[p] = defaults[p]);
  }

  return obj;
},
    _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {
  return function (obj, defaults) {
    for (var p in defaults) {
      p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults[p]);
    }
  };
},
    _merge = function _merge(base, toMerge) {
  for (var p in toMerge) {
    base[p] = toMerge[p];
  }

  return base;
},
    _mergeDeep = function _mergeDeep(base, toMerge) {
  for (var p in toMerge) {
    p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
  }

  return base;
},
    _copyExcluding = function _copyExcluding(obj, excluding) {
  var copy = {},
      p;

  for (p in obj) {
    p in excluding || (copy[p] = obj[p]);
  }

  return copy;
},
    _inheritDefaults = function _inheritDefaults(vars) {
  var parent = vars.parent || _globalTimeline,
      func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;

  if (_isNotFalse(vars.inherit)) {
    while (parent) {
      func(vars, parent.vars.defaults);
      parent = parent.parent || parent._dp;
    }
  }

  return vars;
},
    _arraysMatch = function _arraysMatch(a1, a2) {
  var i = a1.length,
      match = i === a2.length;

  while (match && i-- && a1[i] === a2[i]) {}

  return i < 0;
},
    _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
  if (firstProp === void 0) {
    firstProp = "_first";
  }

  if (lastProp === void 0) {
    lastProp = "_last";
  }

  var prev = parent[lastProp],
      t;

  if (sortBy) {
    t = child[sortBy];

    while (prev && prev[sortBy] > t) {
      prev = prev._prev;
    }
  }

  if (prev) {
    child._next = prev._next;
    prev._next = child;
  } else {
    child._next = parent[firstProp];
    parent[firstProp] = child;
  }

  if (child._next) {
    child._next._prev = child;
  } else {
    parent[lastProp] = child;
  }

  child._prev = prev;
  child.parent = child._dp = parent;
  return child;
},
    _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
  if (firstProp === void 0) {
    firstProp = "_first";
  }

  if (lastProp === void 0) {
    lastProp = "_last";
  }

  var prev = child._prev,
      next = child._next;

  if (prev) {
    prev._next = next;
  } else if (parent[firstProp] === child) {
    parent[firstProp] = next;
  }

  if (next) {
    next._prev = prev;
  } else if (parent[lastProp] === child) {
    parent[lastProp] = prev;
  }

  child._next = child._prev = child.parent = null; // don't delete the _dp just so we can revert if necessary. But parent should be null to indicate the item isn't in a linked list.
},
    _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
  child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove && child.parent.remove(child);
  child._act = 0;
},
    _uncache = function _uncache(animation, child) {
  if (animation && (!child || child._end > animation._dur || child._start < 0)) {
    // performance optimization: if a child animation is passed in we should only uncache if that child EXTENDS the animation (its end time is beyond the end)
    var a = animation;

    while (a) {
      a._dirty = 1;
      a = a.parent;
    }
  }

  return animation;
},
    _recacheAncestors = function _recacheAncestors(animation) {
  var parent = animation.parent;

  while (parent && parent.parent) {
    //sometimes we must force a re-sort of all children and update the duration/totalDuration of all ancestor timelines immediately in case, for example, in the middle of a render loop, one tween alters another tween's timeScale which shoves its startTime before 0, forcing the parent timeline to shift around and shiftChildren() which could affect that next tween's render (startTime). Doesn't matter for the root timeline though.
    parent._dirty = 1;
    parent.totalDuration();
    parent = parent.parent;
  }

  return animation;
},
    _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {
  return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
},
    _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
  return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
},
    _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
  return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
},
    // feed in the totalTime and cycleDuration and it'll return the cycle (iteration minus 1) and if the playhead is exactly at the very END, it will NOT bump up to the next cycle.
_animationCycle = function _animationCycle(tTime, cycleDuration) {
  var whole = Math.floor(tTime /= cycleDuration);
  return tTime && whole === tTime ? whole - 1 : whole;
},
    _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
  return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
},
    _setEnd = function _setEnd(animation) {
  return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
},
    _alignPlayhead = function _alignPlayhead(animation, totalTime) {
  // adjusts the animation's _start and _end according to the provided totalTime (only if the parent's smoothChildTiming is true and the animation isn't paused). It doesn't do any rendering or forcing things back into parent timelines, etc. - that's what totalTime() is for.
  var parent = animation._dp;

  if (parent && parent.smoothChildTiming && animation._ts) {
    animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));

    _setEnd(animation);

    parent._dirty || _uncache(parent, animation); //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.
  }

  return animation;
},

/*
_totalTimeToTime = (clampedTotalTime, duration, repeat, repeatDelay, yoyo) => {
	let cycleDuration = duration + repeatDelay,
		time = _round(clampedTotalTime % cycleDuration);
	if (time > duration) {
		time = duration;
	}
	return (yoyo && (~~(clampedTotalTime / cycleDuration) & 1)) ? duration - time : time;
},
*/
_postAddChecks = function _postAddChecks(timeline, child) {
  var t;

  if (child._time || !child._dur && child._initted || child._start < timeline._time && (child._dur || !child.add)) {
    // in case, for example, the _start is moved on a tween that has already rendered, or if it's being inserted into a timeline BEFORE where the playhead is currently. Imagine it's at its end state, then the startTime is moved WAY later (after the end of this timeline), it should render at its beginning. Special case: if it's a timeline (has .add() method) and no duration, we can skip rendering because the user may be populating it AFTER adding it to a parent timeline (unconventional, but possible, and we wouldn't want it to get removed if the parent's autoRemoveChildren is true).
    t = _parentToChildTotalTime(timeline.rawTime(), child);

    if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
      child.render(t, true);
    }
  } //if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.


  if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
    //in case any of the ancestors had completed but should now be enabled...
    if (timeline._dur < timeline.duration()) {
      t = timeline;

      while (t._dp) {
        t.rawTime() >= 0 && t.totalTime(t._tTime); //moves the timeline (shifts its startTime) if necessary, and also enables it. If it's currently zero, though, it may not be scheduled to render until later so there's no need to force it to align with the current playhead position. Only move to catch up with the playhead.

        t = t._dp;
      }
    }

    timeline._zTime = -_tinyNum; // helps ensure that the next render() will be forced (crossingStart = true in render()), even if the duration hasn't changed (we're adding a child which would need to get rendered). Definitely an edge case. Note: we MUST do this AFTER the loop above where the totalTime() might trigger a render() because this _addToTimeline() method gets called from the Animation constructor, BEFORE tweens even record their targets, etc. so we wouldn't want things to get triggered in the wrong order.
  }
},
    _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
  child.parent && _removeFromParent(child);
  child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
  child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));

  _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);

  _isFromOrFromStart(child) || (timeline._recent = child);
  skipChecks || _postAddChecks(timeline, child);
  timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime); // if the timeline is reversed and the new child makes it longer, we may need to adjust the parent's _start (push it back)

  return timeline;
},
    _scrollTrigger = function _scrollTrigger(animation, trigger) {
  return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
},
    _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {
  _initTween(tween, time, tTime);

  if (!tween._initted) {
    return 1;
  }

  if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
    _lazyTweens.push(tween);

    tween._lazy = [tTime, suppressEvents];
    return 1;
  }
},
    _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {
  var parent = _ref.parent;
  return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));
},
    // check parent's _lock because when a timeline repeats/yoyos and does its artificial wrapping, we shouldn't force the ratio back to 0
_isFromOrFromStart = function _isFromOrFromStart(_ref2) {
  var data = _ref2.data;
  return data === "isFromStart" || data === "isStart";
},
    _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
  var prevRatio = tween.ratio,
      ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1,
      // if the tween or its parent is reversed and the totalTime is 0, we should go to a ratio of 0. Edge case: if a from() or fromTo() stagger tween is placed later in a timeline, the "startAt" zero-duration tween could initially render at a time when the parent timeline's playhead is technically BEFORE where this tween is, so make sure that any "from" and "fromTo" startAt tweens are rendered the first time at a ratio of 1.
  repeatDelay = tween._rDelay,
      tTime = 0,
      pt,
      iteration,
      prevIteration;

  if (repeatDelay && tween._repeat) {
    // in case there's a zero-duration tween that has a repeat with a repeatDelay
    tTime = _clamp(0, tween._tDur, totalTime);
    iteration = _animationCycle(tTime, repeatDelay);
    tween._yoyo && iteration & 1 && (ratio = 1 - ratio);

    if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
      // if iteration changed
      prevRatio = 1 - ratio;
      tween.vars.repeatRefresh && tween._initted && tween.invalidate();
    }
  }

  if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
    if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {
      // if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.
      return;
    }

    prevIteration = tween._zTime;
    tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0); // when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.

    suppressEvents || (suppressEvents = totalTime && !prevIteration); // if it was rendered previously at exactly 0 (_zTime) and now the playhead is moving away, DON'T fire callbacks otherwise they'll seem like duplicates.

    tween.ratio = ratio;
    tween._from && (ratio = 1 - ratio);
    tween._time = 0;
    tween._tTime = tTime;
    pt = tween._pt;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }

    totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
    tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
    tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");

    if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
      ratio && _removeFromParent(tween, 1);

      if (!suppressEvents && !_reverting) {
        _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);

        tween._prom && tween._prom();
      }
    }
  } else if (!tween._zTime) {
    tween._zTime = totalTime;
  }
},
    _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
  var child;

  if (time > prevTime) {
    child = animation._first;

    while (child && child._start <= time) {
      if (child.data === "isPause" && child._start > prevTime) {
        return child;
      }

      child = child._next;
    }
  } else {
    child = animation._last;

    while (child && child._start >= time) {
      if (child.data === "isPause" && child._start < prevTime) {
        return child;
      }

      child = child._prev;
    }
  }
},
    _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {
  var repeat = animation._repeat,
      dur = _roundPrecise(duration) || 0,
      totalProgress = animation._tTime / animation._tDur;
  totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
  animation._dur = dur;
  animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
  totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
  animation.parent && _setEnd(animation);
  skipUncache || _uncache(animation.parent, animation);
  return animation;
},
    _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
  return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
},
    _zeroPosition = {
  _start: 0,
  endTime: _emptyFunc,
  totalDuration: _emptyFunc
},
    _parsePosition = function _parsePosition(animation, position, percentAnimation) {
  var labels = animation.labels,
      recent = animation._recent || _zeroPosition,
      clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur,
      //in case there's a child that infinitely repeats, users almost never intend for the insertion point of a new child to be based on a SUPER long value like that so we clip it and assume the most recently-added child's endTime should be used instead.
  i,
      offset,
      isPercent;

  if (_isString(position) && (isNaN(position) || position in labels)) {
    //if the string is a number like "1", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).
    offset = position.charAt(0);
    isPercent = position.substr(-1) === "%";
    i = position.indexOf("=");

    if (offset === "<" || offset === ">") {
      i >= 0 && (position = position.replace(/=/, ""));
      return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
    }

    if (i < 0) {
      position in labels || (labels[position] = clippedDuration);
      return labels[position];
    }

    offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));

    if (isPercent && percentAnimation) {
      offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
    }

    return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
  }

  return position == null ? clippedDuration : +position;
},
    _createTweenType = function _createTweenType(type, params, timeline) {
  var isLegacy = _isNumber(params[1]),
      varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
      vars = params[varsIndex],
      irVars,
      parent;

  isLegacy && (vars.duration = params[1]);
  vars.parent = timeline;

  if (type) {
    irVars = vars;
    parent = timeline;

    while (parent && !("immediateRender" in irVars)) {
      // inheritance hasn't happened yet, but someone may have set a default in an ancestor timeline. We could do vars.immediateRender = _isNotFalse(_inheritDefaults(vars).immediateRender) but that'd exact a slight performance penalty because _inheritDefaults() also runs in the Tween constructor. We're paying a small kb price here to gain speed.
      irVars = parent.vars.defaults || {};
      parent = _isNotFalse(parent.vars.inherit) && parent.parent;
    }

    vars.immediateRender = _isNotFalse(irVars.immediateRender);
    type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1]; // "from" vars
  }

  return new Tween(params[0], vars, params[varsIndex + 1]);
},
    _conditionalReturn = function _conditionalReturn(value, func) {
  return value || value === 0 ? func(value) : func;
},
    _clamp = function _clamp(min, max, value) {
  return value < min ? min : value > max ? max : value;
},
    getUnit = function getUnit(value, v) {
  return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
},
    // note: protect against padded numbers as strings, like "100.100". That shouldn't return "00" as the unit. If it's numeric, return no unit.
clamp = function clamp(min, max, value) {
  return _conditionalReturn(value, function (v) {
    return _clamp(min, max, v);
  });
},
    _slice = [].slice,
    _isArrayLike = function _isArrayLike(value, nonEmpty) {
  return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
},
    _flatten = function _flatten(ar, leaveStrings, accumulator) {
  if (accumulator === void 0) {
    accumulator = [];
  }

  return ar.forEach(function (value) {
    var _accumulator;

    return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
  }) || accumulator;
},
    //takes any value and returns an array. If it's a string (and leaveStrings isn't true), it'll use document.querySelectorAll() and convert that to an array. It'll also accept iterables like jQuery objects.
toArray = function toArray(value, scope, leaveStrings) {
  return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
},
    selector = function selector(value) {
  value = toArray(value)[0] || _warn("Invalid scope") || {};
  return function (v) {
    var el = value.current || value.nativeElement || value;
    return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
  };
},
    shuffle = function shuffle(a) {
  return a.sort(function () {
    return .5 - Math.random();
  });
},
    // alternative that's a bit faster and more reliably diverse but bigger:   for (let j, v, i = a.length; i; j = Math.floor(Math.random() * i), v = a[--i], a[i] = a[j], a[j] = v); return a;
//for distributing values across an array. Can accept a number, a function or (most commonly) a function which can contain the following properties: {base, amount, from, ease, grid, axis, length, each}. Returns a function that expects the following parameters: index, target, array. Recognizes the following
distribute = function distribute(v) {
  if (_isFunction(v)) {
    return v;
  }

  var vars = _isObject(v) ? v : {
    each: v
  },
      //n:1 is just to indicate v was a number; we leverage that later to set v according to the length we get. If a number is passed in, we treat it like the old stagger value where 0.1, for example, would mean that things would be distributed with 0.1 between each element in the array rather than a total "amount" that's chunked out among them all.
  ease = _parseEase(vars.ease),
      from = vars.from || 0,
      base = parseFloat(vars.base) || 0,
      cache = {},
      isDecimal = from > 0 && from < 1,
      ratios = isNaN(from) || isDecimal,
      axis = vars.axis,
      ratioX = from,
      ratioY = from;

  if (_isString(from)) {
    ratioX = ratioY = {
      center: .5,
      edges: .5,
      end: 1
    }[from] || 0;
  } else if (!isDecimal && ratios) {
    ratioX = from[0];
    ratioY = from[1];
  }

  return function (i, target, a) {
    var l = (a || vars).length,
        distances = cache[l],
        originX,
        originY,
        x,
        y,
        d,
        j,
        max,
        min,
        wrapAt;

    if (!distances) {
      wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];

      if (!wrapAt) {
        max = -_bigNum;

        while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {}

        wrapAt < l && wrapAt--;
      }

      distances = cache[l] = [];
      originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
      originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
      max = 0;
      min = _bigNum;

      for (j = 0; j < l; j++) {
        x = j % wrapAt - originX;
        y = originY - (j / wrapAt | 0);
        distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
        d > max && (max = d);
        d < min && (min = d);
      }

      from === "random" && shuffle(distances);
      distances.max = max - min;
      distances.min = min;
      distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
      distances.b = l < 0 ? base - l : base;
      distances.u = getUnit(vars.amount || vars.each) || 0; //unit

      ease = ease && l < 0 ? _invertEase(ease) : ease;
    }

    l = (distances[i] - distances.min) / distances.max || 0;
    return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u; //round in order to work around floating point errors
  };
},
    _roundModifier = function _roundModifier(v) {
  //pass in 0.1 get a function that'll round to the nearest tenth, or 5 to round to the closest 5, or 0.001 to the closest 1000th, etc.
  var p = Math.pow(10, ((v + "").split(".")[1] || "").length); //to avoid floating point math errors (like 24 * 0.1 == 2.4000000000000004), we chop off at a specific number of decimal places (much faster than toFixed())

  return function (raw) {
    var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);

    return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw)); // n - n % 1 replaces Math.floor() in order to handle negative values properly. For example, Math.floor(-150.00000000000003) is 151!
  };
},
    snap = function snap(snapTo, value) {
  var isArray = _isArray(snapTo),
      radius,
      is2D;

  if (!isArray && _isObject(snapTo)) {
    radius = isArray = snapTo.radius || _bigNum;

    if (snapTo.values) {
      snapTo = toArray(snapTo.values);

      if (is2D = !_isNumber(snapTo[0])) {
        radius *= radius; //performance optimization so we don't have to Math.sqrt() in the loop.
      }
    } else {
      snapTo = _roundModifier(snapTo.increment);
    }
  }

  return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
    is2D = snapTo(raw);
    return Math.abs(is2D - raw) <= radius ? is2D : raw;
  } : function (raw) {
    var x = parseFloat(is2D ? raw.x : raw),
        y = parseFloat(is2D ? raw.y : 0),
        min = _bigNum,
        closest = 0,
        i = snapTo.length,
        dx,
        dy;

    while (i--) {
      if (is2D) {
        dx = snapTo[i].x - x;
        dy = snapTo[i].y - y;
        dx = dx * dx + dy * dy;
      } else {
        dx = Math.abs(snapTo[i] - x);
      }

      if (dx < min) {
        min = dx;
        closest = i;
      }
    }

    closest = !radius || min <= radius ? snapTo[closest] : raw;
    return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
  });
},
    random = function random(min, max, roundingIncrement, returnFunction) {
  return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
    return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
  });
},
    pipe = function pipe() {
  for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
    functions[_key] = arguments[_key];
  }

  return function (value) {
    return functions.reduce(function (v, f) {
      return f(v);
    }, value);
  };
},
    unitize = function unitize(func, unit) {
  return function (value) {
    return func(parseFloat(value)) + (unit || getUnit(value));
  };
},
    normalize = function normalize(min, max, value) {
  return mapRange(min, max, 0, 1, value);
},
    _wrapArray = function _wrapArray(a, wrapper, value) {
  return _conditionalReturn(value, function (index) {
    return a[~~wrapper(index)];
  });
},
    wrap = function wrap(min, max, value) {
  // NOTE: wrap() CANNOT be an arrow function! A very odd compiling bug causes problems (unrelated to GSAP).
  var range = max - min;
  return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function (value) {
    return (range + (value - min) % range) % range + min;
  });
},
    wrapYoyo = function wrapYoyo(min, max, value) {
  var range = max - min,
      total = range * 2;
  return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function (value) {
    value = (total + (value - min) % total) % total || 0;
    return min + (value > range ? total - value : value);
  });
},
    _replaceRandom = function _replaceRandom(value) {
  //replaces all occurrences of random(...) in a string with the calculated random value. can be a range like random(-100, 100, 5) or an array like random([0, 100, 500])
  var prev = 0,
      s = "",
      i,
      nums,
      end,
      isArray;

  while (~(i = value.indexOf("random(", prev))) {
    end = value.indexOf(")", i);
    isArray = value.charAt(i + 7) === "[";
    nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
    s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
    prev = end + 1;
  }

  return s + value.substr(prev, value.length - prev);
},
    mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
  var inRange = inMax - inMin,
      outRange = outMax - outMin;
  return _conditionalReturn(value, function (value) {
    return outMin + ((value - inMin) / inRange * outRange || 0);
  });
},
    interpolate = function interpolate(start, end, progress, mutate) {
  var func = isNaN(start + end) ? 0 : function (p) {
    return (1 - p) * start + p * end;
  };

  if (!func) {
    var isString = _isString(start),
        master = {},
        p,
        i,
        interpolators,
        l,
        il;

    progress === true && (mutate = 1) && (progress = null);

    if (isString) {
      start = {
        p: start
      };
      end = {
        p: end
      };
    } else if (_isArray(start) && !_isArray(end)) {
      interpolators = [];
      l = start.length;
      il = l - 2;

      for (i = 1; i < l; i++) {
        interpolators.push(interpolate(start[i - 1], start[i])); //build the interpolators up front as a performance optimization so that when the function is called many times, it can just reuse them.
      }

      l--;

      func = function func(p) {
        p *= l;
        var i = Math.min(il, ~~p);
        return interpolators[i](p - i);
      };

      progress = end;
    } else if (!mutate) {
      start = _merge(_isArray(start) ? [] : {}, start);
    }

    if (!interpolators) {
      for (p in end) {
        _addPropTween.call(master, start, p, "get", end[p]);
      }

      func = function func(p) {
        return _renderPropTweens(p, master) || (isString ? start.p : start);
      };
    }
  }

  return _conditionalReturn(progress, func);
},
    _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
  //used for nextLabel() and previousLabel()
  var labels = timeline.labels,
      min = _bigNum,
      p,
      distance,
      label;

  for (p in labels) {
    distance = labels[p] - fromTime;

    if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
      label = p;
      min = distance;
    }
  }

  return label;
},
    _callback = function _callback(animation, type, executeLazyFirst) {
  var v = animation.vars,
      callback = v[type],
      prevContext = _context,
      context = animation._ctx,
      params,
      scope,
      result;

  if (!callback) {
    return;
  }

  params = v[type + "Params"];
  scope = v.callbackScope || animation;
  executeLazyFirst && _lazyTweens.length && _lazyRender(); //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.

  context && (_context = context);
  result = params ? callback.apply(scope, params) : callback.call(scope);
  _context = prevContext;
  return result;
},
    _interrupt = function _interrupt(animation) {
  _removeFromParent(animation);

  animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
  animation.progress() < 1 && _callback(animation, "onInterrupt");
  return animation;
},
    _quickTween,
    _registerPluginQueue = [],
    _createPlugin = function _createPlugin(config) {
  if (_windowExists() && config) {
    // edge case: some build tools may pass in a null/undefined value
    config = !config.name && config["default"] || config; //UMD packaging wraps things oddly, so for example MotionPathHelper becomes {MotionPathHelper:MotionPathHelper, default:MotionPathHelper}.

    var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
      this._props = [];
    } : config,
        //in case someone passes in an object that's not a plugin, like CustomEase
    instanceDefaults = {
      init: _emptyFunc,
      render: _renderPropTweens,
      add: _addPropTween,
      kill: _killPropTweensOf,
      modifier: _addPluginModifier,
      rawVars: 0
    },
        statics = {
      targetTest: 0,
      get: 0,
      getSetter: _getSetter,
      aliases: {},
      register: 0
    };

    _wake();

    if (config !== Plugin) {
      if (_plugins[name]) {
        return;
      }

      _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics)); //static methods


      _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics))); //instance methods


      _plugins[Plugin.prop = name] = Plugin;

      if (config.targetTest) {
        _harnessPlugins.push(Plugin);

        _reservedProps[name] = 1;
      }

      name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin"; //for the global name. "motionPath" should become MotionPathPlugin
    }

    _addGlobal(name, Plugin);

    config.register && config.register(gsap, Plugin, PropTween);
  } else {
    config && _registerPluginQueue.push(config);
  }
},

/*
 * --------------------------------------------------------------------------------------
 * COLORS
 * --------------------------------------------------------------------------------------
 */
_255 = 255,
    _colorLookup = {
  aqua: [0, _255, _255],
  lime: [0, _255, 0],
  silver: [192, 192, 192],
  black: [0, 0, 0],
  maroon: [128, 0, 0],
  teal: [0, 128, 128],
  blue: [0, 0, _255],
  navy: [0, 0, 128],
  white: [_255, _255, _255],
  olive: [128, 128, 0],
  yellow: [_255, _255, 0],
  orange: [_255, 165, 0],
  gray: [128, 128, 128],
  purple: [128, 0, 128],
  green: [0, 128, 0],
  red: [_255, 0, 0],
  pink: [_255, 192, 203],
  cyan: [0, _255, _255],
  transparent: [_255, _255, _255, 0]
},
    // possible future idea to replace the hard-coded color name values - put this in the ticker.wake() where we set the _doc:
// let ctx = _doc.createElement("canvas").getContext("2d");
// _forEachName("aqua,lime,silver,black,maroon,teal,blue,navy,white,olive,yellow,orange,gray,purple,green,red,pink,cyan", color => {ctx.fillStyle = color; _colorLookup[color] = splitColor(ctx.fillStyle)});
_hue = function _hue(h, m1, m2) {
  h += h < 0 ? 1 : h > 1 ? -1 : 0;
  return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
},
    splitColor = function splitColor(v, toHSL, forceAlpha) {
  var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0,
      r,
      g,
      b,
      h,
      s,
      l,
      max,
      min,
      d,
      wasHSL;

  if (!a) {
    if (v.substr(-1) === ",") {
      //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)" - in this example "blue," has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.
      v = v.substr(0, v.length - 1);
    }

    if (_colorLookup[v]) {
      a = _colorLookup[v];
    } else if (v.charAt(0) === "#") {
      if (v.length < 6) {
        //for shorthand like #9F0 or #9F0F (could have alpha)
        r = v.charAt(1);
        g = v.charAt(2);
        b = v.charAt(3);
        v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
      }

      if (v.length === 9) {
        // hex with alpha, like #fd5e53ff
        a = parseInt(v.substr(1, 6), 16);
        return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
      }

      v = parseInt(v.substr(1), 16);
      a = [v >> 16, v >> 8 & _255, v & _255];
    } else if (v.substr(0, 3) === "hsl") {
      a = wasHSL = v.match(_strictNumExp);

      if (!toHSL) {
        h = +a[0] % 360 / 360;
        s = +a[1] / 100;
        l = +a[2] / 100;
        g = l <= .5 ? l * (s + 1) : l + s - l * s;
        r = l * 2 - g;
        a.length > 3 && (a[3] *= 1); //cast as number

        a[0] = _hue(h + 1 / 3, r, g);
        a[1] = _hue(h, r, g);
        a[2] = _hue(h - 1 / 3, r, g);
      } else if (~v.indexOf("=")) {
        //if relative values are found, just return the raw strings with the relative prefixes in place.
        a = v.match(_numExp);
        forceAlpha && a.length < 4 && (a[3] = 1);
        return a;
      }
    } else {
      a = v.match(_strictNumExp) || _colorLookup.transparent;
    }

    a = a.map(Number);
  }

  if (toHSL && !wasHSL) {
    r = a[0] / _255;
    g = a[1] / _255;
    b = a[2] / _255;
    max = Math.max(r, g, b);
    min = Math.min(r, g, b);
    l = (max + min) / 2;

    if (max === min) {
      h = s = 0;
    } else {
      d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
      h *= 60;
    }

    a[0] = ~~(h + .5);
    a[1] = ~~(s * 100 + .5);
    a[2] = ~~(l * 100 + .5);
  }

  forceAlpha && a.length < 4 && (a[3] = 1);
  return a;
},
    _colorOrderData = function _colorOrderData(v) {
  // strips out the colors from the string, finds all the numeric slots (with units) and returns an array of those. The Array also has a "c" property which is an Array of the index values where the colors belong. This is to help work around issues where there's a mis-matched order of color/numeric data like drop-shadow(#f00 0px 1px 2px) and drop-shadow(0x 1px 2px #f00). This is basically a helper function used in _formatColors()
  var values = [],
      c = [],
      i = -1;
  v.split(_colorExp).forEach(function (v) {
    var a = v.match(_numWithUnitExp) || [];
    values.push.apply(values, a);
    c.push(i += a.length + 1);
  });
  values.c = c;
  return values;
},
    _formatColors = function _formatColors(s, toHSL, orderMatchData) {
  var result = "",
      colors = (s + result).match(_colorExp),
      type = toHSL ? "hsla(" : "rgba(",
      i = 0,
      c,
      shell,
      d,
      l;

  if (!colors) {
    return s;
  }

  colors = colors.map(function (color) {
    return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
  });

  if (orderMatchData) {
    d = _colorOrderData(s);
    c = orderMatchData.c;

    if (c.join(result) !== d.c.join(result)) {
      shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
      l = shell.length - 1;

      for (; i < l; i++) {
        result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
      }
    }
  }

  if (!shell) {
    shell = s.split(_colorExp);
    l = shell.length - 1;

    for (; i < l; i++) {
      result += shell[i] + colors[i];
    }
  }

  return result + shell[l];
},
    _colorExp = function () {
  var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
      //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.,
  p;

  for (p in _colorLookup) {
    s += "|" + p + "\\b";
  }

  return new RegExp(s + ")", "gi");
}(),
    _hslExp = /hsl[a]?\(/,
    _colorStringFilter = function _colorStringFilter(a) {
  var combined = a.join(" "),
      toHSL;
  _colorExp.lastIndex = 0;

  if (_colorExp.test(combined)) {
    toHSL = _hslExp.test(combined);
    a[1] = _formatColors(a[1], toHSL);
    a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1])); // make sure the order of numbers/colors match with the END value.

    return true;
  }
},

/*
 * --------------------------------------------------------------------------------------
 * TICKER
 * --------------------------------------------------------------------------------------
 */
_tickerActive,
    _ticker = function () {
  var _getTime = Date.now,
      _lagThreshold = 500,
      _adjustedLag = 33,
      _startTime = _getTime(),
      _lastUpdate = _startTime,
      _gap = 1000 / 240,
      _nextTime = _gap,
      _listeners = [],
      _id,
      _req,
      _raf,
      _self,
      _delta,
      _i,
      _tick = function _tick(v) {
    var elapsed = _getTime() - _lastUpdate,
        manual = v === true,
        overlap,
        dispatch,
        time,
        frame;

    elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
    _lastUpdate += elapsed;
    time = _lastUpdate - _startTime;
    overlap = time - _nextTime;

    if (overlap > 0 || manual) {
      frame = ++_self.frame;
      _delta = time - _self.time * 1000;
      _self.time = time = time / 1000;
      _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
      dispatch = 1;
    }

    manual || (_id = _req(_tick)); //make sure the request is made before we dispatch the "tick" event so that timing is maintained. Otherwise, if processing the "tick" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.

    if (dispatch) {
      for (_i = 0; _i < _listeners.length; _i++) {
        // use _i and check _listeners.length instead of a variable because a listener could get removed during the loop, and if that happens to an element less than the current index, it'd throw things off in the loop.
        _listeners[_i](time, _delta, frame, v);
      }
    }
  };

  _self = {
    time: 0,
    frame: 0,
    tick: function tick() {
      _tick(true);
    },
    deltaRatio: function deltaRatio(fps) {
      return _delta / (1000 / (fps || 60));
    },
    wake: function wake() {
      if (_coreReady) {
        if (!_coreInitted && _windowExists()) {
          _win = _coreInitted = window;
          _doc = _win.document || {};
          _globals.gsap = gsap;
          (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);

          _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});

          _raf = _win.requestAnimationFrame;

          _registerPluginQueue.forEach(_createPlugin);
        }

        _id && _self.sleep();

        _req = _raf || function (f) {
          return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);
        };

        _tickerActive = 1;

        _tick(2);
      }
    },
    sleep: function sleep() {
      (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);
      _tickerActive = 0;
      _req = _emptyFunc;
    },
    lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
      _lagThreshold = threshold || Infinity; // zero should be interpreted as basically unlimited

      _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);
    },
    fps: function fps(_fps) {
      _gap = 1000 / (_fps || 240);
      _nextTime = _self.time * 1000 + _gap;
    },
    add: function add(callback, once, prioritize) {
      var func = once ? function (t, d, f, v) {
        callback(t, d, f, v);

        _self.remove(func);
      } : callback;

      _self.remove(callback);

      _listeners[prioritize ? "unshift" : "push"](func);

      _wake();

      return func;
    },
    remove: function remove(callback, i) {
      ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
    },
    _listeners: _listeners
  };
  return _self;
}(),
    _wake = function _wake() {
  return !_tickerActive && _ticker.wake();
},
    //also ensures the core classes are initialized.

/*
* -------------------------------------------------
* EASING
* -------------------------------------------------
*/
_easeMap = {},
    _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
    _quotesExp = /["']/g,
    _parseObjectInString = function _parseObjectInString(value) {
  //takes a string like "{wiggles:10, type:anticipate})" and turns it into a real object. Notice it ends in ")" and includes the {} wrappers. This is because we only use this function for parsing ease configs and prioritized optimization rather than reusability.
  var obj = {},
      split = value.substr(1, value.length - 3).split(":"),
      key = split[0],
      i = 1,
      l = split.length,
      index,
      val,
      parsedVal;

  for (; i < l; i++) {
    val = split[i];
    index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
    parsedVal = val.substr(0, index);
    obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
    key = val.substr(index + 1).trim();
  }

  return obj;
},
    _valueInParentheses = function _valueInParentheses(value) {
  var open = value.indexOf("(") + 1,
      close = value.indexOf(")"),
      nested = value.indexOf("(", open);
  return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
},
    _configEaseFromString = function _configEaseFromString(name) {
  //name can be a string like "elastic.out(1,0.5)", and pass in _easeMap as obj and it'll parse it out and call the actual function like _easeMap.Elastic.easeOut.config(1,0.5). It will also parse custom ease strings as long as CustomEase is loaded and registered (internally as _easeMap._CE).
  var split = (name + "").split("("),
      ease = _easeMap[split[0]];
  return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
},
    _invertEase = function _invertEase(ease) {
  return function (p) {
    return 1 - ease(1 - p);
  };
},
    // allow yoyoEase to be set in children and have those affected when the parent/ancestor timeline yoyos.
_propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {
  var child = timeline._first,
      ease;

  while (child) {
    if (child instanceof Timeline) {
      _propagateYoyoEase(child, isYoyo);
    } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
      if (child.timeline) {
        _propagateYoyoEase(child.timeline, isYoyo);
      } else {
        ease = child._ease;
        child._ease = child._yEase;
        child._yEase = ease;
        child._yoyo = isYoyo;
      }
    }

    child = child._next;
  }
},
    _parseEase = function _parseEase(ease, defaultEase) {
  return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
},
    _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
  if (easeOut === void 0) {
    easeOut = function easeOut(p) {
      return 1 - easeIn(1 - p);
    };
  }

  if (easeInOut === void 0) {
    easeInOut = function easeInOut(p) {
      return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
    };
  }

  var ease = {
    easeIn: easeIn,
    easeOut: easeOut,
    easeInOut: easeInOut
  },
      lowercaseName;

  _forEachName(names, function (name) {
    _easeMap[name] = _globals[name] = ease;
    _easeMap[lowercaseName = name.toLowerCase()] = easeOut;

    for (var p in ease) {
      _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
    }
  });

  return ease;
},
    _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
  return function (p) {
    return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
  };
},
    _configElastic = function _configElastic(type, amplitude, period) {
  var p1 = amplitude >= 1 ? amplitude : 1,
      //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.
  p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1),
      p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
      easeOut = function easeOut(p) {
    return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
  },
      ease = type === "out" ? easeOut : type === "in" ? function (p) {
    return 1 - easeOut(1 - p);
  } : _easeInOutFromOut(easeOut);

  p2 = _2PI / p2; //precalculate to optimize

  ease.config = function (amplitude, period) {
    return _configElastic(type, amplitude, period);
  };

  return ease;
},
    _configBack = function _configBack(type, overshoot) {
  if (overshoot === void 0) {
    overshoot = 1.70158;
  }

  var easeOut = function easeOut(p) {
    return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
  },
      ease = type === "out" ? easeOut : type === "in" ? function (p) {
    return 1 - easeOut(1 - p);
  } : _easeInOutFromOut(easeOut);

  ease.config = function (overshoot) {
    return _configBack(type, overshoot);
  };

  return ease;
}; // a cheaper (kb and cpu) but more mild way to get a parameterized weighted ease by feeding in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEase = ratio => {
// 	let y = 0.5 + ratio / 2;
// 	return p => (2 * (1 - p) * p * y + p * p);
// },
// a stronger (but more expensive kb/cpu) parameterized weighted ease that lets you feed in a value between -1 (easeIn) and 1 (easeOut) where 0 is linear.
// _weightedEaseStrong = ratio => {
// 	ratio = .5 + ratio / 2;
// 	let o = 1 / 3 * (ratio < .5 ? ratio : 1 - ratio),
// 		b = ratio - o,
// 		c = ratio + o;
// 	return p => p === 1 ? p : 3 * b * (1 - p) * (1 - p) * p + 3 * c * (1 - p) * p * p + p * p * p;
// };


_forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i) {
  var power = i < 5 ? i + 1 : i;

  _insertEase(name + ",Power" + (power - 1), i ? function (p) {
    return Math.pow(p, power);
  } : function (p) {
    return p;
  }, function (p) {
    return 1 - Math.pow(1 - p, power);
  }, function (p) {
    return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
  });
});

_easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;

_insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());

(function (n, c) {
  var n1 = 1 / c,
      n2 = 2 * n1,
      n3 = 2.5 * n1,
      easeOut = function easeOut(p) {
    return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
  };

  _insertEase("Bounce", function (p) {
    return 1 - easeOut(1 - p);
  }, easeOut);
})(7.5625, 2.75);

_insertEase("Expo", function (p) {
  return p ? Math.pow(2, 10 * (p - 1)) : 0;
});

_insertEase("Circ", function (p) {
  return -(_sqrt(1 - p * p) - 1);
});

_insertEase("Sine", function (p) {
  return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
});

_insertEase("Back", _configBack("in"), _configBack("out"), _configBack());

_easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
  config: function config(steps, immediateStart) {
    if (steps === void 0) {
      steps = 1;
    }

    var p1 = 1 / steps,
        p2 = steps + (immediateStart ? 0 : 1),
        p3 = immediateStart ? 1 : 0,
        max = 1 - _tinyNum;
    return function (p) {
      return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
    };
  }
};
_defaults.ease = _easeMap["quad.out"];

_forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
  return _callbackNames += name + "," + name + "Params,";
});
/*
 * --------------------------------------------------------------------------------------
 * CACHE
 * --------------------------------------------------------------------------------------
 */


var GSCache = function GSCache(target, harness) {
  this.id = _gsID++;
  target._gsap = this;
  this.target = target;
  this.harness = harness;
  this.get = harness ? harness.get : _getProperty;
  this.set = harness ? harness.getSetter : _getSetter;
};
/*
 * --------------------------------------------------------------------------------------
 * ANIMATION
 * --------------------------------------------------------------------------------------
 */

var Animation = /*#__PURE__*/function () {
  function Animation(vars) {
    this.vars = vars;
    this._delay = +vars.delay || 0;

    if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
      // TODO: repeat: Infinity on a timeline's children must flag that timeline internally and affect its totalDuration, otherwise it'll stop in the negative direction when reaching the start.
      this._rDelay = vars.repeatDelay || 0;
      this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
    }

    this._ts = 1;

    _setDuration(this, +vars.duration, 1, 1);

    this.data = vars.data;

    if (_context) {
      this._ctx = _context;

      _context.data.push(this);
    }

    _tickerActive || _ticker.wake();
  }

  var _proto = Animation.prototype;

  _proto.delay = function delay(value) {
    if (value || value === 0) {
      this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
      this._delay = value;
      return this;
    }

    return this._delay;
  };

  _proto.duration = function duration(value) {
    return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
  };

  _proto.totalDuration = function totalDuration(value) {
    if (!arguments.length) {
      return this._tDur;
    }

    this._dirty = 0;
    return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
  };

  _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
    _wake();

    if (!arguments.length) {
      return this._tTime;
    }

    var parent = this._dp;

    if (parent && parent.smoothChildTiming && this._ts) {
      _alignPlayhead(this, _totalTime);

      !parent._dp || parent.parent || _postAddChecks(parent, this); // edge case: if this is a child of a timeline that already completed, for example, we must re-activate the parent.
      //in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The start of that child would get pushed out, but one of the ancestors may have completed.

      while (parent && parent.parent) {
        if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
          parent.totalTime(parent._tTime, true);
        }

        parent = parent.parent;
      }

      if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
        //if the animation doesn't have a parent, put it back into its last parent (recorded as _dp for exactly cases like this). Limit to parents with autoRemoveChildren (like globalTimeline) so that if the user manually removes an animation from a timeline and then alters its playhead, it doesn't get added back in.
        _addToTimeline(this._dp, this, this._start - this._delay);
      }
    }

    if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
      // check for _ptLookup on a Tween instance to ensure it has actually finished being instantiated, otherwise if this.reverse() gets called in the Animation constructor, it could trigger a render() here even though the _targets weren't populated, thus when _init() is called there won't be any PropTweens (it'll act like the tween is non-functional)
      this._ts || (this._pTime = _totalTime); // otherwise, if an animation is paused, then the playhead is moved back to zero, then resumed, it'd revert back to the original time at the pause
      //if (!this._lock) { // avoid endless recursion (not sure we need this yet or if it's worth the performance hit)
      //   this._lock = 1;

      _lazySafeRender(this, _totalTime, suppressEvents); //   this._lock = 0;
      //}

    }

    return this;
  };

  _proto.time = function time(value, suppressEvents) {
    return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time; // note: if the modulus results in 0, the playhead could be exactly at the end or the beginning, and we always defer to the END with a non-zero value, otherwise if you set the time() to the very end (duration()), it would render at the START!
  };

  _proto.totalProgress = function totalProgress(value, suppressEvents) {
    return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
  };

  _proto.progress = function progress(value, suppressEvents) {
    return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
  };

  _proto.iteration = function iteration(value, suppressEvents) {
    var cycleDuration = this.duration() + this._rDelay;

    return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
  } // potential future addition:
  // isPlayingBackwards() {
  // 	let animation = this,
  // 		orientation = 1; // 1 = forward, -1 = backward
  // 	while (animation) {
  // 		orientation *= animation.reversed() || (animation.repeat() && !(animation.iteration() & 1)) ? -1 : 1;
  // 		animation = animation.parent;
  // 	}
  // 	return orientation < 0;
  // }
  ;

  _proto.timeScale = function timeScale(value, suppressEvents) {
    if (!arguments.length) {
      return this._rts === -_tinyNum ? 0 : this._rts; // recorded timeScale. Special case: if someone calls reverse() on an animation with timeScale of 0, we assign it -_tinyNum to remember it's reversed.
    }

    if (this._rts === value) {
      return this;
    }

    var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime; // make sure to do the parentToChildTotalTime() BEFORE setting the new _ts because the old one must be used in that calculation.
    // future addition? Up side: fast and minimal file size. Down side: only works on this animation; if a timeline is reversed, for example, its childrens' onReverse wouldn't get called.
    //(+value < 0 && this._rts >= 0) && _callback(this, "onReverse", true);
    // prioritize rendering where the parent's playhead lines up instead of this._tTime because there could be a tween that's animating another tween's timeScale in the same rendering loop (same parent), thus if the timeScale tween renders first, it would alter _start BEFORE _tTime was set on that tick (in the rendering loop), effectively freezing it until the timeScale tween finishes.

    this._rts = +value || 0;
    this._ts = this._ps || value === -_tinyNum ? 0 : this._rts; // _ts is the functional timeScale which would be 0 if the animation is paused.

    this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), suppressEvents !== false);

    _setEnd(this); // if parent.smoothChildTiming was false, the end time didn't get updated in the _alignPlayhead() method, so do it here.


    return _recacheAncestors(this);
  };

  _proto.paused = function paused(value) {
    if (!arguments.length) {
      return this._ps;
    }

    if (this._ps !== value) {
      this._ps = value;

      if (value) {
        this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()); // if the pause occurs during the delay phase, make sure that's factored in when resuming.

        this._ts = this._act = 0; // _ts is the functional timeScale, so a paused tween would effectively have a timeScale of 0. We record the "real" timeScale as _rts (recorded time scale)
      } else {
        _wake();

        this._ts = this._rts; //only defer to _pTime (pauseTime) if tTime is zero. Remember, someone could pause() an animation, then scrub the playhead and resume(). If the parent doesn't have smoothChildTiming, we render at the rawTime() because the startTime won't get updated.

        this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum)); // edge case: animation.progress(1).pause().play() wouldn't render again because the playhead is already at the end, but the call to totalTime() below will add it back to its parent...and not remove it again (since removing only happens upon rendering at a new time). Offsetting the _tTime slightly is done simply to cause the final render in totalTime() that'll pop it off its timeline (if autoRemoveChildren is true, of course). Check to make sure _zTime isn't -_tinyNum to avoid an edge case where the playhead is pushed to the end but INSIDE a tween/callback, the timeline itself is paused thus halting rendering and leaving a few unrendered. When resuming, it wouldn't render those otherwise.
      }
    }

    return this;
  };

  _proto.startTime = function startTime(value) {
    if (arguments.length) {
      this._start = value;
      var parent = this.parent || this._dp;
      parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
      return this;
    }

    return this._start;
  };

  _proto.endTime = function endTime(includeRepeats) {
    return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
  };

  _proto.rawTime = function rawTime(wrapRepeats) {
    var parent = this.parent || this._dp; // _dp = detached parent

    return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
  };

  _proto.revert = function revert(config) {
    if (config === void 0) {
      config = _revertConfig;
    }

    var prevIsReverting = _reverting;
    _reverting = config;

    if (this._initted || this._startAt) {
      this.timeline && this.timeline.revert(config);
      this.totalTime(-0.01, config.suppressEvents);
    }

    this.data !== "nested" && config.kill !== false && this.kill();
    _reverting = prevIsReverting;
    return this;
  };

  _proto.globalTime = function globalTime(rawTime) {
    var animation = this,
        time = arguments.length ? rawTime : animation.rawTime();

    while (animation) {
      time = animation._start + time / (Math.abs(animation._ts) || 1);
      animation = animation._dp;
    }

    return !this.parent && this._sat ? this._sat.globalTime(rawTime) : time; // the _startAt tweens for .fromTo() and .from() that have immediateRender should always be FIRST in the timeline (important for context.revert()). "_sat" stands for _startAtTween, referring to the parent tween that created the _startAt. We must discern if that tween had immediateRender so that we can know whether or not to prioritize it in revert().
  };

  _proto.repeat = function repeat(value) {
    if (arguments.length) {
      this._repeat = value === Infinity ? -2 : value;
      return _onUpdateTotalDuration(this);
    }

    return this._repeat === -2 ? Infinity : this._repeat;
  };

  _proto.repeatDelay = function repeatDelay(value) {
    if (arguments.length) {
      var time = this._time;
      this._rDelay = value;

      _onUpdateTotalDuration(this);

      return time ? this.time(time) : this;
    }

    return this._rDelay;
  };

  _proto.yoyo = function yoyo(value) {
    if (arguments.length) {
      this._yoyo = value;
      return this;
    }

    return this._yoyo;
  };

  _proto.seek = function seek(position, suppressEvents) {
    return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
  };

  _proto.restart = function restart(includeDelay, suppressEvents) {
    return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
  };

  _proto.play = function play(from, suppressEvents) {
    from != null && this.seek(from, suppressEvents);
    return this.reversed(false).paused(false);
  };

  _proto.reverse = function reverse(from, suppressEvents) {
    from != null && this.seek(from || this.totalDuration(), suppressEvents);
    return this.reversed(true).paused(false);
  };

  _proto.pause = function pause(atTime, suppressEvents) {
    atTime != null && this.seek(atTime, suppressEvents);
    return this.paused(true);
  };

  _proto.resume = function resume() {
    return this.paused(false);
  };

  _proto.reversed = function reversed(value) {
    if (arguments.length) {
      !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0)); // in case timeScale is zero, reversing would have no effect so we use _tinyNum.

      return this;
    }

    return this._rts < 0;
  };

  _proto.invalidate = function invalidate() {
    this._initted = this._act = 0;
    this._zTime = -_tinyNum;
    return this;
  };

  _proto.isActive = function isActive() {
    var parent = this.parent || this._dp,
        start = this._start,
        rawTime;
    return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
  };

  _proto.eventCallback = function eventCallback(type, callback, params) {
    var vars = this.vars;

    if (arguments.length > 1) {
      if (!callback) {
        delete vars[type];
      } else {
        vars[type] = callback;
        params && (vars[type + "Params"] = params);
        type === "onUpdate" && (this._onUpdate = callback);
      }

      return this;
    }

    return vars[type];
  };

  _proto.then = function then(onFulfilled) {
    var self = this;
    return new Promise(function (resolve) {
      var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
          _resolve = function _resolve() {
        var _then = self.then;
        self.then = null; // temporarily null the then() method to avoid an infinite loop (see https://github.com/greensock/GSAP/issues/322)

        _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
        resolve(f);
        self.then = _then;
      };

      if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {
        _resolve();
      } else {
        self._prom = _resolve;
      }
    });
  };

  _proto.kill = function kill() {
    _interrupt(this);
  };

  return Animation;
}();

_setDefaults(Animation.prototype, {
  _time: 0,
  _start: 0,
  _end: 0,
  _tTime: 0,
  _tDur: 0,
  _dirty: 0,
  _repeat: 0,
  _yoyo: false,
  parent: null,
  _initted: false,
  _rDelay: 0,
  _ts: 1,
  _dp: 0,
  ratio: 0,
  _zTime: -_tinyNum,
  _prom: 0,
  _ps: false,
  _rts: 1
});
/*
 * -------------------------------------------------
 * TIMELINE
 * -------------------------------------------------
 */


var Timeline = /*#__PURE__*/function (_Animation) {
  _inheritsLoose(Timeline, _Animation);

  function Timeline(vars, position) {
    var _this;

    if (vars === void 0) {
      vars = {};
    }

    _this = _Animation.call(this, vars) || this;
    _this.labels = {};
    _this.smoothChildTiming = !!vars.smoothChildTiming;
    _this.autoRemoveChildren = !!vars.autoRemoveChildren;
    _this._sort = _isNotFalse(vars.sortChildren);
    _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
    vars.reversed && _this.reverse();
    vars.paused && _this.paused(true);
    vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
    return _this;
  }

  var _proto2 = Timeline.prototype;

  _proto2.to = function to(targets, vars, position) {
    _createTweenType(0, arguments, this);

    return this;
  };

  _proto2.from = function from(targets, vars, position) {
    _createTweenType(1, arguments, this);

    return this;
  };

  _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
    _createTweenType(2, arguments, this);

    return this;
  };

  _proto2.set = function set(targets, vars, position) {
    vars.duration = 0;
    vars.parent = this;
    _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
    vars.immediateRender = !!vars.immediateRender;
    new Tween(targets, vars, _parsePosition(this, position), 1);
    return this;
  };

  _proto2.call = function call(callback, params, position) {
    return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
  } //ONLY for backward compatibility! Maybe delete?
  ;

  _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
    vars.duration = duration;
    vars.stagger = vars.stagger || stagger;
    vars.onComplete = onCompleteAll;
    vars.onCompleteParams = onCompleteAllParams;
    vars.parent = this;
    new Tween(targets, vars, _parsePosition(this, position));
    return this;
  };

  _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
    vars.runBackwards = 1;
    _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
    return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
  };

  _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
    toVars.startAt = fromVars;
    _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
    return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
  };

  _proto2.render = function render(totalTime, suppressEvents, force) {
    var prevTime = this._time,
        tDur = this._dirty ? this.totalDuration() : this._tDur,
        dur = this._dur,
        tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime),
        // if a paused timeline is resumed (or its _start is updated for another reason...which rounds it), that could result in the playhead shifting a **tiny** amount and a zero-duration child at that spot may get rendered at a different ratio, like its totalTime in render() may be 1e-17 instead of 0, for example.
    crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
        time,
        child,
        next,
        iteration,
        cycleDuration,
        prevPaused,
        pauseTween,
        timeScale,
        prevStart,
        prevIteration,
        yoyo,
        isYoyo;
    this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);

    if (tTime !== this._tTime || force || crossingStart) {
      if (prevTime !== this._time && dur) {
        //if totalDuration() finds a child with a negative startTime and smoothChildTiming is true, things get shifted around internally so we need to adjust the time accordingly. For example, if a tween starts at -30 we must shift EVERYTHING forward 30 seconds and move this timeline's startTime backward by 30 seconds so that things align with the playhead (no jump).
        tTime += this._time - prevTime;
        totalTime += this._time - prevTime;
      }

      time = tTime;
      prevStart = this._start;
      timeScale = this._ts;
      prevPaused = !timeScale;

      if (crossingStart) {
        dur || (prevTime = this._zTime); //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect.

        (totalTime || !suppressEvents) && (this._zTime = totalTime);
      }

      if (this._repeat) {
        //adjust the time for repeats and yoyos
        yoyo = this._yoyo;
        cycleDuration = dur + this._rDelay;

        if (this._repeat < -1 && totalTime < 0) {
          return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
        }

        time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)

        if (tTime === tDur) {
          // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
          iteration = this._repeat;
          time = dur;
        } else {
          iteration = ~~(tTime / cycleDuration);

          if (iteration && iteration === tTime / cycleDuration) {
            time = dur;
            iteration--;
          }

          time > dur && (time = dur);
        }

        prevIteration = _animationCycle(this._tTime, cycleDuration);
        !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration); // edge case - if someone does addPause() at the very beginning of a repeating timeline, that pause is technically at the same spot as the end which causes this._time to get set to 0 when the totalTime would normally place the playhead at the end. See https://gsap.com/forums/topic/23823-closing-nav-animation-not-working-on-ie-and-iphone-6-maybe-other-older-browser/?tab=comments#comment-113005 also, this._tTime - prevIteration * cycleDuration - this._dur <= 0 just checks to make sure it wasn't previously in the "repeatDelay" portion

        if (yoyo && iteration & 1) {
          time = dur - time;
          isYoyo = 1;
        }
        /*
        make sure children at the end/beginning of the timeline are rendered properly. If, for example,
        a 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which
        would get translated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there
        could be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So
        we need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must
        ensure that zero-duration tweens at the very beginning or end of the Timeline work.
        */


        if (iteration !== prevIteration && !this._lock) {
          var rewinding = yoyo && prevIteration & 1,
              doesWrap = rewinding === (yoyo && iteration & 1);
          iteration < prevIteration && (rewinding = !rewinding);
          prevTime = rewinding ? 0 : tTime % dur ? dur : tTime; // if the playhead is landing exactly at the end of an iteration, use that totalTime rather than only the duration, otherwise it'll skip the 2nd render since it's effectively at the same time.

          this._lock = 1;
          this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
          this._tTime = tTime; // if a user gets the iteration() inside the onRepeat, for example, it should be accurate.

          !suppressEvents && this.parent && _callback(this, "onRepeat");
          this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);

          if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
            // if prevTime is 0 and we render at the very end, _time will be the end, thus won't match. So in this edge case, prevTime won't match _time but that's okay. If it gets killed in the onRepeat, eject as well.
            return this;
          }

          dur = this._dur; // in case the duration changed in the onRepeat

          tDur = this._tDur;

          if (doesWrap) {
            this._lock = 2;
            prevTime = rewinding ? dur : -0.0001;
            this.render(prevTime, true);
            this.vars.repeatRefresh && !isYoyo && this.invalidate();
          }

          this._lock = 0;

          if (!this._ts && !prevPaused) {
            return this;
          } //in order for yoyoEase to work properly when there's a stagger, we must swap out the ease in each sub-tween.


          _propagateYoyoEase(this, isYoyo);
        }
      }

      if (this._hasPause && !this._forcing && this._lock < 2) {
        pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));

        if (pauseTween) {
          tTime -= time - (time = pauseTween._start);
        }
      }

      this._tTime = tTime;
      this._time = time;
      this._act = !timeScale; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.

      if (!this._initted) {
        this._onUpdate = this.vars.onUpdate;
        this._initted = 1;
        this._zTime = totalTime;
        prevTime = 0; // upon init, the playhead should always go forward; someone could invalidate() a completed timeline and then if they restart(), that would make child tweens render in reverse order which could lock in the wrong starting values if they build on each other, like tl.to(obj, {x: 100}).to(obj, {x: 0}).
      }

      if (!prevTime && time && !suppressEvents && !iteration) {
        _callback(this, "onStart");

        if (this._tTime !== tTime) {
          // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
          return this;
        }
      }

      if (time >= prevTime && totalTime >= 0) {
        child = this._first;

        while (child) {
          next = child._next;

          if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
            if (child.parent !== this) {
              // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
              return this.render(totalTime, suppressEvents, force);
            }

            child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);

            if (time !== this._time || !this._ts && !prevPaused) {
              //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
              pauseTween = 0;
              next && (tTime += this._zTime = -_tinyNum); // it didn't finish rendering, so flag zTime as negative so that so that the next time render() is called it'll be forced (to render any remaining children)

              break;
            }
          }

          child = next;
        }
      } else {
        child = this._last;
        var adjustedTime = totalTime < 0 ? totalTime : time; //when the playhead goes backward beyond the start of this timeline, we must pass that information down to the child animations so that zero-duration tweens know whether to render their starting or ending values.

        while (child) {
          next = child._prev;

          if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
            if (child.parent !== this) {
              // an extreme edge case - the child's render could do something like kill() the "next" one in the linked list, or reparent it. In that case we must re-initiate the whole render to be safe.
              return this.render(totalTime, suppressEvents, force);
            }

            child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt)); // if reverting, we should always force renders of initted tweens (but remember that .fromTo() or .from() may have a _startAt but not _initted yet). If, for example, a .fromTo() tween with a stagger (which creates an internal timeline) gets reverted BEFORE some of its child tweens render for the first time, it may not properly trigger them to revert.

            if (time !== this._time || !this._ts && !prevPaused) {
              //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete
              pauseTween = 0;
              next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum); // it didn't finish rendering, so adjust zTime so that so that the next time render() is called it'll be forced (to render any remaining children)

              break;
            }
          }

          child = next;
        }
      }

      if (pauseTween && !suppressEvents) {
        this.pause();
        pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;

        if (this._ts) {
          //the callback resumed playback! So since we may have held back the playhead due to where the pause is positioned, go ahead and jump to where it's SUPPOSED to be (if no pause happened).
          this._start = prevStart; //if the pause was at an earlier time and the user resumed in the callback, it could reposition the timeline (changing its startTime), throwing things off slightly, so we make sure the _start doesn't shift.

          _setEnd(this);

          return this.render(totalTime, suppressEvents, force);
        }
      }

      this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
      if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) if (!this._lock) {
        // remember, a child's callback may alter this timeline's playhead or timeScale which is why we need to add some of these checks.
        (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.

        if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
          _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);

          this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
        }
      }
    }

    return this;
  };

  _proto2.add = function add(child, position) {
    var _this2 = this;

    _isNumber(position) || (position = _parsePosition(this, position, child));

    if (!(child instanceof Animation)) {
      if (_isArray(child)) {
        child.forEach(function (obj) {
          return _this2.add(obj, position);
        });
        return this;
      }

      if (_isString(child)) {
        return this.addLabel(child, position);
      }

      if (_isFunction(child)) {
        child = Tween.delayedCall(0, child);
      } else {
        return this;
      }
    }

    return this !== child ? _addToTimeline(this, child, position) : this; //don't allow a timeline to be added to itself as a child!
  };

  _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
    if (nested === void 0) {
      nested = true;
    }

    if (tweens === void 0) {
      tweens = true;
    }

    if (timelines === void 0) {
      timelines = true;
    }

    if (ignoreBeforeTime === void 0) {
      ignoreBeforeTime = -_bigNum;
    }

    var a = [],
        child = this._first;

    while (child) {
      if (child._start >= ignoreBeforeTime) {
        if (child instanceof Tween) {
          tweens && a.push(child);
        } else {
          timelines && a.push(child);
          nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
        }
      }

      child = child._next;
    }

    return a;
  };

  _proto2.getById = function getById(id) {
    var animations = this.getChildren(1, 1, 1),
        i = animations.length;

    while (i--) {
      if (animations[i].vars.id === id) {
        return animations[i];
      }
    }
  };

  _proto2.remove = function remove(child) {
    if (_isString(child)) {
      return this.removeLabel(child);
    }

    if (_isFunction(child)) {
      return this.killTweensOf(child);
    }

    _removeLinkedListItem(this, child);

    if (child === this._recent) {
      this._recent = this._last;
    }

    return _uncache(this);
  };

  _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
    if (!arguments.length) {
      return this._tTime;
    }

    this._forcing = 1;

    if (!this._dp && this._ts) {
      //special case for the global timeline (or any other that has no parent or detached parent).
      this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
    }

    _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);

    this._forcing = 0;
    return this;
  };

  _proto2.addLabel = function addLabel(label, position) {
    this.labels[label] = _parsePosition(this, position);
    return this;
  };

  _proto2.removeLabel = function removeLabel(label) {
    delete this.labels[label];
    return this;
  };

  _proto2.addPause = function addPause(position, callback, params) {
    var t = Tween.delayedCall(0, callback || _emptyFunc, params);
    t.data = "isPause";
    this._hasPause = 1;
    return _addToTimeline(this, t, _parsePosition(this, position));
  };

  _proto2.removePause = function removePause(position) {
    var child = this._first;
    position = _parsePosition(this, position);

    while (child) {
      if (child._start === position && child.data === "isPause") {
        _removeFromParent(child);
      }

      child = child._next;
    }
  };

  _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
    var tweens = this.getTweensOf(targets, onlyActive),
        i = tweens.length;

    while (i--) {
      _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
    }

    return this;
  };

  _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
    var a = [],
        parsedTargets = toArray(targets),
        child = this._first,
        isGlobalTime = _isNumber(onlyActive),
        // a number is interpreted as a global time. If the animation spans
    children;

    while (child) {
      if (child instanceof Tween) {
        if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
          // note: if this is for overwriting, it should only be for tweens that aren't paused and are initted.
          a.push(child);
        }
      } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
        a.push.apply(a, children);
      }

      child = child._next;
    }

    return a;
  } // potential future feature - targets() on timelines
  // targets() {
  // 	let result = [];
  // 	this.getChildren(true, true, false).forEach(t => result.push(...t.targets()));
  // 	return result.filter((v, i) => result.indexOf(v) === i);
  // }
  ;

  _proto2.tweenTo = function tweenTo(position, vars) {
    vars = vars || {};

    var tl = this,
        endTime = _parsePosition(tl, position),
        _vars = vars,
        startAt = _vars.startAt,
        _onStart = _vars.onStart,
        onStartParams = _vars.onStartParams,
        immediateRender = _vars.immediateRender,
        initted,
        tween = Tween.to(tl, _setDefaults({
      ease: vars.ease || "none",
      lazy: false,
      immediateRender: false,
      time: endTime,
      overwrite: "auto",
      duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
      onStart: function onStart() {
        tl.pause();

        if (!initted) {
          var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
          tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
          initted = 1;
        }

        _onStart && _onStart.apply(tween, onStartParams || []); //in case the user had an onStart in the vars - we don't want to overwrite it.
      }
    }, vars));

    return immediateRender ? tween.render(0) : tween;
  };

  _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
    return this.tweenTo(toPosition, _setDefaults({
      startAt: {
        time: _parsePosition(this, fromPosition)
      }
    }, vars));
  };

  _proto2.recent = function recent() {
    return this._recent;
  };

  _proto2.nextLabel = function nextLabel(afterTime) {
    if (afterTime === void 0) {
      afterTime = this._time;
    }

    return _getLabelInDirection(this, _parsePosition(this, afterTime));
  };

  _proto2.previousLabel = function previousLabel(beforeTime) {
    if (beforeTime === void 0) {
      beforeTime = this._time;
    }

    return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
  };

  _proto2.currentLabel = function currentLabel(value) {
    return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
  };

  _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
    if (ignoreBeforeTime === void 0) {
      ignoreBeforeTime = 0;
    }

    var child = this._first,
        labels = this.labels,
        p;

    while (child) {
      if (child._start >= ignoreBeforeTime) {
        child._start += amount;
        child._end += amount;
      }

      child = child._next;
    }

    if (adjustLabels) {
      for (p in labels) {
        if (labels[p] >= ignoreBeforeTime) {
          labels[p] += amount;
        }
      }
    }

    return _uncache(this);
  };

  _proto2.invalidate = function invalidate(soft) {
    var child = this._first;
    this._lock = 0;

    while (child) {
      child.invalidate(soft);
      child = child._next;
    }

    return _Animation.prototype.invalidate.call(this, soft);
  };

  _proto2.clear = function clear(includeLabels) {
    if (includeLabels === void 0) {
      includeLabels = true;
    }

    var child = this._first,
        next;

    while (child) {
      next = child._next;
      this.remove(child);
      child = next;
    }

    this._dp && (this._time = this._tTime = this._pTime = 0);
    includeLabels && (this.labels = {});
    return _uncache(this);
  };

  _proto2.totalDuration = function totalDuration(value) {
    var max = 0,
        self = this,
        child = self._last,
        prevStart = _bigNum,
        prev,
        start,
        parent;

    if (arguments.length) {
      return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
    }

    if (self._dirty) {
      parent = self.parent;

      while (child) {
        prev = child._prev; //record it here in case the tween changes position in the sequence...

        child._dirty && child.totalDuration(); //could change the tween._startTime, so make sure the animation's cache is clean before analyzing it.

        start = child._start;

        if (start > prevStart && self._sort && child._ts && !self._lock) {
          //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence
          self._lock = 1; //prevent endless recursive calls - there are methods that get triggered that check duration/totalDuration when we add().

          _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
        } else {
          prevStart = start;
        }

        if (start < 0 && child._ts) {
          //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.
          max -= start;

          if (!parent && !self._dp || parent && parent.smoothChildTiming) {
            self._start += start / self._ts;
            self._time -= start;
            self._tTime -= start;
          }

          self.shiftChildren(-start, false, -1e999);
          prevStart = 0;
        }

        child._end > max && child._ts && (max = child._end);
        child = prev;
      }

      _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);

      self._dirty = 0;
    }

    return self._tDur;
  };

  Timeline.updateRoot = function updateRoot(time) {
    if (_globalTimeline._ts) {
      _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));

      _lastRenderedFrame = _ticker.frame;
    }

    if (_ticker.frame >= _nextGCFrame) {
      _nextGCFrame += _config.autoSleep || 120;
      var child = _globalTimeline._first;
      if (!child || !child._ts) if (_config.autoSleep && _ticker._listeners.length < 2) {
        while (child && !child._ts) {
          child = child._next;
        }

        child || _ticker.sleep();
      }
    }
  };

  return Timeline;
}(Animation);

_setDefaults(Timeline.prototype, {
  _lock: 0,
  _hasPause: 0,
  _forcing: 0
});

var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
  //note: we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.
  var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
      index = 0,
      matchIndex = 0,
      result,
      startNums,
      color,
      endNum,
      chunk,
      startNum,
      hasRandom,
      a;
  pt.b = start;
  pt.e = end;
  start += ""; //ensure values are strings

  end += "";

  if (hasRandom = ~end.indexOf("random(")) {
    end = _replaceRandom(end);
  }

  if (stringFilter) {
    a = [start, end];
    stringFilter(a, target, prop); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.

    start = a[0];
    end = a[1];
  }

  startNums = start.match(_complexStringNumExp) || [];

  while (result = _complexStringNumExp.exec(end)) {
    endNum = result[0];
    chunk = end.substring(index, result.index);

    if (color) {
      color = (color + 1) % 5;
    } else if (chunk.substr(-5) === "rgba(") {
      color = 1;
    }

    if (endNum !== startNums[matchIndex++]) {
      startNum = parseFloat(startNums[matchIndex - 1]) || 0; //these nested PropTweens are handled in a special way - we'll never actually call a render or setter method on them. We'll just loop through them in the parent complex string PropTween's render method.

      pt._pt = {
        _next: pt._pt,
        p: chunk || matchIndex === 1 ? chunk : ",",
        //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
        s: startNum,
        c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
        m: color && color < 4 ? Math.round : 0
      };
      index = _complexStringNumExp.lastIndex;
    }
  }

  pt.c = index < end.length ? end.substring(index, end.length) : ""; //we use the "c" of the PropTween to store the final part of the string (after the last number)

  pt.fp = funcParam;

  if (_relExp.test(end) || hasRandom) {
    pt.e = 0; //if the end string contains relative values or dynamic random(...) values, delete the end it so that on the final render we don't actually set it to the string with += or -= characters (forces it to use the calculated value).
  }

  this._pt = pt; //start the linked list with this new PropTween. Remember, we call _addComplexStringPropTween.call(tweenInstance...) to ensure that it's scoped properly. We may call it from within a plugin too, thus "this" would refer to the plugin.

  return pt;
},
    _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
  _isFunction(end) && (end = end(index || 0, target, targets));
  var currentValue = target[prop],
      parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
      setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
      pt;

  if (_isString(end)) {
    if (~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }

    if (end.charAt(1) === "=") {
      pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);

      if (pt || pt === 0) {
        // to avoid isNaN, like if someone passes in a value like "!= whatever"
        end = pt;
      }
    }
  }

  if (!optional || parsedStart !== end || _forceAllPropTweens) {
    if (!isNaN(parsedStart * end) && end !== "") {
      // fun fact: any number multiplied by "" is evaluated as the number 0!
      pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
      funcParam && (pt.fp = funcParam);
      modifier && pt.modifier(modifier, this, target);
      return this._pt = pt;
    }

    !currentValue && !(prop in target) && _missingPlugin(prop, end);
    return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
  }
},
    //creates a copy of the vars object and processes any function-based values (putting the resulting values directly into the copy) as well as strings with "random()" in them. It does NOT process relative values.
_processVars = function _processVars(vars, index, target, targets, tween) {
  _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));

  if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
    return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
  }

  var copy = {},
      p;

  for (p in vars) {
    copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
  }

  return copy;
},
    _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
  var plugin, pt, ptLookup, i;

  if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
    tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);

    if (tween !== _quickTween) {
      ptLookup = tween._ptLookup[tween._targets.indexOf(target)]; //note: we can't use tween._ptLookup[index] because for staggered tweens, the index from the fullTargets array won't match what it is in each individual tween that spawns from the stagger.

      i = plugin._props.length;

      while (i--) {
        ptLookup[plugin._props[i]] = pt;
      }
    }
  }

  return plugin;
},
    _overwritingTween,
    //store a reference temporarily so we can avoid overwriting itself.
_forceAllPropTweens,
    _initTween = function _initTween(tween, time, tTime) {
  var vars = tween.vars,
      ease = vars.ease,
      startAt = vars.startAt,
      immediateRender = vars.immediateRender,
      lazy = vars.lazy,
      onUpdate = vars.onUpdate,
      runBackwards = vars.runBackwards,
      yoyoEase = vars.yoyoEase,
      keyframes = vars.keyframes,
      autoRevert = vars.autoRevert,
      dur = tween._dur,
      prevStartAt = tween._startAt,
      targets = tween._targets,
      parent = tween.parent,
      fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets,
      autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites,
      tl = tween.timeline,
      cleanVars,
      i,
      p,
      pt,
      target,
      hasPriority,
      gsData,
      harness,
      plugin,
      ptLookup,
      index,
      harnessVars,
      overwritten;
  tl && (!keyframes || !ease) && (ease = "none");
  tween._ease = _parseEase(ease, _defaults.ease);
  tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;

  if (yoyoEase && tween._yoyo && !tween._repeat) {
    //there must have been a parent timeline with yoyo:true that is currently in its yoyo phase, so flip the eases.
    yoyoEase = tween._yEase;
    tween._yEase = tween._ease;
    tween._ease = yoyoEase;
  }

  tween._from = !tl && !!vars.runBackwards; //nested timelines should never run backwards - the backwards-ness is in the child tweens.

  if (!tl || keyframes && !vars.stagger) {
    //if there's an internal timeline, skip all the parsing because we passed that task down the chain.
    harness = targets[0] ? _getCache(targets[0]).harness : 0;
    harnessVars = harness && vars[harness.prop]; //someone may need to specify CSS-specific values AND non-CSS values, like if the element has an "x" property plus it's a standard DOM element. We allow people to distinguish by wrapping plugin-specific stuff in a css:{} object for example.

    cleanVars = _copyExcluding(vars, _reservedProps);

    if (prevStartAt) {
      prevStartAt._zTime < 0 && prevStartAt.progress(1); // in case it's a lazy startAt that hasn't rendered yet.

      time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig); // if it's a "startAt" (not "from()" or runBackwards: true), we only need to do a shallow revert (keep transforms cached in CSSPlugin)
      // don't just _removeFromParent(prevStartAt.render(-1, true)) because that'll leave inline styles. We're creating a new _startAt for "startAt" tweens that re-capture things to ensure that if the pre-tween values changed since the tween was created, they're recorded.

      prevStartAt._lazy = 0;
    }

    if (startAt) {
      _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
        data: "isStart",
        overwrite: false,
        parent: parent,
        immediateRender: true,
        lazy: !prevStartAt && _isNotFalse(lazy),
        startAt: null,
        delay: 0,
        onUpdate: onUpdate && function () {
          return _callback(tween, "onUpdate");
        },
        stagger: 0
      }, startAt))); //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, from, to).fromTo(e, to, from);


      tween._startAt._dp = 0; // don't allow it to get put back into root timeline! Like when revert() is called and totalTime() gets set.

      tween._startAt._sat = tween; // used in globalTime(). _sat stands for _startAtTween

      time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill); // rare edge case, like if a render is forced in the negative direction of a non-initted tween.

      if (immediateRender) {
        if (dur && time <= 0 && tTime <= 0) {
          // check tTime here because in the case of a yoyo tween whose playhead gets pushed to the end like tween.progress(1), we should allow it through so that the onComplete gets fired properly.
          time && (tween._zTime = time);
          return; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a Timeline, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.
        }
      }
    } else if (runBackwards && dur) {
      //from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)
      if (!prevStartAt) {
        time && (immediateRender = false); //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0

        p = _setDefaults({
          overwrite: false,
          data: "isFromStart",
          //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
          lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),
          immediateRender: immediateRender,
          //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
          stagger: 0,
          parent: parent //ensures that nested tweens that had a stagger are handled properly, like gsap.from(".class", {y: gsap.utils.wrap([-100,100]), stagger: 0.5})

        }, cleanVars);
        harnessVars && (p[harness.prop] = harnessVars); // in case someone does something like .from(..., {css:{}})

        _removeFromParent(tween._startAt = Tween.set(targets, p));

        tween._startAt._dp = 0; // don't allow it to get put back into root timeline!

        tween._startAt._sat = tween; // used in globalTime()

        time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
        tween._zTime = time;

        if (!immediateRender) {
          _initTween(tween._startAt, _tinyNum, _tinyNum); //ensures that the initial values are recorded

        } else if (!time) {
          return;
        }
      }
    }

    tween._pt = tween._ptCache = 0;
    lazy = dur && _isNotFalse(lazy) || lazy && !dur;

    for (i = 0; i < targets.length; i++) {
      target = targets[i];
      gsData = target._gsap || _harness(targets)[i]._gsap;
      tween._ptLookup[i] = ptLookup = {};
      _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)

      index = fullTargets === targets ? i : fullTargets.indexOf(target);

      if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
        tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);

        plugin._props.forEach(function (name) {
          ptLookup[name] = pt;
        });

        plugin.priority && (hasPriority = 1);
      }

      if (!harness || harnessVars) {
        for (p in cleanVars) {
          if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
            plugin.priority && (hasPriority = 1);
          } else {
            ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
          }
        }
      }

      tween._op && tween._op[i] && tween.kill(target, tween._op[i]);

      if (autoOverwrite && tween._pt) {
        _overwritingTween = tween;

        _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time)); // make sure the overwriting doesn't overwrite THIS tween!!!


        overwritten = !tween.parent;
        _overwritingTween = 0;
      }

      tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
    }

    hasPriority && _sortPropTweensByPriority(tween);
    tween._onInit && tween._onInit(tween); //plugins like RoundProps must wait until ALL of the PropTweens are instantiated. In the plugin's init() function, it sets the _onInit on the tween instance. May not be pretty/intuitive, but it's fast and keeps file size down.
  }

  tween._onUpdate = onUpdate;
  tween._initted = (!tween._op || tween._pt) && !overwritten; // if overwrittenProps resulted in the entire tween being killed, do NOT flag it as initted or else it may render for one tick.

  keyframes && time <= 0 && tl.render(_bigNum, true, true); // if there's a 0% keyframe, it'll render in the "before" state for any staggered/delayed animations thus when the following tween initializes, it'll use the "before" state instead of the "after" state as the initial values.
},
    _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time, skipRecursion) {
  var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property],
      pt,
      rootPT,
      lookup,
      i;

  if (!ptCache) {
    ptCache = tween._ptCache[property] = [];
    lookup = tween._ptLookup;
    i = tween._targets.length;

    while (i--) {
      pt = lookup[i][property];

      if (pt && pt.d && pt.d._pt) {
        // it's a plugin, so find the nested PropTween
        pt = pt.d._pt;

        while (pt && pt.p !== property && pt.fp !== property) {
          // "fp" is functionParam for things like setting CSS variables which require .setProperty("--var-name", value)
          pt = pt._next;
        }
      }

      if (!pt) {
        // there is no PropTween associated with that property, so we must FORCE one to be created and ditch out of this
        // if the tween has other properties that already rendered at new positions, we'd normally have to rewind to put them back like tween.render(0, true) before forcing an _initTween(), but that can create another edge case like tweening a timeline's progress would trigger onUpdates to fire which could move other things around. It's better to just inform users that .resetTo() should ONLY be used for tweens that already have that property. For example, you can't gsap.to(...{ y: 0 }) and then tween.restTo("x", 200) for example.
        _forceAllPropTweens = 1; // otherwise, when we _addPropTween() and it finds no change between the start and end values, it skips creating a PropTween (for efficiency...why tween when there's no difference?) but in this case we NEED that PropTween created so we can edit it.

        tween.vars[property] = "+=0";

        _initTween(tween, time);

        _forceAllPropTweens = 0;
        return skipRecursion ? _warn(property + " not eligible for reset") : 1; // if someone tries to do a quickTo() on a special property like borderRadius which must get split into 4 different properties, that's not eligible for .resetTo().
      }

      ptCache.push(pt);
    }
  }

  i = ptCache.length;

  while (i--) {
    rootPT = ptCache[i];
    pt = rootPT._pt || rootPT; // complex values may have nested PropTweens. We only accommodate the FIRST value.

    pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
    pt.c = value - pt.s;
    rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e)); // mainly for CSSPlugin (end value)

    rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b)); // (beginning value)
  }
},
    _addAliasesToVars = function _addAliasesToVars(targets, vars) {
  var harness = targets[0] ? _getCache(targets[0]).harness : 0,
      propertyAliases = harness && harness.aliases,
      copy,
      p,
      i,
      aliases;

  if (!propertyAliases) {
    return vars;
  }

  copy = _merge({}, vars);

  for (p in propertyAliases) {
    if (p in copy) {
      aliases = propertyAliases[p].split(",");
      i = aliases.length;

      while (i--) {
        copy[aliases[i]] = copy[p];
      }
    }
  }

  return copy;
},
    // parses multiple formats, like {"0%": {x: 100}, {"50%": {x: -20}} and { x: {"0%": 100, "50%": -20} }, and an "ease" can be set on any object. We populate an "allProps" object with an Array for each property, like {x: [{}, {}], y:[{}, {}]} with data for each property tween. The objects have a "t" (time), "v", (value), and "e" (ease) property. This allows us to piece together a timeline later.
_parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {
  var ease = obj.ease || easeEach || "power1.inOut",
      p,
      a;

  if (_isArray(obj)) {
    a = allProps[prop] || (allProps[prop] = []); // t = time (out of 100), v = value, e = ease

    obj.forEach(function (value, i) {
      return a.push({
        t: i / (obj.length - 1) * 100,
        v: value,
        e: ease
      });
    });
  } else {
    for (p in obj) {
      a = allProps[p] || (allProps[p] = []);
      p === "ease" || a.push({
        t: parseFloat(prop),
        v: obj[p],
        e: ease
      });
    }
  }
},
    _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
  return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
},
    _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
    _staggerPropsToSkip = {};

_forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function (name) {
  return _staggerPropsToSkip[name] = 1;
});
/*
 * --------------------------------------------------------------------------------------
 * TWEEN
 * --------------------------------------------------------------------------------------
 */


var Tween = /*#__PURE__*/function (_Animation2) {
  _inheritsLoose(Tween, _Animation2);

  function Tween(targets, vars, position, skipInherit) {
    var _this3;

    if (typeof vars === "number") {
      position.duration = vars;
      vars = position;
      position = null;
    }

    _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
    var _this3$vars = _this3.vars,
        duration = _this3$vars.duration,
        delay = _this3$vars.delay,
        immediateRender = _this3$vars.immediateRender,
        stagger = _this3$vars.stagger,
        overwrite = _this3$vars.overwrite,
        keyframes = _this3$vars.keyframes,
        defaults = _this3$vars.defaults,
        scrollTrigger = _this3$vars.scrollTrigger,
        yoyoEase = _this3$vars.yoyoEase,
        parent = vars.parent || _globalTimeline,
        parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
        tl,
        i,
        copy,
        l,
        p,
        curTarget,
        staggerFunc,
        staggerVarsToMerge;
    _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://gsap.com", !_config.nullTargetWarn) || [];
    _this3._ptLookup = []; //PropTween lookup. An array containing an object for each target, having keys for each tweening property

    _this3._overwrite = overwrite;

    if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
      vars = _this3.vars;
      tl = _this3.timeline = new Timeline({
        data: "nested",
        defaults: defaults || {},
        targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
      }); // we need to store the targets because for staggers and keyframes, we end up creating an individual tween for each but function-based values need to know the index and the whole Array of targets.

      tl.kill();
      tl.parent = tl._dp = _assertThisInitialized(_this3);
      tl._start = 0;

      if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        l = parsedTargets.length;
        staggerFunc = stagger && distribute(stagger);

        if (_isObject(stagger)) {
          //users can pass in callbacks like onStart/onComplete in the stagger object. These should fire with each individual tween.
          for (p in stagger) {
            if (~_staggerTweenProps.indexOf(p)) {
              staggerVarsToMerge || (staggerVarsToMerge = {});
              staggerVarsToMerge[p] = stagger[p];
            }
          }
        }

        for (i = 0; i < l; i++) {
          copy = _copyExcluding(vars, _staggerPropsToSkip);
          copy.stagger = 0;
          yoyoEase && (copy.yoyoEase = yoyoEase);
          staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
          curTarget = parsedTargets[i]; //don't just copy duration or delay because if they're a string or function, we'd end up in an infinite loop because _isFuncOrString() would evaluate as true in the child tweens, entering this loop, etc. So we parse the value straight from vars and default to 0.

          copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
          copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;

          if (!stagger && l === 1 && copy.delay) {
            // if someone does delay:"random(1, 5)", repeat:-1, for example, the delay shouldn't be inside the repeat.
            _this3._delay = delay = copy.delay;
            _this3._start += delay;
            copy.delay = 0;
          }

          tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);
          tl._ease = _easeMap.none;
        }

        tl.duration() ? duration = delay = 0 : _this3.timeline = 0; // if the timeline's duration is 0, we don't need a timeline internally!
      } else if (keyframes) {
        _inheritDefaults(_setDefaults(tl.vars.defaults, {
          ease: "none"
        }));

        tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
        var time = 0,
            a,
            kf,
            v;

        if (_isArray(keyframes)) {
          keyframes.forEach(function (frame) {
            return tl.to(parsedTargets, frame, ">");
          });
          tl.duration(); // to ensure tl._dur is cached because we tap into it for performance purposes in the render() method.
        } else {
          copy = {};

          for (p in keyframes) {
            p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
          }

          for (p in copy) {
            a = copy[p].sort(function (a, b) {
              return a.t - b.t;
            });
            time = 0;

            for (i = 0; i < a.length; i++) {
              kf = a[i];
              v = {
                ease: kf.e,
                duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration
              };
              v[p] = kf.v;
              tl.to(parsedTargets, v, time);
              time += v.duration;
            }
          }

          tl.duration() < duration && tl.to({}, {
            duration: duration - tl.duration()
          }); // in case keyframes didn't go to 100%
        }
      }

      duration || _this3.duration(duration = tl.duration());
    } else {
      _this3.timeline = 0; //speed optimization, faster lookups (no going up the prototype chain)
    }

    if (overwrite === true && !_suppressOverwrites) {
      _overwritingTween = _assertThisInitialized(_this3);

      _globalTimeline.killTweensOf(parsedTargets);

      _overwritingTween = 0;
    }

    _addToTimeline(parent, _assertThisInitialized(_this3), position);

    vars.reversed && _this3.reverse();
    vars.paused && _this3.paused(true);

    if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
      _this3._tTime = -_tinyNum; //forces a render without having to set the render() "force" parameter to true because we want to allow lazying by default (using the "force" parameter always forces an immediate full render)

      _this3.render(Math.max(0, -delay) || 0); //in case delay is negative

    }

    scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
    return _this3;
  }

  var _proto3 = Tween.prototype;

  _proto3.render = function render(totalTime, suppressEvents, force) {
    var prevTime = this._time,
        tDur = this._tDur,
        dur = this._dur,
        isNegative = totalTime < 0,
        tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime,
        time,
        pt,
        iteration,
        cycleDuration,
        prevIteration,
        isYoyo,
        ratio,
        timeline,
        yoyoEase;

    if (!dur) {
      _renderZeroDurationTween(this, totalTime, suppressEvents, force);
    } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {
      //this senses if we're crossing over the start time, in which case we must record _zTime and force the render, but we do it in this lengthy conditional way for performance reasons (usually we can skip the calculations): this._initted && (this._zTime < 0) !== (totalTime < 0)
      time = tTime;
      timeline = this.timeline;

      if (this._repeat) {
        //adjust the time for repeats and yoyos
        cycleDuration = dur + this._rDelay;

        if (this._repeat < -1 && isNegative) {
          return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
        }

        time = _roundPrecise(tTime % cycleDuration); //round to avoid floating point errors. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)

        if (tTime === tDur) {
          // the tDur === tTime is for edge cases where there's a lengthy decimal on the duration and it may reach the very end but the time is rendered as not-quite-there (remember, tDur is rounded to 4 decimals whereas dur isn't)
          iteration = this._repeat;
          time = dur;
        } else {
          iteration = ~~(tTime / cycleDuration);

          if (iteration && iteration === _roundPrecise(tTime / cycleDuration)) {
            time = dur;
            iteration--;
          }

          time > dur && (time = dur);
        }

        isYoyo = this._yoyo && iteration & 1;

        if (isYoyo) {
          yoyoEase = this._yEase;
          time = dur - time;
        }

        prevIteration = _animationCycle(this._tTime, cycleDuration);

        if (time === prevTime && !force && this._initted && iteration === prevIteration) {
          //could be during the repeatDelay part. No need to render and fire callbacks.
          this._tTime = tTime;
          return this;
        }

        if (iteration !== prevIteration) {
          timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo); //repeatRefresh functionality

          if (this.vars.repeatRefresh && !isYoyo && !this._lock && this._time !== dur && this._initted) {
            // this._time will === dur when we render at EXACTLY the end of an iteration. Without this condition, it'd often do the repeatRefresh render TWICE (again on the very next tick).
            this._lock = force = 1; //force, otherwise if lazy is true, the _attemptInitTween() will return and we'll jump out and get caught bouncing on each tick.

            this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
          }
        }
      }

      if (!this._initted) {
        if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
          this._tTime = 0; // in constructor if immediateRender is true, we set _tTime to -_tinyNum to have the playhead cross the starting point but we can't leave _tTime as a negative number.

          return this;
        }

        if (prevTime !== this._time && !(force && this.vars.repeatRefresh && iteration !== prevIteration)) {
          // rare edge case - during initialization, an onUpdate in the _startAt (.fromTo()) might force this tween to render at a different spot in which case we should ditch this render() call so that it doesn't revert the values. But we also don't want to dump if we're doing a repeatRefresh render!
          return this;
        }

        if (dur !== this._dur) {
          // while initting, a plugin like InertiaPlugin might alter the duration, so rerun from the start to ensure everything renders as it should.
          return this.render(totalTime, suppressEvents, force);
        }
      }

      this._tTime = tTime;
      this._time = time;

      if (!this._act && this._ts) {
        this._act = 1; //as long as it's not paused, force it to be active so that if the user renders independent of the parent timeline, it'll be forced to re-render on the next tick.

        this._lazy = 0;
      }

      this.ratio = ratio = (yoyoEase || this._ease)(time / dur);

      if (this._from) {
        this.ratio = ratio = 1 - ratio;
      }

      if (time && !prevTime && !suppressEvents && !iteration) {
        _callback(this, "onStart");

        if (this._tTime !== tTime) {
          // in case the onStart triggered a render at a different spot, eject. Like if someone did animation.pause(0.5) or something inside the onStart.
          return this;
        }
      }

      pt = this._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }

      timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);

      if (this._onUpdate && !suppressEvents) {
        isNegative && _rewindStartAt(this, totalTime, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.

        _callback(this, "onUpdate");
      }

      this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");

      if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
        isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
        (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1); // don't remove if we're rendering at exactly a time of 0, as there could be autoRevert values that should get set on the next tick (if the playhead goes backward beyond the startTime, negative totalTime). Don't remove if the timeline is reversed and the playhead isn't at 0, otherwise tl.progress(1).reverse() won't work. Only remove if the playhead is at the end and timeScale is positive, or if the playhead is at 0 and the timeScale is negative.

        if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
          // if prevTime and tTime are zero, we shouldn't fire the onReverseComplete. This could happen if you gsap.to(... {paused:true}).play();
          _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

          this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
        }
      }
    }

    return this;
  };

  _proto3.targets = function targets() {
    return this._targets;
  };

  _proto3.invalidate = function invalidate(soft) {
    // "soft" gives us a way to clear out everything EXCEPT the recorded pre-"from" portion of from() tweens. Otherwise, for example, if you tween.progress(1).render(0, true true).invalidate(), the "from" values would persist and then on the next render, the from() tweens would initialize and the current value would match the "from" values, thus animate from the same value to the same value (no animation). We tap into this in ScrollTrigger's refresh() where we must push a tween to completion and then back again but honor its init state in case the tween is dependent on another tween further up on the page.
    (!soft || !this.vars.runBackwards) && (this._startAt = 0);
    this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
    this._ptLookup = [];
    this.timeline && this.timeline.invalidate(soft);
    return _Animation2.prototype.invalidate.call(this, soft);
  };

  _proto3.resetTo = function resetTo(property, value, start, startIsRelative, skipRecursion) {
    _tickerActive || _ticker.wake();
    this._ts || this.play();
    var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts),
        ratio;
    this._initted || _initTween(this, time);
    ratio = this._ease(time / this._dur); // don't just get tween.ratio because it may not have rendered yet.
    // possible future addition to allow an object with multiple values to update, like tween.resetTo({x: 100, y: 200}); At this point, it doesn't seem worth the added kb given the fact that most users will likely opt for the convenient gsap.quickTo() way of interacting with this method.
    // if (_isObject(property)) { // performance optimization
    // 	for (p in property) {
    // 		if (_updatePropTweens(this, p, property[p], value ? value[p] : null, start, ratio, time)) {
    // 			return this.resetTo(property, value, start, startIsRelative); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
    // 		}
    // 	}
    // } else {

    if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time, skipRecursion)) {
      return this.resetTo(property, value, start, startIsRelative, 1); // if a PropTween wasn't found for the property, it'll get forced with a re-initialization so we need to jump out and start over again.
    } //}


    _alignPlayhead(this, 0);

    this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
    return this.render(0);
  };

  _proto3.kill = function kill(targets, vars) {
    if (vars === void 0) {
      vars = "all";
    }

    if (!targets && (!vars || vars === "all")) {
      this._lazy = this._pt = 0;
      return this.parent ? _interrupt(this) : this;
    }

    if (this.timeline) {
      var tDur = this.timeline.totalDuration();
      this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this); // if nothing is left tweening, interrupt.

      this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1); // if a nested tween is killed that changes the duration, it should affect this tween's duration. We must use the ratio, though, because sometimes the internal timeline is stretched like for keyframes where they don't all add up to whatever the parent tween's duration was set to.

      return this;
    }

    var parsedTargets = this._targets,
        killingTargets = targets ? toArray(targets) : parsedTargets,
        propTweenLookup = this._ptLookup,
        firstPT = this._pt,
        overwrittenProps,
        curLookup,
        curOverwriteProps,
        props,
        p,
        pt,
        i;

    if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
      vars === "all" && (this._pt = 0);
      return _interrupt(this);
    }

    overwrittenProps = this._op = this._op || [];

    if (vars !== "all") {
      //so people can pass in a comma-delimited list of property names
      if (_isString(vars)) {
        p = {};

        _forEachName(vars, function (name) {
          return p[name] = 1;
        });

        vars = p;
      }

      vars = _addAliasesToVars(parsedTargets, vars);
    }

    i = parsedTargets.length;

    while (i--) {
      if (~killingTargets.indexOf(parsedTargets[i])) {
        curLookup = propTweenLookup[i];

        if (vars === "all") {
          overwrittenProps[i] = vars;
          props = curLookup;
          curOverwriteProps = {};
        } else {
          curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
          props = vars;
        }

        for (p in props) {
          pt = curLookup && curLookup[p];

          if (pt) {
            if (!("kill" in pt.d) || pt.d.kill(p) === true) {
              _removeLinkedListItem(this, pt, "_pt");
            }

            delete curLookup[p];
          }

          if (curOverwriteProps !== "all") {
            curOverwriteProps[p] = 1;
          }
        }
      }
    }

    this._initted && !this._pt && firstPT && _interrupt(this); //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.

    return this;
  };

  Tween.to = function to(targets, vars) {
    return new Tween(targets, vars, arguments[2]);
  };

  Tween.from = function from(targets, vars) {
    return _createTweenType(1, arguments);
  };

  Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
    return new Tween(callback, 0, {
      immediateRender: false,
      lazy: false,
      overwrite: false,
      delay: delay,
      onComplete: callback,
      onReverseComplete: callback,
      onCompleteParams: params,
      onReverseCompleteParams: params,
      callbackScope: scope
    }); // we must use onReverseComplete too for things like timeline.add(() => {...}) which should be triggered in BOTH directions (forward and reverse)
  };

  Tween.fromTo = function fromTo(targets, fromVars, toVars) {
    return _createTweenType(2, arguments);
  };

  Tween.set = function set(targets, vars) {
    vars.duration = 0;
    vars.repeatDelay || (vars.repeat = 0);
    return new Tween(targets, vars);
  };

  Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
    return _globalTimeline.killTweensOf(targets, props, onlyActive);
  };

  return Tween;
}(Animation);

_setDefaults(Tween.prototype, {
  _targets: [],
  _lazy: 0,
  _startAt: 0,
  _op: 0,
  _onInit: 0
}); //add the pertinent timeline methods to Tween instances so that users can chain conveniently and create a timeline automatically. (removed due to concerns that it'd ultimately add to more confusion especially for beginners)
// _forEachName("to,from,fromTo,set,call,add,addLabel,addPause", name => {
// 	Tween.prototype[name] = function() {
// 		let tl = new Timeline();
// 		return _addToTimeline(tl, this)[name].apply(tl, toArray(arguments));
// 	}
// });
//for backward compatibility. Leverage the timeline calls.


_forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
  Tween[name] = function () {
    var tl = new Timeline(),
        params = _slice.call(arguments, 0);

    params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
    return tl[name].apply(tl, params);
  };
});
/*
 * --------------------------------------------------------------------------------------
 * PROPTWEEN
 * --------------------------------------------------------------------------------------
 */


var _setterPlain = function _setterPlain(target, property, value) {
  return target[property] = value;
},
    _setterFunc = function _setterFunc(target, property, value) {
  return target[property](value);
},
    _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
  return target[property](data.fp, value);
},
    _setterAttribute = function _setterAttribute(target, property, value) {
  return target.setAttribute(property, value);
},
    _getSetter = function _getSetter(target, property) {
  return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
},
    _renderPlain = function _renderPlain(ratio, data) {
  return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);
},
    _renderBoolean = function _renderBoolean(ratio, data) {
  return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
},
    _renderComplexString = function _renderComplexString(ratio, data) {
  var pt = data._pt,
      s = "";

  if (!ratio && data.b) {
    //b = beginning string
    s = data.b;
  } else if (ratio === 1 && data.e) {
    //e = ending string
    s = data.e;
  } else {
    while (pt) {
      s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s; //we use the "p" property for the text inbetween (like a suffix). And in the context of a complex string, the modifier (m) is typically just Math.round(), like for RGB colors.

      pt = pt._next;
    }

    s += data.c; //we use the "c" of the PropTween to store the final chunk of non-numeric text.
  }

  data.set(data.t, data.p, s, data);
},
    _renderPropTweens = function _renderPropTweens(ratio, data) {
  var pt = data._pt;

  while (pt) {
    pt.r(ratio, pt.d);
    pt = pt._next;
  }
},
    _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
  var pt = this._pt,
      next;

  while (pt) {
    next = pt._next;
    pt.p === property && pt.modifier(modifier, tween, target);
    pt = next;
  }
},
    _killPropTweensOf = function _killPropTweensOf(property) {
  var pt = this._pt,
      hasNonDependentRemaining,
      next;

  while (pt) {
    next = pt._next;

    if (pt.p === property && !pt.op || pt.op === property) {
      _removeLinkedListItem(this, pt, "_pt");
    } else if (!pt.dep) {
      hasNonDependentRemaining = 1;
    }

    pt = next;
  }

  return !hasNonDependentRemaining;
},
    _setterWithModifier = function _setterWithModifier(target, property, value, data) {
  data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
},
    _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
  var pt = parent._pt,
      next,
      pt2,
      first,
      last; //sorts the PropTween linked list in order of priority because some plugins need to do their work after ALL of the PropTweens were created (like RoundPropsPlugin and ModifiersPlugin)

  while (pt) {
    next = pt._next;
    pt2 = first;

    while (pt2 && pt2.pr > pt.pr) {
      pt2 = pt2._next;
    }

    if (pt._prev = pt2 ? pt2._prev : last) {
      pt._prev._next = pt;
    } else {
      first = pt;
    }

    if (pt._next = pt2) {
      pt2._prev = pt;
    } else {
      last = pt;
    }

    pt = next;
  }

  parent._pt = first;
}; //PropTween key: t = target, p = prop, r = renderer, d = data, s = start, c = change, op = overwriteProperty (ONLY populated when it's different than p), pr = priority, _next/_prev for the linked list siblings, set = setter, m = modifier, mSet = modifierSetter (the original setter, before a modifier was added)


var PropTween = /*#__PURE__*/function () {
  function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
    this.t = target;
    this.s = start;
    this.c = change;
    this.p = prop;
    this.r = renderer || _renderPlain;
    this.d = data || this;
    this.set = setter || _setterPlain;
    this.pr = priority || 0;
    this._next = next;

    if (next) {
      next._prev = this;
    }
  }

  var _proto4 = PropTween.prototype;

  _proto4.modifier = function modifier(func, tween, target) {
    this.mSet = this.mSet || this.set; //in case it was already set (a PropTween can only have one modifier)

    this.set = _setterWithModifier;
    this.m = func;
    this.mt = target; //modifier target

    this.tween = tween;
  };

  return PropTween;
}(); //Initialization tasks

_forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (name) {
  return _reservedProps[name] = 1;
});

_globals.TweenMax = _globals.TweenLite = Tween;
_globals.TimelineLite = _globals.TimelineMax = Timeline;
_globalTimeline = new Timeline({
  sortChildren: false,
  defaults: _defaults,
  autoRemoveChildren: true,
  id: "root",
  smoothChildTiming: true
});
_config.stringFilter = _colorStringFilter;

var _media = [],
    _listeners = {},
    _emptyArray = [],
    _lastMediaTime = 0,
    _contextID = 0,
    _dispatch = function _dispatch(type) {
  return (_listeners[type] || _emptyArray).map(function (f) {
    return f();
  });
},
    _onMediaChange = function _onMediaChange() {
  var time = Date.now(),
      matches = [];

  if (time - _lastMediaTime > 2) {
    _dispatch("matchMediaInit");

    _media.forEach(function (c) {
      var queries = c.queries,
          conditions = c.conditions,
          match,
          p,
          anyMatch,
          toggled;

      for (p in queries) {
        match = _win.matchMedia(queries[p]).matches; // Firefox doesn't update the "matches" property of the MediaQueryList object correctly - it only does so as it calls its change handler - so we must re-create a media query here to ensure it's accurate.

        match && (anyMatch = 1);

        if (match !== conditions[p]) {
          conditions[p] = match;
          toggled = 1;
        }
      }

      if (toggled) {
        c.revert();
        anyMatch && matches.push(c);
      }
    });

    _dispatch("matchMediaRevert");

    matches.forEach(function (c) {
      return c.onMatch(c, function (func) {
        return c.add(null, func);
      });
    });
    _lastMediaTime = time;

    _dispatch("matchMedia");
  }
};

var Context = /*#__PURE__*/function () {
  function Context(func, scope) {
    this.selector = scope && selector(scope);
    this.data = [];
    this._r = []; // returned/cleanup functions

    this.isReverted = false;
    this.id = _contextID++; // to work around issues that frameworks like Vue cause by making things into Proxies which make it impossible to do something like _media.indexOf(this) because "this" would no longer refer to the Context instance itself - it'd refer to a Proxy! We needed a way to identify the context uniquely

    func && this.add(func);
  }

  var _proto5 = Context.prototype;

  _proto5.add = function add(name, func, scope) {
    // possible future addition if we need the ability to add() an animation to a context and for whatever reason cannot create that animation inside of a context.add(() => {...}) function.
    // if (name && _isFunction(name.revert)) {
    // 	this.data.push(name);
    // 	return (name._ctx = this);
    // }
    if (_isFunction(name)) {
      scope = func;
      func = name;
      name = _isFunction;
    }

    var self = this,
        f = function f() {
      var prev = _context,
          prevSelector = self.selector,
          result;
      prev && prev !== self && prev.data.push(self);
      scope && (self.selector = selector(scope));
      _context = self;
      result = func.apply(self, arguments);
      _isFunction(result) && self._r.push(result);
      _context = prev;
      self.selector = prevSelector;
      self.isReverted = false;
      return result;
    };

    self.last = f;
    return name === _isFunction ? f(self, function (func) {
      return self.add(null, func);
    }) : name ? self[name] = f : f;
  };

  _proto5.ignore = function ignore(func) {
    var prev = _context;
    _context = null;
    func(this);
    _context = prev;
  };

  _proto5.getTweens = function getTweens() {
    var a = [];
    this.data.forEach(function (e) {
      return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === "nested") && a.push(e);
    });
    return a;
  };

  _proto5.clear = function clear() {
    this._r.length = this.data.length = 0;
  };

  _proto5.kill = function kill(revert, matchMedia) {
    var _this4 = this;

    if (revert) {
      (function () {
        var tweens = _this4.getTweens(),
            i = _this4.data.length,
            t;

        while (i--) {
          // Flip plugin tweens are very different in that they should actually be pushed to their end. The plugin replaces the timeline's .revert() method to do exactly that. But we also need to remove any of those nested tweens inside the flip timeline so that they don't get individually reverted.
          t = _this4.data[i];

          if (t.data === "isFlip") {
            t.revert();
            t.getChildren(true, true, false).forEach(function (tween) {
              return tweens.splice(tweens.indexOf(tween), 1);
            });
          }
        } // save as an object so that we can cache the globalTime for each tween to optimize performance during the sort


        tweens.map(function (t) {
          return {
            g: t._dur || t._delay || t._sat && !t._sat.vars.immediateRender ? t.globalTime(0) : -Infinity,
            t: t
          };
        }).sort(function (a, b) {
          return b.g - a.g || -Infinity;
        }).forEach(function (o) {
          return o.t.revert(revert);
        }); // note: all of the _startAt tweens should be reverted in reverse order that they were created, and they'll all have the same globalTime (-1) so the " || -1" in the sort keeps the order properly.

        i = _this4.data.length;

        while (i--) {
          // make sure we loop backwards so that, for example, SplitTexts that were created later on the same element get reverted first
          t = _this4.data[i];

          if (t instanceof Timeline) {
            if (t.data !== "nested") {
              t.scrollTrigger && t.scrollTrigger.revert();
              t.kill(); // don't revert() the timeline because that's duplicating efforts since we already reverted all the tweens
            }
          } else {
            !(t instanceof Tween) && t.revert && t.revert(revert);
          }
        }

        _this4._r.forEach(function (f) {
          return f(revert, _this4);
        });

        _this4.isReverted = true;
      })();
    } else {
      this.data.forEach(function (e) {
        return e.kill && e.kill();
      });
    }

    this.clear();

    if (matchMedia) {
      var i = _media.length;

      while (i--) {
        // previously, we checked _media.indexOf(this), but some frameworks like Vue enforce Proxy objects that make it impossible to get the proper result that way, so we must use a unique ID number instead.
        _media[i].id === this.id && _media.splice(i, 1);
      }
    }
  };

  _proto5.revert = function revert(config) {
    this.kill(config || {});
  };

  return Context;
}();

var MatchMedia = /*#__PURE__*/function () {
  function MatchMedia(scope) {
    this.contexts = [];
    this.scope = scope;
  }

  var _proto6 = MatchMedia.prototype;

  _proto6.add = function add(conditions, func, scope) {
    _isObject(conditions) || (conditions = {
      matches: conditions
    });
    var context = new Context(0, scope || this.scope),
        cond = context.conditions = {},
        mq,
        p,
        active;
    _context && !context.selector && (context.selector = _context.selector); // in case a context is created inside a context. Like a gsap.matchMedia() that's inside a scoped gsap.context()

    this.contexts.push(context);
    func = context.add("onMatch", func);
    context.queries = conditions;

    for (p in conditions) {
      if (p === "all") {
        active = 1;
      } else {
        mq = _win.matchMedia(conditions[p]);

        if (mq) {
          _media.indexOf(context) < 0 && _media.push(context);
          (cond[p] = mq.matches) && (active = 1);
          mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
        }
      }
    }

    active && func(context, function (f) {
      return context.add(null, f);
    });
    return this;
  } // refresh() {
  // 	let time = _lastMediaTime,
  // 		media = _media;
  // 	_lastMediaTime = -1;
  // 	_media = this.contexts;
  // 	_onMediaChange();
  // 	_lastMediaTime = time;
  // 	_media = media;
  // }
  ;

  _proto6.revert = function revert(config) {
    this.kill(config || {});
  };

  _proto6.kill = function kill(revert) {
    this.contexts.forEach(function (c) {
      return c.kill(revert, true);
    });
  };

  return MatchMedia;
}();
/*
 * --------------------------------------------------------------------------------------
 * GSAP
 * --------------------------------------------------------------------------------------
 */


var _gsap = {
  registerPlugin: function registerPlugin() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    args.forEach(function (config) {
      return _createPlugin(config);
    });
  },
  timeline: function timeline(vars) {
    return new Timeline(vars);
  },
  getTweensOf: function getTweensOf(targets, onlyActive) {
    return _globalTimeline.getTweensOf(targets, onlyActive);
  },
  getProperty: function getProperty(target, property, unit, uncache) {
    _isString(target) && (target = toArray(target)[0]); //in case selector text or an array is passed in

    var getter = _getCache(target || {}).get,
        format = unit ? _passThrough : _numericIfPossible;

    unit === "native" && (unit = "");
    return !target ? target : !property ? function (property, unit, uncache) {
      return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
  },
  quickSetter: function quickSetter(target, property, unit) {
    target = toArray(target);

    if (target.length > 1) {
      var setters = target.map(function (t) {
        return gsap.quickSetter(t, property, unit);
      }),
          l = setters.length;
      return function (value) {
        var i = l;

        while (i--) {
          setters[i](value);
        }
      };
    }

    target = target[0] || {};

    var Plugin = _plugins[property],
        cache = _getCache(target),
        p = cache.harness && (cache.harness.aliases || {})[property] || property,
        // in case it's an alias, like "rotate" for "rotation".
    setter = Plugin ? function (value) {
      var p = new Plugin();
      _quickTween._pt = 0;
      p.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
      p.render(1, p);
      _quickTween._pt && _renderPropTweens(1, _quickTween);
    } : cache.set(target, p);

    return Plugin ? setter : function (value) {
      return setter(target, p, unit ? value + unit : value, cache, 1);
    };
  },
  quickTo: function quickTo(target, property, vars) {
    var _merge2;

    var tween = gsap.to(target, _merge((_merge2 = {}, _merge2[property] = "+=0.1", _merge2.paused = true, _merge2), vars || {})),
        func = function func(value, start, startIsRelative) {
      return tween.resetTo(property, value, start, startIsRelative);
    };

    func.tween = tween;
    return func;
  },
  isTweening: function isTweening(targets) {
    return _globalTimeline.getTweensOf(targets, true).length > 0;
  },
  defaults: function defaults(value) {
    value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
    return _mergeDeep(_defaults, value || {});
  },
  config: function config(value) {
    return _mergeDeep(_config, value || {});
  },
  registerEffect: function registerEffect(_ref3) {
    var name = _ref3.name,
        effect = _ref3.effect,
        plugins = _ref3.plugins,
        defaults = _ref3.defaults,
        extendTimeline = _ref3.extendTimeline;
    (plugins || "").split(",").forEach(function (pluginName) {
      return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
    });

    _effects[name] = function (targets, vars, tl) {
      return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
    };

    if (extendTimeline) {
      Timeline.prototype[name] = function (targets, vars, position) {
        return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
      };
    }
  },
  registerEase: function registerEase(name, ease) {
    _easeMap[name] = _parseEase(ease);
  },
  parseEase: function parseEase(ease, defaultEase) {
    return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
  },
  getById: function getById(id) {
    return _globalTimeline.getById(id);
  },
  exportRoot: function exportRoot(vars, includeDelayedCalls) {
    if (vars === void 0) {
      vars = {};
    }

    var tl = new Timeline(vars),
        child,
        next;
    tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);

    _globalTimeline.remove(tl);

    tl._dp = 0; //otherwise it'll get re-activated when adding children and be re-introduced into _globalTimeline's linked list (then added to itself).

    tl._time = tl._tTime = _globalTimeline._time;
    child = _globalTimeline._first;

    while (child) {
      next = child._next;

      if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
        _addToTimeline(tl, child, child._start - child._delay);
      }

      child = next;
    }

    _addToTimeline(_globalTimeline, tl, 0);

    return tl;
  },
  context: function context(func, scope) {
    return func ? new Context(func, scope) : _context;
  },
  matchMedia: function matchMedia(scope) {
    return new MatchMedia(scope);
  },
  matchMediaRefresh: function matchMediaRefresh() {
    return _media.forEach(function (c) {
      var cond = c.conditions,
          found,
          p;

      for (p in cond) {
        if (cond[p]) {
          cond[p] = false;
          found = 1;
        }
      }

      found && c.revert();
    }) || _onMediaChange();
  },
  addEventListener: function addEventListener(type, callback) {
    var a = _listeners[type] || (_listeners[type] = []);
    ~a.indexOf(callback) || a.push(callback);
  },
  removeEventListener: function removeEventListener(type, callback) {
    var a = _listeners[type],
        i = a && a.indexOf(callback);
    i >= 0 && a.splice(i, 1);
  },
  utils: {
    wrap: wrap,
    wrapYoyo: wrapYoyo,
    distribute: distribute,
    random: random,
    snap: snap,
    normalize: normalize,
    getUnit: getUnit,
    clamp: clamp,
    splitColor: splitColor,
    toArray: toArray,
    selector: selector,
    mapRange: mapRange,
    pipe: pipe,
    unitize: unitize,
    interpolate: interpolate,
    shuffle: shuffle
  },
  install: _install,
  effects: _effects,
  ticker: _ticker,
  updateRoot: Timeline.updateRoot,
  plugins: _plugins,
  globalTimeline: _globalTimeline,
  core: {
    PropTween: PropTween,
    globals: _addGlobal,
    Tween: Tween,
    Timeline: Timeline,
    Animation: Animation,
    getCache: _getCache,
    _removeLinkedListItem: _removeLinkedListItem,
    reverting: function reverting() {
      return _reverting;
    },
    context: function context(toAdd) {
      if (toAdd && _context) {
        _context.data.push(toAdd);

        toAdd._ctx = _context;
      }

      return _context;
    },
    suppressOverwrites: function suppressOverwrites(value) {
      return _suppressOverwrites = value;
    }
  }
};

_forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
  return _gsap[name] = Tween[name];
});

_ticker.add(Timeline.updateRoot);

_quickTween = _gsap.to({}, {
  duration: 0
}); // ---- EXTRA PLUGINS --------------------------------------------------------

var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
  var pt = plugin._pt;

  while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
    pt = pt._next;
  }

  return pt;
},
    _addModifiers = function _addModifiers(tween, modifiers) {
  var targets = tween._targets,
      p,
      i,
      pt;

  for (p in modifiers) {
    i = targets.length;

    while (i--) {
      pt = tween._ptLookup[i][p];

      if (pt && (pt = pt.d)) {
        if (pt._pt) {
          // is a plugin
          pt = _getPluginPropTween(pt, p);
        }

        pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
      }
    }
  }
},
    _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
  return {
    name: name,
    rawVars: 1,
    //don't pre-process function-based values or "random()" strings.
    init: function init(target, vars, tween) {
      tween._onInit = function (tween) {
        var temp, p;

        if (_isString(vars)) {
          temp = {};

          _forEachName(vars, function (name) {
            return temp[name] = 1;
          }); //if the user passes in a comma-delimited list of property names to roundProps, like "x,y", we round to whole numbers.


          vars = temp;
        }

        if (modifier) {
          temp = {};

          for (p in vars) {
            temp[p] = modifier(vars[p]);
          }

          vars = temp;
        }

        _addModifiers(tween, vars);
      };
    }
  };
}; //register core plugins


var gsap = _gsap.registerPlugin({
  name: "attr",
  init: function init(target, vars, tween, index, targets) {
    var p, pt, v;
    this.tween = tween;

    for (p in vars) {
      v = target.getAttribute(p) || "";
      pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
      pt.op = p;
      pt.b = v; // record the beginning value so we can revert()

      this._props.push(p);
    }
  },
  render: function render(ratio, data) {
    var pt = data._pt;

    while (pt) {
      _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d); // if reverting, go back to the original (pt.b)

      pt = pt._next;
    }
  }
}, {
  name: "endArray",
  init: function init(target, value) {
    var i = value.length;

    while (i--) {
      this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);
    }
  }
}, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap; //to prevent the core plugins from being dropped via aggressive tree shaking, we must include them in the variable declaration in this way.

Tween.version = Timeline.version = gsap.version = "3.12.3";
_coreReady = 1;
_windowExists() && _wake();
var Power0 = _easeMap.Power0,
    Power1 = _easeMap.Power1,
    Power2 = _easeMap.Power2,
    Power3 = _easeMap.Power3,
    Power4 = _easeMap.Power4,
    Linear = _easeMap.Linear,
    Quad = _easeMap.Quad,
    Cubic = _easeMap.Cubic,
    Quart = _easeMap.Quart,
    Quint = _easeMap.Quint,
    Strong = _easeMap.Strong,
    Elastic = _easeMap.Elastic,
    Back = _easeMap.Back,
    SteppedEase = _easeMap.SteppedEase,
    Bounce = _easeMap.Bounce,
    Sine = _easeMap.Sine,
    Expo = _easeMap.Expo,
    Circ = _easeMap.Circ;

 //export some internal methods/orojects for use in CSSPlugin so that we can externalize that file and allow custom builds that exclude it.



/***/ }),

/***/ "./node_modules/gsap/index.js":
/*!************************************!*\
  !*** ./node_modules/gsap/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Back: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Back),
/* harmony export */   Bounce: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Bounce),
/* harmony export */   CSSPlugin: () => (/* reexport safe */ _CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__.CSSPlugin),
/* harmony export */   Circ: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Circ),
/* harmony export */   Cubic: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Cubic),
/* harmony export */   Elastic: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Elastic),
/* harmony export */   Expo: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Expo),
/* harmony export */   Linear: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Linear),
/* harmony export */   Power0: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power0),
/* harmony export */   Power1: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power1),
/* harmony export */   Power2: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power2),
/* harmony export */   Power3: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power3),
/* harmony export */   Power4: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Power4),
/* harmony export */   Quad: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quad),
/* harmony export */   Quart: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quart),
/* harmony export */   Quint: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Quint),
/* harmony export */   Sine: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Sine),
/* harmony export */   SteppedEase: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.SteppedEase),
/* harmony export */   Strong: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.Strong),
/* harmony export */   TimelineLite: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TimelineLite),
/* harmony export */   TimelineMax: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TimelineMax),
/* harmony export */   TweenLite: () => (/* reexport safe */ _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.TweenLite),
/* harmony export */   TweenMax: () => (/* binding */ TweenMaxWithCSS),
/* harmony export */   "default": () => (/* binding */ gsapWithCSS),
/* harmony export */   gsap: () => (/* binding */ gsapWithCSS)
/* harmony export */ });
/* harmony import */ var _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gsap-core.js */ "./node_modules/gsap/gsap-core.js");
/* harmony import */ var _CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CSSPlugin.js */ "./node_modules/gsap/CSSPlugin.js");


var gsapWithCSS = _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap.registerPlugin(_CSSPlugin_js__WEBPACK_IMPORTED_MODULE_1__.CSSPlugin) || _gsap_core_js__WEBPACK_IMPORTED_MODULE_0__.gsap,
    // to protect from tree shaking
TweenMaxWithCSS = gsapWithCSS.core.Tween;


/***/ }),

/***/ "./node_modules/intl-messageformat/lib/src/core.js":
/*!*********************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/src/core.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IntlMessageFormat: () => (/* binding */ IntlMessageFormat)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @formatjs/icu-messageformat-parser */ "./node_modules/@formatjs/icu-messageformat-parser/lib/index.js");
/* harmony import */ var _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @formatjs/fast-memoize */ "./node_modules/@formatjs/fast-memoize/lib/index.js");
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatters */ "./node_modules/intl-messageformat/lib/src/formatters.js");
/*
Copyright (c) 2014, Yahoo! Inc. All rights reserved.
Copyrights licensed under the New BSD License.
See the accompanying LICENSE file for terms.
*/




// -- MessageFormat --------------------------------------------------------
function mergeConfig(c1, c2) {
    if (!c2) {
        return c1;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {
        all[k] = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, c1[k]), (c2[k] || {}));
        return all;
    }, {}));
}
function mergeConfigs(defaultConfig, configs) {
    if (!configs) {
        return defaultConfig;
    }
    return Object.keys(defaultConfig).reduce(function (all, k) {
        all[k] = mergeConfig(defaultConfig[k], configs[k]);
        return all;
    }, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, defaultConfig));
}
function createFastMemoizeCache(store) {
    return {
        create: function () {
            return {
                get: function (key) {
                    return store[key];
                },
                set: function (key, value) {
                    store[key] = value;
                },
            };
        },
    };
}
function createDefaultFormatters(cache) {
    if (cache === void 0) { cache = {
        number: {},
        dateTime: {},
        pluralRules: {},
    }; }
    return {
        getNumberFormat: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.memoize)(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.NumberFormat).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.number),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
        getDateTimeFormat: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.memoize)(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.dateTime),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
        getPluralRules: (0,_formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.memoize)(function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            return new ((_a = Intl.PluralRules).bind.apply(_a, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__spreadArray)([void 0], args, false)))();
        }, {
            cache: createFastMemoizeCache(cache.pluralRules),
            strategy: _formatjs_fast_memoize__WEBPACK_IMPORTED_MODULE_1__.strategies.variadic,
        }),
    };
}
var IntlMessageFormat = /** @class */ (function () {
    function IntlMessageFormat(message, locales, overrideFormats, opts) {
        var _this = this;
        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }
        this.formatterCache = {
            number: {},
            dateTime: {},
            pluralRules: {},
        };
        this.format = function (values) {
            var parts = _this.formatToParts(values);
            // Hot path for straight simple msg translations
            if (parts.length === 1) {
                return parts[0].value;
            }
            var result = parts.reduce(function (all, part) {
                if (!all.length ||
                    part.type !== _formatters__WEBPACK_IMPORTED_MODULE_3__.PART_TYPE.literal ||
                    typeof all[all.length - 1] !== 'string') {
                    all.push(part.value);
                }
                else {
                    all[all.length - 1] += part.value;
                }
                return all;
            }, []);
            if (result.length <= 1) {
                return result[0] || '';
            }
            return result;
        };
        this.formatToParts = function (values) {
            return (0,_formatters__WEBPACK_IMPORTED_MODULE_3__.formatToParts)(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);
        };
        this.resolvedOptions = function () {
            var _a;
            return ({
                locale: ((_a = _this.resolvedLocale) === null || _a === void 0 ? void 0 : _a.toString()) ||
                    Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],
            });
        };
        this.getAst = function () { return _this.ast; };
        // Defined first because it's used to build the format pattern.
        this.locales = locales;
        this.resolvedLocale = IntlMessageFormat.resolveLocale(locales);
        if (typeof message === 'string') {
            this.message = message;
            if (!IntlMessageFormat.__parse) {
                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');
            }
            var _a = opts || {}, formatters = _a.formatters, parseOpts = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["formatters"]);
            // Parse string messages into an AST.
            this.ast = IntlMessageFormat.__parse(message, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, parseOpts), { locale: this.resolvedLocale }));
        }
        else {
            this.ast = message;
        }
        if (!Array.isArray(this.ast)) {
            throw new TypeError('A message must be provided as a String or AST.');
        }
        // Creates a new object with the specified `formats` merged with the default
        // formats.
        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);
        this.formatters =
            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat, "defaultLocale", {
        get: function () {
            if (!IntlMessageFormat.memoizedDefaultLocale) {
                IntlMessageFormat.memoizedDefaultLocale =
                    new Intl.NumberFormat().resolvedOptions().locale;
            }
            return IntlMessageFormat.memoizedDefaultLocale;
        },
        enumerable: false,
        configurable: true
    });
    IntlMessageFormat.memoizedDefaultLocale = null;
    IntlMessageFormat.resolveLocale = function (locales) {
        if (typeof Intl.Locale === 'undefined') {
            return;
        }
        var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
        if (supportedLocales.length > 0) {
            return new Intl.Locale(supportedLocales[0]);
        }
        return new Intl.Locale(typeof locales === 'string' ? locales : locales[0]);
    };
    IntlMessageFormat.__parse = _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.parse;
    // Default format options used as the prototype of the `formats` provided to the
    // constructor. These are used when constructing the internal Intl.NumberFormat
    // and Intl.DateTimeFormat instances.
    IntlMessageFormat.formats = {
        number: {
            integer: {
                maximumFractionDigits: 0,
            },
            currency: {
                style: 'currency',
            },
            percent: {
                style: 'percent',
            },
        },
        date: {
            short: {
                month: 'numeric',
                day: 'numeric',
                year: '2-digit',
            },
            medium: {
                month: 'short',
                day: 'numeric',
                year: 'numeric',
            },
            long: {
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
            full: {
                weekday: 'long',
                month: 'long',
                day: 'numeric',
                year: 'numeric',
            },
        },
        time: {
            short: {
                hour: 'numeric',
                minute: 'numeric',
            },
            medium: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
            },
            long: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
            full: {
                hour: 'numeric',
                minute: 'numeric',
                second: 'numeric',
                timeZoneName: 'short',
            },
        },
    };
    return IntlMessageFormat;
}());



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/src/error.js":
/*!**********************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/src/error.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),
/* harmony export */   FormatError: () => (/* binding */ FormatError),
/* harmony export */   InvalidValueError: () => (/* binding */ InvalidValueError),
/* harmony export */   InvalidValueTypeError: () => (/* binding */ InvalidValueTypeError),
/* harmony export */   MissingValueError: () => (/* binding */ MissingValueError)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");

var ErrorCode;
(function (ErrorCode) {
    // When we have a placeholder but no value to format
    ErrorCode["MISSING_VALUE"] = "MISSING_VALUE";
    // When value supplied is invalid
    ErrorCode["INVALID_VALUE"] = "INVALID_VALUE";
    // When we need specific Intl API but it's not available
    ErrorCode["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FormatError, _super);
    function FormatError(msg, code, originalMessage) {
        var _this = _super.call(this, msg) || this;
        _this.code = code;
        _this.originalMessage = originalMessage;
        return _this;
    }
    FormatError.prototype.toString = function () {
        return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError;
}(Error));

var InvalidValueError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(InvalidValueError, _super);
    function InvalidValueError(variableId, value, options, originalMessage) {
        return _super.call(this, "Invalid values for \"".concat(variableId, "\": \"").concat(value, "\". Options are \"").concat(Object.keys(options).join('", "'), "\""), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError;
}(FormatError));

var InvalidValueTypeError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(InvalidValueTypeError, _super);
    function InvalidValueTypeError(value, type, originalMessage) {
        return _super.call(this, "Value for \"".concat(value, "\" must be of type ").concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError;
}(FormatError));

var MissingValueError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(MissingValueError, _super);
    function MissingValueError(variableId, originalMessage) {
        return _super.call(this, "The intl string context variable \"".concat(variableId, "\" was not provided to the string \"").concat(originalMessage, "\""), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError;
}(FormatError));



/***/ }),

/***/ "./node_modules/intl-messageformat/lib/src/formatters.js":
/*!***************************************************************!*\
  !*** ./node_modules/intl-messageformat/lib/src/formatters.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PART_TYPE: () => (/* binding */ PART_TYPE),
/* harmony export */   formatToParts: () => (/* binding */ formatToParts),
/* harmony export */   isFormatXMLElementFn: () => (/* binding */ isFormatXMLElementFn)
/* harmony export */ });
/* harmony import */ var _formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @formatjs/icu-messageformat-parser */ "./node_modules/@formatjs/icu-messageformat-parser/lib/index.js");
/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ "./node_modules/intl-messageformat/lib/src/error.js");


var PART_TYPE;
(function (PART_TYPE) {
    PART_TYPE[PART_TYPE["literal"] = 0] = "literal";
    PART_TYPE[PART_TYPE["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
    if (parts.length < 2) {
        return parts;
    }
    return parts.reduce(function (all, part) {
        var lastPart = all[all.length - 1];
        if (!lastPart ||
            lastPart.type !== PART_TYPE.literal ||
            part.type !== PART_TYPE.literal) {
            all.push(part);
        }
        else {
            lastPart.value += part.value;
        }
        return all;
    }, []);
}
function isFormatXMLElementFn(el) {
    return typeof el === 'function';
}
// TODO(skeleton): add skeleton support
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, 
// For debugging
originalMessage) {
    // Hot path for straight simple msg translations
    if (els.length === 1 && (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isLiteralElement)(els[0])) {
        return [
            {
                type: PART_TYPE.literal,
                value: els[0].value,
            },
        ];
    }
    var result = [];
    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
        var el = els_1[_i];
        // Exit early for string parts.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isLiteralElement)(el)) {
            result.push({
                type: PART_TYPE.literal,
                value: el.value,
            });
            continue;
        }
        // TODO: should this part be literal type?
        // Replace `#` in plural rules with the actual numeric value.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isPoundElement)(el)) {
            if (typeof currentPluralValue === 'number') {
                result.push({
                    type: PART_TYPE.literal,
                    value: formatters.getNumberFormat(locales).format(currentPluralValue),
                });
            }
            continue;
        }
        var varName = el.value;
        // Enforce that all required values are provided by the caller.
        if (!(values && varName in values)) {
            throw new _error__WEBPACK_IMPORTED_MODULE_1__.MissingValueError(varName, originalMessage);
        }
        var value = values[varName];
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isArgumentElement)(el)) {
            if (!value || typeof value === 'string' || typeof value === 'number') {
                value =
                    typeof value === 'string' || typeof value === 'number'
                        ? String(value)
                        : '';
            }
            result.push({
                type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                value: value,
            });
            continue;
        }
        // Recursively format plural and select parts' option — which can be a
        // nested pattern structure. The choosing of the option to use is
        // abstracted-by and delegated-to the part helper object.
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.date[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateTimeSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isTimeElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.time[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isDateTimeSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : formats.time.medium;
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getDateTimeFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isNumberElement)(el)) {
            var style = typeof el.style === 'string'
                ? formats.number[el.style]
                : (0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isNumberSkeleton)(el.style)
                    ? el.style.parsedOptions
                    : undefined;
            if (style && style.scale) {
                value =
                    value *
                        (style.scale || 1);
            }
            result.push({
                type: PART_TYPE.literal,
                value: formatters
                    .getNumberFormat(locales, style)
                    .format(value),
            });
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isTagElement)(el)) {
            var children = el.children, value_1 = el.value;
            var formatFn = values[value_1];
            if (!isFormatXMLElementFn(formatFn)) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueTypeError(value_1, 'function', originalMessage);
            }
            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
            var chunks = formatFn(parts.map(function (p) { return p.value; }));
            if (!Array.isArray(chunks)) {
                chunks = [chunks];
            }
            result.push.apply(result, chunks.map(function (c) {
                return {
                    type: typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,
                    value: c,
                };
            }));
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isSelectElement)(el)) {
            var opt = el.options[value] || el.options.other;
            if (!opt) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
            continue;
        }
        if ((0,_formatjs_icu_messageformat_parser__WEBPACK_IMPORTED_MODULE_0__.isPluralElement)(el)) {
            var opt = el.options["=".concat(value)];
            if (!opt) {
                if (!Intl.PluralRules) {
                    throw new _error__WEBPACK_IMPORTED_MODULE_1__.FormatError("Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n", _error__WEBPACK_IMPORTED_MODULE_1__.ErrorCode.MISSING_INTL_API, originalMessage);
                }
                var rule = formatters
                    .getPluralRules(locales, { type: el.pluralType })
                    .select(value - (el.offset || 0));
                opt = el.options[rule] || el.options.other;
            }
            if (!opt) {
                throw new _error__WEBPACK_IMPORTED_MODULE_1__.InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
            }
            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
            continue;
        }
    }
    return mergeLiteral(result);
}


/***/ }),

/***/ "./node_modules/@symfony/ux-dropzone/dist/style.min.css":
/*!**************************************************************!*\
  !*** ./node_modules/@symfony/ux-dropzone/dist/style.min.css ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/@symfony/ux-live-component/dist/live.min.css":
/*!*******************************************************************!*\
  !*** ./node_modules/@symfony/ux-live-component/dist/live.min.css ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/@symfony/ux-toggle-password/dist/style.min.css":
/*!*********************************************************************!*\
  !*** ./node_modules/@symfony/ux-toggle-password/dist/style.min.css ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/quill/dist/quill.bubble.css":
/*!**************************************************!*\
  !*** ./node_modules/quill/dist/quill.bubble.css ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/quill/dist/quill.snow.css":
/*!************************************************!*\
  !*** ./node_modules/quill/dist/quill.snow.css ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/tom-select/dist/css/tom-select.default.css":
/*!*****************************************************************!*\
  !*** ./node_modules/tom-select/dist/css/tom-select.default.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./assets/css/app.scss":
/*!*****************************!*\
  !*** ./assets/css/app.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/sweetalert2/src/sweetalert2.scss":
/*!*******************************************************!*\
  !*** ./node_modules/sweetalert2/src/sweetalert2.scss ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/quill/dist/quill.js":
/*!******************************************!*\
  !*** ./node_modules/quill/dist/quill.js ***!
  \******************************************/
/***/ (function(module) {

/*!
 * Quill Editor v1.3.7
 * https://quilljs.com/
 * Copyright (c) 2014, Jason Chen
 * Copyright (c) 2013, salesforce.com
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_697__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_697__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_697__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_697__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_697__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_697__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_697__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_697__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_697__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_697__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_697__(__nested_webpack_require_697__.s = 109);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __nested_webpack_require_2976__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __nested_webpack_require_2976__(17);
var format_1 = __nested_webpack_require_2976__(18);
var leaf_1 = __nested_webpack_require_2976__(19);
var scroll_1 = __nested_webpack_require_2976__(45);
var inline_1 = __nested_webpack_require_2976__(46);
var block_1 = __nested_webpack_require_2976__(47);
var embed_1 = __nested_webpack_require_2976__(48);
var text_1 = __nested_webpack_require_2976__(49);
var attributor_1 = __nested_webpack_require_2976__(12);
var class_1 = __nested_webpack_require_2976__(32);
var style_1 = __nested_webpack_require_2976__(33);
var store_1 = __nested_webpack_require_2976__(31);
var Registry = __nested_webpack_require_2976__(1);
var Parchment = {
    Scope: Registry.Scope,
    create: Registry.create,
    find: Registry.find,
    query: Registry.query,
    register: Registry.register,
    Container: container_1.default,
    Format: format_1.default,
    Leaf: leaf_1.default,
    Embed: embed_1.default,
    Scroll: scroll_1.default,
    Block: block_1.default,
    Inline: inline_1.default,
    Text: text_1.default,
    Attributor: {
        Attribute: attributor_1.default,
        Class: class_1.default,
        Style: style_1.default,
        Store: store_1.default,
    },
};
exports.default = Parchment;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ParchmentError = /** @class */ (function (_super) {
    __extends(ParchmentError, _super);
    function ParchmentError(message) {
        var _this = this;
        message = '[Parchment] ' + message;
        _this = _super.call(this, message) || this;
        _this.message = message;
        _this.name = _this.constructor.name;
        return _this;
    }
    return ParchmentError;
}(Error));
exports.ParchmentError = ParchmentError;
var attributes = {};
var classes = {};
var tags = {};
var types = {};
exports.DATA_KEY = '__blot';
var Scope;
(function (Scope) {
    Scope[Scope["TYPE"] = 3] = "TYPE";
    Scope[Scope["LEVEL"] = 12] = "LEVEL";
    Scope[Scope["ATTRIBUTE"] = 13] = "ATTRIBUTE";
    Scope[Scope["BLOT"] = 14] = "BLOT";
    Scope[Scope["INLINE"] = 7] = "INLINE";
    Scope[Scope["BLOCK"] = 11] = "BLOCK";
    Scope[Scope["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
    Scope[Scope["INLINE_BLOT"] = 6] = "INLINE_BLOT";
    Scope[Scope["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
    Scope[Scope["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
    Scope[Scope["ANY"] = 15] = "ANY";
})(Scope = exports.Scope || (exports.Scope = {}));
function create(input, value) {
    var match = query(input);
    if (match == null) {
        throw new ParchmentError("Unable to create " + input + " blot");
    }
    var BlotClass = match;
    var node = 
    // @ts-ignore
    input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);
    return new BlotClass(node, value);
}
exports.create = create;
function find(node, bubble) {
    if (bubble === void 0) { bubble = false; }
    if (node == null)
        return null;
    // @ts-ignore
    if (node[exports.DATA_KEY] != null)
        return node[exports.DATA_KEY].blot;
    if (bubble)
        return find(node.parentNode, bubble);
    return null;
}
exports.find = find;
function query(query, scope) {
    if (scope === void 0) { scope = Scope.ANY; }
    var match;
    if (typeof query === 'string') {
        match = types[query] || attributes[query];
        // @ts-ignore
    }
    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {
        match = types['text'];
    }
    else if (typeof query === 'number') {
        if (query & Scope.LEVEL & Scope.BLOCK) {
            match = types['block'];
        }
        else if (query & Scope.LEVEL & Scope.INLINE) {
            match = types['inline'];
        }
    }
    else if (query instanceof HTMLElement) {
        var names = (query.getAttribute('class') || '').split(/\s+/);
        for (var i in names) {
            match = classes[names[i]];
            if (match)
                break;
        }
        match = match || tags[query.tagName];
    }
    if (match == null)
        return null;
    // @ts-ignore
    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)
        return match;
    return null;
}
exports.query = query;
function register() {
    var Definitions = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Definitions[_i] = arguments[_i];
    }
    if (Definitions.length > 1) {
        return Definitions.map(function (d) {
            return register(d);
        });
    }
    var Definition = Definitions[0];
    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {
        throw new ParchmentError('Invalid definition');
    }
    else if (Definition.blotName === 'abstract') {
        throw new ParchmentError('Cannot register abstract class');
    }
    types[Definition.blotName || Definition.attrName] = Definition;
    if (typeof Definition.keyName === 'string') {
        attributes[Definition.keyName] = Definition;
    }
    else {
        if (Definition.className != null) {
            classes[Definition.className] = Definition;
        }
        if (Definition.tagName != null) {
            if (Array.isArray(Definition.tagName)) {
                Definition.tagName = Definition.tagName.map(function (tagName) {
                    return tagName.toUpperCase();
                });
            }
            else {
                Definition.tagName = Definition.tagName.toUpperCase();
            }
            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
            tagNames.forEach(function (tag) {
                if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                }
            });
        }
    }
    return Definition;
}
exports.register = register;


/***/ }),
/* 2 */
/***/ (function(module, exports, __nested_webpack_require_9445__) {

var diff = __nested_webpack_require_9445__(51);
var equal = __nested_webpack_require_9445__(11);
var extend = __nested_webpack_require_9445__(3);
var op = __nested_webpack_require_9445__(20);


var NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()


var Delta = function (ops) {
  // Assume we are given a well formed ops
  if (Array.isArray(ops)) {
    this.ops = ops;
  } else if (ops != null && Array.isArray(ops.ops)) {
    this.ops = ops.ops;
  } else {
    this.ops = [];
  }
};


Delta.prototype.insert = function (text, attributes) {
  var newOp = {};
  if (text.length === 0) return this;
  newOp.insert = text;
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype['delete'] = function (length) {
  if (length <= 0) return this;
  return this.push({ 'delete': length });
};

Delta.prototype.retain = function (length, attributes) {
  if (length <= 0) return this;
  var newOp = { retain: length };
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype.push = function (newOp) {
  var index = this.ops.length;
  var lastOp = this.ops[index - 1];
  newOp = extend(true, {}, newOp);
  if (typeof lastOp === 'object') {
    if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {
      this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };
      return this;
    }
    // Since it does not matter if we insert before or after deleting at the same index,
    // always prefer to insert first
    if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {
      index -= 1;
      lastOp = this.ops[index - 1];
      if (typeof lastOp !== 'object') {
        this.ops.unshift(newOp);
        return this;
      }
    }
    if (equal(newOp.attributes, lastOp.attributes)) {
      if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {
        this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {
        this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      }
    }
  }
  if (index === this.ops.length) {
    this.ops.push(newOp);
  } else {
    this.ops.splice(index, 0, newOp);
  }
  return this;
};

Delta.prototype.chop = function () {
  var lastOp = this.ops[this.ops.length - 1];
  if (lastOp && lastOp.retain && !lastOp.attributes) {
    this.ops.pop();
  }
  return this;
};

Delta.prototype.filter = function (predicate) {
  return this.ops.filter(predicate);
};

Delta.prototype.forEach = function (predicate) {
  this.ops.forEach(predicate);
};

Delta.prototype.map = function (predicate) {
  return this.ops.map(predicate);
};

Delta.prototype.partition = function (predicate) {
  var passed = [], failed = [];
  this.forEach(function(op) {
    var target = predicate(op) ? passed : failed;
    target.push(op);
  });
  return [passed, failed];
};

Delta.prototype.reduce = function (predicate, initial) {
  return this.ops.reduce(predicate, initial);
};

Delta.prototype.changeLength = function () {
  return this.reduce(function (length, elem) {
    if (elem.insert) {
      return length + op.length(elem);
    } else if (elem.delete) {
      return length - elem.delete;
    }
    return length;
  }, 0);
};

Delta.prototype.length = function () {
  return this.reduce(function (length, elem) {
    return length + op.length(elem);
  }, 0);
};

Delta.prototype.slice = function (start, end) {
  start = start || 0;
  if (typeof end !== 'number') end = Infinity;
  var ops = [];
  var iter = op.iterator(this.ops);
  var index = 0;
  while (index < end && iter.hasNext()) {
    var nextOp;
    if (index < start) {
      nextOp = iter.next(start - index);
    } else {
      nextOp = iter.next(end - index);
      ops.push(nextOp);
    }
    index += op.length(nextOp);
  }
  return new Delta(ops);
};


Delta.prototype.compose = function (other) {
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var ops = [];
  var firstOther = otherIter.peek();
  if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {
    var firstLeft = firstOther.retain;
    while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {
      firstLeft -= thisIter.peekLength();
      ops.push(thisIter.next());
    }
    if (firstOther.retain - firstLeft > 0) {
      otherIter.next(firstOther.retain - firstLeft);
    }
  }
  var delta = new Delta(ops);
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else if (thisIter.peekType() === 'delete') {
      delta.push(thisIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (typeof otherOp.retain === 'number') {
        var newOp = {};
        if (typeof thisOp.retain === 'number') {
          newOp.retain = length;
        } else {
          newOp.insert = thisOp.insert;
        }
        // Preserve null when composing with a retain, otherwise remove it for inserts
        var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');
        if (attributes) newOp.attributes = attributes;
        delta.push(newOp);

        // Optimization if rest of other is just retain
        if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
          var rest = new Delta(thisIter.rest());
          return delta.concat(rest).chop();
        }

      // Other op should be delete, we could be an insert or retain
      // Insert + delete cancels out
      } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {
        delta.push(otherOp);
      }
    }
  }
  return delta.chop();
};

Delta.prototype.concat = function (other) {
  var delta = new Delta(this.ops.slice());
  if (other.ops.length > 0) {
    delta.push(other.ops[0]);
    delta.ops = delta.ops.concat(other.ops.slice(1));
  }
  return delta;
};

Delta.prototype.diff = function (other, index) {
  if (this.ops === other.ops) {
    return new Delta();
  }
  var strings = [this, other].map(function (delta) {
    return delta.map(function (op) {
      if (op.insert != null) {
        return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;
      }
      var prep = (delta === other) ? 'on' : 'with';
      throw new Error('diff() called ' + prep + ' non-document');
    }).join('');
  });
  var delta = new Delta();
  var diffResult = diff(strings[0], strings[1], index);
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  diffResult.forEach(function (component) {
    var length = component[1].length;
    while (length > 0) {
      var opLength = 0;
      switch (component[0]) {
        case diff.INSERT:
          opLength = Math.min(otherIter.peekLength(), length);
          delta.push(otherIter.next(opLength));
          break;
        case diff.DELETE:
          opLength = Math.min(length, thisIter.peekLength());
          thisIter.next(opLength);
          delta['delete'](opLength);
          break;
        case diff.EQUAL:
          opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
          var thisOp = thisIter.next(opLength);
          var otherOp = otherIter.next(opLength);
          if (equal(thisOp.insert, otherOp.insert)) {
            delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
          } else {
            delta.push(otherOp)['delete'](opLength);
          }
          break;
      }
      length -= opLength;
    }
  });
  return delta.chop();
};

Delta.prototype.eachLine = function (predicate, newline) {
  newline = newline || '\n';
  var iter = op.iterator(this.ops);
  var line = new Delta();
  var i = 0;
  while (iter.hasNext()) {
    if (iter.peekType() !== 'insert') return;
    var thisOp = iter.peek();
    var start = op.length(thisOp) - iter.peekLength();
    var index = typeof thisOp.insert === 'string' ?
      thisOp.insert.indexOf(newline, start) - start : -1;
    if (index < 0) {
      line.push(iter.next());
    } else if (index > 0) {
      line.push(iter.next(index));
    } else {
      if (predicate(line, iter.next(1).attributes || {}, i) === false) {
        return;
      }
      i += 1;
      line = new Delta();
    }
  }
  if (line.length() > 0) {
    predicate(line, {}, i);
  }
};

Delta.prototype.transform = function (other, priority) {
  priority = !!priority;
  if (typeof other === 'number') {
    return this.transformPosition(other, priority);
  }
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var delta = new Delta();
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {
      delta.retain(op.length(thisIter.next()));
    } else if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (thisOp['delete']) {
        // Our delete either makes their delete redundant or removes their retain
        continue;
      } else if (otherOp['delete']) {
        delta.push(otherOp);
      } else {
        // We retain either their retain or insert
        delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
      }
    }
  }
  return delta.chop();
};

Delta.prototype.transformPosition = function (index, priority) {
  priority = !!priority;
  var thisIter = op.iterator(this.ops);
  var offset = 0;
  while (thisIter.hasNext() && offset <= index) {
    var length = thisIter.peekLength();
    var nextType = thisIter.peekType();
    thisIter.next();
    if (nextType === 'delete') {
      index -= Math.min(length, index - offset);
      continue;
    } else if (nextType === 'insert' && (offset < index || !priority)) {
      index += length;
    }
    offset += length;
  }
  return index;
};


module.exports = Delta;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

'use strict';

var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
var setProperty = function setProperty(target, options) {
	if (defineProperty && options.name === '__proto__') {
		defineProperty(target, options.name, {
			enumerable: true,
			configurable: true,
			value: options.newValue,
			writable: true
		});
	} else {
		target[options.name] = options.newValue;
	}
};

// Return undefined instead of __proto__ if '__proto__' is not an own property
var getProperty = function getProperty(obj, name) {
	if (name === '__proto__') {
		if (!hasOwn.call(obj, name)) {
			return void 0;
		} else if (gOPD) {
			// In early versions of node, obj['__proto__'] is buggy when obj has
			// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
			return gOPD(obj, name).value;
		}
	}

	return obj[name];
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = getProperty(target, name);
				copy = getProperty(options, name);

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						setProperty(target, { name: name, newValue: extend(deep, clone, copy) });

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						setProperty(target, { name: name, newValue: copy });
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __nested_webpack_require_23616__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BlockEmbed = exports.bubbleFormats = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _extend = __nested_webpack_require_23616__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __nested_webpack_require_23616__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __nested_webpack_require_23616__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _break = __nested_webpack_require_23616__(16);

var _break2 = _interopRequireDefault(_break);

var _inline = __nested_webpack_require_23616__(6);

var _inline2 = _interopRequireDefault(_inline);

var _text = __nested_webpack_require_23616__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NEWLINE_LENGTH = 1;

var BlockEmbed = function (_Parchment$Embed) {
  _inherits(BlockEmbed, _Parchment$Embed);

  function BlockEmbed() {
    _classCallCheck(this, BlockEmbed);

    return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));
  }

  _createClass(BlockEmbed, [{
    key: 'attach',
    value: function attach() {
      _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'attach', this).call(this);
      this.attributes = new _parchment2.default.Attributor.Store(this.domNode);
    }
  }, {
    key: 'delta',
    value: function delta() {
      return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);
      if (attribute != null) {
        this.attributes.attribute(attribute, value);
      }
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      this.format(name, value);
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (typeof value === 'string' && value.endsWith('\n')) {
        var block = _parchment2.default.create(Block.blotName);
        this.parent.insertBefore(block, index === 0 ? this : this.next);
        block.insertAt(0, value.slice(0, -1));
      } else {
        _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'insertAt', this).call(this, index, value, def);
      }
    }
  }]);

  return BlockEmbed;
}(_parchment2.default.Embed);

BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
// It is important for cursor behavior BlockEmbeds use tags that are block level elements


var Block = function (_Parchment$Block) {
  _inherits(Block, _Parchment$Block);

  function Block(domNode) {
    _classCallCheck(this, Block);

    var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));

    _this2.cache = {};
    return _this2;
  }

  _createClass(Block, [{
    key: 'delta',
    value: function delta() {
      if (this.cache.delta == null) {
        this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function (delta, leaf) {
          if (leaf.length() === 0) {
            return delta;
          } else {
            return delta.insert(leaf.value(), bubbleFormats(leaf));
          }
        }, new _quillDelta2.default()).insert('\n', bubbleFormats(this));
      }
      return this.cache.delta;
    }
  }, {
    key: 'deleteAt',
    value: function deleteAt(index, length) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'deleteAt', this).call(this, index, length);
      this.cache = {};
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (length <= 0) return;
      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
        if (index + length === this.length()) {
          this.format(name, value);
        }
      } else {
        _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'formatAt', this).call(this, index, Math.min(length, this.length() - index - 1), name, value);
      }
      this.cache = {};
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, index, value, def);
      if (value.length === 0) return;
      var lines = value.split('\n');
      var text = lines.shift();
      if (text.length > 0) {
        if (index < this.length() - 1 || this.children.tail == null) {
          _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, Math.min(index, this.length() - 1), text);
        } else {
          this.children.tail.insertAt(this.children.tail.length(), text);
        }
        this.cache = {};
      }
      var block = this;
      lines.reduce(function (index, line) {
        block = block.split(index, true);
        block.insertAt(0, line);
        return line.length;
      }, index + text.length);
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      var head = this.children.head;
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertBefore', this).call(this, blot, ref);
      if (head instanceof _break2.default) {
        head.remove();
      }
      this.cache = {};
    }
  }, {
    key: 'length',
    value: function length() {
      if (this.cache.length == null) {
        this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'length', this).call(this) + NEWLINE_LENGTH;
      }
      return this.cache.length;
    }
  }, {
    key: 'moveChildren',
    value: function moveChildren(target, ref) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'moveChildren', this).call(this, target, ref);
      this.cache = {};
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'optimize', this).call(this, context);
      this.cache = {};
    }
  }, {
    key: 'path',
    value: function path(index) {
      return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'path', this).call(this, index, true);
    }
  }, {
    key: 'removeChild',
    value: function removeChild(child) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'removeChild', this).call(this, child);
      this.cache = {};
    }
  }, {
    key: 'split',
    value: function split(index) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
        var clone = this.clone();
        if (index === 0) {
          this.parent.insertBefore(clone, this);
          return this;
        } else {
          this.parent.insertBefore(clone, this.next);
          return clone;
        }
      } else {
        var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'split', this).call(this, index, force);
        this.cache = {};
        return next;
      }
    }
  }]);

  return Block;
}(_parchment2.default.Block);

Block.blotName = 'block';
Block.tagName = 'P';
Block.defaultChild = 'break';
Block.allowedChildren = [_inline2.default, _parchment2.default.Embed, _text2.default];

function bubbleFormats(blot) {
  var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (blot == null) return formats;
  if (typeof blot.formats === 'function') {
    formats = (0, _extend2.default)(formats, blot.formats());
  }
  if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {
    return formats;
  }
  return bubbleFormats(blot.parent, formats);
}

exports.bubbleFormats = bubbleFormats;
exports.BlockEmbed = BlockEmbed;
exports.default = Block;

/***/ }),
/* 5 */
/***/ (function(module, exports, __nested_webpack_require_33760__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.overload = exports.expandConfig = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__nested_webpack_require_33760__(50);

var _quillDelta = __nested_webpack_require_33760__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _editor = __nested_webpack_require_33760__(14);

var _editor2 = _interopRequireDefault(_editor);

var _emitter3 = __nested_webpack_require_33760__(8);

var _emitter4 = _interopRequireDefault(_emitter3);

var _module = __nested_webpack_require_33760__(9);

var _module2 = _interopRequireDefault(_module);

var _parchment = __nested_webpack_require_33760__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _selection = __nested_webpack_require_33760__(15);

var _selection2 = _interopRequireDefault(_selection);

var _extend = __nested_webpack_require_33760__(3);

var _extend2 = _interopRequireDefault(_extend);

var _logger = __nested_webpack_require_33760__(10);

var _logger2 = _interopRequireDefault(_logger);

var _theme = __nested_webpack_require_33760__(34);

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var debug = (0, _logger2.default)('quill');

var Quill = function () {
  _createClass(Quill, null, [{
    key: 'debug',
    value: function debug(limit) {
      if (limit === true) {
        limit = 'log';
      }
      _logger2.default.level(limit);
    }
  }, {
    key: 'find',
    value: function find(node) {
      return node.__quill || _parchment2.default.find(node);
    }
  }, {
    key: 'import',
    value: function _import(name) {
      if (this.imports[name] == null) {
        debug.error('Cannot import ' + name + '. Are you sure it was registered?');
      }
      return this.imports[name];
    }
  }, {
    key: 'register',
    value: function register(path, target) {
      var _this = this;

      var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (typeof path !== 'string') {
        var name = path.attrName || path.blotName;
        if (typeof name === 'string') {
          // register(Blot | Attributor, overwrite)
          this.register('formats/' + name, path, target);
        } else {
          Object.keys(path).forEach(function (key) {
            _this.register(key, path[key], target);
          });
        }
      } else {
        if (this.imports[path] != null && !overwrite) {
          debug.warn('Overwriting ' + path + ' with', target);
        }
        this.imports[path] = target;
        if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {
          _parchment2.default.register(target);
        } else if (path.startsWith('modules') && typeof target.register === 'function') {
          target.register();
        }
      }
    }
  }]);

  function Quill(container) {
    var _this2 = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Quill);

    this.options = expandConfig(container, options);
    this.container = this.options.container;
    if (this.container == null) {
      return debug.error('Invalid Quill container', container);
    }
    if (this.options.debug) {
      Quill.debug(this.options.debug);
    }
    var html = this.container.innerHTML.trim();
    this.container.classList.add('ql-container');
    this.container.innerHTML = '';
    this.container.__quill = this;
    this.root = this.addContainer('ql-editor');
    this.root.classList.add('ql-blank');
    this.root.setAttribute('data-gramm', false);
    this.scrollingContainer = this.options.scrollingContainer || this.root;
    this.emitter = new _emitter4.default();
    this.scroll = _parchment2.default.create(this.root, {
      emitter: this.emitter,
      whitelist: this.options.formats
    });
    this.editor = new _editor2.default(this.scroll);
    this.selection = new _selection2.default(this.scroll, this.emitter);
    this.theme = new this.options.theme(this, this.options);
    this.keyboard = this.theme.addModule('keyboard');
    this.clipboard = this.theme.addModule('clipboard');
    this.history = this.theme.addModule('history');
    this.theme.init();
    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type) {
      if (type === _emitter4.default.events.TEXT_CHANGE) {
        _this2.root.classList.toggle('ql-blank', _this2.editor.isBlank());
      }
    });
    this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function (source, mutations) {
      var range = _this2.selection.lastRange;
      var index = range && range.length === 0 ? range.index : undefined;
      modify.call(_this2, function () {
        return _this2.editor.update(null, mutations, index);
      }, source);
    });
    var contents = this.clipboard.convert('<div class=\'ql-editor\' style="white-space: normal;">' + html + '<p><br></p></div>');
    this.setContents(contents);
    this.history.clear();
    if (this.options.placeholder) {
      this.root.setAttribute('data-placeholder', this.options.placeholder);
    }
    if (this.options.readOnly) {
      this.disable();
    }
  }

  _createClass(Quill, [{
    key: 'addContainer',
    value: function addContainer(container) {
      var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if (typeof container === 'string') {
        var className = container;
        container = document.createElement('div');
        container.classList.add(className);
      }
      this.container.insertBefore(container, refNode);
      return container;
    }
  }, {
    key: 'blur',
    value: function blur() {
      this.selection.setRange(null);
    }
  }, {
    key: 'deleteText',
    value: function deleteText(index, length, source) {
      var _this3 = this;

      var _overload = overload(index, length, source);

      var _overload2 = _slicedToArray(_overload, 4);

      index = _overload2[0];
      length = _overload2[1];
      source = _overload2[3];

      return modify.call(this, function () {
        return _this3.editor.deleteText(index, length);
      }, source, index, -1 * length);
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.enable(false);
    }
  }, {
    key: 'enable',
    value: function enable() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.scroll.enable(enabled);
      this.container.classList.toggle('ql-disabled', !enabled);
    }
  }, {
    key: 'focus',
    value: function focus() {
      var scrollTop = this.scrollingContainer.scrollTop;
      this.selection.focus();
      this.scrollingContainer.scrollTop = scrollTop;
      this.scrollIntoView();
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      var _this4 = this;

      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        var range = _this4.getSelection(true);
        var change = new _quillDelta2.default();
        if (range == null) {
          return change;
        } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
          change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));
        } else if (range.length === 0) {
          _this4.selection.format(name, value);
          return change;
        } else {
          change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));
        }
        _this4.setSelection(range, _emitter4.default.sources.SILENT);
        return change;
      }, source);
    }
  }, {
    key: 'formatLine',
    value: function formatLine(index, length, name, value, source) {
      var _this5 = this;

      var formats = void 0;

      var _overload3 = overload(index, length, name, value, source);

      var _overload4 = _slicedToArray(_overload3, 4);

      index = _overload4[0];
      length = _overload4[1];
      formats = _overload4[2];
      source = _overload4[3];

      return modify.call(this, function () {
        return _this5.editor.formatLine(index, length, formats);
      }, source, index, 0);
    }
  }, {
    key: 'formatText',
    value: function formatText(index, length, name, value, source) {
      var _this6 = this;

      var formats = void 0;

      var _overload5 = overload(index, length, name, value, source);

      var _overload6 = _slicedToArray(_overload5, 4);

      index = _overload6[0];
      length = _overload6[1];
      formats = _overload6[2];
      source = _overload6[3];

      return modify.call(this, function () {
        return _this6.editor.formatText(index, length, formats);
      }, source, index, 0);
    }
  }, {
    key: 'getBounds',
    value: function getBounds(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var bounds = void 0;
      if (typeof index === 'number') {
        bounds = this.selection.getBounds(index, length);
      } else {
        bounds = this.selection.getBounds(index.index, index.length);
      }
      var containerBounds = this.container.getBoundingClientRect();
      return {
        bottom: bounds.bottom - containerBounds.top,
        height: bounds.height,
        left: bounds.left - containerBounds.left,
        right: bounds.right - containerBounds.left,
        top: bounds.top - containerBounds.top,
        width: bounds.width
      };
    }
  }, {
    key: 'getContents',
    value: function getContents() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

      var _overload7 = overload(index, length);

      var _overload8 = _slicedToArray(_overload7, 2);

      index = _overload8[0];
      length = _overload8[1];

      return this.editor.getContents(index, length);
    }
  }, {
    key: 'getFormat',
    value: function getFormat() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (typeof index === 'number') {
        return this.editor.getFormat(index, length);
      } else {
        return this.editor.getFormat(index.index, index.length);
      }
    }
  }, {
    key: 'getIndex',
    value: function getIndex(blot) {
      return blot.offset(this.scroll);
    }
  }, {
    key: 'getLength',
    value: function getLength() {
      return this.scroll.length();
    }
  }, {
    key: 'getLeaf',
    value: function getLeaf(index) {
      return this.scroll.leaf(index);
    }
  }, {
    key: 'getLine',
    value: function getLine(index) {
      return this.scroll.line(index);
    }
  }, {
    key: 'getLines',
    value: function getLines() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

      if (typeof index !== 'number') {
        return this.scroll.lines(index.index, index.length);
      } else {
        return this.scroll.lines(index, length);
      }
    }
  }, {
    key: 'getModule',
    value: function getModule(name) {
      return this.theme.modules[name];
    }
  }, {
    key: 'getSelection',
    value: function getSelection() {
      var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (focus) this.focus();
      this.update(); // Make sure we access getRange with editor in consistent state
      return this.selection.getRange()[0];
    }
  }, {
    key: 'getText',
    value: function getText() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

      var _overload9 = overload(index, length);

      var _overload10 = _slicedToArray(_overload9, 2);

      index = _overload10[0];
      length = _overload10[1];

      return this.editor.getText(index, length);
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this.selection.hasFocus();
    }
  }, {
    key: 'insertEmbed',
    value: function insertEmbed(index, embed, value) {
      var _this7 = this;

      var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;

      return modify.call(this, function () {
        return _this7.editor.insertEmbed(index, embed, value);
      }, source, index);
    }
  }, {
    key: 'insertText',
    value: function insertText(index, text, name, value, source) {
      var _this8 = this;

      var formats = void 0;

      var _overload11 = overload(index, 0, name, value, source);

      var _overload12 = _slicedToArray(_overload11, 4);

      index = _overload12[0];
      formats = _overload12[2];
      source = _overload12[3];

      return modify.call(this, function () {
        return _this8.editor.insertText(index, text, formats);
      }, source, index, text.length);
    }
  }, {
    key: 'isEnabled',
    value: function isEnabled() {
      return !this.container.classList.contains('ql-disabled');
    }
  }, {
    key: 'off',
    value: function off() {
      return this.emitter.off.apply(this.emitter, arguments);
    }
  }, {
    key: 'on',
    value: function on() {
      return this.emitter.on.apply(this.emitter, arguments);
    }
  }, {
    key: 'once',
    value: function once() {
      return this.emitter.once.apply(this.emitter, arguments);
    }
  }, {
    key: 'pasteHTML',
    value: function pasteHTML(index, html, source) {
      this.clipboard.dangerouslyPasteHTML(index, html, source);
    }
  }, {
    key: 'removeFormat',
    value: function removeFormat(index, length, source) {
      var _this9 = this;

      var _overload13 = overload(index, length, source);

      var _overload14 = _slicedToArray(_overload13, 4);

      index = _overload14[0];
      length = _overload14[1];
      source = _overload14[3];

      return modify.call(this, function () {
        return _this9.editor.removeFormat(index, length);
      }, source, index);
    }
  }, {
    key: 'scrollIntoView',
    value: function scrollIntoView() {
      this.selection.scrollIntoView(this.scrollingContainer);
    }
  }, {
    key: 'setContents',
    value: function setContents(delta) {
      var _this10 = this;

      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        delta = new _quillDelta2.default(delta);
        var length = _this10.getLength();
        var deleted = _this10.editor.deleteText(0, length);
        var applied = _this10.editor.applyDelta(delta);
        var lastOp = applied.ops[applied.ops.length - 1];
        if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\n') {
          _this10.editor.deleteText(_this10.getLength() - 1, 1);
          applied.delete(1);
        }
        var ret = deleted.compose(applied);
        return ret;
      }, source);
    }
  }, {
    key: 'setSelection',
    value: function setSelection(index, length, source) {
      if (index == null) {
        this.selection.setRange(null, length || Quill.sources.API);
      } else {
        var _overload15 = overload(index, length, source);

        var _overload16 = _slicedToArray(_overload15, 4);

        index = _overload16[0];
        length = _overload16[1];
        source = _overload16[3];

        this.selection.setRange(new _selection.Range(index, length), source);
        if (source !== _emitter4.default.sources.SILENT) {
          this.selection.scrollIntoView(this.scrollingContainer);
        }
      }
    }
  }, {
    key: 'setText',
    value: function setText(text) {
      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      var delta = new _quillDelta2.default().insert(text);
      return this.setContents(delta, source);
    }
  }, {
    key: 'update',
    value: function update() {
      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

      var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes
      this.selection.update(source);
      return change;
    }
  }, {
    key: 'updateContents',
    value: function updateContents(delta) {
      var _this11 = this;

      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        delta = new _quillDelta2.default(delta);
        return _this11.editor.applyDelta(delta, source);
      }, source, true);
    }
  }]);

  return Quill;
}();

Quill.DEFAULTS = {
  bounds: null,
  formats: null,
  modules: {},
  placeholder: '',
  readOnly: false,
  scrollingContainer: null,
  strict: true,
  theme: 'default'
};
Quill.events = _emitter4.default.events;
Quill.sources = _emitter4.default.sources;
// eslint-disable-next-line no-undef
Quill.version =   false ? 0 : "1.3.7";

Quill.imports = {
  'delta': _quillDelta2.default,
  'parchment': _parchment2.default,
  'core/module': _module2.default,
  'core/theme': _theme2.default
};

function expandConfig(container, userConfig) {
  userConfig = (0, _extend2.default)(true, {
    container: container,
    modules: {
      clipboard: true,
      keyboard: true,
      history: true
    }
  }, userConfig);
  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {
    userConfig.theme = _theme2.default;
  } else {
    userConfig.theme = Quill.import('themes/' + userConfig.theme);
    if (userConfig.theme == null) {
      throw new Error('Invalid theme ' + userConfig.theme + '. Did you register it?');
    }
  }
  var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);
  [themeConfig, userConfig].forEach(function (config) {
    config.modules = config.modules || {};
    Object.keys(config.modules).forEach(function (module) {
      if (config.modules[module] === true) {
        config.modules[module] = {};
      }
    });
  });
  var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
  var moduleConfig = moduleNames.reduce(function (config, name) {
    var moduleClass = Quill.import('modules/' + name);
    if (moduleClass == null) {
      debug.error('Cannot load ' + name + ' module. Are you sure you registered it?');
    } else {
      config[name] = moduleClass.DEFAULTS || {};
    }
    return config;
  }, {});
  // Special case toolbar shorthand
  if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
    userConfig.modules.toolbar = {
      container: userConfig.modules.toolbar
    };
  }
  userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);
  ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {
    if (typeof userConfig[key] === 'string') {
      userConfig[key] = document.querySelector(userConfig[key]);
    }
  });
  userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {
    if (userConfig.modules[name]) {
      config[name] = userConfig.modules[name];
    }
    return config;
  }, {});
  return userConfig;
}

// Handle selection preservation and TEXT_CHANGE emission
// common to modification APIs
function modify(modifier, source, index, shift) {
  if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {
    return new _quillDelta2.default();
  }
  var range = index == null ? null : this.getSelection();
  var oldDelta = this.editor.delta;
  var change = modifier();
  if (range != null) {
    if (index === true) index = range.index;
    if (shift == null) {
      range = shiftRange(range, change, source);
    } else if (shift !== 0) {
      range = shiftRange(range, index, shift, source);
    }
    this.setSelection(range, _emitter4.default.sources.SILENT);
  }
  if (change.length() > 0) {
    var _emitter;

    var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];
    (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
    if (source !== _emitter4.default.sources.SILENT) {
      var _emitter2;

      (_emitter2 = this.emitter).emit.apply(_emitter2, args);
    }
  }
  return change;
}

function overload(index, length, name, value, source) {
  var formats = {};
  if (typeof index.index === 'number' && typeof index.length === 'number') {
    // Allow for throwaway end (used by insertText/insertEmbed)
    if (typeof length !== 'number') {
      source = value, value = name, name = length, length = index.length, index = index.index;
    } else {
      length = index.length, index = index.index;
    }
  } else if (typeof length !== 'number') {
    source = value, value = name, name = length, length = 0;
  }
  // Handle format being object, two format name/value strings or excluded
  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
    formats = name;
    source = value;
  } else if (typeof name === 'string') {
    if (value != null) {
      formats[name] = value;
    } else {
      source = name;
    }
  }
  // Handle optional source
  source = source || _emitter4.default.sources.API;
  return [index, length, formats, source];
}

function shiftRange(range, index, length, source) {
  if (range == null) return null;
  var start = void 0,
      end = void 0;
  if (index instanceof _quillDelta2.default) {
    var _map = [range.index, range.index + range.length].map(function (pos) {
      return index.transformPosition(pos, source !== _emitter4.default.sources.USER);
    });

    var _map2 = _slicedToArray(_map, 2);

    start = _map2[0];
    end = _map2[1];
  } else {
    var _map3 = [range.index, range.index + range.length].map(function (pos) {
      if (pos < index || pos === index && source === _emitter4.default.sources.USER) return pos;
      if (length >= 0) {
        return pos + length;
      } else {
        return Math.max(index, pos + length);
      }
    });

    var _map4 = _slicedToArray(_map3, 2);

    start = _map4[0];
    end = _map4[1];
  }
  return new _selection.Range(start, end - start);
}

exports.expandConfig = expandConfig;
exports.overload = overload;
exports.default = Quill;

/***/ }),
/* 6 */
/***/ (function(module, exports, __nested_webpack_require_58401__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _text = __nested_webpack_require_58401__(7);

var _text2 = _interopRequireDefault(_text);

var _parchment = __nested_webpack_require_58401__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Inline = function (_Parchment$Inline) {
  _inherits(Inline, _Parchment$Inline);

  function Inline() {
    _classCallCheck(this, Inline);

    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));
  }

  _createClass(Inline, [{
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {
        var blot = this.isolate(index, length);
        if (value) {
          blot.wrap(name, value);
        }
      } else {
        _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'formatAt', this).call(this, index, length, name, value);
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'optimize', this).call(this, context);
      if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
        var parent = this.parent.isolate(this.offset(), this.length());
        this.moveChildren(parent);
        parent.wrap(this);
      }
    }
  }], [{
    key: 'compare',
    value: function compare(self, other) {
      var selfIndex = Inline.order.indexOf(self);
      var otherIndex = Inline.order.indexOf(other);
      if (selfIndex >= 0 || otherIndex >= 0) {
        return selfIndex - otherIndex;
      } else if (self === other) {
        return 0;
      } else if (self < other) {
        return -1;
      } else {
        return 1;
      }
    }
  }]);

  return Inline;
}(_parchment2.default.Inline);

Inline.allowedChildren = [Inline, _parchment2.default.Embed, _text2.default];
// Lower index means deeper in the DOM tree, since not found (-1) is for embeds
Inline.order = ['cursor', 'inline', // Must be lower
'underline', 'strike', 'italic', 'bold', 'script', 'link', 'code' // Must be higher
];

exports.default = Inline;

/***/ }),
/* 7 */
/***/ (function(module, exports, __nested_webpack_require_62823__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __nested_webpack_require_62823__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextBlot = function (_Parchment$Text) {
  _inherits(TextBlot, _Parchment$Text);

  function TextBlot() {
    _classCallCheck(this, TextBlot);

    return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));
  }

  return TextBlot;
}(_parchment2.default.Text);

exports.default = TextBlot;

/***/ }),
/* 8 */
/***/ (function(module, exports, __nested_webpack_require_64422__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _eventemitter = __nested_webpack_require_64422__(54);

var _eventemitter2 = _interopRequireDefault(_eventemitter);

var _logger = __nested_webpack_require_64422__(10);

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:events');

var EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];

EVENTS.forEach(function (eventName) {
  document.addEventListener(eventName, function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    [].slice.call(document.querySelectorAll('.ql-container')).forEach(function (node) {
      // TODO use WeakMap
      if (node.__quill && node.__quill.emitter) {
        var _node$__quill$emitter;

        (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
      }
    });
  });
});

var Emitter = function (_EventEmitter) {
  _inherits(Emitter, _EventEmitter);

  function Emitter() {
    _classCallCheck(this, Emitter);

    var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));

    _this.listeners = {};
    _this.on('error', debug.error);
    return _this;
  }

  _createClass(Emitter, [{
    key: 'emit',
    value: function emit() {
      debug.log.apply(debug, arguments);
      _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), 'emit', this).apply(this, arguments);
    }
  }, {
    key: 'handleDOM',
    value: function handleDOM(event) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      (this.listeners[event.type] || []).forEach(function (_ref) {
        var node = _ref.node,
            handler = _ref.handler;

        if (event.target === node || node.contains(event.target)) {
          handler.apply(undefined, [event].concat(args));
        }
      });
    }
  }, {
    key: 'listenDOM',
    value: function listenDOM(eventName, node, handler) {
      if (!this.listeners[eventName]) {
        this.listeners[eventName] = [];
      }
      this.listeners[eventName].push({ node: node, handler: handler });
    }
  }]);

  return Emitter;
}(_eventemitter2.default);

Emitter.events = {
  EDITOR_CHANGE: 'editor-change',
  SCROLL_BEFORE_UPDATE: 'scroll-before-update',
  SCROLL_OPTIMIZE: 'scroll-optimize',
  SCROLL_UPDATE: 'scroll-update',
  SELECTION_CHANGE: 'selection-change',
  TEXT_CHANGE: 'text-change'
};
Emitter.sources = {
  API: 'api',
  SILENT: 'silent',
  USER: 'user'
};

exports.default = Emitter;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Module = function Module(quill) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  _classCallCheck(this, Module);

  this.quill = quill;
  this.options = options;
};

Module.DEFAULTS = {};

exports.default = Module;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var levels = ['error', 'warn', 'log', 'info'];
var level = 'warn';

function debug(method) {
  if (levels.indexOf(method) <= levels.indexOf(level)) {
    var _console;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    (_console = console)[method].apply(_console, args); // eslint-disable-line no-console
  }
}

function namespace(ns) {
  return levels.reduce(function (logger, method) {
    logger[method] = debug.bind(console, method, ns);
    return logger;
  }, {});
}

debug.level = namespace.level = function (newLevel) {
  level = newLevel;
};

exports.default = namespace;

/***/ }),
/* 11 */
/***/ (function(module, exports, __nested_webpack_require_70685__) {

var pSlice = Array.prototype.slice;
var objectKeys = __nested_webpack_require_70685__(52);
var isArguments = __nested_webpack_require_70685__(53);

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}


/***/ }),
/* 12 */
/***/ (function(module, exports, __nested_webpack_require_73804__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __nested_webpack_require_73804__(1);
var Attributor = /** @class */ (function () {
    function Attributor(attrName, keyName, options) {
        if (options === void 0) { options = {}; }
        this.attrName = attrName;
        this.keyName = keyName;
        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
        if (options.scope != null) {
            // Ignore type bits, force attribute bit
            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;
        }
        else {
            this.scope = Registry.Scope.ATTRIBUTE;
        }
        if (options.whitelist != null)
            this.whitelist = options.whitelist;
    }
    Attributor.keys = function (node) {
        return [].map.call(node.attributes, function (item) {
            return item.name;
        });
    };
    Attributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        node.setAttribute(this.keyName, value);
        return true;
    };
    Attributor.prototype.canAdd = function (node, value) {
        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
        if (match == null)
            return false;
        if (this.whitelist == null)
            return true;
        if (typeof value === 'string') {
            return this.whitelist.indexOf(value.replace(/["']/g, '')) > -1;
        }
        else {
            return this.whitelist.indexOf(value) > -1;
        }
    };
    Attributor.prototype.remove = function (node) {
        node.removeAttribute(this.keyName);
    };
    Attributor.prototype.value = function (node) {
        var value = node.getAttribute(this.keyName);
        if (this.canAdd(node, value) && value) {
            return value;
        }
        return '';
    };
    return Attributor;
}());
exports.default = Attributor;


/***/ }),
/* 13 */
/***/ (function(module, exports, __nested_webpack_require_75851__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Code = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _quillDelta = __nested_webpack_require_75851__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __nested_webpack_require_75851__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __nested_webpack_require_75851__(4);

var _block2 = _interopRequireDefault(_block);

var _inline = __nested_webpack_require_75851__(6);

var _inline2 = _interopRequireDefault(_inline);

var _text = __nested_webpack_require_75851__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Code = function (_Inline) {
  _inherits(Code, _Inline);

  function Code() {
    _classCallCheck(this, Code);

    return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));
  }

  return Code;
}(_inline2.default);

Code.blotName = 'code';
Code.tagName = 'CODE';

var CodeBlock = function (_Block) {
  _inherits(CodeBlock, _Block);

  function CodeBlock() {
    _classCallCheck(this, CodeBlock);

    return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));
  }

  _createClass(CodeBlock, [{
    key: 'delta',
    value: function delta() {
      var _this3 = this;

      var text = this.domNode.textContent;
      if (text.endsWith('\n')) {
        // Should always be true
        text = text.slice(0, -1);
      }
      return text.split('\n').reduce(function (delta, frag) {
        return delta.insert(frag).insert('\n', _this3.formats());
      }, new _quillDelta2.default());
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      if (name === this.statics.blotName && value) return;

      var _descendant = this.descendant(_text2.default, this.length() - 1),
          _descendant2 = _slicedToArray(_descendant, 1),
          text = _descendant2[0];

      if (text != null) {
        text.deleteAt(text.length() - 1, 1);
      }
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'format', this).call(this, name, value);
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (length === 0) return;
      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {
        return;
      }
      var nextNewline = this.newlineIndex(index);
      if (nextNewline < 0 || nextNewline >= index + length) return;
      var prevNewline = this.newlineIndex(index, true) + 1;
      var isolateLength = nextNewline - prevNewline + 1;
      var blot = this.isolate(prevNewline, isolateLength);
      var next = blot.next;
      blot.format(name, value);
      if (next instanceof CodeBlock) {
        next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
      }
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null) return;

      var _descendant3 = this.descendant(_text2.default, index),
          _descendant4 = _slicedToArray(_descendant3, 2),
          text = _descendant4[0],
          offset = _descendant4[1];

      text.insertAt(offset, value);
    }
  }, {
    key: 'length',
    value: function length() {
      var length = this.domNode.textContent.length;
      if (!this.domNode.textContent.endsWith('\n')) {
        return length + 1;
      }
      return length;
    }
  }, {
    key: 'newlineIndex',
    value: function newlineIndex(searchIndex) {
      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!reverse) {
        var offset = this.domNode.textContent.slice(searchIndex).indexOf('\n');
        return offset > -1 ? searchIndex + offset : -1;
      } else {
        return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\n');
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      if (!this.domNode.textContent.endsWith('\n')) {
        this.appendChild(_parchment2.default.create('text', '\n'));
      }
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'optimize', this).call(this, context);
      var next = this.next;
      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
        next.optimize(context);
        next.moveChildren(this);
        next.remove();
      }
    }
  }, {
    key: 'replace',
    value: function replace(target) {
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'replace', this).call(this, target);
      [].slice.call(this.domNode.querySelectorAll('*')).forEach(function (node) {
        var blot = _parchment2.default.find(node);
        if (blot == null) {
          node.parentNode.removeChild(node);
        } else if (blot instanceof _parchment2.default.Embed) {
          blot.remove();
        } else {
          blot.unwrap();
        }
      });
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), 'create', this).call(this, value);
      domNode.setAttribute('spellcheck', false);
      return domNode;
    }
  }, {
    key: 'formats',
    value: function formats() {
      return true;
    }
  }]);

  return CodeBlock;
}(_block2.default);

CodeBlock.blotName = 'code-block';
CodeBlock.tagName = 'PRE';
CodeBlock.TAB = '  ';

exports.Code = Code;
exports.default = CodeBlock;

/***/ }),
/* 14 */
/***/ (function(module, exports, __nested_webpack_require_84272__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quillDelta = __nested_webpack_require_84272__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _op = __nested_webpack_require_84272__(20);

var _op2 = _interopRequireDefault(_op);

var _parchment = __nested_webpack_require_84272__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _code = __nested_webpack_require_84272__(13);

var _code2 = _interopRequireDefault(_code);

var _cursor = __nested_webpack_require_84272__(24);

var _cursor2 = _interopRequireDefault(_cursor);

var _block = __nested_webpack_require_84272__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __nested_webpack_require_84272__(16);

var _break2 = _interopRequireDefault(_break);

var _clone = __nested_webpack_require_84272__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __nested_webpack_require_84272__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _extend = __nested_webpack_require_84272__(3);

var _extend2 = _interopRequireDefault(_extend);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ASCII = /^[ -~]*$/;

var Editor = function () {
  function Editor(scroll) {
    _classCallCheck(this, Editor);

    this.scroll = scroll;
    this.delta = this.getDelta();
  }

  _createClass(Editor, [{
    key: 'applyDelta',
    value: function applyDelta(delta) {
      var _this = this;

      var consumeNextNewline = false;
      this.scroll.update();
      var scrollLength = this.scroll.length();
      this.scroll.batchStart();
      delta = normalizeDelta(delta);
      delta.reduce(function (index, op) {
        var length = op.retain || op.delete || op.insert.length || 1;
        var attributes = op.attributes || {};
        if (op.insert != null) {
          if (typeof op.insert === 'string') {
            var text = op.insert;
            if (text.endsWith('\n') && consumeNextNewline) {
              consumeNextNewline = false;
              text = text.slice(0, -1);
            }
            if (index >= scrollLength && !text.endsWith('\n')) {
              consumeNextNewline = true;
            }
            _this.scroll.insertAt(index, text);

            var _scroll$line = _this.scroll.line(index),
                _scroll$line2 = _slicedToArray(_scroll$line, 2),
                line = _scroll$line2[0],
                offset = _scroll$line2[1];

            var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));
            if (line instanceof _block2.default) {
              var _line$descendant = line.descendant(_parchment2.default.Leaf, offset),
                  _line$descendant2 = _slicedToArray(_line$descendant, 1),
                  leaf = _line$descendant2[0];

              formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));
            }
            attributes = _op2.default.attributes.diff(formats, attributes) || {};
          } else if (_typeof(op.insert) === 'object') {
            var key = Object.keys(op.insert)[0]; // There should only be one key
            if (key == null) return index;
            _this.scroll.insertAt(index, key, op.insert[key]);
          }
          scrollLength += length;
        }
        Object.keys(attributes).forEach(function (name) {
          _this.scroll.formatAt(index, length, name, attributes[name]);
        });
        return index + length;
      }, 0);
      delta.reduce(function (index, op) {
        if (typeof op.delete === 'number') {
          _this.scroll.deleteAt(index, op.delete);
          return index;
        }
        return index + (op.retain || op.insert.length || 1);
      }, 0);
      this.scroll.batchEnd();
      return this.update(delta);
    }
  }, {
    key: 'deleteText',
    value: function deleteText(index, length) {
      this.scroll.deleteAt(index, length);
      return this.update(new _quillDelta2.default().retain(index).delete(length));
    }
  }, {
    key: 'formatLine',
    value: function formatLine(index, length) {
      var _this2 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      this.scroll.update();
      Object.keys(formats).forEach(function (format) {
        if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;
        var lines = _this2.scroll.lines(index, Math.max(length, 1));
        var lengthRemaining = length;
        lines.forEach(function (line) {
          var lineLength = line.length();
          if (!(line instanceof _code2.default)) {
            line.format(format, formats[format]);
          } else {
            var codeIndex = index - line.offset(_this2.scroll);
            var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
            line.formatAt(codeIndex, codeLength, format, formats[format]);
          }
          lengthRemaining -= lineLength;
        });
      });
      this.scroll.optimize();
      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'formatText',
    value: function formatText(index, length) {
      var _this3 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      Object.keys(formats).forEach(function (format) {
        _this3.scroll.formatAt(index, length, format, formats[format]);
      });
      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'getContents',
    value: function getContents(index, length) {
      return this.delta.slice(index, index + length);
    }
  }, {
    key: 'getDelta',
    value: function getDelta() {
      return this.scroll.lines().reduce(function (delta, line) {
        return delta.concat(line.delta());
      }, new _quillDelta2.default());
    }
  }, {
    key: 'getFormat',
    value: function getFormat(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var lines = [],
          leaves = [];
      if (length === 0) {
        this.scroll.path(index).forEach(function (path) {
          var _path = _slicedToArray(path, 1),
              blot = _path[0];

          if (blot instanceof _block2.default) {
            lines.push(blot);
          } else if (blot instanceof _parchment2.default.Leaf) {
            leaves.push(blot);
          }
        });
      } else {
        lines = this.scroll.lines(index, length);
        leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);
      }
      var formatsArr = [lines, leaves].map(function (blots) {
        if (blots.length === 0) return {};
        var formats = (0, _block.bubbleFormats)(blots.shift());
        while (Object.keys(formats).length > 0) {
          var blot = blots.shift();
          if (blot == null) return formats;
          formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
        }
        return formats;
      });
      return _extend2.default.apply(_extend2.default, formatsArr);
    }
  }, {
    key: 'getText',
    value: function getText(index, length) {
      return this.getContents(index, length).filter(function (op) {
        return typeof op.insert === 'string';
      }).map(function (op) {
        return op.insert;
      }).join('');
    }
  }, {
    key: 'insertEmbed',
    value: function insertEmbed(index, embed, value) {
      this.scroll.insertAt(index, embed, value);
      return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));
    }
  }, {
    key: 'insertText',
    value: function insertText(index, text) {
      var _this4 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
      this.scroll.insertAt(index, text);
      Object.keys(formats).forEach(function (format) {
        _this4.scroll.formatAt(index, text.length, format, formats[format]);
      });
      return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'isBlank',
    value: function isBlank() {
      if (this.scroll.children.length == 0) return true;
      if (this.scroll.children.length > 1) return false;
      var block = this.scroll.children.head;
      if (block.statics.blotName !== _block2.default.blotName) return false;
      if (block.children.length > 1) return false;
      return block.children.head instanceof _break2.default;
    }
  }, {
    key: 'removeFormat',
    value: function removeFormat(index, length) {
      var text = this.getText(index, length);

      var _scroll$line3 = this.scroll.line(index + length),
          _scroll$line4 = _slicedToArray(_scroll$line3, 2),
          line = _scroll$line4[0],
          offset = _scroll$line4[1];

      var suffixLength = 0,
          suffix = new _quillDelta2.default();
      if (line != null) {
        if (!(line instanceof _code2.default)) {
          suffixLength = line.length() - offset;
        } else {
          suffixLength = line.newlineIndex(offset) - offset + 1;
        }
        suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\n');
      }
      var contents = this.getContents(index, length + suffixLength);
      var diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));
      var delta = new _quillDelta2.default().retain(index).concat(diff);
      return this.applyDelta(delta);
    }
  }, {
    key: 'update',
    value: function update(change) {
      var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

      var oldDelta = this.delta;
      if (mutations.length === 1 && mutations[0].type === 'characterData' && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {
        // Optimization for character changes
        var textBlot = _parchment2.default.find(mutations[0].target);
        var formats = (0, _block.bubbleFormats)(textBlot);
        var index = textBlot.offset(this.scroll);
        var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, '');
        var oldText = new _quillDelta2.default().insert(oldValue);
        var newText = new _quillDelta2.default().insert(textBlot.value());
        var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));
        change = diffDelta.reduce(function (delta, op) {
          if (op.insert) {
            return delta.insert(op.insert, formats);
          } else {
            return delta.push(op);
          }
        }, new _quillDelta2.default());
        this.delta = oldDelta.compose(change);
      } else {
        this.delta = this.getDelta();
        if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {
          change = oldDelta.diff(this.delta, cursorIndex);
        }
      }
      return change;
    }
  }]);

  return Editor;
}();

function combineFormats(formats, combined) {
  return Object.keys(combined).reduce(function (merged, name) {
    if (formats[name] == null) return merged;
    if (combined[name] === formats[name]) {
      merged[name] = combined[name];
    } else if (Array.isArray(combined[name])) {
      if (combined[name].indexOf(formats[name]) < 0) {
        merged[name] = combined[name].concat([formats[name]]);
      }
    } else {
      merged[name] = [combined[name], formats[name]];
    }
    return merged;
  }, {});
}

function normalizeDelta(delta) {
  return delta.reduce(function (delta, op) {
    if (op.insert === 1) {
      var attributes = (0, _clone2.default)(op.attributes);
      delete attributes['image'];
      return delta.insert({ image: op.attributes.image }, attributes);
    }
    if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
      op = (0, _clone2.default)(op);
      if (op.attributes.list) {
        op.attributes.list = 'ordered';
      } else {
        op.attributes.list = 'bullet';
        delete op.attributes.bullet;
      }
    }
    if (typeof op.insert === 'string') {
      var text = op.insert.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
      return delta.insert(text, op.attributes);
    }
    return delta.push(op);
  }, new _quillDelta2.default());
}

exports.default = Editor;

/***/ }),
/* 15 */
/***/ (function(module, exports, __nested_webpack_require_98688__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Range = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __nested_webpack_require_98688__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _clone = __nested_webpack_require_98688__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __nested_webpack_require_98688__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _emitter3 = __nested_webpack_require_98688__(8);

var _emitter4 = _interopRequireDefault(_emitter3);

var _logger = __nested_webpack_require_98688__(10);

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var debug = (0, _logger2.default)('quill:selection');

var Range = function Range(index) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  _classCallCheck(this, Range);

  this.index = index;
  this.length = length;
};

var Selection = function () {
  function Selection(scroll, emitter) {
    var _this = this;

    _classCallCheck(this, Selection);

    this.emitter = emitter;
    this.scroll = scroll;
    this.composing = false;
    this.mouseDown = false;
    this.root = this.scroll.domNode;
    this.cursor = _parchment2.default.create('cursor', this);
    // savedRange is last non-null range
    this.lastRange = this.savedRange = new Range(0, 0);
    this.handleComposition();
    this.handleDragging();
    this.emitter.listenDOM('selectionchange', document, function () {
      if (!_this.mouseDown) {
        setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);
      }
    });
    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type, delta) {
      if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {
        _this.update(_emitter4.default.sources.SILENT);
      }
    });
    this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function () {
      if (!_this.hasFocus()) return;
      var native = _this.getNativeRange();
      if (native == null) return;
      if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle
      // TODO unclear if this has negative side effects
      _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function () {
        try {
          _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);
        } catch (ignored) {}
      });
    });
    this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function (mutations, context) {
      if (context.range) {
        var _context$range = context.range,
            startNode = _context$range.startNode,
            startOffset = _context$range.startOffset,
            endNode = _context$range.endNode,
            endOffset = _context$range.endOffset;

        _this.setNativeRange(startNode, startOffset, endNode, endOffset);
      }
    });
    this.update(_emitter4.default.sources.SILENT);
  }

  _createClass(Selection, [{
    key: 'handleComposition',
    value: function handleComposition() {
      var _this2 = this;

      this.root.addEventListener('compositionstart', function () {
        _this2.composing = true;
      });
      this.root.addEventListener('compositionend', function () {
        _this2.composing = false;
        if (_this2.cursor.parent) {
          var range = _this2.cursor.restore();
          if (!range) return;
          setTimeout(function () {
            _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
          }, 1);
        }
      });
    }
  }, {
    key: 'handleDragging',
    value: function handleDragging() {
      var _this3 = this;

      this.emitter.listenDOM('mousedown', document.body, function () {
        _this3.mouseDown = true;
      });
      this.emitter.listenDOM('mouseup', document.body, function () {
        _this3.mouseDown = false;
        _this3.update(_emitter4.default.sources.USER);
      });
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (this.hasFocus()) return;
      this.root.focus();
      this.setRange(this.savedRange);
    }
  }, {
    key: 'format',
    value: function format(_format, value) {
      if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;
      this.scroll.update();
      var nativeRange = this.getNativeRange();
      if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK)) return;
      if (nativeRange.start.node !== this.cursor.textNode) {
        var blot = _parchment2.default.find(nativeRange.start.node, false);
        if (blot == null) return;
        // TODO Give blot ability to not split
        if (blot instanceof _parchment2.default.Leaf) {
          var after = blot.split(nativeRange.start.offset);
          blot.parent.insertBefore(this.cursor, after);
        } else {
          blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen
        }
        this.cursor.attach();
      }
      this.cursor.format(_format, value);
      this.scroll.optimize();
      this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
      this.update();
    }
  }, {
    key: 'getBounds',
    value: function getBounds(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var scrollLength = this.scroll.length();
      index = Math.min(index, scrollLength - 1);
      length = Math.min(index + length, scrollLength - 1) - index;
      var node = void 0,
          _scroll$leaf = this.scroll.leaf(index),
          _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
          leaf = _scroll$leaf2[0],
          offset = _scroll$leaf2[1];
      if (leaf == null) return null;

      var _leaf$position = leaf.position(offset, true);

      var _leaf$position2 = _slicedToArray(_leaf$position, 2);

      node = _leaf$position2[0];
      offset = _leaf$position2[1];

      var range = document.createRange();
      if (length > 0) {
        range.setStart(node, offset);

        var _scroll$leaf3 = this.scroll.leaf(index + length);

        var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);

        leaf = _scroll$leaf4[0];
        offset = _scroll$leaf4[1];

        if (leaf == null) return null;

        var _leaf$position3 = leaf.position(offset, true);

        var _leaf$position4 = _slicedToArray(_leaf$position3, 2);

        node = _leaf$position4[0];
        offset = _leaf$position4[1];

        range.setEnd(node, offset);
        return range.getBoundingClientRect();
      } else {
        var side = 'left';
        var rect = void 0;
        if (node instanceof Text) {
          if (offset < node.data.length) {
            range.setStart(node, offset);
            range.setEnd(node, offset + 1);
          } else {
            range.setStart(node, offset - 1);
            range.setEnd(node, offset);
            side = 'right';
          }
          rect = range.getBoundingClientRect();
        } else {
          rect = leaf.domNode.getBoundingClientRect();
          if (offset > 0) side = 'right';
        }
        return {
          bottom: rect.top + rect.height,
          height: rect.height,
          left: rect[side],
          right: rect[side],
          top: rect.top,
          width: 0
        };
      }
    }
  }, {
    key: 'getNativeRange',
    value: function getNativeRange() {
      var selection = document.getSelection();
      if (selection == null || selection.rangeCount <= 0) return null;
      var nativeRange = selection.getRangeAt(0);
      if (nativeRange == null) return null;
      var range = this.normalizeNative(nativeRange);
      debug.info('getNativeRange', range);
      return range;
    }
  }, {
    key: 'getRange',
    value: function getRange() {
      var normalized = this.getNativeRange();
      if (normalized == null) return [null, null];
      var range = this.normalizedToRange(normalized);
      return [range, normalized];
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return document.activeElement === this.root;
    }
  }, {
    key: 'normalizedToRange',
    value: function normalizedToRange(range) {
      var _this4 = this;

      var positions = [[range.start.node, range.start.offset]];
      if (!range.native.collapsed) {
        positions.push([range.end.node, range.end.offset]);
      }
      var indexes = positions.map(function (position) {
        var _position = _slicedToArray(position, 2),
            node = _position[0],
            offset = _position[1];

        var blot = _parchment2.default.find(node, true);
        var index = blot.offset(_this4.scroll);
        if (offset === 0) {
          return index;
        } else if (blot instanceof _parchment2.default.Container) {
          return index + blot.length();
        } else {
          return index + blot.index(node, offset);
        }
      });
      var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
      var start = Math.min.apply(Math, [end].concat(_toConsumableArray(indexes)));
      return new Range(start, end - start);
    }
  }, {
    key: 'normalizeNative',
    value: function normalizeNative(nativeRange) {
      if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {
        return null;
      }
      var range = {
        start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },
        end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },
        native: nativeRange
      };
      [range.start, range.end].forEach(function (position) {
        var node = position.node,
            offset = position.offset;
        while (!(node instanceof Text) && node.childNodes.length > 0) {
          if (node.childNodes.length > offset) {
            node = node.childNodes[offset];
            offset = 0;
          } else if (node.childNodes.length === offset) {
            node = node.lastChild;
            offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;
          } else {
            break;
          }
        }
        position.node = node, position.offset = offset;
      });
      return range;
    }
  }, {
    key: 'rangeToNative',
    value: function rangeToNative(range) {
      var _this5 = this;

      var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
      var args = [];
      var scrollLength = this.scroll.length();
      indexes.forEach(function (index, i) {
        index = Math.min(scrollLength - 1, index);
        var node = void 0,
            _scroll$leaf5 = _this5.scroll.leaf(index),
            _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
            leaf = _scroll$leaf6[0],
            offset = _scroll$leaf6[1];
        var _leaf$position5 = leaf.position(offset, i !== 0);

        var _leaf$position6 = _slicedToArray(_leaf$position5, 2);

        node = _leaf$position6[0];
        offset = _leaf$position6[1];

        args.push(node, offset);
      });
      if (args.length < 2) {
        args = args.concat(args);
      }
      return args;
    }
  }, {
    key: 'scrollIntoView',
    value: function scrollIntoView(scrollingContainer) {
      var range = this.lastRange;
      if (range == null) return;
      var bounds = this.getBounds(range.index, range.length);
      if (bounds == null) return;
      var limit = this.scroll.length() - 1;

      var _scroll$line = this.scroll.line(Math.min(range.index, limit)),
          _scroll$line2 = _slicedToArray(_scroll$line, 1),
          first = _scroll$line2[0];

      var last = first;
      if (range.length > 0) {
        var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));

        var _scroll$line4 = _slicedToArray(_scroll$line3, 1);

        last = _scroll$line4[0];
      }
      if (first == null || last == null) return;
      var scrollBounds = scrollingContainer.getBoundingClientRect();
      if (bounds.top < scrollBounds.top) {
        scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
      } else if (bounds.bottom > scrollBounds.bottom) {
        scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
      }
    }
  }, {
    key: 'setNativeRange',
    value: function setNativeRange(startNode, startOffset) {
      var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;
      var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;
      var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

      debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);
      if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
        return;
      }
      var selection = document.getSelection();
      if (selection == null) return;
      if (startNode != null) {
        if (!this.hasFocus()) this.root.focus();
        var native = (this.getNativeRange() || {}).native;
        if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {

          if (startNode.tagName == "BR") {
            startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
            startNode = startNode.parentNode;
          }
          if (endNode.tagName == "BR") {
            endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
            endNode = endNode.parentNode;
          }
          var range = document.createRange();
          range.setStart(startNode, startOffset);
          range.setEnd(endNode, endOffset);
          selection.removeAllRanges();
          selection.addRange(range);
        }
      } else {
        selection.removeAllRanges();
        this.root.blur();
        document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
      }
    }
  }, {
    key: 'setRange',
    value: function setRange(range) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

      if (typeof force === 'string') {
        source = force;
        force = false;
      }
      debug.info('setRange', range);
      if (range != null) {
        var args = this.rangeToNative(range);
        this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
      } else {
        this.setNativeRange(null);
      }
      this.update(source);
    }
  }, {
    key: 'update',
    value: function update() {
      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

      var oldRange = this.lastRange;

      var _getRange = this.getRange(),
          _getRange2 = _slicedToArray(_getRange, 2),
          lastRange = _getRange2[0],
          nativeRange = _getRange2[1];

      this.lastRange = lastRange;
      if (this.lastRange != null) {
        this.savedRange = this.lastRange;
      }
      if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
        var _emitter;

        if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {
          this.cursor.restore();
        }
        var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];
        (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
        if (source !== _emitter4.default.sources.SILENT) {
          var _emitter2;

          (_emitter2 = this.emitter).emit.apply(_emitter2, args);
        }
      }
    }
  }]);

  return Selection;
}();

function contains(parent, descendant) {
  try {
    // Firefox inserts inaccessible nodes around video elements
    descendant.parentNode;
  } catch (e) {
    return false;
  }
  // IE11 has bug with Text nodes
  // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
  if (descendant instanceof Text) {
    descendant = descendant.parentNode;
  }
  return parent.contains(descendant);
}

exports.Range = Range;
exports.default = Selection;

/***/ }),
/* 16 */
/***/ (function(module, exports, __nested_webpack_require_116908__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_116908__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Break = function (_Parchment$Embed) {
  _inherits(Break, _Parchment$Embed);

  function Break() {
    _classCallCheck(this, Break);

    return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));
  }

  _createClass(Break, [{
    key: 'insertInto',
    value: function insertInto(parent, ref) {
      if (parent.children.length === 0) {
        _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), 'insertInto', this).call(this, parent, ref);
      } else {
        this.remove();
      }
    }
  }, {
    key: 'length',
    value: function length() {
      return 0;
    }
  }, {
    key: 'value',
    value: function value() {
      return '';
    }
  }], [{
    key: 'value',
    value: function value() {
      return undefined;
    }
  }]);

  return Break;
}(_parchment2.default.Embed);

Break.blotName = 'break';
Break.tagName = 'BR';

exports.default = Break;

/***/ }),
/* 17 */
/***/ (function(module, exports, __nested_webpack_require_120162__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var linked_list_1 = __nested_webpack_require_120162__(44);
var shadow_1 = __nested_webpack_require_120162__(30);
var Registry = __nested_webpack_require_120162__(1);
var ContainerBlot = /** @class */ (function (_super) {
    __extends(ContainerBlot, _super);
    function ContainerBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.build();
        return _this;
    }
    ContainerBlot.prototype.appendChild = function (other) {
        this.insertBefore(other);
    };
    ContainerBlot.prototype.attach = function () {
        _super.prototype.attach.call(this);
        this.children.forEach(function (child) {
            child.attach();
        });
    };
    ContainerBlot.prototype.build = function () {
        var _this = this;
        this.children = new linked_list_1.default();
        // Need to be reversed for if DOM nodes already in order
        [].slice
            .call(this.domNode.childNodes)
            .reverse()
            .forEach(function (node) {
            try {
                var child = makeBlot(node);
                _this.insertBefore(child, _this.children.head || undefined);
            }
            catch (err) {
                if (err instanceof Registry.ParchmentError)
                    return;
                else
                    throw err;
            }
        });
    };
    ContainerBlot.prototype.deleteAt = function (index, length) {
        if (index === 0 && length === this.length()) {
            return this.remove();
        }
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.deleteAt(offset, length);
        });
    };
    ContainerBlot.prototype.descendant = function (criteria, index) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if ((criteria.blotName == null && criteria(child)) ||
            (criteria.blotName != null && child instanceof criteria)) {
            return [child, offset];
        }
        else if (child instanceof ContainerBlot) {
            return child.descendant(criteria, offset);
        }
        else {
            return [null, -1];
        }
    };
    ContainerBlot.prototype.descendants = function (criteria, index, length) {
        if (index === void 0) { index = 0; }
        if (length === void 0) { length = Number.MAX_VALUE; }
        var descendants = [];
        var lengthLeft = length;
        this.children.forEachAt(index, length, function (child, index, length) {
            if ((criteria.blotName == null && criteria(child)) ||
                (criteria.blotName != null && child instanceof criteria)) {
                descendants.push(child);
            }
            if (child instanceof ContainerBlot) {
                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));
            }
            lengthLeft -= length;
        });
        return descendants;
    };
    ContainerBlot.prototype.detach = function () {
        this.children.forEach(function (child) {
            child.detach();
        });
        _super.prototype.detach.call(this);
    };
    ContainerBlot.prototype.formatAt = function (index, length, name, value) {
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.formatAt(offset, length, name, value);
        });
    };
    ContainerBlot.prototype.insertAt = function (index, value, def) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if (child) {
            child.insertAt(offset, value, def);
        }
        else {
            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
            this.appendChild(blot);
        }
    };
    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {
        if (this.statics.allowedChildren != null &&
            !this.statics.allowedChildren.some(function (child) {
                return childBlot instanceof child;
            })) {
            throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
        }
        childBlot.insertInto(this, refBlot);
    };
    ContainerBlot.prototype.length = function () {
        return this.children.reduce(function (memo, child) {
            return memo + child.length();
        }, 0);
    };
    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {
        this.children.forEach(function (child) {
            targetParent.insertBefore(child, refNode);
        });
    };
    ContainerBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        if (this.children.length === 0) {
            if (this.statics.defaultChild != null) {
                var child = Registry.create(this.statics.defaultChild);
                this.appendChild(child);
                child.optimize(context);
            }
            else {
                this.remove();
            }
        }
    };
    ContainerBlot.prototype.path = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];
        var position = [[this, index]];
        if (child instanceof ContainerBlot) {
            return position.concat(child.path(offset, inclusive));
        }
        else if (child != null) {
            position.push([child, offset]);
        }
        return position;
    };
    ContainerBlot.prototype.removeChild = function (child) {
        this.children.remove(child);
    };
    ContainerBlot.prototype.replace = function (target) {
        if (target instanceof ContainerBlot) {
            target.moveChildren(this);
        }
        _super.prototype.replace.call(this, target);
    };
    ContainerBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = this.clone();
        this.parent.insertBefore(after, this.next);
        this.children.forEachAt(index, this.length(), function (child, offset, length) {
            child = child.split(offset, force);
            after.appendChild(child);
        });
        return after;
    };
    ContainerBlot.prototype.unwrap = function () {
        this.moveChildren(this.parent, this.next);
        this.remove();
    };
    ContainerBlot.prototype.update = function (mutations, context) {
        var _this = this;
        var addedNodes = [];
        var removedNodes = [];
        mutations.forEach(function (mutation) {
            if (mutation.target === _this.domNode && mutation.type === 'childList') {
                addedNodes.push.apply(addedNodes, mutation.addedNodes);
                removedNodes.push.apply(removedNodes, mutation.removedNodes);
            }
        });
        removedNodes.forEach(function (node) {
            // Check node has actually been removed
            // One exception is Chrome does not immediately remove IFRAMEs
            // from DOM but MutationRecord is correct in its reported removal
            if (node.parentNode != null &&
                // @ts-ignore
                node.tagName !== 'IFRAME' &&
                document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                return;
            }
            var blot = Registry.find(node);
            if (blot == null)
                return;
            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                blot.detach();
            }
        });
        addedNodes
            .filter(function (node) {
            return node.parentNode == _this.domNode;
        })
            .sort(function (a, b) {
            if (a === b)
                return 0;
            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
                return 1;
            }
            return -1;
        })
            .forEach(function (node) {
            var refBlot = null;
            if (node.nextSibling != null) {
                refBlot = Registry.find(node.nextSibling);
            }
            var blot = makeBlot(node);
            if (blot.next != refBlot || blot.next == null) {
                if (blot.parent != null) {
                    blot.parent.removeChild(_this);
                }
                _this.insertBefore(blot, refBlot || undefined);
            }
        });
    };
    return ContainerBlot;
}(shadow_1.default));
function makeBlot(node) {
    var blot = Registry.find(node);
    if (blot == null) {
        try {
            blot = Registry.create(node);
        }
        catch (e) {
            blot = Registry.create(Registry.Scope.INLINE);
            [].slice.call(node.childNodes).forEach(function (child) {
                // @ts-ignore
                blot.domNode.appendChild(child);
            });
            if (node.parentNode) {
                node.parentNode.replaceChild(blot.domNode, node);
            }
            blot.attach();
        }
    }
    return blot;
}
exports.default = ContainerBlot;


/***/ }),
/* 18 */
/***/ (function(module, exports, __nested_webpack_require_130088__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_130088__(12);
var store_1 = __nested_webpack_require_130088__(31);
var container_1 = __nested_webpack_require_130088__(17);
var Registry = __nested_webpack_require_130088__(1);
var FormatBlot = /** @class */ (function (_super) {
    __extends(FormatBlot, _super);
    function FormatBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.attributes = new store_1.default(_this.domNode);
        return _this;
    }
    FormatBlot.formats = function (domNode) {
        if (typeof this.tagName === 'string') {
            return true;
        }
        else if (Array.isArray(this.tagName)) {
            return domNode.tagName.toLowerCase();
        }
        return undefined;
    };
    FormatBlot.prototype.format = function (name, value) {
        var format = Registry.query(name);
        if (format instanceof attributor_1.default) {
            this.attributes.attribute(format, value);
        }
        else if (value) {
            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
                this.replaceWith(name, value);
            }
        }
    };
    FormatBlot.prototype.formats = function () {
        var formats = this.attributes.values();
        var format = this.statics.formats(this.domNode);
        if (format != null) {
            formats[this.statics.blotName] = format;
        }
        return formats;
    };
    FormatBlot.prototype.replaceWith = function (name, value) {
        var replacement = _super.prototype.replaceWith.call(this, name, value);
        this.attributes.copy(replacement);
        return replacement;
    };
    FormatBlot.prototype.update = function (mutations, context) {
        var _this = this;
        _super.prototype.update.call(this, mutations, context);
        if (mutations.some(function (mutation) {
            return mutation.target === _this.domNode && mutation.type === 'attributes';
        })) {
            this.attributes.build();
        }
    };
    FormatBlot.prototype.wrap = function (name, value) {
        var wrapper = _super.prototype.wrap.call(this, name, value);
        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {
            this.attributes.move(wrapper);
        }
        return wrapper;
    };
    return FormatBlot;
}(container_1.default));
exports.default = FormatBlot;


/***/ }),
/* 19 */
/***/ (function(module, exports, __nested_webpack_require_133111__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var shadow_1 = __nested_webpack_require_133111__(30);
var Registry = __nested_webpack_require_133111__(1);
var LeafBlot = /** @class */ (function (_super) {
    __extends(LeafBlot, _super);
    function LeafBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeafBlot.value = function (domNode) {
        return true;
    };
    LeafBlot.prototype.index = function (node, offset) {
        if (this.domNode === node ||
            this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
            return Math.min(offset, 1);
        }
        return -1;
    };
    LeafBlot.prototype.position = function (index, inclusive) {
        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
        if (index > 0)
            offset += 1;
        return [this.parent.domNode, offset];
    };
    LeafBlot.prototype.value = function () {
        var _a;
        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
    };
    LeafBlot.scope = Registry.Scope.INLINE_BLOT;
    return LeafBlot;
}(shadow_1.default));
exports.default = LeafBlot;


/***/ }),
/* 20 */
/***/ (function(module, exports, __nested_webpack_require_134898__) {

var equal = __nested_webpack_require_134898__(11);
var extend = __nested_webpack_require_134898__(3);


var lib = {
  attributes: {
    compose: function (a, b, keepNull) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = extend(true, {}, b);
      if (!keepNull) {
        attributes = Object.keys(attributes).reduce(function (copy, key) {
          if (attributes[key] != null) {
            copy[key] = attributes[key];
          }
          return copy;
        }, {});
      }
      for (var key in a) {
        if (a[key] !== undefined && b[key] === undefined) {
          attributes[key] = a[key];
        }
      }
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    diff: function(a, b) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {
        if (!equal(a[key], b[key])) {
          attributes[key] = b[key] === undefined ? null : b[key];
        }
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    transform: function (a, b, priority) {
      if (typeof a !== 'object') return b;
      if (typeof b !== 'object') return undefined;
      if (!priority) return b;  // b simply overwrites us without priority
      var attributes = Object.keys(b).reduce(function (attributes, key) {
        if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    }
  },

  iterator: function (ops) {
    return new Iterator(ops);
  },

  length: function (op) {
    if (typeof op['delete'] === 'number') {
      return op['delete'];
    } else if (typeof op.retain === 'number') {
      return op.retain;
    } else {
      return typeof op.insert === 'string' ? op.insert.length : 1;
    }
  }
};


function Iterator(ops) {
  this.ops = ops;
  this.index = 0;
  this.offset = 0;
};

Iterator.prototype.hasNext = function () {
  return this.peekLength() < Infinity;
};

Iterator.prototype.next = function (length) {
  if (!length) length = Infinity;
  var nextOp = this.ops[this.index];
  if (nextOp) {
    var offset = this.offset;
    var opLength = lib.length(nextOp)
    if (length >= opLength - offset) {
      length = opLength - offset;
      this.index += 1;
      this.offset = 0;
    } else {
      this.offset += length;
    }
    if (typeof nextOp['delete'] === 'number') {
      return { 'delete': length };
    } else {
      var retOp = {};
      if (nextOp.attributes) {
        retOp.attributes = nextOp.attributes;
      }
      if (typeof nextOp.retain === 'number') {
        retOp.retain = length;
      } else if (typeof nextOp.insert === 'string') {
        retOp.insert = nextOp.insert.substr(offset, length);
      } else {
        // offset should === 0, length should === 1
        retOp.insert = nextOp.insert;
      }
      return retOp;
    }
  } else {
    return { retain: Infinity };
  }
};

Iterator.prototype.peek = function () {
  return this.ops[this.index];
};

Iterator.prototype.peekLength = function () {
  if (this.ops[this.index]) {
    // Should never return 0 if our index is being managed correctly
    return lib.length(this.ops[this.index]) - this.offset;
  } else {
    return Infinity;
  }
};

Iterator.prototype.peekType = function () {
  if (this.ops[this.index]) {
    if (typeof this.ops[this.index]['delete'] === 'number') {
      return 'delete';
    } else if (typeof this.ops[this.index].retain === 'number') {
      return 'retain';
    } else {
      return 'insert';
    }
  }
  return 'retain';
};

Iterator.prototype.rest = function () {
  if (!this.hasNext()) {
    return [];
  } else if (this.offset === 0) {
    return this.ops.slice(this.index);
  } else {
    var offset = this.offset;
    var index = this.index;
    var next = this.next();
    var rest = this.ops.slice(this.index);
    this.offset = offset;
    this.index = index;
    return [next].concat(rest);
  }
};


module.exports = lib;


/***/ }),
/* 21 */
/***/ (function(module, exports) {

var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no `Map`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if `circular` is false and `parent` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param `parent` - the object to be cloned
 * @param `circular` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param `depth` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param `prototype` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param `includeNonEnumerable` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      if (Buffer.allocUnsafe) {
        // Node.js >= 4.5.0
        child = Buffer.allocUnsafe(parent.length);
      } else {
        // Older Node.js versions
        child = new Buffer(parent.length);
      }
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}


/***/ }),
/* 22 */
/***/ (function(module, exports, __nested_webpack_require_146497__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_146497__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _emitter = __nested_webpack_require_146497__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _block = __nested_webpack_require_146497__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __nested_webpack_require_146497__(16);

var _break2 = _interopRequireDefault(_break);

var _code = __nested_webpack_require_146497__(13);

var _code2 = _interopRequireDefault(_code);

var _container = __nested_webpack_require_146497__(25);

var _container2 = _interopRequireDefault(_container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function isLine(blot) {
  return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;
}

var Scroll = function (_Parchment$Scroll) {
  _inherits(Scroll, _Parchment$Scroll);

  function Scroll(domNode, config) {
    _classCallCheck(this, Scroll);

    var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));

    _this.emitter = config.emitter;
    if (Array.isArray(config.whitelist)) {
      _this.whitelist = config.whitelist.reduce(function (whitelist, format) {
        whitelist[format] = true;
        return whitelist;
      }, {});
    }
    // Some reason fixes composition issues with character languages in Windows/Chrome, Safari
    _this.domNode.addEventListener('DOMNodeInserted', function () {});
    _this.optimize();
    _this.enable();
    return _this;
  }

  _createClass(Scroll, [{
    key: 'batchStart',
    value: function batchStart() {
      this.batch = true;
    }
  }, {
    key: 'batchEnd',
    value: function batchEnd() {
      this.batch = false;
      this.optimize();
    }
  }, {
    key: 'deleteAt',
    value: function deleteAt(index, length) {
      var _line = this.line(index),
          _line2 = _slicedToArray(_line, 2),
          first = _line2[0],
          offset = _line2[1];

      var _line3 = this.line(index + length),
          _line4 = _slicedToArray(_line3, 1),
          last = _line4[0];

      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'deleteAt', this).call(this, index, length);
      if (last != null && first !== last && offset > 0) {
        if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
          this.optimize();
          return;
        }
        if (first instanceof _code2.default) {
          var newlineIndex = first.newlineIndex(first.length(), true);
          if (newlineIndex > -1) {
            first = first.split(newlineIndex + 1);
            if (first === last) {
              this.optimize();
              return;
            }
          }
        } else if (last instanceof _code2.default) {
          var _newlineIndex = last.newlineIndex(0);
          if (_newlineIndex > -1) {
            last.split(_newlineIndex + 1);
          }
        }
        var ref = last.children.head instanceof _break2.default ? null : last.children.head;
        first.moveChildren(last, ref);
        first.remove();
      }
      this.optimize();
    }
  }, {
    key: 'enable',
    value: function enable() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.domNode.setAttribute('contenteditable', enabled);
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, format, value) {
      if (this.whitelist != null && !this.whitelist[format]) return;
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'formatAt', this).call(this, index, length, format, value);
      this.optimize();
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null && this.whitelist != null && !this.whitelist[value]) return;
      if (index >= this.length()) {
        if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {
          var blot = _parchment2.default.create(this.statics.defaultChild);
          this.appendChild(blot);
          if (def == null && value.endsWith('\n')) {
            value = value.slice(0, -1);
          }
          blot.insertAt(0, value, def);
        } else {
          var embed = _parchment2.default.create(value, def);
          this.appendChild(embed);
        }
      } else {
        _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertAt', this).call(this, index, value, def);
      }
      this.optimize();
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {
        var wrapper = _parchment2.default.create(this.statics.defaultChild);
        wrapper.appendChild(blot);
        blot = wrapper;
      }
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertBefore', this).call(this, blot, ref);
    }
  }, {
    key: 'leaf',
    value: function leaf(index) {
      return this.path(index).pop() || [null, -1];
    }
  }, {
    key: 'line',
    value: function line(index) {
      if (index === this.length()) {
        return this.line(index - 1);
      }
      return this.descendant(isLine, index);
    }
  }, {
    key: 'lines',
    value: function lines() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

      var getLines = function getLines(blot, index, length) {
        var lines = [],
            lengthLeft = length;
        blot.children.forEachAt(index, length, function (child, index, length) {
          if (isLine(child)) {
            lines.push(child);
          } else if (child instanceof _parchment2.default.Container) {
            lines = lines.concat(getLines(child, index, lengthLeft));
          }
          lengthLeft -= length;
        });
        return lines;
      };
      return getLines(this, index, length);
    }
  }, {
    key: 'optimize',
    value: function optimize() {
      var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (this.batch === true) return;
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'optimize', this).call(this, mutations, context);
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);
      }
    }
  }, {
    key: 'path',
    value: function path(index) {
      return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'path', this).call(this, index).slice(1); // Exclude self
    }
  }, {
    key: 'update',
    value: function update(mutations) {
      if (this.batch === true) return;
      var source = _emitter2.default.sources.USER;
      if (typeof mutations === 'string') {
        source = mutations;
      }
      if (!Array.isArray(mutations)) {
        mutations = this.observer.takeRecords();
      }
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);
      }
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'update', this).call(this, mutations.concat([])); // pass copy
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);
      }
    }
  }]);

  return Scroll;
}(_parchment2.default.Scroll);

Scroll.blotName = 'scroll';
Scroll.className = 'ql-editor';
Scroll.tagName = 'DIV';
Scroll.defaultChild = 'block';
Scroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];

exports.default = Scroll;

/***/ }),
/* 23 */
/***/ (function(module, exports, __nested_webpack_require_157111__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SHORTKEY = exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _clone = __nested_webpack_require_157111__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __nested_webpack_require_157111__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _extend = __nested_webpack_require_157111__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __nested_webpack_require_157111__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _op = __nested_webpack_require_157111__(20);

var _op2 = _interopRequireDefault(_op);

var _parchment = __nested_webpack_require_157111__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_157111__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __nested_webpack_require_157111__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __nested_webpack_require_157111__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:keyboard');

var SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';

var Keyboard = function (_Module) {
  _inherits(Keyboard, _Module);

  _createClass(Keyboard, null, [{
    key: 'match',
    value: function match(evt, binding) {
      binding = normalize(binding);
      if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {
        return !!binding[key] !== evt[key] && binding[key] !== null;
      })) {
        return false;
      }
      return binding.key === (evt.which || evt.keyCode);
    }
  }]);

  function Keyboard(quill, options) {
    _classCallCheck(this, Keyboard);

    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));

    _this.bindings = {};
    Object.keys(_this.options.bindings).forEach(function (name) {
      if (name === 'list autofill' && quill.scroll.whitelist != null && !quill.scroll.whitelist['list']) {
        return;
      }
      if (_this.options.bindings[name]) {
        _this.addBinding(_this.options.bindings[name]);
      }
    });
    _this.addBinding({ key: Keyboard.keys.ENTER, shiftKey: null }, handleEnter);
    _this.addBinding({ key: Keyboard.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function () {});
    if (/Firefox/i.test(navigator.userAgent)) {
      // Need to handle delete and backspace for Firefox in the general case #1171
      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true }, handleBackspace);
      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true }, handleDelete);
    } else {
      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);
      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);
    }
    _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);
    _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: false }, handleDeleteRange);
    _this.addBinding({ key: Keyboard.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);
    _this.listen();
    return _this;
  }

  _createClass(Keyboard, [{
    key: 'addBinding',
    value: function addBinding(key) {
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var binding = normalize(key);
      if (binding == null || binding.key == null) {
        return debug.warn('Attempted to add invalid keyboard binding', binding);
      }
      if (typeof context === 'function') {
        context = { handler: context };
      }
      if (typeof handler === 'function') {
        handler = { handler: handler };
      }
      binding = (0, _extend2.default)(binding, context, handler);
      this.bindings[binding.key] = this.bindings[binding.key] || [];
      this.bindings[binding.key].push(binding);
    }
  }, {
    key: 'listen',
    value: function listen() {
      var _this2 = this;

      this.quill.root.addEventListener('keydown', function (evt) {
        if (evt.defaultPrevented) return;
        var which = evt.which || evt.keyCode;
        var bindings = (_this2.bindings[which] || []).filter(function (binding) {
          return Keyboard.match(evt, binding);
        });
        if (bindings.length === 0) return;
        var range = _this2.quill.getSelection();
        if (range == null || !_this2.quill.hasFocus()) return;

        var _quill$getLine = _this2.quill.getLine(range.index),
            _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
            line = _quill$getLine2[0],
            offset = _quill$getLine2[1];

        var _quill$getLeaf = _this2.quill.getLeaf(range.index),
            _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
            leafStart = _quill$getLeaf2[0],
            offsetStart = _quill$getLeaf2[1];

        var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length),
            _ref2 = _slicedToArray(_ref, 2),
            leafEnd = _ref2[0],
            offsetEnd = _ref2[1];

        var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : '';
        var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : '';
        var curContext = {
          collapsed: range.length === 0,
          empty: range.length === 0 && line.length() <= 1,
          format: _this2.quill.getFormat(range),
          offset: offset,
          prefix: prefixText,
          suffix: suffixText
        };
        var prevented = bindings.some(function (binding) {
          if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;
          if (binding.empty != null && binding.empty !== curContext.empty) return false;
          if (binding.offset != null && binding.offset !== curContext.offset) return false;
          if (Array.isArray(binding.format)) {
            // any format is present
            if (binding.format.every(function (name) {
              return curContext.format[name] == null;
            })) {
              return false;
            }
          } else if (_typeof(binding.format) === 'object') {
            // all formats must match
            if (!Object.keys(binding.format).every(function (name) {
              if (binding.format[name] === true) return curContext.format[name] != null;
              if (binding.format[name] === false) return curContext.format[name] == null;
              return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);
            })) {
              return false;
            }
          }
          if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;
          if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;
          return binding.handler.call(_this2, range, curContext) !== true;
        });
        if (prevented) {
          evt.preventDefault();
        }
      });
    }
  }]);

  return Keyboard;
}(_module2.default);

Keyboard.keys = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  ESCAPE: 27,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  DELETE: 46
};

Keyboard.DEFAULTS = {
  bindings: {
    'bold': makeFormatHandler('bold'),
    'italic': makeFormatHandler('italic'),
    'underline': makeFormatHandler('underline'),
    'indent': {
      // highlight tab or tab at beginning of list, indent or blockquote
      key: Keyboard.keys.TAB,
      format: ['blockquote', 'indent', 'list'],
      handler: function handler(range, context) {
        if (context.collapsed && context.offset !== 0) return true;
        this.quill.format('indent', '+1', _quill2.default.sources.USER);
      }
    },
    'outdent': {
      key: Keyboard.keys.TAB,
      shiftKey: true,
      format: ['blockquote', 'indent', 'list'],
      // highlight tab or tab at beginning of list, indent or blockquote
      handler: function handler(range, context) {
        if (context.collapsed && context.offset !== 0) return true;
        this.quill.format('indent', '-1', _quill2.default.sources.USER);
      }
    },
    'outdent backspace': {
      key: Keyboard.keys.BACKSPACE,
      collapsed: true,
      shiftKey: null,
      metaKey: null,
      ctrlKey: null,
      altKey: null,
      format: ['indent', 'list'],
      offset: 0,
      handler: function handler(range, context) {
        if (context.format.indent != null) {
          this.quill.format('indent', '-1', _quill2.default.sources.USER);
        } else if (context.format.list != null) {
          this.quill.format('list', false, _quill2.default.sources.USER);
        }
      }
    },
    'indent code-block': makeCodeBlockHandler(true),
    'outdent code-block': makeCodeBlockHandler(false),
    'remove tab': {
      key: Keyboard.keys.TAB,
      shiftKey: true,
      collapsed: true,
      prefix: /\t$/,
      handler: function handler(range) {
        this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);
      }
    },
    'tab': {
      key: Keyboard.keys.TAB,
      handler: function handler(range) {
        this.quill.history.cutoff();
        var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert('\t');
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.history.cutoff();
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
      }
    },
    'list empty enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['list'],
      empty: true,
      handler: function handler(range, context) {
        this.quill.format('list', false, _quill2.default.sources.USER);
        if (context.format.indent) {
          this.quill.format('indent', false, _quill2.default.sources.USER);
        }
      }
    },
    'checklist enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: { list: 'checked' },
      handler: function handler(range) {
        var _quill$getLine3 = this.quill.getLine(range.index),
            _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
            line = _quill$getLine4[0],
            offset = _quill$getLine4[1];

        var formats = (0, _extend2.default)({}, line.formats(), { list: 'checked' });
        var delta = new _quillDelta2.default().retain(range.index).insert('\n', formats).retain(line.length() - offset - 1).retain(1, { list: 'unchecked' });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
        this.quill.scrollIntoView();
      }
    },
    'header enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['header'],
      suffix: /^$/,
      handler: function handler(range, context) {
        var _quill$getLine5 = this.quill.getLine(range.index),
            _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
            line = _quill$getLine6[0],
            offset = _quill$getLine6[1];

        var delta = new _quillDelta2.default().retain(range.index).insert('\n', context.format).retain(line.length() - offset - 1).retain(1, { header: null });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
        this.quill.scrollIntoView();
      }
    },
    'list autofill': {
      key: ' ',
      collapsed: true,
      format: { list: false },
      prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
      handler: function handler(range, context) {
        var length = context.prefix.length;

        var _quill$getLine7 = this.quill.getLine(range.index),
            _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
            line = _quill$getLine8[0],
            offset = _quill$getLine8[1];

        if (offset > length) return true;
        var value = void 0;
        switch (context.prefix.trim()) {
          case '[]':case '[ ]':
            value = 'unchecked';
            break;
          case '[x]':
            value = 'checked';
            break;
          case '-':case '*':
            value = 'bullet';
            break;
          default:
            value = 'ordered';
        }
        this.quill.insertText(range.index, ' ', _quill2.default.sources.USER);
        this.quill.history.cutoff();
        var delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, { list: value });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.history.cutoff();
        this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);
      }
    },
    'code exit': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['code-block'],
      prefix: /\n\n$/,
      suffix: /^\s+$/,
      handler: function handler(range) {
        var _quill$getLine9 = this.quill.getLine(range.index),
            _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
            line = _quill$getLine10[0],
            offset = _quill$getLine10[1];

        var delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, { 'code-block': null }).delete(1);
        this.quill.updateContents(delta, _quill2.default.sources.USER);
      }
    },
    'embed left': makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
    'embed left shift': makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
    'embed right': makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
    'embed right shift': makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
  }
};

function makeEmbedArrowHandler(key, shiftKey) {
  var _ref3;

  var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
  return _ref3 = {
    key: key,
    shiftKey: shiftKey,
    altKey: null
  }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, 'handler', function handler(range) {
    var index = range.index;
    if (key === Keyboard.keys.RIGHT) {
      index += range.length + 1;
    }

    var _quill$getLeaf3 = this.quill.getLeaf(index),
        _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
        leaf = _quill$getLeaf4[0];

    if (!(leaf instanceof _parchment2.default.Embed)) return true;
    if (key === Keyboard.keys.LEFT) {
      if (shiftKey) {
        this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);
      } else {
        this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);
      }
    } else {
      if (shiftKey) {
        this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);
      } else {
        this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);
      }
    }
    return false;
  }), _ref3;
}

function handleBackspace(range, context) {
  if (range.index === 0 || this.quill.getLength() <= 1) return;

  var _quill$getLine11 = this.quill.getLine(range.index),
      _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
      line = _quill$getLine12[0];

  var formats = {};
  if (context.offset === 0) {
    var _quill$getLine13 = this.quill.getLine(range.index - 1),
        _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
        prev = _quill$getLine14[0];

    if (prev != null && prev.length() > 1) {
      var curFormats = line.formats();
      var prevFormats = this.quill.getFormat(range.index - 1, 1);
      formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};
    }
  }
  // Check for astral symbols
  var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix) ? 2 : 1;
  this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);
  }
  this.quill.focus();
}

function handleDelete(range, context) {
  // Check for astral symbols
  var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix) ? 2 : 1;
  if (range.index >= this.quill.getLength() - length) return;
  var formats = {},
      nextLength = 0;

  var _quill$getLine15 = this.quill.getLine(range.index),
      _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
      line = _quill$getLine16[0];

  if (context.offset >= line.length() - 1) {
    var _quill$getLine17 = this.quill.getLine(range.index + 1),
        _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
        next = _quill$getLine18[0];

    if (next) {
      var curFormats = line.formats();
      var nextFormats = this.quill.getFormat(range.index, 1);
      formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};
      nextLength = next.length();
    }
  }
  this.quill.deleteText(range.index, length, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);
  }
}

function handleDeleteRange(range) {
  var lines = this.quill.getLines(range);
  var formats = {};
  if (lines.length > 1) {
    var firstFormats = lines[0].formats();
    var lastFormats = lines[lines.length - 1].formats();
    formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};
  }
  this.quill.deleteText(range, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);
  }
  this.quill.setSelection(range.index, _quill2.default.sources.SILENT);
  this.quill.focus();
}

function handleEnter(range, context) {
  var _this3 = this;

  if (range.length > 0) {
    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change
  }
  var lineFormats = Object.keys(context.format).reduce(function (lineFormats, format) {
    if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {
      lineFormats[format] = context.format[format];
    }
    return lineFormats;
  }, {});
  this.quill.insertText(range.index, '\n', lineFormats, _quill2.default.sources.USER);
  // Earlier scroll.deleteAt might have messed up our selection,
  // so insertText's built in selection preservation is not reliable
  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
  this.quill.focus();
  Object.keys(context.format).forEach(function (name) {
    if (lineFormats[name] != null) return;
    if (Array.isArray(context.format[name])) return;
    if (name === 'link') return;
    _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);
  });
}

function makeCodeBlockHandler(indent) {
  return {
    key: Keyboard.keys.TAB,
    shiftKey: !indent,
    format: { 'code-block': true },
    handler: function handler(range) {
      var CodeBlock = _parchment2.default.query('code-block');
      var index = range.index,
          length = range.length;

      var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index),
          _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
          block = _quill$scroll$descend2[0],
          offset = _quill$scroll$descend2[1];

      if (block == null) return;
      var scrollIndex = this.quill.getIndex(block);
      var start = block.newlineIndex(offset, true) + 1;
      var end = block.newlineIndex(scrollIndex + offset + length);
      var lines = block.domNode.textContent.slice(start, end).split('\n');
      offset = 0;
      lines.forEach(function (line, i) {
        if (indent) {
          block.insertAt(start + offset, CodeBlock.TAB);
          offset += CodeBlock.TAB.length;
          if (i === 0) {
            index += CodeBlock.TAB.length;
          } else {
            length += CodeBlock.TAB.length;
          }
        } else if (line.startsWith(CodeBlock.TAB)) {
          block.deleteAt(start + offset, CodeBlock.TAB.length);
          offset -= CodeBlock.TAB.length;
          if (i === 0) {
            index -= CodeBlock.TAB.length;
          } else {
            length -= CodeBlock.TAB.length;
          }
        }
        offset += line.length + 1;
      });
      this.quill.update(_quill2.default.sources.USER);
      this.quill.setSelection(index, length, _quill2.default.sources.SILENT);
    }
  };
}

function makeFormatHandler(format) {
  return {
    key: format[0].toUpperCase(),
    shortKey: true,
    handler: function handler(range, context) {
      this.quill.format(format, !context.format[format], _quill2.default.sources.USER);
    }
  };
}

function normalize(binding) {
  if (typeof binding === 'string' || typeof binding === 'number') {
    return normalize({ key: binding });
  }
  if ((typeof binding === 'undefined' ? 'undefined' : _typeof(binding)) === 'object') {
    binding = (0, _clone2.default)(binding, false);
  }
  if (typeof binding.key === 'string') {
    if (Keyboard.keys[binding.key.toUpperCase()] != null) {
      binding.key = Keyboard.keys[binding.key.toUpperCase()];
    } else if (binding.key.length === 1) {
      binding.key = binding.key.toUpperCase().charCodeAt(0);
    } else {
      return null;
    }
  }
  if (binding.shortKey) {
    binding[SHORTKEY] = binding.shortKey;
    delete binding.shortKey;
  }
  return binding;
}

exports.default = Keyboard;
exports.SHORTKEY = SHORTKEY;

/***/ }),
/* 24 */
/***/ (function(module, exports, __nested_webpack_require_181454__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __nested_webpack_require_181454__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _text = __nested_webpack_require_181454__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Cursor = function (_Parchment$Embed) {
  _inherits(Cursor, _Parchment$Embed);

  _createClass(Cursor, null, [{
    key: 'value',
    value: function value() {
      return undefined;
    }
  }]);

  function Cursor(domNode, selection) {
    _classCallCheck(this, Cursor);

    var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));

    _this.selection = selection;
    _this.textNode = document.createTextNode(Cursor.CONTENTS);
    _this.domNode.appendChild(_this.textNode);
    _this._length = 0;
    return _this;
  }

  _createClass(Cursor, [{
    key: 'detach',
    value: function detach() {
      // super.detach() will also clear domNode.__blot
      if (this.parent != null) this.parent.removeChild(this);
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      if (this._length !== 0) {
        return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'format', this).call(this, name, value);
      }
      var target = this,
          index = 0;
      while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {
        index += target.offset(target.parent);
        target = target.parent;
      }
      if (target != null) {
        this._length = Cursor.CONTENTS.length;
        target.optimize();
        target.formatAt(index, Cursor.CONTENTS.length, name, value);
        this._length = 0;
      }
    }
  }, {
    key: 'index',
    value: function index(node, offset) {
      if (node === this.textNode) return 0;
      return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'index', this).call(this, node, offset);
    }
  }, {
    key: 'length',
    value: function length() {
      return this._length;
    }
  }, {
    key: 'position',
    value: function position() {
      return [this.textNode, this.textNode.data.length];
    }
  }, {
    key: 'remove',
    value: function remove() {
      _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'remove', this).call(this);
      this.parent = null;
    }
  }, {
    key: 'restore',
    value: function restore() {
      if (this.selection.composing || this.parent == null) return;
      var textNode = this.textNode;
      var range = this.selection.getNativeRange();
      var restoreText = void 0,
          start = void 0,
          end = void 0;
      if (range != null && range.start.node === textNode && range.end.node === textNode) {
        var _ref = [textNode, range.start.offset, range.end.offset];
        restoreText = _ref[0];
        start = _ref[1];
        end = _ref[2];
      }
      // Link format will insert text outside of anchor tag
      while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
      }
      if (this.textNode.data !== Cursor.CONTENTS) {
        var text = this.textNode.data.split(Cursor.CONTENTS).join('');
        if (this.next instanceof _text2.default) {
          restoreText = this.next.domNode;
          this.next.insertAt(0, text);
          this.textNode.data = Cursor.CONTENTS;
        } else {
          this.textNode.data = text;
          this.parent.insertBefore(_parchment2.default.create(this.textNode), this);
          this.textNode = document.createTextNode(Cursor.CONTENTS);
          this.domNode.appendChild(this.textNode);
        }
      }
      this.remove();
      if (start != null) {
        var _map = [start, end].map(function (offset) {
          return Math.max(0, Math.min(restoreText.data.length, offset - 1));
        });

        var _map2 = _slicedToArray(_map, 2);

        start = _map2[0];
        end = _map2[1];

        return {
          startNode: restoreText,
          startOffset: start,
          endNode: restoreText,
          endOffset: end
        };
      }
    }
  }, {
    key: 'update',
    value: function update(mutations, context) {
      var _this2 = this;

      if (mutations.some(function (mutation) {
        return mutation.type === 'characterData' && mutation.target === _this2.textNode;
      })) {
        var range = this.restore();
        if (range) context.range = range;
      }
    }
  }, {
    key: 'value',
    value: function value() {
      return '';
    }
  }]);

  return Cursor;
}(_parchment2.default.Embed);

Cursor.blotName = 'cursor';
Cursor.className = 'ql-cursor';
Cursor.tagName = 'span';
Cursor.CONTENTS = '\uFEFF'; // Zero width no break space


exports.default = Cursor;

/***/ }),
/* 25 */
/***/ (function(module, exports, __nested_webpack_require_189100__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __nested_webpack_require_189100__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __nested_webpack_require_189100__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_Parchment$Container) {
  _inherits(Container, _Parchment$Container);

  function Container() {
    _classCallCheck(this, Container);

    return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
  }

  return Container;
}(_parchment2.default.Container);

Container.allowedChildren = [_block2.default, _block.BlockEmbed, Container];

exports.default = Container;

/***/ }),
/* 26 */
/***/ (function(module, exports, __nested_webpack_require_190886__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_190886__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorAttributor = function (_Parchment$Attributor) {
  _inherits(ColorAttributor, _Parchment$Attributor);

  function ColorAttributor() {
    _classCallCheck(this, ColorAttributor);

    return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));
  }

  _createClass(ColorAttributor, [{
    key: 'value',
    value: function value(domNode) {
      var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), 'value', this).call(this, domNode);
      if (!value.startsWith('rgb(')) return value;
      value = value.replace(/^[^\d]+/, '').replace(/[^\d]+$/, '');
      return '#' + value.split(',').map(function (component) {
        return ('00' + parseInt(component).toString(16)).slice(-2);
      }).join('');
    }
  }]);

  return ColorAttributor;
}(_parchment2.default.Attributor.Style);

var ColorClass = new _parchment2.default.Attributor.Class('color', 'ql-color', {
  scope: _parchment2.default.Scope.INLINE
});
var ColorStyle = new ColorAttributor('color', 'color', {
  scope: _parchment2.default.Scope.INLINE
});

exports.ColorAttributor = ColorAttributor;
exports.ColorClass = ColorClass;
exports.ColorStyle = ColorStyle;

/***/ }),
/* 27 */
/***/ (function(module, exports, __nested_webpack_require_194529__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanitize = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __nested_webpack_require_194529__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Link = function (_Inline) {
  _inherits(Link, _Inline);

  function Link() {
    _classCallCheck(this, Link);

    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
  }

  _createClass(Link, [{
    key: 'format',
    value: function format(name, value) {
      if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), 'format', this).call(this, name, value);
      value = this.constructor.sanitize(value);
      this.domNode.setAttribute('href', value);
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), 'create', this).call(this, value);
      value = this.sanitize(value);
      node.setAttribute('href', value);
      node.setAttribute('rel', 'noopener noreferrer');
      node.setAttribute('target', '_blank');
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return domNode.getAttribute('href');
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
    }
  }]);

  return Link;
}(_inline2.default);

Link.blotName = 'link';
Link.tagName = 'A';
Link.SANITIZED_URL = 'about:blank';
Link.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];

function _sanitize(url, protocols) {
  var anchor = document.createElement('a');
  anchor.href = url;
  var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
  return protocols.indexOf(protocol) > -1;
}

exports.default = Link;
exports.sanitize = _sanitize;

/***/ }),
/* 28 */
/***/ (function(module, exports, __nested_webpack_require_198559__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _keyboard = __nested_webpack_require_198559__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

var _dropdown = __nested_webpack_require_198559__(107);

var _dropdown2 = _interopRequireDefault(_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var optionsCounter = 0;

function toggleAriaAttribute(element, attribute) {
  element.setAttribute(attribute, !(element.getAttribute(attribute) === 'true'));
}

var Picker = function () {
  function Picker(select) {
    var _this = this;

    _classCallCheck(this, Picker);

    this.select = select;
    this.container = document.createElement('span');
    this.buildPicker();
    this.select.style.display = 'none';
    this.select.parentNode.insertBefore(this.container, this.select);

    this.label.addEventListener('mousedown', function () {
      _this.togglePicker();
    });
    this.label.addEventListener('keydown', function (event) {
      switch (event.keyCode) {
        // Allows the "Enter" key to open the picker
        case _keyboard2.default.keys.ENTER:
          _this.togglePicker();
          break;

        // Allows the "Escape" key to close the picker
        case _keyboard2.default.keys.ESCAPE:
          _this.escape();
          event.preventDefault();
          break;
        default:
      }
    });
    this.select.addEventListener('change', this.update.bind(this));
  }

  _createClass(Picker, [{
    key: 'togglePicker',
    value: function togglePicker() {
      this.container.classList.toggle('ql-expanded');
      // Toggle aria-expanded and aria-hidden to make the picker accessible
      toggleAriaAttribute(this.label, 'aria-expanded');
      toggleAriaAttribute(this.options, 'aria-hidden');
    }
  }, {
    key: 'buildItem',
    value: function buildItem(option) {
      var _this2 = this;

      var item = document.createElement('span');
      item.tabIndex = '0';
      item.setAttribute('role', 'button');

      item.classList.add('ql-picker-item');
      if (option.hasAttribute('value')) {
        item.setAttribute('data-value', option.getAttribute('value'));
      }
      if (option.textContent) {
        item.setAttribute('data-label', option.textContent);
      }
      item.addEventListener('click', function () {
        _this2.selectItem(item, true);
      });
      item.addEventListener('keydown', function (event) {
        switch (event.keyCode) {
          // Allows the "Enter" key to select an item
          case _keyboard2.default.keys.ENTER:
            _this2.selectItem(item, true);
            event.preventDefault();
            break;

          // Allows the "Escape" key to close the picker
          case _keyboard2.default.keys.ESCAPE:
            _this2.escape();
            event.preventDefault();
            break;
          default:
        }
      });

      return item;
    }
  }, {
    key: 'buildLabel',
    value: function buildLabel() {
      var label = document.createElement('span');
      label.classList.add('ql-picker-label');
      label.innerHTML = _dropdown2.default;
      label.tabIndex = '0';
      label.setAttribute('role', 'button');
      label.setAttribute('aria-expanded', 'false');
      this.container.appendChild(label);
      return label;
    }
  }, {
    key: 'buildOptions',
    value: function buildOptions() {
      var _this3 = this;

      var options = document.createElement('span');
      options.classList.add('ql-picker-options');

      // Don't want screen readers to read this until options are visible
      options.setAttribute('aria-hidden', 'true');
      options.tabIndex = '-1';

      // Need a unique id for aria-controls
      options.id = 'ql-picker-options-' + optionsCounter;
      optionsCounter += 1;
      this.label.setAttribute('aria-controls', options.id);

      this.options = options;

      [].slice.call(this.select.options).forEach(function (option) {
        var item = _this3.buildItem(option);
        options.appendChild(item);
        if (option.selected === true) {
          _this3.selectItem(item);
        }
      });
      this.container.appendChild(options);
    }
  }, {
    key: 'buildPicker',
    value: function buildPicker() {
      var _this4 = this;

      [].slice.call(this.select.attributes).forEach(function (item) {
        _this4.container.setAttribute(item.name, item.value);
      });
      this.container.classList.add('ql-picker');
      this.label = this.buildLabel();
      this.buildOptions();
    }
  }, {
    key: 'escape',
    value: function escape() {
      var _this5 = this;

      // Close menu and return focus to trigger label
      this.close();
      // Need setTimeout for accessibility to ensure that the browser executes
      // focus on the next process thread and after any DOM content changes
      setTimeout(function () {
        return _this5.label.focus();
      }, 1);
    }
  }, {
    key: 'close',
    value: function close() {
      this.container.classList.remove('ql-expanded');
      this.label.setAttribute('aria-expanded', 'false');
      this.options.setAttribute('aria-hidden', 'true');
    }
  }, {
    key: 'selectItem',
    value: function selectItem(item) {
      var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var selected = this.container.querySelector('.ql-selected');
      if (item === selected) return;
      if (selected != null) {
        selected.classList.remove('ql-selected');
      }
      if (item == null) return;
      item.classList.add('ql-selected');
      this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);
      if (item.hasAttribute('data-value')) {
        this.label.setAttribute('data-value', item.getAttribute('data-value'));
      } else {
        this.label.removeAttribute('data-value');
      }
      if (item.hasAttribute('data-label')) {
        this.label.setAttribute('data-label', item.getAttribute('data-label'));
      } else {
        this.label.removeAttribute('data-label');
      }
      if (trigger) {
        if (typeof Event === 'function') {
          this.select.dispatchEvent(new Event('change'));
        } else if ((typeof Event === 'undefined' ? 'undefined' : _typeof(Event)) === 'object') {
          // IE11
          var event = document.createEvent('Event');
          event.initEvent('change', true, true);
          this.select.dispatchEvent(event);
        }
        this.close();
      }
    }
  }, {
    key: 'update',
    value: function update() {
      var option = void 0;
      if (this.select.selectedIndex > -1) {
        var item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];
        option = this.select.options[this.select.selectedIndex];
        this.selectItem(item);
      } else {
        this.selectItem(null);
      }
      var isActive = option != null && option !== this.select.querySelector('option[selected]');
      this.label.classList.toggle('ql-active', isActive);
    }
  }]);

  return Picker;
}();

exports.default = Picker;

/***/ }),
/* 29 */
/***/ (function(module, exports, __nested_webpack_require_206753__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __nested_webpack_require_206753__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_206753__(5);

var _quill2 = _interopRequireDefault(_quill);

var _block = __nested_webpack_require_206753__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __nested_webpack_require_206753__(16);

var _break2 = _interopRequireDefault(_break);

var _container = __nested_webpack_require_206753__(25);

var _container2 = _interopRequireDefault(_container);

var _cursor = __nested_webpack_require_206753__(24);

var _cursor2 = _interopRequireDefault(_cursor);

var _embed = __nested_webpack_require_206753__(35);

var _embed2 = _interopRequireDefault(_embed);

var _inline = __nested_webpack_require_206753__(6);

var _inline2 = _interopRequireDefault(_inline);

var _scroll = __nested_webpack_require_206753__(22);

var _scroll2 = _interopRequireDefault(_scroll);

var _text = __nested_webpack_require_206753__(7);

var _text2 = _interopRequireDefault(_text);

var _clipboard = __nested_webpack_require_206753__(55);

var _clipboard2 = _interopRequireDefault(_clipboard);

var _history = __nested_webpack_require_206753__(42);

var _history2 = _interopRequireDefault(_history);

var _keyboard = __nested_webpack_require_206753__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_quill2.default.register({
  'blots/block': _block2.default,
  'blots/block/embed': _block.BlockEmbed,
  'blots/break': _break2.default,
  'blots/container': _container2.default,
  'blots/cursor': _cursor2.default,
  'blots/embed': _embed2.default,
  'blots/inline': _inline2.default,
  'blots/scroll': _scroll2.default,
  'blots/text': _text2.default,

  'modules/clipboard': _clipboard2.default,
  'modules/history': _history2.default,
  'modules/keyboard': _keyboard2.default
});

_parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);

exports.default = _quill2.default;

/***/ }),
/* 30 */
/***/ (function(module, exports, __nested_webpack_require_208833__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __nested_webpack_require_208833__(1);
var ShadowBlot = /** @class */ (function () {
    function ShadowBlot(domNode) {
        this.domNode = domNode;
        // @ts-ignore
        this.domNode[Registry.DATA_KEY] = { blot: this };
    }
    Object.defineProperty(ShadowBlot.prototype, "statics", {
        // Hack for accessing inherited static methods
        get: function () {
            return this.constructor;
        },
        enumerable: true,
        configurable: true
    });
    ShadowBlot.create = function (value) {
        if (this.tagName == null) {
            throw new Registry.ParchmentError('Blot definition missing tagName');
        }
        var node;
        if (Array.isArray(this.tagName)) {
            if (typeof value === 'string') {
                value = value.toUpperCase();
                if (parseInt(value).toString() === value) {
                    value = parseInt(value);
                }
            }
            if (typeof value === 'number') {
                node = document.createElement(this.tagName[value - 1]);
            }
            else if (this.tagName.indexOf(value) > -1) {
                node = document.createElement(value);
            }
            else {
                node = document.createElement(this.tagName[0]);
            }
        }
        else {
            node = document.createElement(this.tagName);
        }
        if (this.className) {
            node.classList.add(this.className);
        }
        return node;
    };
    ShadowBlot.prototype.attach = function () {
        if (this.parent != null) {
            this.scroll = this.parent.scroll;
        }
    };
    ShadowBlot.prototype.clone = function () {
        var domNode = this.domNode.cloneNode(false);
        return Registry.create(domNode);
    };
    ShadowBlot.prototype.detach = function () {
        if (this.parent != null)
            this.parent.removeChild(this);
        // @ts-ignore
        delete this.domNode[Registry.DATA_KEY];
    };
    ShadowBlot.prototype.deleteAt = function (index, length) {
        var blot = this.isolate(index, length);
        blot.remove();
    };
    ShadowBlot.prototype.formatAt = function (index, length, name, value) {
        var blot = this.isolate(index, length);
        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
            blot.wrap(name, value);
        }
        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
            var parent = Registry.create(this.statics.scope);
            blot.wrap(parent);
            parent.format(name, value);
        }
    };
    ShadowBlot.prototype.insertAt = function (index, value, def) {
        var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
        var ref = this.split(index);
        this.parent.insertBefore(blot, ref);
    };
    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {
        if (refBlot === void 0) { refBlot = null; }
        if (this.parent != null) {
            this.parent.children.remove(this);
        }
        var refDomNode = null;
        parentBlot.children.insertBefore(this, refBlot);
        if (refBlot != null) {
            refDomNode = refBlot.domNode;
        }
        if (this.domNode.parentNode != parentBlot.domNode ||
            this.domNode.nextSibling != refDomNode) {
            parentBlot.domNode.insertBefore(this.domNode, refDomNode);
        }
        this.parent = parentBlot;
        this.attach();
    };
    ShadowBlot.prototype.isolate = function (index, length) {
        var target = this.split(index);
        target.split(length);
        return target;
    };
    ShadowBlot.prototype.length = function () {
        return 1;
    };
    ShadowBlot.prototype.offset = function (root) {
        if (root === void 0) { root = this.parent; }
        if (this.parent == null || this == root)
            return 0;
        return this.parent.children.offset(this) + this.parent.offset(root);
    };
    ShadowBlot.prototype.optimize = function (context) {
        // TODO clean up once we use WeakMap
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY] != null) {
            // @ts-ignore
            delete this.domNode[Registry.DATA_KEY].mutations;
        }
    };
    ShadowBlot.prototype.remove = function () {
        if (this.domNode.parentNode != null) {
            this.domNode.parentNode.removeChild(this.domNode);
        }
        this.detach();
    };
    ShadowBlot.prototype.replace = function (target) {
        if (target.parent == null)
            return;
        target.parent.insertBefore(this, target.next);
        target.remove();
    };
    ShadowBlot.prototype.replaceWith = function (name, value) {
        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;
        replacement.replace(this);
        return replacement;
    };
    ShadowBlot.prototype.split = function (index, force) {
        return index === 0 ? this : this.next;
    };
    ShadowBlot.prototype.update = function (mutations, context) {
        // Nothing to do by default
    };
    ShadowBlot.prototype.wrap = function (name, value) {
        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;
        if (this.parent != null) {
            this.parent.insertBefore(wrapper, this.next);
        }
        wrapper.appendChild(this);
        return wrapper;
    };
    ShadowBlot.blotName = 'abstract';
    return ShadowBlot;
}());
exports.default = ShadowBlot;


/***/ }),
/* 31 */
/***/ (function(module, exports, __nested_webpack_require_214530__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_214530__(12);
var class_1 = __nested_webpack_require_214530__(32);
var style_1 = __nested_webpack_require_214530__(33);
var Registry = __nested_webpack_require_214530__(1);
var AttributorStore = /** @class */ (function () {
    function AttributorStore(domNode) {
        this.attributes = {};
        this.domNode = domNode;
        this.build();
    }
    AttributorStore.prototype.attribute = function (attribute, value) {
        // verb
        if (value) {
            if (attribute.add(this.domNode, value)) {
                if (attribute.value(this.domNode) != null) {
                    this.attributes[attribute.attrName] = attribute;
                }
                else {
                    delete this.attributes[attribute.attrName];
                }
            }
        }
        else {
            attribute.remove(this.domNode);
            delete this.attributes[attribute.attrName];
        }
    };
    AttributorStore.prototype.build = function () {
        var _this = this;
        this.attributes = {};
        var attributes = attributor_1.default.keys(this.domNode);
        var classes = class_1.default.keys(this.domNode);
        var styles = style_1.default.keys(this.domNode);
        attributes
            .concat(classes)
            .concat(styles)
            .forEach(function (name) {
            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
            if (attr instanceof attributor_1.default) {
                _this.attributes[attr.attrName] = attr;
            }
        });
    };
    AttributorStore.prototype.copy = function (target) {
        var _this = this;
        Object.keys(this.attributes).forEach(function (key) {
            var value = _this.attributes[key].value(_this.domNode);
            target.format(key, value);
        });
    };
    AttributorStore.prototype.move = function (target) {
        var _this = this;
        this.copy(target);
        Object.keys(this.attributes).forEach(function (key) {
            _this.attributes[key].remove(_this.domNode);
        });
        this.attributes = {};
    };
    AttributorStore.prototype.values = function () {
        var _this = this;
        return Object.keys(this.attributes).reduce(function (attributes, name) {
            attributes[name] = _this.attributes[name].value(_this.domNode);
            return attributes;
        }, {});
    };
    return AttributorStore;
}());
exports.default = AttributorStore;


/***/ }),
/* 32 */
/***/ (function(module, exports, __nested_webpack_require_217128__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_217128__(12);
function match(node, prefix) {
    var className = node.getAttribute('class') || '';
    return className.split(/\s+/).filter(function (name) {
        return name.indexOf(prefix + "-") === 0;
    });
}
var ClassAttributor = /** @class */ (function (_super) {
    __extends(ClassAttributor, _super);
    function ClassAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClassAttributor.keys = function (node) {
        return (node.getAttribute('class') || '').split(/\s+/).map(function (name) {
            return name
                .split('-')
                .slice(0, -1)
                .join('-');
        });
    };
    ClassAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        this.remove(node);
        node.classList.add(this.keyName + "-" + value);
        return true;
    };
    ClassAttributor.prototype.remove = function (node) {
        var matches = match(node, this.keyName);
        matches.forEach(function (name) {
            node.classList.remove(name);
        });
        if (node.classList.length === 0) {
            node.removeAttribute('class');
        }
    };
    ClassAttributor.prototype.value = function (node) {
        var result = match(node, this.keyName)[0] || '';
        var value = result.slice(this.keyName.length + 1); // +1 for hyphen
        return this.canAdd(node, value) ? value : '';
    };
    return ClassAttributor;
}(attributor_1.default));
exports.default = ClassAttributor;


/***/ }),
/* 33 */
/***/ (function(module, exports, __nested_webpack_require_219372__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __nested_webpack_require_219372__(12);
function camelize(name) {
    var parts = name.split('-');
    var rest = parts
        .slice(1)
        .map(function (part) {
        return part[0].toUpperCase() + part.slice(1);
    })
        .join('');
    return parts[0] + rest;
}
var StyleAttributor = /** @class */ (function (_super) {
    __extends(StyleAttributor, _super);
    function StyleAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StyleAttributor.keys = function (node) {
        return (node.getAttribute('style') || '').split(';').map(function (value) {
            var arr = value.split(':');
            return arr[0].trim();
        });
    };
    StyleAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        // @ts-ignore
        node.style[camelize(this.keyName)] = value;
        return true;
    };
    StyleAttributor.prototype.remove = function (node) {
        // @ts-ignore
        node.style[camelize(this.keyName)] = '';
        if (!node.getAttribute('style')) {
            node.removeAttribute('style');
        }
    };
    StyleAttributor.prototype.value = function (node) {
        // @ts-ignore
        var value = node.style[camelize(this.keyName)];
        return this.canAdd(node, value) ? value : '';
    };
    return StyleAttributor;
}(attributor_1.default));
exports.default = StyleAttributor;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Theme = function () {
  function Theme(quill, options) {
    _classCallCheck(this, Theme);

    this.quill = quill;
    this.options = options;
    this.modules = {};
  }

  _createClass(Theme, [{
    key: 'init',
    value: function init() {
      var _this = this;

      Object.keys(this.options.modules).forEach(function (name) {
        if (_this.modules[name] == null) {
          _this.addModule(name);
        }
      });
    }
  }, {
    key: 'addModule',
    value: function addModule(name) {
      var moduleClass = this.quill.constructor.import('modules/' + name);
      this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
      return this.modules[name];
    }
  }]);

  return Theme;
}();

Theme.DEFAULTS = {
  modules: {}
};
Theme.themes = {
  'default': Theme
};

exports.default = Theme;

/***/ }),
/* 35 */
/***/ (function(module, exports, __nested_webpack_require_223199__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_223199__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _text = __nested_webpack_require_223199__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GUARD_TEXT = '\uFEFF';

var Embed = function (_Parchment$Embed) {
  _inherits(Embed, _Parchment$Embed);

  function Embed(node) {
    _classCallCheck(this, Embed);

    var _this = _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(this, node));

    _this.contentNode = document.createElement('span');
    _this.contentNode.setAttribute('contenteditable', false);
    [].slice.call(_this.domNode.childNodes).forEach(function (childNode) {
      _this.contentNode.appendChild(childNode);
    });
    _this.leftGuard = document.createTextNode(GUARD_TEXT);
    _this.rightGuard = document.createTextNode(GUARD_TEXT);
    _this.domNode.appendChild(_this.leftGuard);
    _this.domNode.appendChild(_this.contentNode);
    _this.domNode.appendChild(_this.rightGuard);
    return _this;
  }

  _createClass(Embed, [{
    key: 'index',
    value: function index(node, offset) {
      if (node === this.leftGuard) return 0;
      if (node === this.rightGuard) return 1;
      return _get(Embed.prototype.__proto__ || Object.getPrototypeOf(Embed.prototype), 'index', this).call(this, node, offset);
    }
  }, {
    key: 'restore',
    value: function restore(node) {
      var range = void 0,
          textNode = void 0;
      var text = node.data.split(GUARD_TEXT).join('');
      if (node === this.leftGuard) {
        if (this.prev instanceof _text2.default) {
          var prevLength = this.prev.length();
          this.prev.insertAt(prevLength, text);
          range = {
            startNode: this.prev.domNode,
            startOffset: prevLength + text.length
          };
        } else {
          textNode = document.createTextNode(text);
          this.parent.insertBefore(_parchment2.default.create(textNode), this);
          range = {
            startNode: textNode,
            startOffset: text.length
          };
        }
      } else if (node === this.rightGuard) {
        if (this.next instanceof _text2.default) {
          this.next.insertAt(0, text);
          range = {
            startNode: this.next.domNode,
            startOffset: text.length
          };
        } else {
          textNode = document.createTextNode(text);
          this.parent.insertBefore(_parchment2.default.create(textNode), this.next);
          range = {
            startNode: textNode,
            startOffset: text.length
          };
        }
      }
      node.data = GUARD_TEXT;
      return range;
    }
  }, {
    key: 'update',
    value: function update(mutations, context) {
      var _this2 = this;

      mutations.forEach(function (mutation) {
        if (mutation.type === 'characterData' && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
          var range = _this2.restore(mutation.target);
          if (range) context.range = range;
        }
      });
    }
  }]);

  return Embed;
}(_parchment2.default.Embed);

exports.default = Embed;

/***/ }),
/* 36 */
/***/ (function(module, exports, __nested_webpack_require_228527__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;

var _parchment = __nested_webpack_require_228527__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var config = {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: ['right', 'center', 'justify']
};

var AlignAttribute = new _parchment2.default.Attributor.Attribute('align', 'align', config);
var AlignClass = new _parchment2.default.Attributor.Class('align', 'ql-align', config);
var AlignStyle = new _parchment2.default.Attributor.Style('align', 'text-align', config);

exports.AlignAttribute = AlignAttribute;
exports.AlignClass = AlignClass;
exports.AlignStyle = AlignStyle;

/***/ }),
/* 37 */
/***/ (function(module, exports, __nested_webpack_require_229442__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BackgroundStyle = exports.BackgroundClass = undefined;

var _parchment = __nested_webpack_require_229442__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _color = __nested_webpack_require_229442__(26);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BackgroundClass = new _parchment2.default.Attributor.Class('background', 'ql-bg', {
  scope: _parchment2.default.Scope.INLINE
});
var BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {
  scope: _parchment2.default.Scope.INLINE
});

exports.BackgroundClass = BackgroundClass;
exports.BackgroundStyle = BackgroundStyle;

/***/ }),
/* 38 */
/***/ (function(module, exports, __nested_webpack_require_230249__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;

var _parchment = __nested_webpack_require_230249__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var config = {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: ['rtl']
};

var DirectionAttribute = new _parchment2.default.Attributor.Attribute('direction', 'dir', config);
var DirectionClass = new _parchment2.default.Attributor.Class('direction', 'ql-direction', config);
var DirectionStyle = new _parchment2.default.Attributor.Style('direction', 'direction', config);

exports.DirectionAttribute = DirectionAttribute;
exports.DirectionClass = DirectionClass;
exports.DirectionStyle = DirectionStyle;

/***/ }),
/* 39 */
/***/ (function(module, exports, __nested_webpack_require_231202__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FontClass = exports.FontStyle = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_231202__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var config = {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['serif', 'monospace']
};

var FontClass = new _parchment2.default.Attributor.Class('font', 'ql-font', config);

var FontStyleAttributor = function (_Parchment$Attributor) {
  _inherits(FontStyleAttributor, _Parchment$Attributor);

  function FontStyleAttributor() {
    _classCallCheck(this, FontStyleAttributor);

    return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));
  }

  _createClass(FontStyleAttributor, [{
    key: 'value',
    value: function value(node) {
      return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), 'value', this).call(this, node).replace(/["']/g, '');
    }
  }]);

  return FontStyleAttributor;
}(_parchment2.default.Attributor.Style);

var FontStyle = new FontStyleAttributor('font', 'font-family', config);

exports.FontStyle = FontStyle;
exports.FontClass = FontClass;

/***/ }),
/* 40 */
/***/ (function(module, exports, __nested_webpack_require_234578__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizeStyle = exports.SizeClass = undefined;

var _parchment = __nested_webpack_require_234578__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SizeClass = new _parchment2.default.Attributor.Class('size', 'ql-size', {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['small', 'large', 'huge']
});
var SizeStyle = new _parchment2.default.Attributor.Style('size', 'font-size', {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['10px', '18px', '32px']
});

exports.SizeClass = SizeClass;
exports.SizeStyle = SizeStyle;

/***/ }),
/* 41 */
/***/ (function(module, exports, __nested_webpack_require_235375__) {

"use strict";


module.exports = {
  'align': {
    '': __nested_webpack_require_235375__(76),
    'center': __nested_webpack_require_235375__(77),
    'right': __nested_webpack_require_235375__(78),
    'justify': __nested_webpack_require_235375__(79)
  },
  'background': __nested_webpack_require_235375__(80),
  'blockquote': __nested_webpack_require_235375__(81),
  'bold': __nested_webpack_require_235375__(82),
  'clean': __nested_webpack_require_235375__(83),
  'code': __nested_webpack_require_235375__(58),
  'code-block': __nested_webpack_require_235375__(58),
  'color': __nested_webpack_require_235375__(84),
  'direction': {
    '': __nested_webpack_require_235375__(85),
    'rtl': __nested_webpack_require_235375__(86)
  },
  'float': {
    'center': __nested_webpack_require_235375__(87),
    'full': __nested_webpack_require_235375__(88),
    'left': __nested_webpack_require_235375__(89),
    'right': __nested_webpack_require_235375__(90)
  },
  'formula': __nested_webpack_require_235375__(91),
  'header': {
    '1': __nested_webpack_require_235375__(92),
    '2': __nested_webpack_require_235375__(93)
  },
  'italic': __nested_webpack_require_235375__(94),
  'image': __nested_webpack_require_235375__(95),
  'indent': {
    '+1': __nested_webpack_require_235375__(96),
    '-1': __nested_webpack_require_235375__(97)
  },
  'link': __nested_webpack_require_235375__(98),
  'list': {
    'ordered': __nested_webpack_require_235375__(99),
    'bullet': __nested_webpack_require_235375__(100),
    'check': __nested_webpack_require_235375__(101)
  },
  'script': {
    'sub': __nested_webpack_require_235375__(102),
    'super': __nested_webpack_require_235375__(103)
  },
  'strike': __nested_webpack_require_235375__(104),
  'underline': __nested_webpack_require_235375__(105),
  'video': __nested_webpack_require_235375__(106)
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __nested_webpack_require_236844__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLastChangeIndex = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __nested_webpack_require_236844__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_236844__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __nested_webpack_require_236844__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var History = function (_Module) {
  _inherits(History, _Module);

  function History(quill, options) {
    _classCallCheck(this, History);

    var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));

    _this.lastRecorded = 0;
    _this.ignoreChange = false;
    _this.clear();
    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {
      if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange) return;
      if (!_this.options.userOnly || source === _quill2.default.sources.USER) {
        _this.record(delta, oldDelta);
      } else {
        _this.transform(delta);
      }
    });
    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true }, _this.undo.bind(_this));
    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true, shiftKey: true }, _this.redo.bind(_this));
    if (/Win/i.test(navigator.platform)) {
      _this.quill.keyboard.addBinding({ key: 'Y', shortKey: true }, _this.redo.bind(_this));
    }
    return _this;
  }

  _createClass(History, [{
    key: 'change',
    value: function change(source, dest) {
      if (this.stack[source].length === 0) return;
      var delta = this.stack[source].pop();
      this.stack[dest].push(delta);
      this.lastRecorded = 0;
      this.ignoreChange = true;
      this.quill.updateContents(delta[source], _quill2.default.sources.USER);
      this.ignoreChange = false;
      var index = getLastChangeIndex(delta[source]);
      this.quill.setSelection(index);
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.stack = { undo: [], redo: [] };
    }
  }, {
    key: 'cutoff',
    value: function cutoff() {
      this.lastRecorded = 0;
    }
  }, {
    key: 'record',
    value: function record(changeDelta, oldDelta) {
      if (changeDelta.ops.length === 0) return;
      this.stack.redo = [];
      var undoDelta = this.quill.getContents().diff(oldDelta);
      var timestamp = Date.now();
      if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
        var delta = this.stack.undo.pop();
        undoDelta = undoDelta.compose(delta.undo);
        changeDelta = delta.redo.compose(changeDelta);
      } else {
        this.lastRecorded = timestamp;
      }
      this.stack.undo.push({
        redo: changeDelta,
        undo: undoDelta
      });
      if (this.stack.undo.length > this.options.maxStack) {
        this.stack.undo.shift();
      }
    }
  }, {
    key: 'redo',
    value: function redo() {
      this.change('redo', 'undo');
    }
  }, {
    key: 'transform',
    value: function transform(delta) {
      this.stack.undo.forEach(function (change) {
        change.undo = delta.transform(change.undo, true);
        change.redo = delta.transform(change.redo, true);
      });
      this.stack.redo.forEach(function (change) {
        change.undo = delta.transform(change.undo, true);
        change.redo = delta.transform(change.redo, true);
      });
    }
  }, {
    key: 'undo',
    value: function undo() {
      this.change('undo', 'redo');
    }
  }]);

  return History;
}(_module2.default);

History.DEFAULTS = {
  delay: 1000,
  maxStack: 100,
  userOnly: false
};

function endsWithNewlineChange(delta) {
  var lastOp = delta.ops[delta.ops.length - 1];
  if (lastOp == null) return false;
  if (lastOp.insert != null) {
    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\n');
  }
  if (lastOp.attributes != null) {
    return Object.keys(lastOp.attributes).some(function (attr) {
      return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;
    });
  }
  return false;
}

function getLastChangeIndex(delta) {
  var deleteLength = delta.reduce(function (length, op) {
    length += op.delete || 0;
    return length;
  }, 0);
  var changeIndex = delta.length() - deleteLength;
  if (endsWithNewlineChange(delta)) {
    changeIndex -= 1;
  }
  return changeIndex;
}

exports.default = History;
exports.getLastChangeIndex = getLastChangeIndex;

/***/ }),
/* 43 */
/***/ (function(module, exports, __nested_webpack_require_242979__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BaseTooltip = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _extend = __nested_webpack_require_242979__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __nested_webpack_require_242979__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _emitter = __nested_webpack_require_242979__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _keyboard = __nested_webpack_require_242979__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

var _theme = __nested_webpack_require_242979__(34);

var _theme2 = _interopRequireDefault(_theme);

var _colorPicker = __nested_webpack_require_242979__(59);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _iconPicker = __nested_webpack_require_242979__(60);

var _iconPicker2 = _interopRequireDefault(_iconPicker);

var _picker = __nested_webpack_require_242979__(28);

var _picker2 = _interopRequireDefault(_picker);

var _tooltip = __nested_webpack_require_242979__(61);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ALIGNS = [false, 'center', 'right', 'justify'];

var COLORS = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];

var FONTS = [false, 'serif', 'monospace'];

var HEADERS = ['1', '2', '3', false];

var SIZES = ['small', false, 'large', 'huge'];

var BaseTheme = function (_Theme) {
  _inherits(BaseTheme, _Theme);

  function BaseTheme(quill, options) {
    _classCallCheck(this, BaseTheme);

    var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));

    var listener = function listener(e) {
      if (!document.body.contains(quill.root)) {
        return document.body.removeEventListener('click', listener);
      }
      if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
        _this.tooltip.hide();
      }
      if (_this.pickers != null) {
        _this.pickers.forEach(function (picker) {
          if (!picker.container.contains(e.target)) {
            picker.close();
          }
        });
      }
    };
    quill.emitter.listenDOM('click', document.body, listener);
    return _this;
  }

  _createClass(BaseTheme, [{
    key: 'addModule',
    value: function addModule(name) {
      var module = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), 'addModule', this).call(this, name);
      if (name === 'toolbar') {
        this.extendToolbar(module);
      }
      return module;
    }
  }, {
    key: 'buildButtons',
    value: function buildButtons(buttons, icons) {
      buttons.forEach(function (button) {
        var className = button.getAttribute('class') || '';
        className.split(/\s+/).forEach(function (name) {
          if (!name.startsWith('ql-')) return;
          name = name.slice('ql-'.length);
          if (icons[name] == null) return;
          if (name === 'direction') {
            button.innerHTML = icons[name][''] + icons[name]['rtl'];
          } else if (typeof icons[name] === 'string') {
            button.innerHTML = icons[name];
          } else {
            var value = button.value || '';
            if (value != null && icons[name][value]) {
              button.innerHTML = icons[name][value];
            }
          }
        });
      });
    }
  }, {
    key: 'buildPickers',
    value: function buildPickers(selects, icons) {
      var _this2 = this;

      this.pickers = selects.map(function (select) {
        if (select.classList.contains('ql-align')) {
          if (select.querySelector('option') == null) {
            fillSelect(select, ALIGNS);
          }
          return new _iconPicker2.default(select, icons.align);
        } else if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {
          var format = select.classList.contains('ql-background') ? 'background' : 'color';
          if (select.querySelector('option') == null) {
            fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');
          }
          return new _colorPicker2.default(select, icons[format]);
        } else {
          if (select.querySelector('option') == null) {
            if (select.classList.contains('ql-font')) {
              fillSelect(select, FONTS);
            } else if (select.classList.contains('ql-header')) {
              fillSelect(select, HEADERS);
            } else if (select.classList.contains('ql-size')) {
              fillSelect(select, SIZES);
            }
          }
          return new _picker2.default(select);
        }
      });
      var update = function update() {
        _this2.pickers.forEach(function (picker) {
          picker.update();
        });
      };
      this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);
    }
  }]);

  return BaseTheme;
}(_theme2.default);

BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        formula: function formula() {
          this.quill.theme.tooltip.edit('formula');
        },
        image: function image() {
          var _this3 = this;

          var fileInput = this.container.querySelector('input.ql-image[type=file]');
          if (fileInput == null) {
            fileInput = document.createElement('input');
            fileInput.setAttribute('type', 'file');
            fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
            fileInput.classList.add('ql-image');
            fileInput.addEventListener('change', function () {
              if (fileInput.files != null && fileInput.files[0] != null) {
                var reader = new FileReader();
                reader.onload = function (e) {
                  var range = _this3.quill.getSelection(true);
                  _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e.target.result }), _emitter2.default.sources.USER);
                  _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);
                  fileInput.value = "";
                };
                reader.readAsDataURL(fileInput.files[0]);
              }
            });
            this.container.appendChild(fileInput);
          }
          fileInput.click();
        },
        video: function video() {
          this.quill.theme.tooltip.edit('video');
        }
      }
    }
  }
});

var BaseTooltip = function (_Tooltip) {
  _inherits(BaseTooltip, _Tooltip);

  function BaseTooltip(quill, boundsContainer) {
    _classCallCheck(this, BaseTooltip);

    var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));

    _this4.textbox = _this4.root.querySelector('input[type="text"]');
    _this4.listen();
    return _this4;
  }

  _createClass(BaseTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this5 = this;

      this.textbox.addEventListener('keydown', function (event) {
        if (_keyboard2.default.match(event, 'enter')) {
          _this5.save();
          event.preventDefault();
        } else if (_keyboard2.default.match(event, 'escape')) {
          _this5.cancel();
          event.preventDefault();
        }
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.hide();
    }
  }, {
    key: 'edit',
    value: function edit() {
      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'link';
      var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      this.root.classList.remove('ql-hidden');
      this.root.classList.add('ql-editing');
      if (preview != null) {
        this.textbox.value = preview;
      } else if (mode !== this.root.getAttribute('data-mode')) {
        this.textbox.value = '';
      }
      this.position(this.quill.getBounds(this.quill.selection.savedRange));
      this.textbox.select();
      this.textbox.setAttribute('placeholder', this.textbox.getAttribute('data-' + mode) || '');
      this.root.setAttribute('data-mode', mode);
    }
  }, {
    key: 'restoreFocus',
    value: function restoreFocus() {
      var scrollTop = this.quill.scrollingContainer.scrollTop;
      this.quill.focus();
      this.quill.scrollingContainer.scrollTop = scrollTop;
    }
  }, {
    key: 'save',
    value: function save() {
      var value = this.textbox.value;
      switch (this.root.getAttribute('data-mode')) {
        case 'link':
          {
            var scrollTop = this.quill.root.scrollTop;
            if (this.linkRange) {
              this.quill.formatText(this.linkRange, 'link', value, _emitter2.default.sources.USER);
              delete this.linkRange;
            } else {
              this.restoreFocus();
              this.quill.format('link', value, _emitter2.default.sources.USER);
            }
            this.quill.root.scrollTop = scrollTop;
            break;
          }
        case 'video':
          {
            value = extractVideoUrl(value);
          } // eslint-disable-next-line no-fallthrough
        case 'formula':
          {
            if (!value) break;
            var range = this.quill.getSelection(true);
            if (range != null) {
              var index = range.index + range.length;
              this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2.default.sources.USER);
              if (this.root.getAttribute('data-mode') === 'formula') {
                this.quill.insertText(index + 1, ' ', _emitter2.default.sources.USER);
              }
              this.quill.setSelection(index + 2, _emitter2.default.sources.USER);
            }
            break;
          }
        default:
      }
      this.textbox.value = '';
      this.hide();
    }
  }]);

  return BaseTooltip;
}(_tooltip2.default);

function extractVideoUrl(url) {
  var match = url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);
  if (match) {
    return (match[1] || 'https') + '://www.youtube.com/embed/' + match[2] + '?showinfo=0';
  }
  if (match = url.match(/^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/)) {
    // eslint-disable-line no-cond-assign
    return (match[1] || 'https') + '://player.vimeo.com/video/' + match[2] + '/';
  }
  return url;
}

function fillSelect(select, values) {
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  values.forEach(function (value) {
    var option = document.createElement('option');
    if (value === defaultValue) {
      option.setAttribute('selected', 'selected');
    } else {
      option.setAttribute('value', value);
    }
    select.appendChild(option);
  });
}

exports.BaseTooltip = BaseTooltip;
exports.default = BaseTheme;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LinkedList = /** @class */ (function () {
    function LinkedList() {
        this.head = this.tail = null;
        this.length = 0;
    }
    LinkedList.prototype.append = function () {
        var nodes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
        }
        this.insertBefore(nodes[0], null);
        if (nodes.length > 1) {
            this.append.apply(this, nodes.slice(1));
        }
    };
    LinkedList.prototype.contains = function (node) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            if (cur === node)
                return true;
        }
        return false;
    };
    LinkedList.prototype.insertBefore = function (node, refNode) {
        if (!node)
            return;
        node.next = refNode;
        if (refNode != null) {
            node.prev = refNode.prev;
            if (refNode.prev != null) {
                refNode.prev.next = node;
            }
            refNode.prev = node;
            if (refNode === this.head) {
                this.head = node;
            }
        }
        else if (this.tail != null) {
            this.tail.next = node;
            node.prev = this.tail;
            this.tail = node;
        }
        else {
            node.prev = null;
            this.head = this.tail = node;
        }
        this.length += 1;
    };
    LinkedList.prototype.offset = function (target) {
        var index = 0, cur = this.head;
        while (cur != null) {
            if (cur === target)
                return index;
            index += cur.length();
            cur = cur.next;
        }
        return -1;
    };
    LinkedList.prototype.remove = function (node) {
        if (!this.contains(node))
            return;
        if (node.prev != null)
            node.prev.next = node.next;
        if (node.next != null)
            node.next.prev = node.prev;
        if (node === this.head)
            this.head = node.next;
        if (node === this.tail)
            this.tail = node.prev;
        this.length -= 1;
    };
    LinkedList.prototype.iterator = function (curNode) {
        if (curNode === void 0) { curNode = this.head; }
        // TODO use yield when we can
        return function () {
            var ret = curNode;
            if (curNode != null)
                curNode = curNode.next;
            return ret;
        };
    };
    LinkedList.prototype.find = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var cur, next = this.iterator();
        while ((cur = next())) {
            var length = cur.length();
            if (index < length ||
                (inclusive && index === length && (cur.next == null || cur.next.length() !== 0))) {
                return [cur, index];
            }
            index -= length;
        }
        return [null, 0];
    };
    LinkedList.prototype.forEach = function (callback) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            callback(cur);
        }
    };
    LinkedList.prototype.forEachAt = function (index, length, callback) {
        if (length <= 0)
            return;
        var _a = this.find(index), startNode = _a[0], offset = _a[1];
        var cur, curIndex = index - offset, next = this.iterator(startNode);
        while ((cur = next()) && curIndex < index + length) {
            var curLength = cur.length();
            if (index > curIndex) {
                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
            }
            else {
                callback(cur, 0, Math.min(curLength, index + length - curIndex));
            }
            curIndex += curLength;
        }
    };
    LinkedList.prototype.map = function (callback) {
        return this.reduce(function (memo, cur) {
            memo.push(callback(cur));
            return memo;
        }, []);
    };
    LinkedList.prototype.reduce = function (callback, memo) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            memo = callback(memo, cur);
        }
        return memo;
    };
    return LinkedList;
}());
exports.default = LinkedList;


/***/ }),
/* 45 */
/***/ (function(module, exports, __nested_webpack_require_260796__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __nested_webpack_require_260796__(17);
var Registry = __nested_webpack_require_260796__(1);
var OBSERVER_CONFIG = {
    attributes: true,
    characterData: true,
    characterDataOldValue: true,
    childList: true,
    subtree: true,
};
var MAX_OPTIMIZE_ITERATIONS = 100;
var ScrollBlot = /** @class */ (function (_super) {
    __extends(ScrollBlot, _super);
    function ScrollBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.scroll = _this;
        _this.observer = new MutationObserver(function (mutations) {
            _this.update(mutations);
        });
        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
        _this.attach();
        return _this;
    }
    ScrollBlot.prototype.detach = function () {
        _super.prototype.detach.call(this);
        this.observer.disconnect();
    };
    ScrollBlot.prototype.deleteAt = function (index, length) {
        this.update();
        if (index === 0 && length === this.length()) {
            this.children.forEach(function (child) {
                child.remove();
            });
        }
        else {
            _super.prototype.deleteAt.call(this, index, length);
        }
    };
    ScrollBlot.prototype.formatAt = function (index, length, name, value) {
        this.update();
        _super.prototype.formatAt.call(this, index, length, name, value);
    };
    ScrollBlot.prototype.insertAt = function (index, value, def) {
        this.update();
        _super.prototype.insertAt.call(this, index, value, def);
    };
    ScrollBlot.prototype.optimize = function (mutations, context) {
        var _this = this;
        if (mutations === void 0) { mutations = []; }
        if (context === void 0) { context = {}; }
        _super.prototype.optimize.call(this, context);
        // We must modify mutations directly, cannot make copy and then modify
        var records = [].slice.call(this.observer.takeRecords());
        // Array.push currently seems to be implemented by a non-tail recursive function
        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());
        while (records.length > 0)
            mutations.push(records.pop());
        // TODO use WeakMap
        var mark = function (blot, markParent) {
            if (markParent === void 0) { markParent = true; }
            if (blot == null || blot === _this)
                return;
            if (blot.domNode.parentNode == null)
                return;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [];
            }
            if (markParent)
                mark(blot.parent);
        };
        var optimize = function (blot) {
            // Post-order traversal
            if (
            // @ts-ignore
            blot.domNode[Registry.DATA_KEY] == null ||
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations == null) {
                return;
            }
            if (blot instanceof container_1.default) {
                blot.children.forEach(optimize);
            }
            blot.optimize(context);
        };
        var remaining = mutations;
        for (var i = 0; remaining.length > 0; i += 1) {
            if (i >= MAX_OPTIMIZE_ITERATIONS) {
                throw new Error('[Parchment] Maximum optimize iterations reached');
            }
            remaining.forEach(function (mutation) {
                var blot = Registry.find(mutation.target, true);
                if (blot == null)
                    return;
                if (blot.domNode === mutation.target) {
                    if (mutation.type === 'childList') {
                        mark(Registry.find(mutation.previousSibling, false));
                        [].forEach.call(mutation.addedNodes, function (node) {
                            var child = Registry.find(node, false);
                            mark(child, false);
                            if (child instanceof container_1.default) {
                                child.children.forEach(function (grandChild) {
                                    mark(grandChild, false);
                                });
                            }
                        });
                    }
                    else if (mutation.type === 'attributes') {
                        mark(blot.prev);
                    }
                }
                mark(blot);
            });
            this.children.forEach(optimize);
            remaining = [].slice.call(this.observer.takeRecords());
            records = remaining.slice();
            while (records.length > 0)
                mutations.push(records.pop());
        }
    };
    ScrollBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (context === void 0) { context = {}; }
        mutations = mutations || this.observer.takeRecords();
        // TODO use WeakMap
        mutations
            .map(function (mutation) {
            var blot = Registry.find(mutation.target, true);
            if (blot == null)
                return null;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                return blot;
            }
            else {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                return null;
            }
        })
            .forEach(function (blot) {
            if (blot == null ||
                blot === _this ||
                //@ts-ignore
                blot.domNode[Registry.DATA_KEY] == null)
                return;
            // @ts-ignore
            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
        });
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY].mutations != null) {
            // @ts-ignore
            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
        }
        this.optimize(mutations, context);
    };
    ScrollBlot.blotName = 'scroll';
    ScrollBlot.defaultChild = 'block';
    ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
    ScrollBlot.tagName = 'DIV';
    return ScrollBlot;
}(container_1.default));
exports.default = ScrollBlot;


/***/ }),
/* 46 */
/***/ (function(module, exports, __nested_webpack_require_267910__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __nested_webpack_require_267910__(18);
var Registry = __nested_webpack_require_267910__(1);
// Shallow object comparison
function isEqual(obj1, obj2) {
    if (Object.keys(obj1).length !== Object.keys(obj2).length)
        return false;
    // @ts-ignore
    for (var prop in obj1) {
        // @ts-ignore
        if (obj1[prop] !== obj2[prop])
            return false;
    }
    return true;
}
var InlineBlot = /** @class */ (function (_super) {
    __extends(InlineBlot, _super);
    function InlineBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InlineBlot.formats = function (domNode) {
        if (domNode.tagName === InlineBlot.tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    InlineBlot.prototype.format = function (name, value) {
        var _this = this;
        if (name === this.statics.blotName && !value) {
            this.children.forEach(function (child) {
                if (!(child instanceof format_1.default)) {
                    child = child.wrap(InlineBlot.blotName, true);
                }
                _this.attributes.copy(child);
            });
            this.unwrap();
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    InlineBlot.prototype.formatAt = function (index, length, name, value) {
        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
            var blot = this.isolate(index, length);
            blot.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    InlineBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        var formats = this.formats();
        if (Object.keys(formats).length === 0) {
            return this.unwrap(); // unformatted span
        }
        var next = this.next;
        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {
            next.moveChildren(this);
            next.remove();
        }
    };
    InlineBlot.blotName = 'inline';
    InlineBlot.scope = Registry.Scope.INLINE_BLOT;
    InlineBlot.tagName = 'SPAN';
    return InlineBlot;
}(format_1.default));
exports.default = InlineBlot;


/***/ }),
/* 47 */
/***/ (function(module, exports, __nested_webpack_require_270902__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __nested_webpack_require_270902__(18);
var Registry = __nested_webpack_require_270902__(1);
var BlockBlot = /** @class */ (function (_super) {
    __extends(BlockBlot, _super);
    function BlockBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlockBlot.formats = function (domNode) {
        var tagName = Registry.query(BlockBlot.blotName).tagName;
        if (domNode.tagName === tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    BlockBlot.prototype.format = function (name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) == null) {
            return;
        }
        else if (name === this.statics.blotName && !value) {
            this.replaceWith(BlockBlot.blotName);
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    BlockBlot.prototype.formatAt = function (index, length, name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) != null) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    BlockBlot.prototype.insertAt = function (index, value, def) {
        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
            // Insert text or inline
            _super.prototype.insertAt.call(this, index, value, def);
        }
        else {
            var after = this.split(index);
            var blot = Registry.create(value, def);
            after.parent.insertBefore(blot, after);
        }
    };
    BlockBlot.prototype.update = function (mutations, context) {
        if (navigator.userAgent.match(/Trident/)) {
            this.build();
        }
        else {
            _super.prototype.update.call(this, mutations, context);
        }
    };
    BlockBlot.blotName = 'block';
    BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
    BlockBlot.tagName = 'P';
    return BlockBlot;
}(format_1.default));
exports.default = BlockBlot;


/***/ }),
/* 48 */
/***/ (function(module, exports, __nested_webpack_require_273610__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __nested_webpack_require_273610__(19);
var EmbedBlot = /** @class */ (function (_super) {
    __extends(EmbedBlot, _super);
    function EmbedBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmbedBlot.formats = function (domNode) {
        return undefined;
    };
    EmbedBlot.prototype.format = function (name, value) {
        // super.formatAt wraps, which is what we want in general,
        // but this allows subclasses to overwrite for formats
        // that just apply to particular embeds
        _super.prototype.formatAt.call(this, 0, this.length(), name, value);
    };
    EmbedBlot.prototype.formatAt = function (index, length, name, value) {
        if (index === 0 && length === this.length()) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    EmbedBlot.prototype.formats = function () {
        return this.statics.formats(this.domNode);
    };
    return EmbedBlot;
}(leaf_1.default));
exports.default = EmbedBlot;


/***/ }),
/* 49 */
/***/ (function(module, exports, __nested_webpack_require_275351__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __nested_webpack_require_275351__(19);
var Registry = __nested_webpack_require_275351__(1);
var TextBlot = /** @class */ (function (_super) {
    __extends(TextBlot, _super);
    function TextBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.text = _this.statics.value(_this.domNode);
        return _this;
    }
    TextBlot.create = function (value) {
        return document.createTextNode(value);
    };
    TextBlot.value = function (domNode) {
        var text = domNode.data;
        // @ts-ignore
        if (text['normalize'])
            text = text['normalize']();
        return text;
    };
    TextBlot.prototype.deleteAt = function (index, length) {
        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
    };
    TextBlot.prototype.index = function (node, offset) {
        if (this.domNode === node) {
            return offset;
        }
        return -1;
    };
    TextBlot.prototype.insertAt = function (index, value, def) {
        if (def == null) {
            this.text = this.text.slice(0, index) + value + this.text.slice(index);
            this.domNode.data = this.text;
        }
        else {
            _super.prototype.insertAt.call(this, index, value, def);
        }
    };
    TextBlot.prototype.length = function () {
        return this.text.length;
    };
    TextBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        this.text = this.statics.value(this.domNode);
        if (this.text.length === 0) {
            this.remove();
        }
        else if (this.next instanceof TextBlot && this.next.prev === this) {
            this.insertAt(this.length(), this.next.value());
            this.next.remove();
        }
    };
    TextBlot.prototype.position = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        return [this.domNode, index];
    };
    TextBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = Registry.create(this.domNode.splitText(index));
        this.parent.insertBefore(after, this.next);
        this.text = this.statics.value(this.domNode);
        return after;
    };
    TextBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (mutations.some(function (mutation) {
            return mutation.type === 'characterData' && mutation.target === _this.domNode;
        })) {
            this.text = this.statics.value(this.domNode);
        }
    };
    TextBlot.prototype.value = function () {
        return this.text;
    };
    TextBlot.blotName = 'text';
    TextBlot.scope = Registry.Scope.INLINE_BLOT;
    return TextBlot;
}(leaf_1.default));
exports.default = TextBlot;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elem = document.createElement('div');
elem.classList.toggle('test-class', false);
if (elem.classList.contains('test-class')) {
  var _toggle = DOMTokenList.prototype.toggle;
  DOMTokenList.prototype.toggle = function (token, force) {
    if (arguments.length > 1 && !this.contains(token) === !force) {
      return force;
    } else {
      return _toggle.call(this, token);
    }
  };
}

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (searchString, position) {
    position = position || 0;
    return this.substr(position, searchString.length) === searchString;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (searchString, position) {
    var subjectString = this.toString();
    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
      position = subjectString.length;
    }
    position -= searchString.length;
    var lastIndex = subjectString.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, "find", {
    value: function value(predicate) {
      if (this === null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      if (typeof predicate !== 'function') {
        throw new TypeError('predicate must be a function');
      }
      var list = Object(this);
      var length = list.length >>> 0;
      var thisArg = arguments[1];
      var value;

      for (var i = 0; i < length; i++) {
        value = list[i];
        if (predicate.call(thisArg, value, i, list)) {
          return value;
        }
      }
      return undefined;
    }
  });
}

document.addEventListener("DOMContentLoaded", function () {
  // Disable resizing in Firefox
  document.execCommand("enableObjectResizing", false, false);
  // Disable automatic linkifying in IE11
  document.execCommand("autoUrlDetect", false, false);
});

/***/ }),
/* 51 */
/***/ (function(module, exports) {

/**
 * This library modifies the diff-patch-match library by Neil Fraser
 * by removing the patch and match functionality and certain advanced
 * options in the diff function. The original license is as follows:
 *
 * ===
 *
 * Diff Match and Patch
 *
 * Copyright 2006 Google Inc.
 * http://code.google.com/p/google-diff-match-patch/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * The data structure representing a diff is an array of tuples:
 * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
 * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
 */
var DIFF_DELETE = -1;
var DIFF_INSERT = 1;
var DIFF_EQUAL = 0;


/**
 * Find the differences between two texts.  Simplifies the problem by stripping
 * any common prefix or suffix off the texts before diffing.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {Int} cursor_pos Expected edit position in text1 (optional)
 * @return {Array} Array of diff tuples.
 */
function diff_main(text1, text2, cursor_pos) {
  // Check for equality (speedup).
  if (text1 == text2) {
    if (text1) {
      return [[DIFF_EQUAL, text1]];
    }
    return [];
  }

  // Check cursor_pos within bounds
  if (cursor_pos < 0 || text1.length < cursor_pos) {
    cursor_pos = null;
  }

  // Trim off common prefix (speedup).
  var commonlength = diff_commonPrefix(text1, text2);
  var commonprefix = text1.substring(0, commonlength);
  text1 = text1.substring(commonlength);
  text2 = text2.substring(commonlength);

  // Trim off common suffix (speedup).
  commonlength = diff_commonSuffix(text1, text2);
  var commonsuffix = text1.substring(text1.length - commonlength);
  text1 = text1.substring(0, text1.length - commonlength);
  text2 = text2.substring(0, text2.length - commonlength);

  // Compute the diff on the middle block.
  var diffs = diff_compute_(text1, text2);

  // Restore the prefix and suffix.
  if (commonprefix) {
    diffs.unshift([DIFF_EQUAL, commonprefix]);
  }
  if (commonsuffix) {
    diffs.push([DIFF_EQUAL, commonsuffix]);
  }
  diff_cleanupMerge(diffs);
  if (cursor_pos != null) {
    diffs = fix_cursor(diffs, cursor_pos);
  }
  diffs = fix_emoji(diffs);
  return diffs;
};


/**
 * Find the differences between two texts.  Assumes that the texts do not
 * have any common prefix or suffix.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 */
function diff_compute_(text1, text2) {
  var diffs;

  if (!text1) {
    // Just add some text (speedup).
    return [[DIFF_INSERT, text2]];
  }

  if (!text2) {
    // Just delete some text (speedup).
    return [[DIFF_DELETE, text1]];
  }

  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  var i = longtext.indexOf(shorttext);
  if (i != -1) {
    // Shorter text is inside the longer text (speedup).
    diffs = [[DIFF_INSERT, longtext.substring(0, i)],
             [DIFF_EQUAL, shorttext],
             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];
    // Swap insertions for deletions if diff is reversed.
    if (text1.length > text2.length) {
      diffs[0][0] = diffs[2][0] = DIFF_DELETE;
    }
    return diffs;
  }

  if (shorttext.length == 1) {
    // Single character string.
    // After the previous speedup, the character can't be an equality.
    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
  }

  // Check to see if the problem can be split in two.
  var hm = diff_halfMatch_(text1, text2);
  if (hm) {
    // A half-match was found, sort out the return data.
    var text1_a = hm[0];
    var text1_b = hm[1];
    var text2_a = hm[2];
    var text2_b = hm[3];
    var mid_common = hm[4];
    // Send both pairs off for separate processing.
    var diffs_a = diff_main(text1_a, text2_a);
    var diffs_b = diff_main(text1_b, text2_b);
    // Merge the results.
    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
  }

  return diff_bisect_(text1, text2);
};


/**
 * Find the 'middle snake' of a diff, split the problem in two
 * and return the recursively constructed diff.
 * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 * @private
 */
function diff_bisect_(text1, text2) {
  // Cache the text lengths to prevent multiple calls.
  var text1_length = text1.length;
  var text2_length = text2.length;
  var max_d = Math.ceil((text1_length + text2_length) / 2);
  var v_offset = max_d;
  var v_length = 2 * max_d;
  var v1 = new Array(v_length);
  var v2 = new Array(v_length);
  // Setting all elements to -1 is faster in Chrome & Firefox than mixing
  // integers and undefined.
  for (var x = 0; x < v_length; x++) {
    v1[x] = -1;
    v2[x] = -1;
  }
  v1[v_offset + 1] = 0;
  v2[v_offset + 1] = 0;
  var delta = text1_length - text2_length;
  // If the total number of characters is odd, then the front path will collide
  // with the reverse path.
  var front = (delta % 2 != 0);
  // Offsets for start and end of k loop.
  // Prevents mapping of space beyond the grid.
  var k1start = 0;
  var k1end = 0;
  var k2start = 0;
  var k2end = 0;
  for (var d = 0; d < max_d; d++) {
    // Walk the front path one step.
    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
      var k1_offset = v_offset + k1;
      var x1;
      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {
        x1 = v1[k1_offset + 1];
      } else {
        x1 = v1[k1_offset - 1] + 1;
      }
      var y1 = x1 - k1;
      while (x1 < text1_length && y1 < text2_length &&
             text1.charAt(x1) == text2.charAt(y1)) {
        x1++;
        y1++;
      }
      v1[k1_offset] = x1;
      if (x1 > text1_length) {
        // Ran off the right of the graph.
        k1end += 2;
      } else if (y1 > text2_length) {
        // Ran off the bottom of the graph.
        k1start += 2;
      } else if (front) {
        var k2_offset = v_offset + delta - k1;
        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
          // Mirror x2 onto top-left coordinate system.
          var x2 = text1_length - v2[k2_offset];
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }

    // Walk the reverse path one step.
    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
      var k2_offset = v_offset + k2;
      var x2;
      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {
        x2 = v2[k2_offset + 1];
      } else {
        x2 = v2[k2_offset - 1] + 1;
      }
      var y2 = x2 - k2;
      while (x2 < text1_length && y2 < text2_length &&
             text1.charAt(text1_length - x2 - 1) ==
             text2.charAt(text2_length - y2 - 1)) {
        x2++;
        y2++;
      }
      v2[k2_offset] = x2;
      if (x2 > text1_length) {
        // Ran off the left of the graph.
        k2end += 2;
      } else if (y2 > text2_length) {
        // Ran off the top of the graph.
        k2start += 2;
      } else if (!front) {
        var k1_offset = v_offset + delta - k2;
        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
          var x1 = v1[k1_offset];
          var y1 = v_offset + x1 - k1_offset;
          // Mirror x2 onto top-left coordinate system.
          x2 = text1_length - x2;
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }
  }
  // Diff took too long and hit the deadline or
  // number of diffs equals number of characters, no commonality at all.
  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
};


/**
 * Given the location of the 'middle snake', split the diff in two parts
 * and recurse.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {number} x Index of split point in text1.
 * @param {number} y Index of split point in text2.
 * @return {Array} Array of diff tuples.
 */
function diff_bisectSplit_(text1, text2, x, y) {
  var text1a = text1.substring(0, x);
  var text2a = text2.substring(0, y);
  var text1b = text1.substring(x);
  var text2b = text2.substring(y);

  // Compute both diffs serially.
  var diffs = diff_main(text1a, text2a);
  var diffsb = diff_main(text1b, text2b);

  return diffs.concat(diffsb);
};


/**
 * Determine the common prefix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the start of each
 *     string.
 */
function diff_commonPrefix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerstart = 0;
  while (pointermin < pointermid) {
    if (text1.substring(pointerstart, pointermid) ==
        text2.substring(pointerstart, pointermid)) {
      pointermin = pointermid;
      pointerstart = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Determine the common suffix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the end of each string.
 */
function diff_commonSuffix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 ||
      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerend = 0;
  while (pointermin < pointermid) {
    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==
        text2.substring(text2.length - pointermid, text2.length - pointerend)) {
      pointermin = pointermid;
      pointerend = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Do the two texts share a substring which is at least half the length of the
 * longer text?
 * This speedup can produce non-minimal diffs.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {Array.<string>} Five element Array, containing the prefix of
 *     text1, the suffix of text1, the prefix of text2, the suffix of
 *     text2 and the common middle.  Or null if there was no match.
 */
function diff_halfMatch_(text1, text2) {
  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
    return null;  // Pointless.
  }

  /**
   * Does a substring of shorttext exist within longtext such that the substring
   * is at least half the length of longtext?
   * Closure, but does not reference any external variables.
   * @param {string} longtext Longer string.
   * @param {string} shorttext Shorter string.
   * @param {number} i Start index of quarter length substring within longtext.
   * @return {Array.<string>} Five element Array, containing the prefix of
   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
   *     of shorttext and the common middle.  Or null if there was no match.
   * @private
   */
  function diff_halfMatchI_(longtext, shorttext, i) {
    // Start with a 1/4 length substring at position i as a seed.
    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
    var j = -1;
    var best_common = '';
    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
      var prefixLength = diff_commonPrefix(longtext.substring(i),
                                           shorttext.substring(j));
      var suffixLength = diff_commonSuffix(longtext.substring(0, i),
                                           shorttext.substring(0, j));
      if (best_common.length < suffixLength + prefixLength) {
        best_common = shorttext.substring(j - suffixLength, j) +
            shorttext.substring(j, j + prefixLength);
        best_longtext_a = longtext.substring(0, i - suffixLength);
        best_longtext_b = longtext.substring(i + prefixLength);
        best_shorttext_a = shorttext.substring(0, j - suffixLength);
        best_shorttext_b = shorttext.substring(j + prefixLength);
      }
    }
    if (best_common.length * 2 >= longtext.length) {
      return [best_longtext_a, best_longtext_b,
              best_shorttext_a, best_shorttext_b, best_common];
    } else {
      return null;
    }
  }

  // First check if the second quarter is the seed for a half-match.
  var hm1 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 4));
  // Check again based on the third quarter.
  var hm2 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 2));
  var hm;
  if (!hm1 && !hm2) {
    return null;
  } else if (!hm2) {
    hm = hm1;
  } else if (!hm1) {
    hm = hm2;
  } else {
    // Both matched.  Select the longest.
    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
  }

  // A half-match was found, sort out the return data.
  var text1_a, text1_b, text2_a, text2_b;
  if (text1.length > text2.length) {
    text1_a = hm[0];
    text1_b = hm[1];
    text2_a = hm[2];
    text2_b = hm[3];
  } else {
    text2_a = hm[0];
    text2_b = hm[1];
    text1_a = hm[2];
    text1_b = hm[3];
  }
  var mid_common = hm[4];
  return [text1_a, text1_b, text2_a, text2_b, mid_common];
};


/**
 * Reorder and merge like edit sections.  Merge equalities.
 * Any edit section can move as long as it doesn't cross an equality.
 * @param {Array} diffs Array of diff tuples.
 */
function diff_cleanupMerge(diffs) {
  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.
  var pointer = 0;
  var count_delete = 0;
  var count_insert = 0;
  var text_delete = '';
  var text_insert = '';
  var commonlength;
  while (pointer < diffs.length) {
    switch (diffs[pointer][0]) {
      case DIFF_INSERT:
        count_insert++;
        text_insert += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_DELETE:
        count_delete++;
        text_delete += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_EQUAL:
        // Upon reaching an equality, check for prior redundancies.
        if (count_delete + count_insert > 1) {
          if (count_delete !== 0 && count_insert !== 0) {
            // Factor out any common prefixies.
            commonlength = diff_commonPrefix(text_insert, text_delete);
            if (commonlength !== 0) {
              if ((pointer - count_delete - count_insert) > 0 &&
                  diffs[pointer - count_delete - count_insert - 1][0] ==
                  DIFF_EQUAL) {
                diffs[pointer - count_delete - count_insert - 1][1] +=
                    text_insert.substring(0, commonlength);
              } else {
                diffs.splice(0, 0, [DIFF_EQUAL,
                                    text_insert.substring(0, commonlength)]);
                pointer++;
              }
              text_insert = text_insert.substring(commonlength);
              text_delete = text_delete.substring(commonlength);
            }
            // Factor out any common suffixies.
            commonlength = diff_commonSuffix(text_insert, text_delete);
            if (commonlength !== 0) {
              diffs[pointer][1] = text_insert.substring(text_insert.length -
                  commonlength) + diffs[pointer][1];
              text_insert = text_insert.substring(0, text_insert.length -
                  commonlength);
              text_delete = text_delete.substring(0, text_delete.length -
                  commonlength);
            }
          }
          // Delete the offending records and add the merged ones.
          if (count_delete === 0) {
            diffs.splice(pointer - count_insert,
                count_delete + count_insert, [DIFF_INSERT, text_insert]);
          } else if (count_insert === 0) {
            diffs.splice(pointer - count_delete,
                count_delete + count_insert, [DIFF_DELETE, text_delete]);
          } else {
            diffs.splice(pointer - count_delete - count_insert,
                count_delete + count_insert, [DIFF_DELETE, text_delete],
                [DIFF_INSERT, text_insert]);
          }
          pointer = pointer - count_delete - count_insert +
                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
          // Merge this equality with the previous one.
          diffs[pointer - 1][1] += diffs[pointer][1];
          diffs.splice(pointer, 1);
        } else {
          pointer++;
        }
        count_insert = 0;
        count_delete = 0;
        text_delete = '';
        text_insert = '';
        break;
    }
  }
  if (diffs[diffs.length - 1][1] === '') {
    diffs.pop();  // Remove the dummy entry at the end.
  }

  // Second pass: look for single edits surrounded on both sides by equalities
  // which can be shifted sideways to eliminate an equality.
  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
  var changes = false;
  pointer = 1;
  // Intentionally ignore the first and last element (don't need checking).
  while (pointer < diffs.length - 1) {
    if (diffs[pointer - 1][0] == DIFF_EQUAL &&
        diffs[pointer + 1][0] == DIFF_EQUAL) {
      // This is a single edit surrounded by equalities.
      if (diffs[pointer][1].substring(diffs[pointer][1].length -
          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
        // Shift the edit over the previous equality.
        diffs[pointer][1] = diffs[pointer - 1][1] +
            diffs[pointer][1].substring(0, diffs[pointer][1].length -
                                        diffs[pointer - 1][1].length);
        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
        diffs.splice(pointer - 1, 1);
        changes = true;
      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==
          diffs[pointer + 1][1]) {
        // Shift the edit over the next equality.
        diffs[pointer - 1][1] += diffs[pointer + 1][1];
        diffs[pointer][1] =
            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +
            diffs[pointer + 1][1];
        diffs.splice(pointer + 1, 1);
        changes = true;
      }
    }
    pointer++;
  }
  // If shifts were made, the diff needs reordering and another shift sweep.
  if (changes) {
    diff_cleanupMerge(diffs);
  }
};


var diff = diff_main;
diff.INSERT = DIFF_INSERT;
diff.DELETE = DIFF_DELETE;
diff.EQUAL = DIFF_EQUAL;

module.exports = diff;

/*
 * Modify a diff such that the cursor position points to the start of a change:
 * E.g.
 *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
 *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
 *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
 *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} A tuple [cursor location in the modified diff, modified diff]
 */
function cursor_normalize_diff (diffs, cursor_pos) {
  if (cursor_pos === 0) {
    return [DIFF_EQUAL, diffs];
  }
  for (var current_pos = 0, i = 0; i < diffs.length; i++) {
    var d = diffs[i];
    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
      var next_pos = current_pos + d[1].length;
      if (cursor_pos === next_pos) {
        return [i + 1, diffs];
      } else if (cursor_pos < next_pos) {
        // copy to prevent side effects
        diffs = diffs.slice();
        // split d into two diff changes
        var split_pos = cursor_pos - current_pos;
        var d_left = [d[0], d[1].slice(0, split_pos)];
        var d_right = [d[0], d[1].slice(split_pos)];
        diffs.splice(i, 1, d_left, d_right);
        return [i + 1, diffs];
      } else {
        current_pos = next_pos;
      }
    }
  }
  throw new Error('cursor_pos is out of bounds!')
}

/*
 * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
 *
 * Case 1)
 *   Check if a naive shift is possible:
 *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
 *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
 * Case 2)
 *   Check if the following shifts are possible:
 *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
 *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
 *         ^            ^
 *         d          d_next
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} Array of diff tuples
 */
function fix_cursor (diffs, cursor_pos) {
  var norm = cursor_normalize_diff(diffs, cursor_pos);
  var ndiffs = norm[1];
  var cursor_pointer = norm[0];
  var d = ndiffs[cursor_pointer];
  var d_next = ndiffs[cursor_pointer + 1];

  if (d == null) {
    // Text was deleted from end of original string,
    // cursor is now out of bounds in new string
    return diffs;
  } else if (d[0] !== DIFF_EQUAL) {
    // A modification happened at the cursor location.
    // This is the expected outcome, so we can return the original diff.
    return diffs;
  } else {
    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
      // Case 1)
      // It is possible to perform a naive shift
      ndiffs.splice(cursor_pointer, 2, d_next, d)
      return merge_tuples(ndiffs, cursor_pointer, 2)
    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
      // Case 2)
      // d[1] is a prefix of d_next[1]
      // We can assume that d_next[0] !== 0, since d[0] === 0
      // Shift edit locations..
      ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
      var suffix = d_next[1].slice(d[1].length);
      if (suffix.length > 0) {
        ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
      }
      return merge_tuples(ndiffs, cursor_pointer, 3)
    } else {
      // Not possible to perform any modification
      return diffs;
    }
  }
}

/*
 * Check diff did not split surrogate pairs.
 * Ex. [0, '\uD83D'], [-1, '\uDC36'], [1, '\uDC2F'] -> [-1, '\uD83D\uDC36'], [1, '\uD83D\uDC2F']
 *     '\uD83D\uDC36' === '🐶', '\uD83D\uDC2F' === '🐯'
 *
 * @param {Array} diffs Array of diff tuples
 * @return {Array} Array of diff tuples
 */
function fix_emoji (diffs) {
  var compact = false;
  var starts_with_pair_end = function(str) {
    return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;
  }
  var ends_with_pair_start = function(str) {
    return str.charCodeAt(str.length-1) >= 0xD800 && str.charCodeAt(str.length-1) <= 0xDBFF;
  }
  for (var i = 2; i < diffs.length; i += 1) {
    if (diffs[i-2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i-2][1]) &&
        diffs[i-1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i-1][1]) &&
        diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
      compact = true;

      diffs[i-1][1] = diffs[i-2][1].slice(-1) + diffs[i-1][1];
      diffs[i][1] = diffs[i-2][1].slice(-1) + diffs[i][1];

      diffs[i-2][1] = diffs[i-2][1].slice(0, -1);
    }
  }
  if (!compact) {
    return diffs;
  }
  var fixed_diffs = [];
  for (var i = 0; i < diffs.length; i += 1) {
    if (diffs[i][1].length > 0) {
      fixed_diffs.push(diffs[i]);
    }
  }
  return fixed_diffs;
}

/*
 * Try to merge tuples with their neigbors in a given range.
 * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
 *
 * @param {Array} diffs Array of diff tuples.
 * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
 * @param {Int} length Number of consecutive elements to check.
 * @return {Array} Array of merged diff tuples.
 */
function merge_tuples (diffs, start, length) {
  // Check from (start-1) to (start+length).
  for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
    if (i + 1 < diffs.length) {
      var left_d = diffs[i];
      var right_d = diffs[i+1];
      if (left_d[0] === right_d[1]) {
        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
      }
    }
  }
  return diffs;
}


/***/ }),
/* 52 */
/***/ (function(module, exports) {

exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}


/***/ }),
/* 53 */
/***/ (function(module, exports) {

var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};


/***/ }),
/* 54 */
/***/ (function(module, exports) {

'use strict';

var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @api private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {Mixed} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @api private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @api public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @api public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Boolean} exists Only check if there are listeners.
 * @returns {Array|Boolean}
 * @api public
 */
EventEmitter.prototype.listeners = function listeners(event, exists) {
  var evt = prefix ? prefix + event : event
    , available = this._events[evt];

  if (exists) return !!available;
  if (!available) return [];
  if (available.fn) return [available.fn];

  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
    ee[i] = available[i].fn;
  }

  return ee;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @api public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn The listener function.
 * @param {Mixed} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @api public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  var listener = new EE(fn, context || this)
    , evt = prefix ? prefix + event : event;

  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;
  else if (!this._events[evt].fn) this._events[evt].push(listener);
  else this._events[evt] = [this._events[evt], listener];

  return this;
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn The listener function.
 * @param {Mixed} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @api public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  var listener = new EE(fn, context || this, true)
    , evt = prefix ? prefix + event : event;

  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;
  else if (!this._events[evt].fn) this._events[evt].push(listener);
  else this._events[evt] = [this._events[evt], listener];

  return this;
};

/**
 * Remove the listeners of a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {Mixed} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @api public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    if (--this._eventsCount === 0) this._events = new Events();
    else delete this._events[evt];
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
         listeners.fn === fn
      && (!once || listeners.once)
      && (!context || listeners.context === context)
    ) {
      if (--this._eventsCount === 0) this._events = new Events();
      else delete this._events[evt];
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
           listeners[i].fn !== fn
        || (once && !listeners[i].once)
        || (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else if (--this._eventsCount === 0) this._events = new Events();
    else delete this._events[evt];
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {String|Symbol} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @api public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) {
      if (--this._eventsCount === 0) this._events = new Events();
      else delete this._events[evt];
    }
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// This function doesn't apply anymore.
//
EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
  return this;
};

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
  module.exports = EventEmitter;
}


/***/ }),
/* 55 */
/***/ (function(module, exports, __nested_webpack_require_316416__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend2 = __nested_webpack_require_316416__(3);

var _extend3 = _interopRequireDefault(_extend2);

var _quillDelta = __nested_webpack_require_316416__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __nested_webpack_require_316416__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_316416__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __nested_webpack_require_316416__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __nested_webpack_require_316416__(9);

var _module2 = _interopRequireDefault(_module);

var _align = __nested_webpack_require_316416__(36);

var _background = __nested_webpack_require_316416__(37);

var _code = __nested_webpack_require_316416__(13);

var _code2 = _interopRequireDefault(_code);

var _color = __nested_webpack_require_316416__(26);

var _direction = __nested_webpack_require_316416__(38);

var _font = __nested_webpack_require_316416__(39);

var _size = __nested_webpack_require_316416__(40);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:clipboard');

var DOM_KEY = '__ql-matcher';

var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];

var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function (memo, attr) {
  memo[attr.keyName] = attr;
  return memo;
}, {});

var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function (memo, attr) {
  memo[attr.keyName] = attr;
  return memo;
}, {});

var Clipboard = function (_Module) {
  _inherits(Clipboard, _Module);

  function Clipboard(quill, options) {
    _classCallCheck(this, Clipboard);

    var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));

    _this.quill.root.addEventListener('paste', _this.onPaste.bind(_this));
    _this.container = _this.quill.addContainer('ql-clipboard');
    _this.container.setAttribute('contenteditable', true);
    _this.container.setAttribute('tabindex', -1);
    _this.matchers = [];
    CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          selector = _ref2[0],
          matcher = _ref2[1];

      if (!options.matchVisual && matcher === matchSpacing) return;
      _this.addMatcher(selector, matcher);
    });
    return _this;
  }

  _createClass(Clipboard, [{
    key: 'addMatcher',
    value: function addMatcher(selector, matcher) {
      this.matchers.push([selector, matcher]);
    }
  }, {
    key: 'convert',
    value: function convert(html) {
      if (typeof html === 'string') {
        this.container.innerHTML = html.replace(/\>\r?\n +\</g, '><'); // Remove spaces between tags
        return this.convert();
      }
      var formats = this.quill.getFormat(this.quill.selection.savedRange.index);
      if (formats[_code2.default.blotName]) {
        var text = this.container.innerText;
        this.container.innerHTML = '';
        return new _quillDelta2.default().insert(text, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));
      }

      var _prepareMatching = this.prepareMatching(),
          _prepareMatching2 = _slicedToArray(_prepareMatching, 2),
          elementMatchers = _prepareMatching2[0],
          textMatchers = _prepareMatching2[1];

      var delta = traverse(this.container, elementMatchers, textMatchers);
      // Remove trailing newline
      if (deltaEndsWith(delta, '\n') && delta.ops[delta.ops.length - 1].attributes == null) {
        delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));
      }
      debug.log('convert', this.container.innerHTML, delta);
      this.container.innerHTML = '';
      return delta;
    }
  }, {
    key: 'dangerouslyPasteHTML',
    value: function dangerouslyPasteHTML(index, html) {
      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2.default.sources.API;

      if (typeof index === 'string') {
        this.quill.setContents(this.convert(index), html);
        this.quill.setSelection(0, _quill2.default.sources.SILENT);
      } else {
        var paste = this.convert(html);
        this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);
        this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);
      }
    }
  }, {
    key: 'onPaste',
    value: function onPaste(e) {
      var _this2 = this;

      if (e.defaultPrevented || !this.quill.isEnabled()) return;
      var range = this.quill.getSelection();
      var delta = new _quillDelta2.default().retain(range.index);
      var scrollTop = this.quill.scrollingContainer.scrollTop;
      this.container.focus();
      this.quill.selection.update(_quill2.default.sources.SILENT);
      setTimeout(function () {
        delta = delta.concat(_this2.convert()).delete(range.length);
        _this2.quill.updateContents(delta, _quill2.default.sources.USER);
        // range.length contributes to delta.length()
        _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);
        _this2.quill.scrollingContainer.scrollTop = scrollTop;
        _this2.quill.focus();
      }, 1);
    }
  }, {
    key: 'prepareMatching',
    value: function prepareMatching() {
      var _this3 = this;

      var elementMatchers = [],
          textMatchers = [];
      this.matchers.forEach(function (pair) {
        var _pair = _slicedToArray(pair, 2),
            selector = _pair[0],
            matcher = _pair[1];

        switch (selector) {
          case Node.TEXT_NODE:
            textMatchers.push(matcher);
            break;
          case Node.ELEMENT_NODE:
            elementMatchers.push(matcher);
            break;
          default:
            [].forEach.call(_this3.container.querySelectorAll(selector), function (node) {
              // TODO use weakmap
              node[DOM_KEY] = node[DOM_KEY] || [];
              node[DOM_KEY].push(matcher);
            });
            break;
        }
      });
      return [elementMatchers, textMatchers];
    }
  }]);

  return Clipboard;
}(_module2.default);

Clipboard.DEFAULTS = {
  matchers: [],
  matchVisual: true
};

function applyFormat(delta, format, value) {
  if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {
    return Object.keys(format).reduce(function (delta, key) {
      return applyFormat(delta, key, format[key]);
    }, delta);
  } else {
    return delta.reduce(function (delta, op) {
      if (op.attributes && op.attributes[format]) {
        return delta.push(op);
      } else {
        return delta.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));
      }
    }, new _quillDelta2.default());
  }
}

function computeStyle(node) {
  if (node.nodeType !== Node.ELEMENT_NODE) return {};
  var DOM_KEY = '__ql-computed-style';
  return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));
}

function deltaEndsWith(delta, text) {
  var endText = "";
  for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i) {
    var op = delta.ops[i];
    if (typeof op.insert !== 'string') break;
    endText = op.insert + endText;
  }
  return endText.slice(-1 * text.length) === text;
}

function isLine(node) {
  if (node.childNodes.length === 0) return false; // Exclude embed blocks
  var style = computeStyle(node);
  return ['block', 'list-item'].indexOf(style.display) > -1;
}

function traverse(node, elementMatchers, textMatchers) {
  // Post-order
  if (node.nodeType === node.TEXT_NODE) {
    return textMatchers.reduce(function (delta, matcher) {
      return matcher(node, delta);
    }, new _quillDelta2.default());
  } else if (node.nodeType === node.ELEMENT_NODE) {
    return [].reduce.call(node.childNodes || [], function (delta, childNode) {
      var childrenDelta = traverse(childNode, elementMatchers, textMatchers);
      if (childNode.nodeType === node.ELEMENT_NODE) {
        childrenDelta = elementMatchers.reduce(function (childrenDelta, matcher) {
          return matcher(childNode, childrenDelta);
        }, childrenDelta);
        childrenDelta = (childNode[DOM_KEY] || []).reduce(function (childrenDelta, matcher) {
          return matcher(childNode, childrenDelta);
        }, childrenDelta);
      }
      return delta.concat(childrenDelta);
    }, new _quillDelta2.default());
  } else {
    return new _quillDelta2.default();
  }
}

function matchAlias(format, node, delta) {
  return applyFormat(delta, format, true);
}

function matchAttributor(node, delta) {
  var attributes = _parchment2.default.Attributor.Attribute.keys(node);
  var classes = _parchment2.default.Attributor.Class.keys(node);
  var styles = _parchment2.default.Attributor.Style.keys(node);
  var formats = {};
  attributes.concat(classes).concat(styles).forEach(function (name) {
    var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);
    if (attr != null) {
      formats[attr.attrName] = attr.value(node);
      if (formats[attr.attrName]) return;
    }
    attr = ATTRIBUTE_ATTRIBUTORS[name];
    if (attr != null && (attr.attrName === name || attr.keyName === name)) {
      formats[attr.attrName] = attr.value(node) || undefined;
    }
    attr = STYLE_ATTRIBUTORS[name];
    if (attr != null && (attr.attrName === name || attr.keyName === name)) {
      attr = STYLE_ATTRIBUTORS[name];
      formats[attr.attrName] = attr.value(node) || undefined;
    }
  });
  if (Object.keys(formats).length > 0) {
    delta = applyFormat(delta, formats);
  }
  return delta;
}

function matchBlot(node, delta) {
  var match = _parchment2.default.query(node);
  if (match == null) return delta;
  if (match.prototype instanceof _parchment2.default.Embed) {
    var embed = {};
    var value = match.value(node);
    if (value != null) {
      embed[match.blotName] = value;
      delta = new _quillDelta2.default().insert(embed, match.formats(node));
    }
  } else if (typeof match.formats === 'function') {
    delta = applyFormat(delta, match.blotName, match.formats(node));
  }
  return delta;
}

function matchBreak(node, delta) {
  if (!deltaEndsWith(delta, '\n')) {
    delta.insert('\n');
  }
  return delta;
}

function matchIgnore() {
  return new _quillDelta2.default();
}

function matchIndent(node, delta) {
  var match = _parchment2.default.query(node);
  if (match == null || match.blotName !== 'list-item' || !deltaEndsWith(delta, '\n')) {
    return delta;
  }
  var indent = -1,
      parent = node.parentNode;
  while (!parent.classList.contains('ql-clipboard')) {
    if ((_parchment2.default.query(parent) || {}).blotName === 'list') {
      indent += 1;
    }
    parent = parent.parentNode;
  }
  if (indent <= 0) return delta;
  return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent: indent }));
}

function matchNewline(node, delta) {
  if (!deltaEndsWith(delta, '\n')) {
    if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
      delta.insert('\n');
    }
  }
  return delta;
}

function matchSpacing(node, delta) {
  if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, '\n\n')) {
    var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);
    if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
      delta.insert('\n');
    }
  }
  return delta;
}

function matchStyles(node, delta) {
  var formats = {};
  var style = node.style || {};
  if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {
    formats.italic = true;
  }
  if (style.fontWeight && (computeStyle(node).fontWeight.startsWith('bold') || parseInt(computeStyle(node).fontWeight) >= 700)) {
    formats.bold = true;
  }
  if (Object.keys(formats).length > 0) {
    delta = applyFormat(delta, formats);
  }
  if (parseFloat(style.textIndent || 0) > 0) {
    // Could be 0.5in
    delta = new _quillDelta2.default().insert('\t').concat(delta);
  }
  return delta;
}

function matchText(node, delta) {
  var text = node.data;
  // Word represents empty line with <o:p>&nbsp;</o:p>
  if (node.parentNode.tagName === 'O:P') {
    return delta.insert(text.trim());
  }
  if (text.trim().length === 0 && node.parentNode.classList.contains('ql-clipboard')) {
    return delta;
  }
  if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {
    // eslint-disable-next-line func-style
    var replacer = function replacer(collapse, match) {
      match = match.replace(/[^\u00a0]/g, ''); // \u00a0 is nbsp;
      return match.length < 1 && collapse ? ' ' : match;
    };
    text = text.replace(/\r\n/g, ' ').replace(/\n/g, ' ');
    text = text.replace(/\s\s+/g, replacer.bind(replacer, true)); // collapse whitespace
    if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
      text = text.replace(/^\s+/, replacer.bind(replacer, false));
    }
    if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
      text = text.replace(/\s+$/, replacer.bind(replacer, false));
    }
  }
  return delta.insert(text);
}

exports.default = Clipboard;
exports.matchAttributor = matchAttributor;
exports.matchBlot = matchBlot;
exports.matchNewline = matchNewline;
exports.matchSpacing = matchSpacing;
exports.matchText = matchText;

/***/ }),
/* 56 */
/***/ (function(module, exports, __nested_webpack_require_333274__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __nested_webpack_require_333274__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Bold = function (_Inline) {
  _inherits(Bold, _Inline);

  function Bold() {
    _classCallCheck(this, Bold);

    return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));
  }

  _createClass(Bold, [{
    key: 'optimize',
    value: function optimize(context) {
      _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), 'optimize', this).call(this, context);
      if (this.domNode.tagName !== this.statics.tagName[0]) {
        this.replaceWith(this.statics.blotName);
      }
    }
  }], [{
    key: 'create',
    value: function create() {
      return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), 'create', this).call(this);
    }
  }, {
    key: 'formats',
    value: function formats() {
      return true;
    }
  }]);

  return Bold;
}(_inline2.default);

Bold.blotName = 'bold';
Bold.tagName = ['STRONG', 'B'];

exports.default = Bold;

/***/ }),
/* 57 */
/***/ (function(module, exports, __nested_webpack_require_336502__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addControls = exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quillDelta = __nested_webpack_require_336502__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __nested_webpack_require_336502__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_336502__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __nested_webpack_require_336502__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __nested_webpack_require_336502__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:toolbar');

var Toolbar = function (_Module) {
  _inherits(Toolbar, _Module);

  function Toolbar(quill, options) {
    _classCallCheck(this, Toolbar);

    var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));

    if (Array.isArray(_this.options.container)) {
      var container = document.createElement('div');
      addControls(container, _this.options.container);
      quill.container.parentNode.insertBefore(container, quill.container);
      _this.container = container;
    } else if (typeof _this.options.container === 'string') {
      _this.container = document.querySelector(_this.options.container);
    } else {
      _this.container = _this.options.container;
    }
    if (!(_this.container instanceof HTMLElement)) {
      var _ret;

      return _ret = debug.error('Container required for toolbar', _this.options), _possibleConstructorReturn(_this, _ret);
    }
    _this.container.classList.add('ql-toolbar');
    _this.controls = [];
    _this.handlers = {};
    Object.keys(_this.options.handlers).forEach(function (format) {
      _this.addHandler(format, _this.options.handlers[format]);
    });
    [].forEach.call(_this.container.querySelectorAll('button, select'), function (input) {
      _this.attach(input);
    });
    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (type, range) {
      if (type === _quill2.default.events.SELECTION_CHANGE) {
        _this.update(range);
      }
    });
    _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
      var _this$quill$selection = _this.quill.selection.getRange(),
          _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),
          range = _this$quill$selection2[0]; // quill.getSelection triggers update


      _this.update(range);
    });
    return _this;
  }

  _createClass(Toolbar, [{
    key: 'addHandler',
    value: function addHandler(format, handler) {
      this.handlers[format] = handler;
    }
  }, {
    key: 'attach',
    value: function attach(input) {
      var _this2 = this;

      var format = [].find.call(input.classList, function (className) {
        return className.indexOf('ql-') === 0;
      });
      if (!format) return;
      format = format.slice('ql-'.length);
      if (input.tagName === 'BUTTON') {
        input.setAttribute('type', 'button');
      }
      if (this.handlers[format] == null) {
        if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
          debug.warn('ignoring attaching to disabled format', format, input);
          return;
        }
        if (_parchment2.default.query(format) == null) {
          debug.warn('ignoring attaching to nonexistent format', format, input);
          return;
        }
      }
      var eventName = input.tagName === 'SELECT' ? 'change' : 'click';
      input.addEventListener(eventName, function (e) {
        var value = void 0;
        if (input.tagName === 'SELECT') {
          if (input.selectedIndex < 0) return;
          var selected = input.options[input.selectedIndex];
          if (selected.hasAttribute('selected')) {
            value = false;
          } else {
            value = selected.value || false;
          }
        } else {
          if (input.classList.contains('ql-active')) {
            value = false;
          } else {
            value = input.value || !input.hasAttribute('value');
          }
          e.preventDefault();
        }
        _this2.quill.focus();

        var _quill$selection$getR = _this2.quill.selection.getRange(),
            _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1),
            range = _quill$selection$getR2[0];

        if (_this2.handlers[format] != null) {
          _this2.handlers[format].call(_this2, value);
        } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {
          value = prompt('Enter ' + format);
          if (!value) return;
          _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);
        } else {
          _this2.quill.format(format, value, _quill2.default.sources.USER);
        }
        _this2.update(range);
      });
      // TODO use weakmap
      this.controls.push([format, input]);
    }
  }, {
    key: 'update',
    value: function update(range) {
      var formats = range == null ? {} : this.quill.getFormat(range);
      this.controls.forEach(function (pair) {
        var _pair = _slicedToArray(pair, 2),
            format = _pair[0],
            input = _pair[1];

        if (input.tagName === 'SELECT') {
          var option = void 0;
          if (range == null) {
            option = null;
          } else if (formats[format] == null) {
            option = input.querySelector('option[selected]');
          } else if (!Array.isArray(formats[format])) {
            var value = formats[format];
            if (typeof value === 'string') {
              value = value.replace(/\"/g, '\\"');
            }
            option = input.querySelector('option[value="' + value + '"]');
          }
          if (option == null) {
            input.value = ''; // TODO make configurable?
            input.selectedIndex = -1;
          } else {
            option.selected = true;
          }
        } else {
          if (range == null) {
            input.classList.remove('ql-active');
          } else if (input.hasAttribute('value')) {
            // both being null should match (default values)
            // '1' should match with 1 (headers)
            var isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');
            input.classList.toggle('ql-active', isActive);
          } else {
            input.classList.toggle('ql-active', formats[format] != null);
          }
        }
      });
    }
  }]);

  return Toolbar;
}(_module2.default);

Toolbar.DEFAULTS = {};

function addButton(container, format, value) {
  var input = document.createElement('button');
  input.setAttribute('type', 'button');
  input.classList.add('ql-' + format);
  if (value != null) {
    input.value = value;
  }
  container.appendChild(input);
}

function addControls(container, groups) {
  if (!Array.isArray(groups[0])) {
    groups = [groups];
  }
  groups.forEach(function (controls) {
    var group = document.createElement('span');
    group.classList.add('ql-formats');
    controls.forEach(function (control) {
      if (typeof control === 'string') {
        addButton(group, control);
      } else {
        var format = Object.keys(control)[0];
        var value = control[format];
        if (Array.isArray(value)) {
          addSelect(group, format, value);
        } else {
          addButton(group, format, value);
        }
      }
    });
    container.appendChild(group);
  });
}

function addSelect(container, format, values) {
  var input = document.createElement('select');
  input.classList.add('ql-' + format);
  values.forEach(function (value) {
    var option = document.createElement('option');
    if (value !== false) {
      option.setAttribute('value', value);
    } else {
      option.setAttribute('selected', 'selected');
    }
    input.appendChild(option);
  });
  container.appendChild(input);
}

Toolbar.DEFAULTS = {
  container: null,
  handlers: {
    clean: function clean() {
      var _this3 = this;

      var range = this.quill.getSelection();
      if (range == null) return;
      if (range.length == 0) {
        var formats = this.quill.getFormat();
        Object.keys(formats).forEach(function (name) {
          // Clean functionality in existing apps only clean inline formats
          if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {
            _this3.quill.format(name, false);
          }
        });
      } else {
        this.quill.removeFormat(range, _quill2.default.sources.USER);
      }
    },
    direction: function direction(value) {
      var align = this.quill.getFormat()['align'];
      if (value === 'rtl' && align == null) {
        this.quill.format('align', 'right', _quill2.default.sources.USER);
      } else if (!value && align === 'right') {
        this.quill.format('align', false, _quill2.default.sources.USER);
      }
      this.quill.format('direction', value, _quill2.default.sources.USER);
    },
    indent: function indent(value) {
      var range = this.quill.getSelection();
      var formats = this.quill.getFormat(range);
      var indent = parseInt(formats.indent || 0);
      if (value === '+1' || value === '-1') {
        var modifier = value === '+1' ? 1 : -1;
        if (formats.direction === 'rtl') modifier *= -1;
        this.quill.format('indent', indent + modifier, _quill2.default.sources.USER);
      }
    },
    link: function link(value) {
      if (value === true) {
        value = prompt('Enter link URL:');
      }
      this.quill.format('link', value, _quill2.default.sources.USER);
    },
    list: function list(value) {
      var range = this.quill.getSelection();
      var formats = this.quill.getFormat(range);
      if (value === 'check') {
        if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {
          this.quill.format('list', false, _quill2.default.sources.USER);
        } else {
          this.quill.format('list', 'unchecked', _quill2.default.sources.USER);
        }
      } else {
        this.quill.format('list', value, _quill2.default.sources.USER);
      }
    }
  }
};

exports.default = Toolbar;
exports.addControls = addControls;

/***/ }),
/* 58 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <polyline class=\"ql-even ql-stroke\" points=\"5 7 3 9 5 11\"></polyline> <polyline class=\"ql-even ql-stroke\" points=\"13 7 15 9 13 11\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>";

/***/ }),
/* 59 */
/***/ (function(module, exports, __nested_webpack_require_349781__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _picker = __nested_webpack_require_349781__(28);

var _picker2 = _interopRequireDefault(_picker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorPicker = function (_Picker) {
  _inherits(ColorPicker, _Picker);

  function ColorPicker(select, label) {
    _classCallCheck(this, ColorPicker);

    var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));

    _this.label.innerHTML = label;
    _this.container.classList.add('ql-color-picker');
    [].slice.call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7).forEach(function (item) {
      item.classList.add('ql-primary');
    });
    return _this;
  }

  _createClass(ColorPicker, [{
    key: 'buildItem',
    value: function buildItem(option) {
      var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'buildItem', this).call(this, option);
      item.style.backgroundColor = option.getAttribute('value') || '';
      return item;
    }
  }, {
    key: 'selectItem',
    value: function selectItem(item, trigger) {
      _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'selectItem', this).call(this, item, trigger);
      var colorLabel = this.label.querySelector('.ql-color-label');
      var value = item ? item.getAttribute('data-value') || '' : '';
      if (colorLabel) {
        if (colorLabel.tagName === 'line') {
          colorLabel.style.stroke = value;
        } else {
          colorLabel.style.fill = value;
        }
      }
    }
  }]);

  return ColorPicker;
}(_picker2.default);

exports.default = ColorPicker;

/***/ }),
/* 60 */
/***/ (function(module, exports, __nested_webpack_require_353592__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _picker = __nested_webpack_require_353592__(28);

var _picker2 = _interopRequireDefault(_picker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconPicker = function (_Picker) {
  _inherits(IconPicker, _Picker);

  function IconPicker(select, icons) {
    _classCallCheck(this, IconPicker);

    var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));

    _this.container.classList.add('ql-icon-picker');
    [].forEach.call(_this.container.querySelectorAll('.ql-picker-item'), function (item) {
      item.innerHTML = icons[item.getAttribute('data-value') || ''];
    });
    _this.defaultItem = _this.container.querySelector('.ql-selected');
    _this.selectItem(_this.defaultItem);
    return _this;
  }

  _createClass(IconPicker, [{
    key: 'selectItem',
    value: function selectItem(item, trigger) {
      _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), 'selectItem', this).call(this, item, trigger);
      item = item || this.defaultItem;
      this.label.innerHTML = item.innerHTML;
    }
  }]);

  return IconPicker;
}(_picker2.default);

exports.default = IconPicker;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tooltip = function () {
  function Tooltip(quill, boundsContainer) {
    var _this = this;

    _classCallCheck(this, Tooltip);

    this.quill = quill;
    this.boundsContainer = boundsContainer || document.body;
    this.root = quill.addContainer('ql-tooltip');
    this.root.innerHTML = this.constructor.TEMPLATE;
    if (this.quill.root === this.quill.scrollingContainer) {
      this.quill.root.addEventListener('scroll', function () {
        _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + 'px';
      });
    }
    this.hide();
  }

  _createClass(Tooltip, [{
    key: 'hide',
    value: function hide() {
      this.root.classList.add('ql-hidden');
    }
  }, {
    key: 'position',
    value: function position(reference) {
      var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;
      // root.scrollTop should be 0 if scrollContainer !== root
      var top = reference.bottom + this.quill.root.scrollTop;
      this.root.style.left = left + 'px';
      this.root.style.top = top + 'px';
      this.root.classList.remove('ql-flip');
      var containerBounds = this.boundsContainer.getBoundingClientRect();
      var rootBounds = this.root.getBoundingClientRect();
      var shift = 0;
      if (rootBounds.right > containerBounds.right) {
        shift = containerBounds.right - rootBounds.right;
        this.root.style.left = left + shift + 'px';
      }
      if (rootBounds.left < containerBounds.left) {
        shift = containerBounds.left - rootBounds.left;
        this.root.style.left = left + shift + 'px';
      }
      if (rootBounds.bottom > containerBounds.bottom) {
        var height = rootBounds.bottom - rootBounds.top;
        var verticalShift = reference.bottom - reference.top + height;
        this.root.style.top = top - verticalShift + 'px';
        this.root.classList.add('ql-flip');
      }
      return shift;
    }
  }, {
    key: 'show',
    value: function show() {
      this.root.classList.remove('ql-editing');
      this.root.classList.remove('ql-hidden');
    }
  }]);

  return Tooltip;
}();

exports.default = Tooltip;

/***/ }),
/* 62 */
/***/ (function(module, exports, __nested_webpack_require_359932__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend = __nested_webpack_require_359932__(3);

var _extend2 = _interopRequireDefault(_extend);

var _emitter = __nested_webpack_require_359932__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _base = __nested_webpack_require_359932__(43);

var _base2 = _interopRequireDefault(_base);

var _link = __nested_webpack_require_359932__(27);

var _link2 = _interopRequireDefault(_link);

var _selection = __nested_webpack_require_359932__(15);

var _icons = __nested_webpack_require_359932__(41);

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TOOLBAR_CONFIG = [[{ header: ['1', '2', '3', false] }], ['bold', 'italic', 'underline', 'link'], [{ list: 'ordered' }, { list: 'bullet' }], ['clean']];

var SnowTheme = function (_BaseTheme) {
  _inherits(SnowTheme, _BaseTheme);

  function SnowTheme(quill, options) {
    _classCallCheck(this, SnowTheme);

    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
      options.modules.toolbar.container = TOOLBAR_CONFIG;
    }

    var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));

    _this.quill.container.classList.add('ql-snow');
    return _this;
  }

  _createClass(SnowTheme, [{
    key: 'extendToolbar',
    value: function extendToolbar(toolbar) {
      toolbar.container.classList.add('ql-snow');
      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);
      if (toolbar.container.querySelector('.ql-link')) {
        this.quill.keyboard.addBinding({ key: 'K', shortKey: true }, function (range, context) {
          toolbar.handlers['link'].call(toolbar, !context.format.link);
        });
      }
    }
  }]);

  return SnowTheme;
}(_base2.default);

SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        link: function link(value) {
          if (value) {
            var range = this.quill.getSelection();
            if (range == null || range.length == 0) return;
            var preview = this.quill.getText(range);
            if (/^\S+@\S+\.\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {
              preview = 'mailto:' + preview;
            }
            var tooltip = this.quill.theme.tooltip;
            tooltip.edit('link', preview);
          } else {
            this.quill.format('link', false);
          }
        }
      }
    }
  }
});

var SnowTooltip = function (_BaseTooltip) {
  _inherits(SnowTooltip, _BaseTooltip);

  function SnowTooltip(quill, bounds) {
    _classCallCheck(this, SnowTooltip);

    var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));

    _this2.preview = _this2.root.querySelector('a.ql-preview');
    return _this2;
  }

  _createClass(SnowTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this3 = this;

      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'listen', this).call(this);
      this.root.querySelector('a.ql-action').addEventListener('click', function (event) {
        if (_this3.root.classList.contains('ql-editing')) {
          _this3.save();
        } else {
          _this3.edit('link', _this3.preview.textContent);
        }
        event.preventDefault();
      });
      this.root.querySelector('a.ql-remove').addEventListener('click', function (event) {
        if (_this3.linkRange != null) {
          var range = _this3.linkRange;
          _this3.restoreFocus();
          _this3.quill.formatText(range, 'link', false, _emitter2.default.sources.USER);
          delete _this3.linkRange;
        }
        event.preventDefault();
        _this3.hide();
      });
      this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function (range, oldRange, source) {
        if (range == null) return;
        if (range.length === 0 && source === _emitter2.default.sources.USER) {
          var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index),
              _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
              link = _quill$scroll$descend2[0],
              offset = _quill$scroll$descend2[1];

          if (link != null) {
            _this3.linkRange = new _selection.Range(range.index - offset, link.length());
            var preview = _link2.default.formats(link.domNode);
            _this3.preview.textContent = preview;
            _this3.preview.setAttribute('href', preview);
            _this3.show();
            _this3.position(_this3.quill.getBounds(_this3.linkRange));
            return;
          }
        } else {
          delete _this3.linkRange;
        }
        _this3.hide();
      });
    }
  }, {
    key: 'show',
    value: function show() {
      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'show', this).call(this);
      this.root.removeAttribute('data-mode');
    }
  }]);

  return SnowTooltip;
}(_base.BaseTooltip);

SnowTooltip.TEMPLATE = ['<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join('');

exports.default = SnowTheme;

/***/ }),
/* 63 */
/***/ (function(module, exports, __nested_webpack_require_368316__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _core = __nested_webpack_require_368316__(29);

var _core2 = _interopRequireDefault(_core);

var _align = __nested_webpack_require_368316__(36);

var _direction = __nested_webpack_require_368316__(38);

var _indent = __nested_webpack_require_368316__(64);

var _blockquote = __nested_webpack_require_368316__(65);

var _blockquote2 = _interopRequireDefault(_blockquote);

var _header = __nested_webpack_require_368316__(66);

var _header2 = _interopRequireDefault(_header);

var _list = __nested_webpack_require_368316__(67);

var _list2 = _interopRequireDefault(_list);

var _background = __nested_webpack_require_368316__(37);

var _color = __nested_webpack_require_368316__(26);

var _font = __nested_webpack_require_368316__(39);

var _size = __nested_webpack_require_368316__(40);

var _bold = __nested_webpack_require_368316__(56);

var _bold2 = _interopRequireDefault(_bold);

var _italic = __nested_webpack_require_368316__(68);

var _italic2 = _interopRequireDefault(_italic);

var _link = __nested_webpack_require_368316__(27);

var _link2 = _interopRequireDefault(_link);

var _script = __nested_webpack_require_368316__(69);

var _script2 = _interopRequireDefault(_script);

var _strike = __nested_webpack_require_368316__(70);

var _strike2 = _interopRequireDefault(_strike);

var _underline = __nested_webpack_require_368316__(71);

var _underline2 = _interopRequireDefault(_underline);

var _image = __nested_webpack_require_368316__(72);

var _image2 = _interopRequireDefault(_image);

var _video = __nested_webpack_require_368316__(73);

var _video2 = _interopRequireDefault(_video);

var _code = __nested_webpack_require_368316__(13);

var _code2 = _interopRequireDefault(_code);

var _formula = __nested_webpack_require_368316__(74);

var _formula2 = _interopRequireDefault(_formula);

var _syntax = __nested_webpack_require_368316__(75);

var _syntax2 = _interopRequireDefault(_syntax);

var _toolbar = __nested_webpack_require_368316__(57);

var _toolbar2 = _interopRequireDefault(_toolbar);

var _icons = __nested_webpack_require_368316__(41);

var _icons2 = _interopRequireDefault(_icons);

var _picker = __nested_webpack_require_368316__(28);

var _picker2 = _interopRequireDefault(_picker);

var _colorPicker = __nested_webpack_require_368316__(59);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _iconPicker = __nested_webpack_require_368316__(60);

var _iconPicker2 = _interopRequireDefault(_iconPicker);

var _tooltip = __nested_webpack_require_368316__(61);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _bubble = __nested_webpack_require_368316__(108);

var _bubble2 = _interopRequireDefault(_bubble);

var _snow = __nested_webpack_require_368316__(62);

var _snow2 = _interopRequireDefault(_snow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_core2.default.register({
  'attributors/attribute/direction': _direction.DirectionAttribute,

  'attributors/class/align': _align.AlignClass,
  'attributors/class/background': _background.BackgroundClass,
  'attributors/class/color': _color.ColorClass,
  'attributors/class/direction': _direction.DirectionClass,
  'attributors/class/font': _font.FontClass,
  'attributors/class/size': _size.SizeClass,

  'attributors/style/align': _align.AlignStyle,
  'attributors/style/background': _background.BackgroundStyle,
  'attributors/style/color': _color.ColorStyle,
  'attributors/style/direction': _direction.DirectionStyle,
  'attributors/style/font': _font.FontStyle,
  'attributors/style/size': _size.SizeStyle
}, true);

_core2.default.register({
  'formats/align': _align.AlignClass,
  'formats/direction': _direction.DirectionClass,
  'formats/indent': _indent.IndentClass,

  'formats/background': _background.BackgroundStyle,
  'formats/color': _color.ColorStyle,
  'formats/font': _font.FontClass,
  'formats/size': _size.SizeClass,

  'formats/blockquote': _blockquote2.default,
  'formats/code-block': _code2.default,
  'formats/header': _header2.default,
  'formats/list': _list2.default,

  'formats/bold': _bold2.default,
  'formats/code': _code.Code,
  'formats/italic': _italic2.default,
  'formats/link': _link2.default,
  'formats/script': _script2.default,
  'formats/strike': _strike2.default,
  'formats/underline': _underline2.default,

  'formats/image': _image2.default,
  'formats/video': _video2.default,

  'formats/list/item': _list.ListItem,

  'modules/formula': _formula2.default,
  'modules/syntax': _syntax2.default,
  'modules/toolbar': _toolbar2.default,

  'themes/bubble': _bubble2.default,
  'themes/snow': _snow2.default,

  'ui/icons': _icons2.default,
  'ui/picker': _picker2.default,
  'ui/icon-picker': _iconPicker2.default,
  'ui/color-picker': _colorPicker2.default,
  'ui/tooltip': _tooltip2.default
}, true);

exports.default = _core2.default;

/***/ }),
/* 64 */
/***/ (function(module, exports, __nested_webpack_require_372903__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndentClass = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_372903__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IdentAttributor = function (_Parchment$Attributor) {
  _inherits(IdentAttributor, _Parchment$Attributor);

  function IdentAttributor() {
    _classCallCheck(this, IdentAttributor);

    return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));
  }

  _createClass(IdentAttributor, [{
    key: 'add',
    value: function add(node, value) {
      if (value === '+1' || value === '-1') {
        var indent = this.value(node) || 0;
        value = value === '+1' ? indent + 1 : indent - 1;
      }
      if (value === 0) {
        this.remove(node);
        return true;
      } else {
        return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'add', this).call(this, node, value);
      }
    }
  }, {
    key: 'canAdd',
    value: function canAdd(node, value) {
      return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, parseInt(value));
    }
  }, {
    key: 'value',
    value: function value(node) {
      return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'value', this).call(this, node)) || undefined; // Don't return NaN
    }
  }]);

  return IdentAttributor;
}(_parchment2.default.Attributor.Class);

var IndentClass = new IdentAttributor('indent', 'ql-indent', {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
});

exports.IndentClass = IndentClass;

/***/ }),
/* 65 */
/***/ (function(module, exports, __nested_webpack_require_376943__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _block = __nested_webpack_require_376943__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Blockquote = function (_Block) {
  _inherits(Blockquote, _Block);

  function Blockquote() {
    _classCallCheck(this, Blockquote);

    return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));
  }

  return Blockquote;
}(_block2.default);

Blockquote.blotName = 'blockquote';
Blockquote.tagName = 'blockquote';

exports.default = Blockquote;

/***/ }),
/* 66 */
/***/ (function(module, exports, __nested_webpack_require_378592__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _block = __nested_webpack_require_378592__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Block) {
  _inherits(Header, _Block);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
  }

  _createClass(Header, null, [{
    key: 'formats',
    value: function formats(domNode) {
      return this.tagName.indexOf(domNode.tagName) + 1;
    }
  }]);

  return Header;
}(_block2.default);

Header.blotName = 'header';
Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];

exports.default = Header;

/***/ }),
/* 67 */
/***/ (function(module, exports, __nested_webpack_require_380948__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ListItem = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_380948__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __nested_webpack_require_380948__(4);

var _block2 = _interopRequireDefault(_block);

var _container = __nested_webpack_require_380948__(25);

var _container2 = _interopRequireDefault(_container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListItem = function (_Block) {
  _inherits(ListItem, _Block);

  function ListItem() {
    _classCallCheck(this, ListItem);

    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));
  }

  _createClass(ListItem, [{
    key: 'format',
    value: function format(name, value) {
      if (name === List.blotName && !value) {
        this.replaceWith(_parchment2.default.create(this.statics.scope));
      } else {
        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'format', this).call(this, name, value);
      }
    }
  }, {
    key: 'remove',
    value: function remove() {
      if (this.prev == null && this.next == null) {
        this.parent.remove();
      } else {
        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'remove', this).call(this);
      }
    }
  }, {
    key: 'replaceWith',
    value: function replaceWith(name, value) {
      this.parent.isolate(this.offset(this.parent), this.length());
      if (name === this.parent.statics.blotName) {
        this.parent.replaceWith(name, value);
        return this;
      } else {
        this.parent.unwrap();
        return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'replaceWith', this).call(this, name, value);
      }
    }
  }], [{
    key: 'formats',
    value: function formats(domNode) {
      return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), 'formats', this).call(this, domNode);
    }
  }]);

  return ListItem;
}(_block2.default);

ListItem.blotName = 'list-item';
ListItem.tagName = 'LI';

var List = function (_Container) {
  _inherits(List, _Container);

  _createClass(List, null, [{
    key: 'create',
    value: function create(value) {
      var tagName = value === 'ordered' ? 'OL' : 'UL';
      var node = _get(List.__proto__ || Object.getPrototypeOf(List), 'create', this).call(this, tagName);
      if (value === 'checked' || value === 'unchecked') {
        node.setAttribute('data-checked', value === 'checked');
      }
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      if (domNode.tagName === 'OL') return 'ordered';
      if (domNode.tagName === 'UL') {
        if (domNode.hasAttribute('data-checked')) {
          return domNode.getAttribute('data-checked') === 'true' ? 'checked' : 'unchecked';
        } else {
          return 'bullet';
        }
      }
      return undefined;
    }
  }]);

  function List(domNode) {
    _classCallCheck(this, List);

    var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));

    var listEventHandler = function listEventHandler(e) {
      if (e.target.parentNode !== domNode) return;
      var format = _this2.statics.formats(domNode);
      var blot = _parchment2.default.find(e.target);
      if (format === 'checked') {
        blot.format('list', 'unchecked');
      } else if (format === 'unchecked') {
        blot.format('list', 'checked');
      }
    };

    domNode.addEventListener('touchstart', listEventHandler);
    domNode.addEventListener('mousedown', listEventHandler);
    return _this2;
  }

  _createClass(List, [{
    key: 'format',
    value: function format(name, value) {
      if (this.children.length > 0) {
        this.children.tail.format(name, value);
      }
    }
  }, {
    key: 'formats',
    value: function formats() {
      // We don't inherit from FormatBlot
      return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      if (blot instanceof ListItem) {
        _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'insertBefore', this).call(this, blot, ref);
      } else {
        var index = ref == null ? this.length() : ref.offset(this);
        var after = this.split(index);
        after.parent.insertBefore(blot, after);
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'optimize', this).call(this, context);
      var next = this.next;
      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute('data-checked') === this.domNode.getAttribute('data-checked')) {
        next.moveChildren(this);
        next.remove();
      }
    }
  }, {
    key: 'replace',
    value: function replace(target) {
      if (target.statics.blotName !== this.statics.blotName) {
        var item = _parchment2.default.create(this.statics.defaultChild);
        target.moveChildren(item);
        this.appendChild(item);
      }
      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'replace', this).call(this, target);
    }
  }]);

  return List;
}(_container2.default);

List.blotName = 'list';
List.scope = _parchment2.default.Scope.BLOCK_BLOT;
List.tagName = ['OL', 'UL'];
List.defaultChild = 'list-item';
List.allowedChildren = [ListItem];

exports.ListItem = ListItem;
exports.default = List;

/***/ }),
/* 68 */
/***/ (function(module, exports, __nested_webpack_require_389000__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bold = __nested_webpack_require_389000__(56);

var _bold2 = _interopRequireDefault(_bold);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Italic = function (_Bold) {
  _inherits(Italic, _Bold);

  function Italic() {
    _classCallCheck(this, Italic);

    return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));
  }

  return Italic;
}(_bold2.default);

Italic.blotName = 'italic';
Italic.tagName = ['EM', 'I'];

exports.default = Italic;

/***/ }),
/* 69 */
/***/ (function(module, exports, __nested_webpack_require_390599__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __nested_webpack_require_390599__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Script = function (_Inline) {
  _inherits(Script, _Inline);

  function Script() {
    _classCallCheck(this, Script);

    return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));
  }

  _createClass(Script, null, [{
    key: 'create',
    value: function create(value) {
      if (value === 'super') {
        return document.createElement('sup');
      } else if (value === 'sub') {
        return document.createElement('sub');
      } else {
        return _get(Script.__proto__ || Object.getPrototypeOf(Script), 'create', this).call(this, value);
      }
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      if (domNode.tagName === 'SUB') return 'sub';
      if (domNode.tagName === 'SUP') return 'super';
      return undefined;
    }
  }]);

  return Script;
}(_inline2.default);

Script.blotName = 'script';
Script.tagName = ['SUB', 'SUP'];

exports.default = Script;

/***/ }),
/* 70 */
/***/ (function(module, exports, __nested_webpack_require_393860__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inline = __nested_webpack_require_393860__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Strike = function (_Inline) {
  _inherits(Strike, _Inline);

  function Strike() {
    _classCallCheck(this, Strike);

    return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));
  }

  return Strike;
}(_inline2.default);

Strike.blotName = 'strike';
Strike.tagName = 'S';

exports.default = Strike;

/***/ }),
/* 71 */
/***/ (function(module, exports, __nested_webpack_require_395462__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inline = __nested_webpack_require_395462__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Underline = function (_Inline) {
  _inherits(Underline, _Inline);

  function Underline() {
    _classCallCheck(this, Underline);

    return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));
  }

  return Underline;
}(_inline2.default);

Underline.blotName = 'underline';
Underline.tagName = 'U';

exports.default = Underline;

/***/ }),
/* 72 */
/***/ (function(module, exports, __nested_webpack_require_397097__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_397097__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _link = __nested_webpack_require_397097__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ATTRIBUTES = ['alt', 'height', 'width'];

var Image = function (_Parchment$Embed) {
  _inherits(Image, _Parchment$Embed);

  function Image() {
    _classCallCheck(this, Image);

    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
  }

  _createClass(Image, [{
    key: 'format',
    value: function format(name, value) {
      if (ATTRIBUTES.indexOf(name) > -1) {
        if (value) {
          this.domNode.setAttribute(name, value);
        } else {
          this.domNode.removeAttribute(name);
        }
      } else {
        _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'format', this).call(this, name, value);
      }
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), 'create', this).call(this, value);
      if (typeof value === 'string') {
        node.setAttribute('src', this.sanitize(value));
      }
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return ATTRIBUTES.reduce(function (formats, attribute) {
        if (domNode.hasAttribute(attribute)) {
          formats[attribute] = domNode.getAttribute(attribute);
        }
        return formats;
      }, {});
    }
  }, {
    key: 'match',
    value: function match(url) {
      return (/\.(jpe?g|gif|png)$/.test(url) || /^data:image\/.+;base64/.test(url)
      );
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('src');
    }
  }]);

  return Image;
}(_parchment2.default.Embed);

Image.blotName = 'image';
Image.tagName = 'IMG';

exports.default = Image;

/***/ }),
/* 73 */
/***/ (function(module, exports, __nested_webpack_require_401311__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _block = __nested_webpack_require_401311__(4);

var _link = __nested_webpack_require_401311__(27);

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ATTRIBUTES = ['height', 'width'];

var Video = function (_BlockEmbed) {
  _inherits(Video, _BlockEmbed);

  function Video() {
    _classCallCheck(this, Video);

    return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));
  }

  _createClass(Video, [{
    key: 'format',
    value: function format(name, value) {
      if (ATTRIBUTES.indexOf(name) > -1) {
        if (value) {
          this.domNode.setAttribute(name, value);
        } else {
          this.domNode.removeAttribute(name);
        }
      } else {
        _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), 'format', this).call(this, name, value);
      }
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), 'create', this).call(this, value);
      node.setAttribute('frameborder', '0');
      node.setAttribute('allowfullscreen', true);
      node.setAttribute('src', this.sanitize(value));
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return ATTRIBUTES.reduce(function (formats, attribute) {
        if (domNode.hasAttribute(attribute)) {
          formats[attribute] = domNode.getAttribute(attribute);
        }
        return formats;
      }, {});
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return _link2.default.sanitize(url);
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('src');
    }
  }]);

  return Video;
}(_block.BlockEmbed);

Video.blotName = 'video';
Video.className = 'ql-video';
Video.tagName = 'IFRAME';

exports.default = Video;

/***/ }),
/* 74 */
/***/ (function(module, exports, __nested_webpack_require_405371__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FormulaBlot = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _embed = __nested_webpack_require_405371__(35);

var _embed2 = _interopRequireDefault(_embed);

var _quill = __nested_webpack_require_405371__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __nested_webpack_require_405371__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormulaBlot = function (_Embed) {
  _inherits(FormulaBlot, _Embed);

  function FormulaBlot() {
    _classCallCheck(this, FormulaBlot);

    return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));
  }

  _createClass(FormulaBlot, null, [{
    key: 'create',
    value: function create(value) {
      var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), 'create', this).call(this, value);
      if (typeof value === 'string') {
        window.katex.render(value, node, {
          throwOnError: false,
          errorColor: '#f00'
        });
        node.setAttribute('data-value', value);
      }
      return node;
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('data-value');
    }
  }]);

  return FormulaBlot;
}(_embed2.default);

FormulaBlot.blotName = 'formula';
FormulaBlot.className = 'ql-formula';
FormulaBlot.tagName = 'SPAN';

var Formula = function (_Module) {
  _inherits(Formula, _Module);

  _createClass(Formula, null, [{
    key: 'register',
    value: function register() {
      _quill2.default.register(FormulaBlot, true);
    }
  }]);

  function Formula() {
    _classCallCheck(this, Formula);

    var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));

    if (window.katex == null) {
      throw new Error('Formula module requires KaTeX.');
    }
    return _this2;
  }

  return Formula;
}(_module2.default);

exports.FormulaBlot = FormulaBlot;
exports.default = Formula;

/***/ }),
/* 75 */
/***/ (function(module, exports, __nested_webpack_require_409500__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CodeToken = exports.CodeBlock = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __nested_webpack_require_409500__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __nested_webpack_require_409500__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __nested_webpack_require_409500__(9);

var _module2 = _interopRequireDefault(_module);

var _code = __nested_webpack_require_409500__(13);

var _code2 = _interopRequireDefault(_code);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SyntaxCodeBlock = function (_CodeBlock) {
  _inherits(SyntaxCodeBlock, _CodeBlock);

  function SyntaxCodeBlock() {
    _classCallCheck(this, SyntaxCodeBlock);

    return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));
  }

  _createClass(SyntaxCodeBlock, [{
    key: 'replaceWith',
    value: function replaceWith(block) {
      this.domNode.textContent = this.domNode.textContent;
      this.attach();
      _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), 'replaceWith', this).call(this, block);
    }
  }, {
    key: 'highlight',
    value: function highlight(_highlight) {
      var text = this.domNode.textContent;
      if (this.cachedText !== text) {
        if (text.trim().length > 0 || this.cachedText == null) {
          this.domNode.innerHTML = _highlight(text);
          this.domNode.normalize();
          this.attach();
        }
        this.cachedText = text;
      }
    }
  }]);

  return SyntaxCodeBlock;
}(_code2.default);

SyntaxCodeBlock.className = 'ql-syntax';

var CodeToken = new _parchment2.default.Attributor.Class('token', 'hljs', {
  scope: _parchment2.default.Scope.INLINE
});

var Syntax = function (_Module) {
  _inherits(Syntax, _Module);

  _createClass(Syntax, null, [{
    key: 'register',
    value: function register() {
      _quill2.default.register(CodeToken, true);
      _quill2.default.register(SyntaxCodeBlock, true);
    }
  }]);

  function Syntax(quill, options) {
    _classCallCheck(this, Syntax);

    var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));

    if (typeof _this2.options.highlight !== 'function') {
      throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');
    }
    var timer = null;
    _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
      clearTimeout(timer);
      timer = setTimeout(function () {
        _this2.highlight();
        timer = null;
      }, _this2.options.interval);
    });
    _this2.highlight();
    return _this2;
  }

  _createClass(Syntax, [{
    key: 'highlight',
    value: function highlight() {
      var _this3 = this;

      if (this.quill.selection.composing) return;
      this.quill.update(_quill2.default.sources.USER);
      var range = this.quill.getSelection();
      this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function (code) {
        code.highlight(_this3.options.highlight);
      });
      this.quill.update(_quill2.default.sources.SILENT);
      if (range != null) {
        this.quill.setSelection(range, _quill2.default.sources.SILENT);
      }
    }
  }]);

  return Syntax;
}(_module2.default);

Syntax.DEFAULTS = {
  highlight: function () {
    if (window.hljs == null) return null;
    return function (text) {
      var result = window.hljs.highlightAuto(text);
      return result.value;
    };
  }(),
  interval: 1000
};

exports.CodeBlock = SyntaxCodeBlock;
exports.CodeToken = CodeToken;
exports.default = Syntax;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>";

/***/ }),
/* 77 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>";

/***/ }),
/* 78 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>";

/***/ }),
/* 79 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>";

/***/ }),
/* 80 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <g class=\"ql-fill ql-color-label\"> <polygon points=\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\"6.817 5 6 5 6 6 6.38 6 6.817 5\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\"4.63 10 4 10 4 11 4.192 11 4.63 10\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\"12 6.868 12 6 11.62 6 12 6.868\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\"12.933 9 13 9 13 8 12.495 8 12.933 9\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\"5.5 13 9 5 12.5 13\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>";

/***/ }),
/* 81 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=4 y=5></rect> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=11 y=5></rect> <path class=\"ql-even ql-fill ql-stroke\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\"ql-even ql-fill ql-stroke\" d=M14,8c0,4.031-3,5-3,5></path> </svg>";

/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>";

/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>";

/***/ }),
/* 84 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-color-label ql-stroke ql-transparent\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\"5.5 11 9 3 12.5 11\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>";

/***/ }),
/* 85 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"3 11 5 9 3 7 3 11\"></polygon> <line class=\"ql-stroke ql-fill\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>";

/***/ }),
/* 86 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"15 12 13 10 15 8 15 12\"></polygon> <line class=\"ql-stroke ql-fill\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>";

/***/ }),
/* 87 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 88 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 89 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 90 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\"translate(24 18) rotate(-180)\"/> </svg>";

/***/ }),
/* 91 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>";

/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>";

/***/ }),
/* 93 */
/***/ (function(module, exports) {

module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>";

/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>";

/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>";

/***/ }),
/* 96 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\"ql-fill ql-stroke\" points=\"3 7 3 11 5 9 3 7\"></polyline> </svg>";

/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"5 7 5 11 3 9 5 7\"></polyline> </svg>";

/***/ }),
/* 98 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\"ql-even ql-stroke\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\"ql-even ql-stroke\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>";

/***/ }),
/* 99 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\"ql-stroke ql-thin\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\"ql-stroke ql-thin\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\"ql-stroke ql-thin\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>";

/***/ }),
/* 100 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>";

/***/ }),
/* 101 */
/***/ (function(module, exports) {

module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\"3 4 4 5 6 3\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\"3 14 4 15 6 13\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"3 9 4 10 6 8\"></polyline> </svg>";

/***/ }),
/* 102 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>";

/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>";

/***/ }),
/* 104 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-stroke ql-thin\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>";

/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>";

/***/ }),
/* 106 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>";

/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=ql-stroke points=\"7 11 9 13 11 11 7 11\"></polygon> <polygon class=ql-stroke points=\"7 7 9 5 11 7 7 7\"></polygon> </svg>";

/***/ }),
/* 108 */
/***/ (function(module, exports, __nested_webpack_require_432266__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BubbleTooltip = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend = __nested_webpack_require_432266__(3);

var _extend2 = _interopRequireDefault(_extend);

var _emitter = __nested_webpack_require_432266__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _base = __nested_webpack_require_432266__(43);

var _base2 = _interopRequireDefault(_base);

var _selection = __nested_webpack_require_432266__(15);

var _icons = __nested_webpack_require_432266__(41);

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{ header: 1 }, { header: 2 }, 'blockquote']];

var BubbleTheme = function (_BaseTheme) {
  _inherits(BubbleTheme, _BaseTheme);

  function BubbleTheme(quill, options) {
    _classCallCheck(this, BubbleTheme);

    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
      options.modules.toolbar.container = TOOLBAR_CONFIG;
    }

    var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));

    _this.quill.container.classList.add('ql-bubble');
    return _this;
  }

  _createClass(BubbleTheme, [{
    key: 'extendToolbar',
    value: function extendToolbar(toolbar) {
      this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
      this.tooltip.root.appendChild(toolbar.container);
      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
    }
  }]);

  return BubbleTheme;
}(_base2.default);

BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        link: function link(value) {
          if (!value) {
            this.quill.format('link', false);
          } else {
            this.quill.theme.tooltip.edit();
          }
        }
      }
    }
  }
});

var BubbleTooltip = function (_BaseTooltip) {
  _inherits(BubbleTooltip, _BaseTooltip);

  function BubbleTooltip(quill, bounds) {
    _classCallCheck(this, BubbleTooltip);

    var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));

    _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function (type, range, oldRange, source) {
      if (type !== _emitter2.default.events.SELECTION_CHANGE) return;
      if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {
        _this2.show();
        // Lock our width so we will expand beyond our offsetParent boundaries
        _this2.root.style.left = '0px';
        _this2.root.style.width = '';
        _this2.root.style.width = _this2.root.offsetWidth + 'px';
        var lines = _this2.quill.getLines(range.index, range.length);
        if (lines.length === 1) {
          _this2.position(_this2.quill.getBounds(range));
        } else {
          var lastLine = lines[lines.length - 1];
          var index = _this2.quill.getIndex(lastLine);
          var length = Math.min(lastLine.length() - 1, range.index + range.length - index);
          var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));
          _this2.position(_bounds);
        }
      } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
        _this2.hide();
      }
    });
    return _this2;
  }

  _createClass(BubbleTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this3 = this;

      _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'listen', this).call(this);
      this.root.querySelector('.ql-close').addEventListener('click', function () {
        _this3.root.classList.remove('ql-editing');
      });
      this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function () {
        // Let selection be restored by toolbar handlers before repositioning
        setTimeout(function () {
          if (_this3.root.classList.contains('ql-hidden')) return;
          var range = _this3.quill.getSelection();
          if (range != null) {
            _this3.position(_this3.quill.getBounds(range));
          }
        }, 1);
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.show();
    }
  }, {
    key: 'position',
    value: function position(reference) {
      var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'position', this).call(this, reference);
      var arrow = this.root.querySelector('.ql-tooltip-arrow');
      arrow.style.marginLeft = '';
      if (shift === 0) return shift;
      arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + 'px';
    }
  }]);

  return BubbleTooltip;
}(_base.BaseTooltip);

BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', '</div>'].join('');

exports.BubbleTooltip = BubbleTooltip;
exports.default = BubbleTheme;

/***/ }),
/* 109 */
/***/ (function(module, exports, __nested_webpack_require_439588__) {

module.exports = __nested_webpack_require_439588__(63);


/***/ })
/******/ ])["default"];
});

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var Scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var suppressWarning = false;
function setSuppressWarning(newSuppressWarning) {
  {
    suppressWarning = newSuppressWarning;
  }
} // In DEV, calls to console.warn and console.error get replaced
// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    if (!suppressWarning) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    if (!suppressWarning) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class

var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedFragment = 18;
var SuspenseListComponent = 19;
var ScopeComponent = 21;
var OffscreenComponent = 22;
var LegacyHiddenComponent = 23;
var CacheComponent = 24;
var TracingMarkerComponent = 25;

// -----------------------------------------------------------------------------

var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
// the react-reconciler package.

var enableNewReconciler = false; // Support legacy Primer support on internal FB www

var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber

var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
// React DOM Chopping Block
//
// Similar to main Chopping Block but only flags related to React DOM. These are
// grouped because we will likely batch all of them into a single major release.
// -----------------------------------------------------------------------------
// Disable support for comment nodes as React DOM containers. Already disabled
// in open source, but www codebase still relies on it. Need to remove.

var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
// and client rendering, mostly to allow JSX attributes to apply to the custom
// element's object properties instead of only HTML attributes.
// https://github.com/facebook/react/issues/11347

var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
var warnAboutStringRefs = false; // -----------------------------------------------------------------------------
// Debugging and DevTools
// -----------------------------------------------------------------------------
// Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
// for an experimental timeline tool.

var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState

var enableProfilerTimer = true; // Record durations for commit and passive effects phases.

var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".

var allNativeEvents = new Set();
/**
 * Mapping from registration name to event name
 */


var registrationNameDependencies = {};
/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */

var possibleRegistrationNames =  {} ; // Trust the developer to only use possibleRegistrationNames in true

function registerTwoPhaseEvent(registrationName, dependencies) {
  registerDirectEvent(registrationName, dependencies);
  registerDirectEvent(registrationName + 'Capture', dependencies);
}
function registerDirectEvent(registrationName, dependencies) {
  {
    if (registrationNameDependencies[registrationName]) {
      error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
    }
  }

  registrationNameDependencies[registrationName] = dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }

  for (var i = 0; i < dependencies.length; i++) {
    allNativeEvents.add(dependencies[i]);
  }
}

var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

var hasOwnProperty = Object.prototype.hasOwnProperty;

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}

function checkAttributeStringCoercion(value, attributeName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` attribute is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', attributeName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkPropStringCoercion(value, propName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` prop is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkCSSPropertyStringCoercion(value, propName) {
  {
    if (willCoercionThrow(value)) {
      error('The provided `%s` CSS property is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', propName, typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkHtmlStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided HTML markup uses a value of unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}
function checkFormFieldValueStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('Form field values (value, checked, defaultValue, or defaultChecked props)' + ' must be strings, not %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0; // A simple string attribute.
// Attributes that aren't in the filter are presumed to have this type.

var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.

var BOOLEANISH_STRING = 2; // A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.

var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.

var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.

var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.

var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */

var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }

  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }

  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }

  illegalAttributeNameCache[attributeName] = true;

  {
    error('Invalid attribute name: `%s`', attributeName);
  }

  return false;
}
function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }

  if (isCustomComponentTag) {
    return false;
  }

  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }

  return false;
}
function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }

  switch (typeof value) {
    case 'function': // $FlowIssue symbol is perfectly valid here

    case 'symbol':
      // eslint-disable-line
      return true;

    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }

        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }

    default:
      return false;
  }
}
function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }

  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }

  if (isCustomComponentTag) {

    return false;
  }

  if (propertyInfo !== null) {

    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;

      case OVERLOADED_BOOLEAN:
        return value === false;

      case NUMERIC:
        return isNaN(value);

      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }

  return false;
}
function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
  this.sanitizeURL = sanitizeURL;
  this.removeEmptyString = removeEmptyString;
} // When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.


var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];

reservedProps.forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.

[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).

['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.

['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML boolean attributes.

['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.

['checked', // Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.

['capture', 'download' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be positive numbers.

['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These are HTML attributes that must be numbers.

['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
});
var CAMELIZE = /[\-\:]([a-z])/g;

var capitalize = function (token) {
  return token[1].toUpperCase();
}; // This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML attribute filter.
// Some of these attributes can be hard to find. This list was created by
// scraping the MDN documentation.


['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // String SVG attributes with the xlink namespace.

['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
  false);
}); // String SVG attributes with the xml namespace.

['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
// you'll need to set attributeName to name.toLowerCase()
// instead in the assignment below.
].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
  false);
}); // These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.

['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  false, // sanitizeURL
  false);
}); // These attributes accept URLs. These must not allow javascript: URLS.
// These will also need to accept Trusted Types object in the future.

var xlinkHref = 'xlinkHref';
properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
false);
['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null, // attributeNamespace
  true, // sanitizeURL
  true);
});

// and any newline or tab are filtered out as if they're not part of the URL.
// https://url.spec.whatwg.org/#url-parsing
// Tab or newline are defined as \r\n\t:
// https://infra.spec.whatwg.org/#ascii-tab-or-newline
// A C0 control is a code point in the range \u0000 NULL to \u001F
// INFORMATION SEPARATOR ONE, inclusive:
// https://infra.spec.whatwg.org/#c0-control-or-space

/* eslint-disable max-len */

var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
var didWarn = false;

function sanitizeURL(url) {
  {
    if (!didWarn && isJavaScriptProtocol.test(url)) {
      didWarn = true;

      error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
    }
  }
}

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;
      return node[propertyName];
    } else {
      // This check protects multiple uses of `expected`, which is why the
      // react-internal/safe-string-coercion rule is disabled in several spots
      // below.
      {
        checkAttributeStringCoercion(expected, name);
      }

      if ( propertyInfo.sanitizeURL) {
        // If we haven't fully disabled javascript: URLs, and if
        // the hydration is successful of a javascript: URL, we
        // still want to warn on the client.
        // eslint-disable-next-line react-internal/safe-string-coercion
        sanitizeURL('' + expected);
      }

      var attributeName = propertyInfo.attributeName;
      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);

          if (value === '') {
            return true;
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          } // eslint-disable-next-line react-internal/safe-string-coercion


          if (value === '' + expected) {
            return expected;
          }

          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }

        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        } // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.


        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}
/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */

function getValueForAttribute(node, name, expected, isCustomComponentTag) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }

    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }

    var value = node.getAttribute(name);

    {
      checkAttributeStringCoercion(expected, name);
    }

    if (value === '' + expected) {
      return expected;
    }

    return value;
  }
}
/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */

function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);

  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }

  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }


  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;

      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        {
          checkAttributeStringCoercion(value, name);
        }

        node.setAttribute(_attributeName,  '' + value);
      }
    }

    return;
  }

  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;
      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }

    return;
  } // The rest are treated as attributes with special cases.


  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;
    var attributeValue;

    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      // If attribute type is boolean, we know for sure it won't be an execution sink
      // and we won't require Trusted Type here.
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      {
        {
          checkAttributeStringCoercion(value, attributeName);
        }

        attributeValue = '' + value;
      }

      if (propertyInfo.sanitizeURL) {
        sanitizeURL(attributeValue.toString());
      }
    }

    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_SCOPE_TYPE = Symbol.for('react.scope');
var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
var REACT_CACHE_TYPE = Symbol.for('react.cache');
var REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

var assign = Object.assign;

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}

function describeClassComponentFrame(ctor, source, ownerFn) {
  {
    return describeNativeComponentFrame(ctor, true);
  }
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

function describeFiber(fiber) {
  var owner =  fiber._debugOwner ? fiber._debugOwner.type : null ;
  var source =  fiber._debugSource ;

  switch (fiber.tag) {
    case HostComponent:
      return describeBuiltInComponentFrame(fiber.type);

    case LazyComponent:
      return describeBuiltInComponentFrame('Lazy');

    case SuspenseComponent:
      return describeBuiltInComponentFrame('Suspense');

    case SuspenseListComponent:
      return describeBuiltInComponentFrame('SuspenseList');

    case FunctionComponent:
    case IndeterminateComponent:
    case SimpleMemoComponent:
      return describeFunctionComponentFrame(fiber.type);

    case ForwardRef:
      return describeFunctionComponentFrame(fiber.type.render);

    case ClassComponent:
      return describeClassComponentFrame(fiber.type);

    default:
      return '';
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  try {
    var info = '';
    var node = workInProgress;

    do {
      info += describeFiber(node);
      node = node.return;
    } while (node);

    return info;
  } catch (x) {
    return '\nError generating stack: ' + x.message + '\n' + x.stack;
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

function getWrappedName$1(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
} // Keep in sync with shared/getComponentNameFromType


function getContextName$1(type) {
  return type.displayName || 'Context';
}

function getComponentNameFromFiber(fiber) {
  var tag = fiber.tag,
      type = fiber.type;

  switch (tag) {
    case CacheComponent:
      return 'Cache';

    case ContextConsumer:
      var context = type;
      return getContextName$1(context) + '.Consumer';

    case ContextProvider:
      var provider = type;
      return getContextName$1(provider._context) + '.Provider';

    case DehydratedFragment:
      return 'DehydratedFragment';

    case ForwardRef:
      return getWrappedName$1(type, type.render, 'ForwardRef');

    case Fragment:
      return 'Fragment';

    case HostComponent:
      // Host component type is the display name (e.g. "div", "View")
      return type;

    case HostPortal:
      return 'Portal';

    case HostRoot:
      return 'Root';

    case HostText:
      return 'Text';

    case LazyComponent:
      // Name comes from the type in this case; we don't have a tag.
      return getComponentNameFromType(type);

    case Mode:
      if (type === REACT_STRICT_MODE_TYPE) {
        // Don't be less specific than shared/getComponentNameFromType
        return 'StrictMode';
      }

      return 'Mode';

    case OffscreenComponent:
      return 'Offscreen';

    case Profiler:
      return 'Profiler';

    case ScopeComponent:
      return 'Scope';

    case SuspenseComponent:
      return 'Suspense';

    case SuspenseListComponent:
      return 'SuspenseList';

    case TracingMarkerComponent:
      return 'TracingMarker';
    // The display name for this tags come from the user-provided type:

    case ClassComponent:
    case FunctionComponent:
    case IncompleteClassComponent:
    case IndeterminateComponent:
    case MemoComponent:
    case SimpleMemoComponent:
      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      break;

  }

  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
var current = null;
var isRendering = false;
function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }

    var owner = current._debugOwner;

    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentNameFromFiber(owner);
    }
  }

  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    } // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.


    return getStackByFiberInDevAndProd(current);
  }
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    isRendering = false;
  }
}
function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
    current = fiber;
    isRendering = false;
  }
}
function getCurrentFiber() {
  {
    return current;
  }
}
function setIsRendering(rendering) {
  {
    isRendering = rendering;
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  // The coercion safety check is performed in getToStringValue().
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'string':
    case 'undefined':
      return value;

    case 'object':
      {
        checkFormFieldValueStringCoercion(value);
      }

      return value;

    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};
function checkControlledValueProps(tagName, props) {
  {
    if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
      error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }

    if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
      error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  }
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';

  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  {
    checkFormFieldValueStringCoercion(node[valueField]);
  }

  var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)

  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  var get = descriptor.get,
      set = descriptor.set;
  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      {
        checkFormFieldValueStringCoercion(value);
      }

      currentValue = '' + value;
      set.call(this, value);
    }
  }); // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });
  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      {
        checkFormFieldValueStringCoercion(value);
      }

      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  } // TODO: Once it's just Fiber we can move this to node._wrapperState


  node._valueTracker = trackValueOnNode(node);
}
function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
  // that trying again will succeed

  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);

  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }

  return false;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);

  if (typeof doc === 'undefined') {
    return null;
  }

  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}
/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */


function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;
  var hostProps = assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });
  return hostProps;
}
function initWrapperState(element, props) {
  {
    checkControlledValueProps('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnCheckedDefaultChecked = true;
    }

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);

      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}
function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;

  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}
function updateWrapper(element, props) {
  var node = element;

  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnUncontrolledToControlled = true;
    }

    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');

      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);
  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}
function postMountWrapper(element, props, isHydrating) {
  var node = element; // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.

  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872

    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.

    if (!isHydrating) {
      {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (initialValue !== node.value) {
          node.value = initialValue;
        }
      }
    }

    {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = initialValue;
    }
  } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.


  var name = node.name;

  if (name !== '') {
    node.name = '';
  }

  {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}
function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;

  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    } // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.


    {
      checkAttributeStringCoercion(name, 'name');
    }

    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];

      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      } // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.


      var otherProps = getFiberCurrentPropsFromNode(otherNode);

      if (!otherProps) {
        throw new Error('ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.');
      } // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set


      updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.

      updateWrapper(otherNode, otherProps);
    }
  }
} // In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253


function setDefaultValue(node, type, value) {
  if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;
var didWarnInvalidInnerHTML = false;
/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  {
    // If a value is not provided, then the children must be simple.
    if (props.value == null) {
      if (typeof props.children === 'object' && props.children !== null) {
        React.Children.forEach(props.children, function (child) {
          if (child == null) {
            return;
          }

          if (typeof child === 'string' || typeof child === 'number') {
            return;
          }

          if (!didWarnInvalidChild) {
            didWarnInvalidChild = true;

            error('Cannot infer the option value of complex children. ' + 'Pass a `value` prop or use a plain string as children to <option>.');
          }
        });
      } else if (props.dangerouslySetInnerHTML != null) {
        if (!didWarnInvalidInnerHTML) {
          didWarnInvalidInnerHTML = true;

          error('Pass a `value` prop if you set dangerouslyInnerHTML so React knows ' + 'which value should be selected.');
        }
      }
    } // TODO: Remove support for `selected` in <option>.


    if (props.selected != null && !didWarnSelectedSetOnOption) {
      error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');

      didWarnSelectedSetOnOption = true;
    }
  }
}
function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

var didWarnValueDefaultValue$1;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();

  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }

  return '';
}

var valuePropNames = ['value', 'defaultValue'];
/**
 * Validation function for `value` and `defaultValue`.
 */

function checkSelectPropTypes(props) {
  {
    checkControlledValueProps('select', props);

    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];

      if (props[propName] == null) {
        continue;
      }

      var propNameIsArray = isArray(props[propName]);

      if (props.multiple && !propNameIsArray) {
        error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
      } else if (!props.multiple && propNameIsArray) {
        error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
      }
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};

    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }

    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }

      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));

    var defaultSelected = null;

    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;

        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }

        return;
      }

      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }

    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}
/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */


function getHostProps$1(element, props) {
  return assign({}, props, {
    value: undefined
  });
}
function initWrapperState$1(element, props) {
  var node = element;

  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');

      didWarnValueDefaultValue$1 = true;
    }
  }
}
function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}
function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}
function restoreControlledState$1(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
function getHostProps$2(element, props) {
  var node = element;

  if (props.dangerouslySetInnerHTML != null) {
    throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');
  } // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.


  var hostProps = assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}
function initWrapperState$2(element, props) {
  var node = element;

  {
    checkControlledValueProps('textarea', props);

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');

      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value; // Only bother fetching default value if we're going to use it

  if (initialValue == null) {
    var children = props.children,
        defaultValue = props.defaultValue;

    if (children != null) {
      {
        error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }

      {
        if (defaultValue != null) {
          throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');
        }

        if (isArray(children)) {
          if (children.length > 1) {
            throw new Error('<textarea> can only have at most one child.');
          }

          children = children[0];
        }

        defaultValue = children;
      }
    }

    if (defaultValue == null) {
      defaultValue = '';
    }

    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}
function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);

  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

    if (newValue !== node.value) {
      node.value = newValue;
    }

    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }

  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}
function postMountWrapper$3(element, props) {
  var node = element; // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.

  var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

  if (textContent === node._wrapperState.initialValue) {
    if (textContent !== '' && textContent !== null) {
      node.value = textContent;
    }
  }
}
function restoreControlledState$2(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.

function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;

    case 'math':
      return MATH_NAMESPACE;

    default:
      return HTML_NAMESPACE;
  }
}
function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }

  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE;
  } // By default, pass namespace below.


  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

var reusableSVGContainer;
/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */

var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  if (node.namespaceURI === SVG_NAMESPACE) {

    if (!('innerHTML' in node)) {
      // IE does not have innerHTML for SVG nodes, so instead we inject the
      // new markup in a temp node and then move the child nodes across into
      // the target node
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;

      while (node.firstChild) {
        node.removeChild(node.firstChild);
      }

      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }

      return;
    }
  }

  node.innerHTML = html;
});

/**
 * HTML nodeType values that represent the type of the node
 */
var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */

var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }

  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  aspectRatio: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,
  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}
/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */


var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */

function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901
  var isEmpty = value == null || typeof value === 'boolean' || value === '';

  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  {
    checkCSSPropertyStringCoercion(value, name);
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */

function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

  var badStyleValueWithSemicolonPattern = /;\s*$/;
  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;

    error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;

    error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;

    error('`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;

    error('`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */

function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';

    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }

      var styleValue = styles[styleName];

      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
        delimiter = ';';
      }
    }

    return serialized || null;
  }
}
/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */

function setValueForStyles(node, styles) {
  var style = node.style;

  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }

    var isCustomProperty = styleName.indexOf('--') === 0;

    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }

    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

    if (styleName === 'float') {
      styleName = 'cssFloat';
    }

    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}
/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */


function expandShorthandMap(styles) {
  var expanded = {};

  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];

    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }

  return expanded;
}
/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */


function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  {
    if (!nextStyles) {
      return;
    }

    var expandedUpdates = expandShorthandMap(styleUpdates);
    var expandedStyles = expandShorthandMap(nextStyles);
    var warnedAbout = {};

    for (var key in expandedUpdates) {
      var originalKey = expandedUpdates[key];
      var correctOriginalKey = expandedStyles[key];

      if (correctOriginalKey && originalKey !== correctOriginalKey) {
        var warningKey = originalKey + ',' + correctOriginalKey;

        if (warnedAbout[warningKey]) {
          continue;
        }

        warnedAbout[warningKey] = true;

        error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
      }
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a list for
// those special-case tags.
var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

};

// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = assign({
  menuitem: true
}, omittedCloseTags);

var HTML = '__html';

function assertValidProps(tag, props) {
  if (!props) {
    return;
  } // Note the use of `==` which checks for null or undefined.


  if (voidElementTags[tag]) {
    if (props.children != null || props.dangerouslySetInnerHTML != null) {
      throw new Error(tag + " is a void element tag and must neither have `children` nor " + 'use `dangerouslySetInnerHTML`.');
    }
  }

  if (props.dangerouslySetInnerHTML != null) {
    if (props.children != null) {
      throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');
    }

    if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) {
      throw new Error('`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://reactjs.org/link/dangerously-set-inner-html ' + 'for more information.');
    }
  }

  {
    if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
      error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
    }
  }

  if (props.style != null && typeof props.style !== 'object') {
    throw new Error('The `style` prop expects a mapping from style properties to values, ' + "not a string. For example, style={{marginRight: spacing + 'em'}} when " + 'using JSX.');
  }
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }

  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this list too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;

    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG allowed attribute list, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  disablepictureinpicture: 'disablePictureInPicture',
  disableremoteplayback: 'disableRemotePlayback',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  enterkeyhint: 'enterKeyHint',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  imagesizes: 'imageSizes',
  imagesrcset: 'imageSrcSet',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',
  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0,
  // state
  'aria-description': 0,
  'aria-details': 0,
  'aria-disabled': 0,
  // state
  'aria-hidden': 0,
  // state
  'aria-invalid': 0,
  // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name) {
  {
    if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
      return true;
    }

    if (rARIACamel.test(name)) {
      var ariaName = 'aria-' + name.slice(4).toLowerCase();
      var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (correctName == null) {
        error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);

        warnedProperties[name] = true;
        return true;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== correctName) {
        error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);

        warnedProperties[name] = true;
        return true;
      }
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.

      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      } // aria-* attributes should be lowercase; suggest the lowercase version.


      if (name !== standardName) {
        error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties[name] = true;
        return true;
      }
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  {
    var invalidProps = [];

    for (var key in props) {
      var isValid = validateProperty(type, key);

      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
      error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    } else if (invalidProps.length > 1) {
      error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
    }
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;
function validateProperties$1(type, props) {
  {
    if (type !== 'input' && type !== 'textarea' && type !== 'select') {
      return;
    }

    if (props != null && props.value === null && !didWarnValueNull) {
      didWarnValueNull = true;

      if (type === 'select' && props.multiple) {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
      } else {
        error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
      }
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, eventRegistry) {
    if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');

      warnedProperties$1[name] = true;
      return true;
    } // We can't rely on the event system being injected on the server.


    if (eventRegistry != null) {
      var registrationNameDependencies = eventRegistry.registrationNameDependencies,
          possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

      if (registrationNameDependencies.hasOwnProperty(name)) {
        return true;
      }

      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

      if (registrationName != null) {
        error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);

        warnedProperties$1[name] = true;
        return true;
      }

      if (EVENT_NAME_REGEX.test(name)) {
        error('Unknown event handler property `%s`. It will be ignored.', name);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Let the ARIA attribute hook validate ARIA attributes


    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');

      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);

      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];

      if (standardName !== name) {
        error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);

        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);

      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }

      warnedProperties$1[name] = true;
      return true;
    } // Now that we've validated casing, do not validate
    // data types for reserved props


    if (isReserved) {
      return true;
    } // Warn when a known attribute is a bad type


    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    } // Warn when passing the strings 'false' or 'true' into a boolean prop


    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);

      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, eventRegistry) {
  {
    var unknownProps = [];

    for (var key in props) {
      var isValid = validateProperty$1(type, key, props[key], eventRegistry);

      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
      error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    } else if (unknownProps.length > 1) {
      error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
    }
  }
};

function validateProperties$2(type, props, eventRegistry) {
  if (isCustomComponent(type, props)) {
    return;
  }

  warnUnknownProperties(type, props, eventRegistry);
}

var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
var IS_NON_DELEGATED = 1 << 1;
var IS_CAPTURE_PHASE = 1 << 2;
// set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
// we call willDeferLaterForLegacyFBSupport, thus not bailing out
// will result in endless cycles like an infinite loop.
// We also don't want to defer during event replaying.

var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;

// This exists to avoid circular dependency between ReactDOMEventReplaying
// and DOMPluginEventSystem.
var currentReplayingEvent = null;
function setReplayingEvent(event) {
  {
    if (currentReplayingEvent !== null) {
      error('Expected currently replaying event to be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');
    }
  }

  currentReplayingEvent = event;
}
function resetReplayingEvent() {
  {
    if (currentReplayingEvent === null) {
      error('Expected currently replaying event to not be null. This error ' + 'is likely caused by a bug in React. Please file an issue.');
    }
  }

  currentReplayingEvent = null;
}
function isReplayingEvent(event) {
  return event === currentReplayingEvent;
}

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html


  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);

  if (!internalInstance) {
    // Unmounted
    return;
  }

  if (typeof restoreImpl !== 'function') {
    throw new Error('setRestoreImplementation() needs to be called to handle a target for controlled ' + 'events. This error is likely caused by a bug in React. Please file an issue.');
  }

  var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.

  if (stateNode) {
    var _props = getFiberCurrentPropsFromNode(stateNode);

    restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
  }
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}
function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}
function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}
function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }

  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;
  restoreStateOfTarget(target);

  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.
// Defaults

var batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var flushSyncImpl = function () {};

var isInsideEventHandler = false;

function finishEventHandler() {
  // Here we wait until all updates have propagated, which is important
  // when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  // Then we restore state of any controlled component.
  var controlledComponentsHavePendingUpdates = needsStateRestore();

  if (controlledComponentsHavePendingUpdates) {
    // If a controlled event was fired, we may need to restore the state of
    // the DOM node back to the controlled value. This is necessary when React
    // bails out of the update without touching the DOM.
    // TODO: Restore state in the microtask, after the discrete updates flush,
    // instead of early flushing them here.
    flushSyncImpl();
    restoreStateIfNeeded();
  }
}

function batchedUpdates(fn, a, b) {
  if (isInsideEventHandler) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(a, b);
  }

  isInsideEventHandler = true;

  try {
    return batchedUpdatesImpl(fn, a, b);
  } finally {
    isInsideEventHandler = false;
    finishEventHandler();
  }
} // TODO: Replace with flushSync
function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
  batchedUpdatesImpl = _batchedUpdatesImpl;
  flushSyncImpl = _flushSyncImpl;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
    case 'onMouseEnter':
      return !!(props.disabled && isInteractive(type));

    default:
      return false;
  }
}
/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */


function getListener(inst, registrationName) {
  var stateNode = inst.stateNode;

  if (stateNode === null) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }

  var props = getFiberCurrentPropsFromNode(stateNode);

  if (props === null) {
    // Work in progress.
    return null;
  }

  var listener = props[registrationName];

  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }

  if (listener && typeof listener !== 'function') {
    throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
  }

  return listener;
}

var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

if (canUseDOM) {
  try {
    var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

    Object.defineProperty(options, 'passive', {
      get: function () {
        passiveBrowserEventsSupported = true;
      }
    });
    window.addEventListener('test', options, options);
    window.removeEventListener('test', options, options);
  } catch (e) {
    passiveBrowserEventsSupported = false;
  }
}

function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);

  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
}

var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!
  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebook/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      if (typeof document === 'undefined' || document === null) {
        throw new Error('The `document` global was defined when React was initialized, but is not ' + 'defined anymore. This can happen in a test environment if a component ' + 'schedules an update from an asynchronous callback, but the test has already ' + 'finished running. To solve this, you can either unmount the component at ' + 'the end of your test (and ensure that any asynchronous operations get ' + 'canceled in `componentWillUnmount`), or you can change the test itself ' + 'to be asynchronous.');
      }

      var evt = document.createEvent('Event');
      var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.

      var didError = true; // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.

      var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688

      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      function restoreAfterDispatch() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.

        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }
      } // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.


      var funcArgs = Array.prototype.slice.call(arguments, 3);

      function callCallback() {
        didCall = true;
        restoreAfterDispatch();
        func.apply(context, funcArgs);
        didError = false;
      } // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.


      var error; // Use this to track whether the error event is ever called.

      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;

        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }

        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {// Ignore.
            }
          }
        }
      } // Create a fake event type.


      var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.

      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didCall && didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          // eslint-disable-next-line react-internal/prod-error-codes
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          // eslint-disable-next-line react-internal/prod-error-codes
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');
        }

        this.onError(error);
      } // Remove our event listeners


      window.removeEventListener('error', handleWindowError);

      if (!didCall) {
        // Something went really wrong, and our event was not dispatched.
        // https://github.com/facebook/react/issues/16734
        // https://github.com/facebook/react/issues/16585
        // Fall back to the production implementation.
        restoreAfterDispatch();
        return invokeGuardedCallbackProd.apply(this, arguments);
      }
    };
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

var hasError = false;
var caughtError = null; // Used by event system to capture/rethrow the first error.

var hasRethrowError = false;
var rethrowError = null;
var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};
/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}
/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */

function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);

  if (hasError) {
    var error = clearCaughtError();

    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}
/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */

function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}
function hasCaughtError() {
  return hasError;
}
function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    throw new Error('clearCaughtError was called but no error was captured. This error ' + 'is likely caused by a bug in React. Please file an issue.');
  }
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */
function get(key) {
  return key._reactInternals;
}
function has(key) {
  return key._reactInternals !== undefined;
}
function set(key, value) {
  key._reactInternals = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoFlags =
/*                      */
0;
var PerformedWork =
/*                */
1; // You can change the rest (and add more).

var Placement =
/*                    */
2;
var Update =
/*                       */
4;
var ChildDeletion =
/*                */
16;
var ContentReset =
/*                 */
32;
var Callback =
/*                     */
64;
var DidCapture =
/*                   */
128;
var ForceClientRender =
/*            */
256;
var Ref =
/*                          */
512;
var Snapshot =
/*                     */
1024;
var Passive =
/*                      */
2048;
var Hydrating =
/*                    */
4096;
var Visibility =
/*                   */
8192;
var StoreConsistency =
/*             */
16384;
var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)

var HostEffectMask =
/*               */
32767; // These are not really side effects, but we still reuse this field.

var Incomplete =
/*                   */
32768;
var ShouldCapture =
/*                */
65536;
var ForceUpdateForLegacySuspense =
/* */
131072;
var Forked =
/*                       */
1048576; // Static tags describe aspects of a fiber that are not specific to a render,
// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
// This enables us to defer more work in the unmount case,
// since we can defer traversing the tree during layout to look for Passive effects,
// and instead rely on the static flag as a signal that there may be cleanup work.

var RefStatic =
/*                    */
2097152;
var LayoutStatic =
/*                 */
4194304;
var PassiveStatic =
/*                */
8388608; // These flags allow us to traverse to fibers that have effects on mount
// without traversing the entire tree after every commit for
// double invoking

var MountLayoutDev =
/*               */
16777216;
var MountPassiveDev =
/*              */
33554432; // Groups of flags that are used in the commit phase to skip over trees that
// don't contain effects, by checking subtreeFlags.

var BeforeMutationMask = // TODO: Remove Update flag from before mutation phase by re-landing Visibility
// flag logic (see #20043)
Update | Snapshot | ( 0);
var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask

var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
// This allows certain concepts to persist without recalculating them,
// e.g. whether a subtree contains passive effects or portals.

var StaticMask = LayoutStatic | PassiveStatic | RefStatic;

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
function getNearestMountedFiber(fiber) {
  var node = fiber;
  var nearestMounted = fiber;

  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    var nextNode = node;

    do {
      node = nextNode;

      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
        // This is an insertion or in-progress hydration. The nearest possible
        // mounted fiber is the parent but we need to continue to figure out
        // if that one is still mounted.
        nearestMounted = node.return;
      }

      nextNode = node.return;
    } while (nextNode);
  } else {
    while (node.return) {
      node = node.return;
    }
  }

  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return nearestMounted;
  } // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.


  return null;
}
function getSuspenseInstanceFromFiber(fiber) {
  if (fiber.tag === SuspenseComponent) {
    var suspenseState = fiber.memoizedState;

    if (suspenseState === null) {
      var current = fiber.alternate;

      if (current !== null) {
        suspenseState = current.memoizedState;
      }
    }

    if (suspenseState !== null) {
      return suspenseState.dehydrated;
    }
  }

  return null;
}
function getContainerFromFiber(fiber) {
  return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
}
function isFiberMounted(fiber) {
  return getNearestMountedFiber(fiber) === fiber;
}
function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;

    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;

      if (!instance._warnedAboutRefsInRender) {
        error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromFiber(ownerFiber) || 'A component');
      }

      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);

  if (!fiber) {
    return false;
  }

  return getNearestMountedFiber(fiber) === fiber;
}

function assertIsMounted(fiber) {
  if (getNearestMountedFiber(fiber) !== fiber) {
    throw new Error('Unable to find node on an unmounted component.');
  }
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;

  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var nearestMounted = getNearestMountedFiber(fiber);

    if (nearestMounted === null) {
      throw new Error('Unable to find node on an unmounted component.');
    }

    if (nearestMounted !== fiber) {
      return null;
    }

    return fiber;
  } // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.


  var a = fiber;
  var b = alternate;

  while (true) {
    var parentA = a.return;

    if (parentA === null) {
      // We're at the root.
      break;
    }

    var parentB = parentA.alternate;

    if (parentB === null) {
      // There is no alternate. This is an unusual case. Currently, it only
      // happens when a Suspense component is hidden. An extra fragment fiber
      // is inserted in between the Suspense fiber and its children. Skip
      // over this extra fragment fiber and proceed to the next parent.
      var nextParent = parentA.return;

      if (nextParent !== null) {
        a = b = nextParent;
        continue;
      } // If there's no parent, we're at the root.


      break;
    } // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.


    if (parentA.child === parentB.child) {
      var child = parentA.child;

      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }

        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }

        child = child.sibling;
      } // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.


      throw new Error('Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;

      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }

        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }

        _child = _child.sibling;
      }

      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;

        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          throw new Error('Child was not found in either parent set. This indicates a bug ' + 'in React related to the return pointer. Please file an issue.');
        }
      }
    }

    if (a.alternate !== b) {
      throw new Error("Return fibers should always be each others' alternates. " + 'This error is likely caused by a bug in React. Please file an issue.');
    }
  } // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.


  if (a.tag !== HostRoot) {
    throw new Error('Unable to find node on an unmounted component.');
  }

  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  } // Otherwise B has to be current branch.


  return alternate;
}
function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
}

function findCurrentHostFiberImpl(node) {
  // Next we'll drill down this component to find the first HostComponent/Text.
  if (node.tag === HostComponent || node.tag === HostText) {
    return node;
  }

  var child = node.child;

  while (child !== null) {
    var match = findCurrentHostFiberImpl(child);

    if (match !== null) {
      return match;
    }

    child = child.sibling;
  }

  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
}

function findCurrentHostFiberWithNoPortalsImpl(node) {
  // Next we'll drill down this component to find the first HostComponent/Text.
  if (node.tag === HostComponent || node.tag === HostText) {
    return node;
  }

  var child = node.child;

  while (child !== null) {
    if (child.tag !== HostPortal) {
      var match = findCurrentHostFiberWithNoPortalsImpl(child);

      if (match !== null) {
        return match;
      }
    }

    child = child.sibling;
  }

  return null;
}

// This module only exists as an ESM wrapper around the external CommonJS
var scheduleCallback = Scheduler.unstable_scheduleCallback;
var cancelCallback = Scheduler.unstable_cancelCallback;
var shouldYield = Scheduler.unstable_shouldYield;
var requestPaint = Scheduler.unstable_requestPaint;
var now = Scheduler.unstable_now;
var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
var NormalPriority = Scheduler.unstable_NormalPriority;
var LowPriority = Scheduler.unstable_LowPriority;
var IdlePriority = Scheduler.unstable_IdlePriority;
// this doesn't actually exist on the scheduler, but it *does*
// on scheduler/unstable_mock, which we'll need for internal testing
var unstable_yieldValue = Scheduler.unstable_yieldValue;
var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;

var rendererID = null;
var injectedHook = null;
var injectedProfilingHooks = null;
var hasLoggedError = false;
var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }

  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }

  if (!hook.supportsFiber) {
    {
      error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');
    } // DevTools exists, even though it doesn't support Fiber.


    return true;
  }

  try {
    if (enableSchedulingProfiler) {
      // Conditionally inject these hooks only if Timeline profiler is supported by this build.
      // This gives DevTools a way to feature detect that isn't tied to version number
      // (since profiling and timeline are controlled by different feature flags).
      internals = assign({}, internals, {
        getLaneLabelMap: getLaneLabelMap,
        injectProfilingHooks: injectProfilingHooks
      });
    }

    rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

    injectedHook = hook;
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      error('React instrumentation encountered an error: %s.', err);
    }
  }

  if (hook.checkDCE) {
    // This is the real DevTools.
    return true;
  } else {
    // This is likely a hook installed by Fast Refresh runtime.
    return false;
  }
}
function onScheduleRoot(root, children) {
  {
    if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {
      try {
        injectedHook.onScheduleFiberRoot(rendererID, root, children);
      } catch (err) {
        if ( !hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitRoot(root, eventPriority) {
  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {
    try {
      var didError = (root.current.flags & DidCapture) === DidCapture;

      if (enableProfilerTimer) {
        var schedulerPriority;

        switch (eventPriority) {
          case DiscreteEventPriority:
            schedulerPriority = ImmediatePriority;
            break;

          case ContinuousEventPriority:
            schedulerPriority = UserBlockingPriority;
            break;

          case DefaultEventPriority:
            schedulerPriority = NormalPriority;
            break;

          case IdleEventPriority:
            schedulerPriority = IdlePriority;
            break;

          default:
            schedulerPriority = NormalPriority;
            break;
        }

        injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
      } else {
        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
      }
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onPostCommitRoot(root) {
  if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') {
    try {
      injectedHook.onPostCommitFiberRoot(rendererID, root);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function onCommitUnmount(fiber) {
  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {
    try {
      injectedHook.onCommitFiberUnmount(rendererID, fiber);
    } catch (err) {
      {
        if (!hasLoggedError) {
          hasLoggedError = true;

          error('React instrumentation encountered an error: %s', err);
        }
      }
    }
  }
}
function setIsStrictModeForDevtools(newIsStrictMode) {
  {
    if (typeof unstable_yieldValue === 'function') {
      // We're in a test because Scheduler.unstable_yieldValue only exists
      // in SchedulerMock. To reduce the noise in strict mode tests,
      // suppress warnings and disable scheduler yielding during the double render
      unstable_setDisableYieldValue(newIsStrictMode);
      setSuppressWarning(newIsStrictMode);
    }

    if (injectedHook && typeof injectedHook.setStrictMode === 'function') {
      try {
        injectedHook.setStrictMode(rendererID, newIsStrictMode);
      } catch (err) {
        {
          if (!hasLoggedError) {
            hasLoggedError = true;

            error('React instrumentation encountered an error: %s', err);
          }
        }
      }
    }
  }
} // Profiler API hooks

function injectProfilingHooks(profilingHooks) {
  injectedProfilingHooks = profilingHooks;
}

function getLaneLabelMap() {
  {
    var map = new Map();
    var lane = 1;

    for (var index = 0; index < TotalLanes; index++) {
      var label = getLabelForLane(lane);
      map.set(lane, label);
      lane *= 2;
    }

    return map;
  }
}

function markCommitStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') {
      injectedProfilingHooks.markCommitStarted(lanes);
    }
  }
}
function markCommitStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') {
      injectedProfilingHooks.markCommitStopped();
    }
  }
}
function markComponentRenderStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') {
      injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
  }
}
function markComponentRenderStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') {
      injectedProfilingHooks.markComponentRenderStopped();
    }
  }
}
function markComponentPassiveEffectMountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
  }
}
function markComponentPassiveEffectMountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
  }
}
function markComponentPassiveEffectUnmountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
  }
}
function markComponentPassiveEffectUnmountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') {
      injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
  }
}
function markComponentLayoutEffectMountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
  }
}
function markComponentLayoutEffectMountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
  }
}
function markComponentLayoutEffectUnmountStarted(fiber) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
  }
}
function markComponentLayoutEffectUnmountStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') {
      injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
  }
}
function markComponentErrored(fiber, thrownValue, lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') {
      injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
  }
}
function markComponentSuspended(fiber, wakeable, lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') {
      injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
  }
}
function markLayoutEffectsStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') {
      injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
  }
}
function markLayoutEffectsStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') {
      injectedProfilingHooks.markLayoutEffectsStopped();
    }
  }
}
function markPassiveEffectsStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') {
      injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
  }
}
function markPassiveEffectsStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') {
      injectedProfilingHooks.markPassiveEffectsStopped();
    }
  }
}
function markRenderStarted(lanes) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') {
      injectedProfilingHooks.markRenderStarted(lanes);
    }
  }
}
function markRenderYielded() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') {
      injectedProfilingHooks.markRenderYielded();
    }
  }
}
function markRenderStopped() {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') {
      injectedProfilingHooks.markRenderStopped();
    }
  }
}
function markRenderScheduled(lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') {
      injectedProfilingHooks.markRenderScheduled(lane);
    }
  }
}
function markForceUpdateScheduled(fiber, lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') {
      injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
  }
}
function markStateUpdateScheduled(fiber, lane) {
  {
    if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') {
      injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
  }
}

var NoMode =
/*                         */
0; // TODO: Remove ConcurrentMode by reading from the root tag instead

var ConcurrentMode =
/*                 */
1;
var ProfileMode =
/*                    */
2;
var StrictLegacyMode =
/*               */
8;
var StrictEffectsMode =
/*              */
16;

// TODO: This is pretty well supported by browsers. Maybe we can drop it.
var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
// Based on:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

var log = Math.log;
var LN2 = Math.LN2;

function clz32Fallback(x) {
  var asUint = x >>> 0;

  if (asUint === 0) {
    return 32;
  }

  return 31 - (log(asUint) / LN2 | 0) | 0;
}

// If those values are changed that package should be rebuilt and redeployed.

var TotalLanes = 31;
var NoLanes =
/*                        */
0;
var NoLane =
/*                          */
0;
var SyncLane =
/*                        */
1;
var InputContinuousHydrationLane =
/*    */
2;
var InputContinuousLane =
/*             */
4;
var DefaultHydrationLane =
/*            */
8;
var DefaultLane =
/*                     */
16;
var TransitionHydrationLane =
/*                */
32;
var TransitionLanes =
/*                       */
4194240;
var TransitionLane1 =
/*                        */
64;
var TransitionLane2 =
/*                        */
128;
var TransitionLane3 =
/*                        */
256;
var TransitionLane4 =
/*                        */
512;
var TransitionLane5 =
/*                        */
1024;
var TransitionLane6 =
/*                        */
2048;
var TransitionLane7 =
/*                        */
4096;
var TransitionLane8 =
/*                        */
8192;
var TransitionLane9 =
/*                        */
16384;
var TransitionLane10 =
/*                       */
32768;
var TransitionLane11 =
/*                       */
65536;
var TransitionLane12 =
/*                       */
131072;
var TransitionLane13 =
/*                       */
262144;
var TransitionLane14 =
/*                       */
524288;
var TransitionLane15 =
/*                       */
1048576;
var TransitionLane16 =
/*                       */
2097152;
var RetryLanes =
/*                            */
130023424;
var RetryLane1 =
/*                             */
4194304;
var RetryLane2 =
/*                             */
8388608;
var RetryLane3 =
/*                             */
16777216;
var RetryLane4 =
/*                             */
33554432;
var RetryLane5 =
/*                             */
67108864;
var SomeRetryLane = RetryLane1;
var SelectiveHydrationLane =
/*          */
134217728;
var NonIdleLanes =
/*                          */
268435455;
var IdleHydrationLane =
/*               */
268435456;
var IdleLane =
/*                        */
536870912;
var OffscreenLane =
/*                   */
1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
// It should be kept in sync with the Lanes values above.

function getLabelForLane(lane) {
  {
    if (lane & SyncLane) {
      return 'Sync';
    }

    if (lane & InputContinuousHydrationLane) {
      return 'InputContinuousHydration';
    }

    if (lane & InputContinuousLane) {
      return 'InputContinuous';
    }

    if (lane & DefaultHydrationLane) {
      return 'DefaultHydration';
    }

    if (lane & DefaultLane) {
      return 'Default';
    }

    if (lane & TransitionHydrationLane) {
      return 'TransitionHydration';
    }

    if (lane & TransitionLanes) {
      return 'Transition';
    }

    if (lane & RetryLanes) {
      return 'Retry';
    }

    if (lane & SelectiveHydrationLane) {
      return 'SelectiveHydration';
    }

    if (lane & IdleHydrationLane) {
      return 'IdleHydration';
    }

    if (lane & IdleLane) {
      return 'Idle';
    }

    if (lane & OffscreenLane) {
      return 'Offscreen';
    }
  }
}
var NoTimestamp = -1;
var nextTransitionLane = TransitionLane1;
var nextRetryLane = RetryLane1;

function getHighestPriorityLanes(lanes) {
  switch (getHighestPriorityLane(lanes)) {
    case SyncLane:
      return SyncLane;

    case InputContinuousHydrationLane:
      return InputContinuousHydrationLane;

    case InputContinuousLane:
      return InputContinuousLane;

    case DefaultHydrationLane:
      return DefaultHydrationLane;

    case DefaultLane:
      return DefaultLane;

    case TransitionHydrationLane:
      return TransitionHydrationLane;

    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
      return lanes & TransitionLanes;

    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      return lanes & RetryLanes;

    case SelectiveHydrationLane:
      return SelectiveHydrationLane;

    case IdleHydrationLane:
      return IdleHydrationLane;

    case IdleLane:
      return IdleLane;

    case OffscreenLane:
      return OffscreenLane;

    default:
      {
        error('Should have found matching lanes. This is a bug in React.');
      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.


      return lanes;
  }
}

function getNextLanes(root, wipLanes) {
  // Early bailout if there's no pending work left.
  var pendingLanes = root.pendingLanes;

  if (pendingLanes === NoLanes) {
    return NoLanes;
  }

  var nextLanes = NoLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
  // even if the work is suspended.

  var nonIdlePendingLanes = pendingLanes & NonIdleLanes;

  if (nonIdlePendingLanes !== NoLanes) {
    var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;

    if (nonIdleUnblockedLanes !== NoLanes) {
      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
    } else {
      var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;

      if (nonIdlePingedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
      }
    }
  } else {
    // The only remaining work is Idle.
    var unblockedLanes = pendingLanes & ~suspendedLanes;

    if (unblockedLanes !== NoLanes) {
      nextLanes = getHighestPriorityLanes(unblockedLanes);
    } else {
      if (pingedLanes !== NoLanes) {
        nextLanes = getHighestPriorityLanes(pingedLanes);
      }
    }
  }

  if (nextLanes === NoLanes) {
    // This should only be reachable if we're suspended
    // TODO: Consider warning in this path if a fallback timer is not scheduled.
    return NoLanes;
  } // If we're already in the middle of a render, switching lanes will interrupt
  // it and we'll lose our progress. We should only do this if the new lanes are
  // higher priority.


  if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
  // bother waiting until the root is complete.
  (wipLanes & suspendedLanes) === NoLanes) {
    var nextLane = getHighestPriorityLane(nextLanes);
    var wipLane = getHighestPriorityLane(wipLanes);

    if ( // Tests whether the next lane is equal or lower priority than the wip
    // one. This works because the bits decrease in priority as you go left.
    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
    // only difference between default updates and transition updates is that
    // default updates do not support refresh transitions.
    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) {
      // Keep working on the existing in-progress tree. Do not interrupt.
      return wipLanes;
    }
  }

  if ((nextLanes & InputContinuousLane) !== NoLanes) {
    // When updates are sync by default, we entangle continuous priority updates
    // and default updates, so they render in the same batch. The only reason
    // they use separate lanes is because continuous updates should interrupt
    // transitions, but default updates should not.
    nextLanes |= pendingLanes & DefaultLane;
  } // Check for entangled lanes and add them to the batch.
  //
  // A lane is said to be entangled with another when it's not allowed to render
  // in a batch that does not also include the other lane. Typically we do this
  // when multiple updates have the same source, and we only want to respond to
  // the most recent event from that source.
  //
  // Note that we apply entanglements *after* checking for partial work above.
  // This means that if a lane is entangled during an interleaved event while
  // it's already rendering, we won't interrupt it. This is intentional, since
  // entanglement is usually "best effort": we'll try our best to render the
  // lanes in the same batch, but it's not worth throwing out partially
  // completed work in order to do it.
  // TODO: Reconsider this. The counter-argument is that the partial work
  // represents an intermediate state, which we don't want to show to the user.
  // And by spending extra time finishing it, we're increasing the amount of
  // time it takes to show the final state, which is what they are actually
  // waiting for.
  //
  // For those exceptions where entanglement is semantically important, like
  // useMutableSource, we should ensure that there is no partial work at the
  // time we apply the entanglement.


  var entangledLanes = root.entangledLanes;

  if (entangledLanes !== NoLanes) {
    var entanglements = root.entanglements;
    var lanes = nextLanes & entangledLanes;

    while (lanes > 0) {
      var index = pickArbitraryLaneIndex(lanes);
      var lane = 1 << index;
      nextLanes |= entanglements[index];
      lanes &= ~lane;
    }
  }

  return nextLanes;
}
function getMostRecentEventTime(root, lanes) {
  var eventTimes = root.eventTimes;
  var mostRecentEventTime = NoTimestamp;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var eventTime = eventTimes[index];

    if (eventTime > mostRecentEventTime) {
      mostRecentEventTime = eventTime;
    }

    lanes &= ~lane;
  }

  return mostRecentEventTime;
}

function computeExpirationTime(lane, currentTime) {
  switch (lane) {
    case SyncLane:
    case InputContinuousHydrationLane:
    case InputContinuousLane:
      // User interactions should expire slightly more quickly.
      //
      // NOTE: This is set to the corresponding constant as in Scheduler.js.
      // When we made it larger, a product metric in www regressed, suggesting
      // there's a user interaction that's being starved by a series of
      // synchronous updates. If that theory is correct, the proper solution is
      // to fix the starvation. However, this scenario supports the idea that
      // expiration times are an important safeguard when starvation
      // does happen.
      return currentTime + 250;

    case DefaultHydrationLane:
    case DefaultLane:
    case TransitionHydrationLane:
    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
      return currentTime + 5000;

    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      // TODO: Retries should be allowed to expire if they are CPU bound for
      // too long, but when I made this change it caused a spike in browser
      // crashes. There must be some other underlying bug; not super urgent but
      // ideally should figure out why and fix it. Unfortunately we don't have
      // a repro for the crashes, only detected via production metrics.
      return NoTimestamp;

    case SelectiveHydrationLane:
    case IdleHydrationLane:
    case IdleLane:
    case OffscreenLane:
      // Anything idle priority or lower should never expire.
      return NoTimestamp;

    default:
      {
        error('Should have found matching lanes. This is a bug in React.');
      }

      return NoTimestamp;
  }
}

function markStarvedLanesAsExpired(root, currentTime) {
  // TODO: This gets called every time we yield. We can optimize by storing
  // the earliest expiration time on the root. Then use that to quickly bail out
  // of this function.
  var pendingLanes = root.pendingLanes;
  var suspendedLanes = root.suspendedLanes;
  var pingedLanes = root.pingedLanes;
  var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
  // expiration time. If so, we'll assume the update is being starved and mark
  // it as expired to force it to finish.

  var lanes = pendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    var expirationTime = expirationTimes[index];

    if (expirationTime === NoTimestamp) {
      // Found a pending lane with no expiration time. If it's not suspended, or
      // if it's pinged, assume it's CPU-bound. Compute a new expiration time
      // using the current time.
      if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
        // Assumes timestamps are monotonically increasing.
        expirationTimes[index] = computeExpirationTime(lane, currentTime);
      }
    } else if (expirationTime <= currentTime) {
      // This lane expired
      root.expiredLanes |= lane;
    }

    lanes &= ~lane;
  }
} // This returns the highest priority pending lanes regardless of whether they
// are suspended.

function getHighestPriorityPendingLanes(root) {
  return getHighestPriorityLanes(root.pendingLanes);
}
function getLanesToRetrySynchronouslyOnError(root) {
  var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;

  if (everythingButOffscreen !== NoLanes) {
    return everythingButOffscreen;
  }

  if (everythingButOffscreen & OffscreenLane) {
    return OffscreenLane;
  }

  return NoLanes;
}
function includesSyncLane(lanes) {
  return (lanes & SyncLane) !== NoLanes;
}
function includesNonIdleWork(lanes) {
  return (lanes & NonIdleLanes) !== NoLanes;
}
function includesOnlyRetries(lanes) {
  return (lanes & RetryLanes) === lanes;
}
function includesOnlyNonUrgentLanes(lanes) {
  var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
  return (lanes & UrgentLanes) === NoLanes;
}
function includesOnlyTransitions(lanes) {
  return (lanes & TransitionLanes) === lanes;
}
function includesBlockingLane(root, lanes) {

  var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
  return (lanes & SyncDefaultLanes) !== NoLanes;
}
function includesExpiredLane(root, lanes) {
  // This is a separate check from includesBlockingLane because a lane can
  // expire after a render has already started.
  return (lanes & root.expiredLanes) !== NoLanes;
}
function isTransitionLane(lane) {
  return (lane & TransitionLanes) !== NoLanes;
}
function claimNextTransitionLane() {
  // Cycle through the lanes, assigning each new transition to the next lane.
  // In most cases, this means every transition gets its own lane, until we
  // run out of lanes and cycle back to the beginning.
  var lane = nextTransitionLane;
  nextTransitionLane <<= 1;

  if ((nextTransitionLane & TransitionLanes) === NoLanes) {
    nextTransitionLane = TransitionLane1;
  }

  return lane;
}
function claimNextRetryLane() {
  var lane = nextRetryLane;
  nextRetryLane <<= 1;

  if ((nextRetryLane & RetryLanes) === NoLanes) {
    nextRetryLane = RetryLane1;
  }

  return lane;
}
function getHighestPriorityLane(lanes) {
  return lanes & -lanes;
}
function pickArbitraryLane(lanes) {
  // This wrapper function gets inlined. Only exists so to communicate that it
  // doesn't matter which bit is selected; you can pick any bit without
  // affecting the algorithms where its used. Here I'm using
  // getHighestPriorityLane because it requires the fewest operations.
  return getHighestPriorityLane(lanes);
}

function pickArbitraryLaneIndex(lanes) {
  return 31 - clz32(lanes);
}

function laneToIndex(lane) {
  return pickArbitraryLaneIndex(lane);
}

function includesSomeLane(a, b) {
  return (a & b) !== NoLanes;
}
function isSubsetOfLanes(set, subset) {
  return (set & subset) === subset;
}
function mergeLanes(a, b) {
  return a | b;
}
function removeLanes(set, subset) {
  return set & ~subset;
}
function intersectLanes(a, b) {
  return a & b;
} // Seems redundant, but it changes the type from a single lane (used for
// updates) to a group of lanes (used for flushing work).

function laneToLanes(lane) {
  return lane;
}
function higherPriorityLane(a, b) {
  // This works because the bit ranges decrease in priority as you go left.
  return a !== NoLane && a < b ? a : b;
}
function createLaneMap(initial) {
  // Intentionally pushing one by one.
  // https://v8.dev/blog/elements-kinds#avoid-creating-holes
  var laneMap = [];

  for (var i = 0; i < TotalLanes; i++) {
    laneMap.push(initial);
  }

  return laneMap;
}
function markRootUpdated(root, updateLane, eventTime) {
  root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
  // could unblock them. Clear the suspended lanes so that we can try rendering
  // them again.
  //
  // TODO: We really only need to unsuspend only lanes that are in the
  // `subtreeLanes` of the updated fiber, or the update lanes of the return
  // path. This would exclude suspended updates in an unrelated sibling tree,
  // since there's no way for this update to unblock it.
  //
  // We don't do this if the incoming update is idle, because we never process
  // idle updates until after all the regular updates have finished; there's no
  // way it could unblock a transition.

  if (updateLane !== IdleLane) {
    root.suspendedLanes = NoLanes;
    root.pingedLanes = NoLanes;
  }

  var eventTimes = root.eventTimes;
  var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
  // recent event, and we assume time is monotonically increasing.

  eventTimes[index] = eventTime;
}
function markRootSuspended(root, suspendedLanes) {
  root.suspendedLanes |= suspendedLanes;
  root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.

  var expirationTimes = root.expirationTimes;
  var lanes = suspendedLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootPinged(root, pingedLanes, eventTime) {
  root.pingedLanes |= root.suspendedLanes & pingedLanes;
}
function markRootFinished(root, remainingLanes) {
  var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
  root.pendingLanes = remainingLanes; // Let's try everything again

  root.suspendedLanes = NoLanes;
  root.pingedLanes = NoLanes;
  root.expiredLanes &= remainingLanes;
  root.mutableReadLanes &= remainingLanes;
  root.entangledLanes &= remainingLanes;
  var entanglements = root.entanglements;
  var eventTimes = root.eventTimes;
  var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work

  var lanes = noLongerPendingLanes;

  while (lanes > 0) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;
    entanglements[index] = NoLanes;
    eventTimes[index] = NoTimestamp;
    expirationTimes[index] = NoTimestamp;
    lanes &= ~lane;
  }
}
function markRootEntangled(root, entangledLanes) {
  // In addition to entangling each of the given lanes with each other, we also
  // have to consider _transitive_ entanglements. For each lane that is already
  // entangled with *any* of the given lanes, that lane is now transitively
  // entangled with *all* the given lanes.
  //
  // Translated: If C is entangled with A, then entangling A with B also
  // entangles C with B.
  //
  // If this is hard to grasp, it might help to intentionally break this
  // function and look at the tests that fail in ReactTransition-test.js. Try
  // commenting out one of the conditions below.
  var rootEntangledLanes = root.entangledLanes |= entangledLanes;
  var entanglements = root.entanglements;
  var lanes = rootEntangledLanes;

  while (lanes) {
    var index = pickArbitraryLaneIndex(lanes);
    var lane = 1 << index;

    if ( // Is this one of the newly entangled lanes?
    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
    entanglements[index] & entangledLanes) {
      entanglements[index] |= entangledLanes;
    }

    lanes &= ~lane;
  }
}
function getBumpedLaneForHydration(root, renderLanes) {
  var renderLane = getHighestPriorityLane(renderLanes);
  var lane;

  switch (renderLane) {
    case InputContinuousLane:
      lane = InputContinuousHydrationLane;
      break;

    case DefaultLane:
      lane = DefaultHydrationLane;
      break;

    case TransitionLane1:
    case TransitionLane2:
    case TransitionLane3:
    case TransitionLane4:
    case TransitionLane5:
    case TransitionLane6:
    case TransitionLane7:
    case TransitionLane8:
    case TransitionLane9:
    case TransitionLane10:
    case TransitionLane11:
    case TransitionLane12:
    case TransitionLane13:
    case TransitionLane14:
    case TransitionLane15:
    case TransitionLane16:
    case RetryLane1:
    case RetryLane2:
    case RetryLane3:
    case RetryLane4:
    case RetryLane5:
      lane = TransitionHydrationLane;
      break;

    case IdleLane:
      lane = IdleHydrationLane;
      break;

    default:
      // Everything else is already either a hydration lane, or shouldn't
      // be retried at a hydration lane.
      lane = NoLane;
      break;
  } // Check if the lane we chose is suspended. If so, that indicates that we
  // already attempted and failed to hydrate at that level. Also check if we're
  // already rendering that lane, which is rare but could happen.


  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {
    // Give up trying to hydrate and fall back to client render.
    return NoLane;
  }

  return lane;
}
function addFiberToLanesMap(root, fiber, lanes) {

  if (!isDevToolsPresent) {
    return;
  }

  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;

  while (lanes > 0) {
    var index = laneToIndex(lanes);
    var lane = 1 << index;
    var updaters = pendingUpdatersLaneMap[index];
    updaters.add(fiber);
    lanes &= ~lane;
  }
}
function movePendingFibersToMemoized(root, lanes) {

  if (!isDevToolsPresent) {
    return;
  }

  var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
  var memoizedUpdaters = root.memoizedUpdaters;

  while (lanes > 0) {
    var index = laneToIndex(lanes);
    var lane = 1 << index;
    var updaters = pendingUpdatersLaneMap[index];

    if (updaters.size > 0) {
      updaters.forEach(function (fiber) {
        var alternate = fiber.alternate;

        if (alternate === null || !memoizedUpdaters.has(alternate)) {
          memoizedUpdaters.add(fiber);
        }
      });
      updaters.clear();
    }

    lanes &= ~lane;
  }
}
function getTransitionsForLanes(root, lanes) {
  {
    return null;
  }
}

var DiscreteEventPriority = SyncLane;
var ContinuousEventPriority = InputContinuousLane;
var DefaultEventPriority = DefaultLane;
var IdleEventPriority = IdleLane;
var currentUpdatePriority = NoLane;
function getCurrentUpdatePriority() {
  return currentUpdatePriority;
}
function setCurrentUpdatePriority(newPriority) {
  currentUpdatePriority = newPriority;
}
function runWithPriority(priority, fn) {
  var previousPriority = currentUpdatePriority;

  try {
    currentUpdatePriority = priority;
    return fn();
  } finally {
    currentUpdatePriority = previousPriority;
  }
}
function higherEventPriority(a, b) {
  return a !== 0 && a < b ? a : b;
}
function lowerEventPriority(a, b) {
  return a === 0 || a > b ? a : b;
}
function isHigherEventPriority(a, b) {
  return a !== 0 && a < b;
}
function lanesToEventPriority(lanes) {
  var lane = getHighestPriorityLane(lanes);

  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
    return DiscreteEventPriority;
  }

  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
    return ContinuousEventPriority;
  }

  if (includesNonIdleWork(lane)) {
    return DefaultEventPriority;
  }

  return IdleEventPriority;
}

// This is imported by the event replaying implementation in React DOM. It's
// in a separate file to break a circular dependency between the renderer and
// the reconciler.
function isRootDehydrated(root) {
  var currentState = root.current.memoizedState;
  return currentState.isDehydrated;
}

var _attemptSynchronousHydration;

function setAttemptSynchronousHydration(fn) {
  _attemptSynchronousHydration = fn;
}
function attemptSynchronousHydration(fiber) {
  _attemptSynchronousHydration(fiber);
}
var attemptContinuousHydration;
function setAttemptContinuousHydration(fn) {
  attemptContinuousHydration = fn;
}
var attemptHydrationAtCurrentPriority;
function setAttemptHydrationAtCurrentPriority(fn) {
  attemptHydrationAtCurrentPriority = fn;
}
var getCurrentUpdatePriority$1;
function setGetCurrentUpdatePriority(fn) {
  getCurrentUpdatePriority$1 = fn;
}
var attemptHydrationAtPriority;
function setAttemptHydrationAtPriority(fn) {
  attemptHydrationAtPriority = fn;
} // TODO: Upgrade this definition once we're on a newer version of Flow that
// has this definition built-in.

var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
// if the last target was dehydrated.

var queuedFocus = null;
var queuedDrag = null;
var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

var queuedPointers = new Map();
var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

var queuedExplicitHydrationTargets = [];
var discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase
'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];
function isDiscreteEventThatRequiresHydration(eventType) {
  return discreteReplayableEvents.indexOf(eventType) > -1;
}

function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  return {
    blockedOn: blockedOn,
    domEventName: domEventName,
    eventSystemFlags: eventSystemFlags,
    nativeEvent: nativeEvent,
    targetContainers: [targetContainer]
  };
}

function clearIfContinuousEvent(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'focusin':
    case 'focusout':
      queuedFocus = null;
      break;

    case 'dragenter':
    case 'dragleave':
      queuedDrag = null;
      break;

    case 'mouseover':
    case 'mouseout':
      queuedMouse = null;
      break;

    case 'pointerover':
    case 'pointerout':
      {
        var pointerId = nativeEvent.pointerId;
        queuedPointers.delete(pointerId);
        break;
      }

    case 'gotpointercapture':
    case 'lostpointercapture':
      {
        var _pointerId = nativeEvent.pointerId;
        queuedPointerCaptures.delete(_pointerId);
        break;
      }
  }
}

function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
    var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);

    if (blockedOn !== null) {
      var _fiber2 = getInstanceFromNode(blockedOn);

      if (_fiber2 !== null) {
        // Attempt to increase the priority of this target.
        attemptContinuousHydration(_fiber2);
      }
    }

    return queuedEvent;
  } // If we have already queued this exact event, then it's because
  // the different event systems have different DOM event listeners.
  // We can accumulate the flags, and the targetContainers, and
  // store a single event to be replayed.


  existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
  var targetContainers = existingQueuedEvent.targetContainers;

  if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
    targetContainers.push(targetContainer);
  }

  return existingQueuedEvent;
}

function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // These set relatedTarget to null because the replayed event will be treated as if we
  // moved from outside the window (no target) onto the target once it hydrates.
  // Instead of mutating we could clone the event.
  switch (domEventName) {
    case 'focusin':
      {
        var focusEvent = nativeEvent;
        queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
        return true;
      }

    case 'dragenter':
      {
        var dragEvent = nativeEvent;
        queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
        return true;
      }

    case 'mouseover':
      {
        var mouseEvent = nativeEvent;
        queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
        return true;
      }

    case 'pointerover':
      {
        var pointerEvent = nativeEvent;
        var pointerId = pointerEvent.pointerId;
        queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
        return true;
      }

    case 'gotpointercapture':
      {
        var _pointerEvent = nativeEvent;
        var _pointerId2 = _pointerEvent.pointerId;
        queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
        return true;
      }
  }

  return false;
} // Check if this target is unblocked. Returns true if it's unblocked.

function attemptExplicitHydrationTarget(queuedTarget) {
  // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
  // Try to unify them. It's a bit tricky since it would require two return
  // values.
  var targetInst = getClosestInstanceFromNode(queuedTarget.target);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted !== null) {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // We're blocked on hydrating this boundary.
          // Increase its priority.
          queuedTarget.blockedOn = instance;
          attemptHydrationAtPriority(queuedTarget.priority, function () {
            attemptHydrationAtCurrentPriority(nearestMounted);
          });
          return;
        }
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (isRootDehydrated(root)) {
          queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
          // a root other than sync.

          return;
        }
      }
    }
  }

  queuedTarget.blockedOn = null;
}

function queueExplicitHydrationTarget(target) {
  // TODO: This will read the priority if it's dispatched by the React
  // event system but not native events. Should read window.event.type, like
  // we do for updates (getCurrentEventPriority).
  var updatePriority = getCurrentUpdatePriority$1();
  var queuedTarget = {
    blockedOn: null,
    target: target,
    priority: updatePriority
  };
  var i = 0;

  for (; i < queuedExplicitHydrationTargets.length; i++) {
    // Stop once we hit the first target with lower priority than
    if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {
      break;
    }
  }

  queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);

  if (i === 0) {
    attemptExplicitHydrationTarget(queuedTarget);
  }
}

function attemptReplayContinuousQueuedEvent(queuedEvent) {
  if (queuedEvent.blockedOn !== null) {
    return false;
  }

  var targetContainers = queuedEvent.targetContainers;

  while (targetContainers.length > 0) {
    var targetContainer = targetContainers[0];
    var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);

    if (nextBlockedOn === null) {
      {
        var nativeEvent = queuedEvent.nativeEvent;
        var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
        setReplayingEvent(nativeEventClone);
        nativeEvent.target.dispatchEvent(nativeEventClone);
        resetReplayingEvent();
      }
    } else {
      // We're still blocked. Try again later.
      var _fiber3 = getInstanceFromNode(nextBlockedOn);

      if (_fiber3 !== null) {
        attemptContinuousHydration(_fiber3);
      }

      queuedEvent.blockedOn = nextBlockedOn;
      return false;
    } // This target container was successfully dispatched. Try the next.


    targetContainers.shift();
  }

  return true;
}

function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
  if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
    map.delete(key);
  }
}

function replayUnblockedEvents() {
  hasScheduledReplayAttempt = false;


  if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
    queuedFocus = null;
  }

  if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
    queuedDrag = null;
  }

  if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
    queuedMouse = null;
  }

  queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
  queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
}

function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
  if (queuedEvent.blockedOn === unblocked) {
    queuedEvent.blockedOn = null;

    if (!hasScheduledReplayAttempt) {
      hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
      // now unblocked. This first might not actually be unblocked yet.
      // We could check it early to avoid scheduling an unnecessary callback.

      Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
    }
  }
}

function retryIfBlockedOn(unblocked) {
  // Mark anything that was blocked on this as no longer blocked
  // and eligible for a replay.
  if (queuedDiscreteEvents.length > 0) {
    scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
    // worth it because we expect very few discrete events to queue up and once
    // we are actually fully unblocked it will be fast to replay them.

    for (var i = 1; i < queuedDiscreteEvents.length; i++) {
      var queuedEvent = queuedDiscreteEvents[i];

      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;
      }
    }
  }

  if (queuedFocus !== null) {
    scheduleCallbackIfUnblocked(queuedFocus, unblocked);
  }

  if (queuedDrag !== null) {
    scheduleCallbackIfUnblocked(queuedDrag, unblocked);
  }

  if (queuedMouse !== null) {
    scheduleCallbackIfUnblocked(queuedMouse, unblocked);
  }

  var unblock = function (queuedEvent) {
    return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
  };

  queuedPointers.forEach(unblock);
  queuedPointerCaptures.forEach(unblock);

  for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
    var queuedTarget = queuedExplicitHydrationTargets[_i];

    if (queuedTarget.blockedOn === unblocked) {
      queuedTarget.blockedOn = null;
    }
  }

  while (queuedExplicitHydrationTargets.length > 0) {
    var nextExplicitTarget = queuedExplicitHydrationTargets[0];

    if (nextExplicitTarget.blockedOn !== null) {
      // We're still blocked.
      break;
    } else {
      attemptExplicitHydrationTarget(nextExplicitTarget);

      if (nextExplicitTarget.blockedOn === null) {
        // We're unblocked.
        queuedExplicitHydrationTargets.shift();
      }
    }
  }
}

var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?

var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
// We'd like to remove this but it's not clear if this is safe.

function setEnabled(enabled) {
  _enabled = !!enabled;
}
function isEnabled() {
  return _enabled;
}
function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
  var eventPriority = getEventPriority(domEventName);
  var listenerWrapper;

  switch (eventPriority) {
    case DiscreteEventPriority:
      listenerWrapper = dispatchDiscreteEvent;
      break;

    case ContinuousEventPriority:
      listenerWrapper = dispatchContinuousEvent;
      break;

    case DefaultEventPriority:
    default:
      listenerWrapper = dispatchEvent;
      break;
  }

  return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
}

function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = null;

  try {
    setCurrentUpdatePriority(DiscreteEventPriority);
    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig.transition = prevTransition;
  }
}

function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = null;

  try {
    setCurrentUpdatePriority(ContinuousEventPriority);
    dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig.transition = prevTransition;
  }
}

function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  if (!_enabled) {
    return;
  }

  {
    dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
  }
}

function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

  if (blockedOn === null) {
    dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
    clearIfContinuousEvent(domEventName, nativeEvent);
    return;
  }

  if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
    nativeEvent.stopPropagation();
    return;
  } // We need to clear only if we didn't queue because
  // queueing is accumulative.


  clearIfContinuousEvent(domEventName, nativeEvent);

  if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
    while (blockedOn !== null) {
      var fiber = getInstanceFromNode(blockedOn);

      if (fiber !== null) {
        attemptSynchronousHydration(fiber);
      }

      var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

      if (nextBlockedOn === null) {
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
      }

      if (nextBlockedOn === blockedOn) {
        break;
      }

      blockedOn = nextBlockedOn;
    }

    if (blockedOn !== null) {
      nativeEvent.stopPropagation();
    }

    return;
  } // This is not replayable so we'll invoke it but without a target,
  // in case the event system needs to trace it.


  dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
}

var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
// The return_targetInst field above is conceptually part of the return value.

function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
  // TODO: Warn if _enabled is false.
  return_targetInst = null;
  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (targetInst !== null) {
    var nearestMounted = getNearestMountedFiber(targetInst);

    if (nearestMounted === null) {
      // This tree has been unmounted already. Dispatch without a target.
      targetInst = null;
    } else {
      var tag = nearestMounted.tag;

      if (tag === SuspenseComponent) {
        var instance = getSuspenseInstanceFromFiber(nearestMounted);

        if (instance !== null) {
          // Queue the event to be replayed later. Abort dispatching since we
          // don't want this event dispatched twice through the event system.
          // TODO: If this is the first discrete event in the queue. Schedule an increased
          // priority for this boundary.
          return instance;
        } // This shouldn't happen, something went wrong but to avoid blocking
        // the whole system, dispatch the event without a target.
        // TODO: Warn.


        targetInst = null;
      } else if (tag === HostRoot) {
        var root = nearestMounted.stateNode;

        if (isRootDehydrated(root)) {
          // If this happens during a replay something went wrong and it might block
          // the whole system.
          return getContainerFromFiber(nearestMounted);
        }

        targetInst = null;
      } else if (nearestMounted !== targetInst) {
        // If we get an event (ex: img onload) before committing that
        // component's mount, ignore it for now (that is, treat it as if it was an
        // event on a non-React tree). We might also consider queueing events and
        // dispatching them after the mount.
        targetInst = null;
      }
    }
  }

  return_targetInst = targetInst; // We're not blocked on anything.

  return null;
}
function getEventPriority(domEventName) {
  switch (domEventName) {
    // Used by SimpleEventPlugin:
    case 'cancel':
    case 'click':
    case 'close':
    case 'contextmenu':
    case 'copy':
    case 'cut':
    case 'auxclick':
    case 'dblclick':
    case 'dragend':
    case 'dragstart':
    case 'drop':
    case 'focusin':
    case 'focusout':
    case 'input':
    case 'invalid':
    case 'keydown':
    case 'keypress':
    case 'keyup':
    case 'mousedown':
    case 'mouseup':
    case 'paste':
    case 'pause':
    case 'play':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointerup':
    case 'ratechange':
    case 'reset':
    case 'resize':
    case 'seeked':
    case 'submit':
    case 'touchcancel':
    case 'touchend':
    case 'touchstart':
    case 'volumechange': // Used by polyfills:
    // eslint-disable-next-line no-fallthrough

    case 'change':
    case 'selectionchange':
    case 'textInput':
    case 'compositionstart':
    case 'compositionend':
    case 'compositionupdate': // Only enableCreateEventHandleAPI:
    // eslint-disable-next-line no-fallthrough

    case 'beforeblur':
    case 'afterblur': // Not used by React but could be by user code:
    // eslint-disable-next-line no-fallthrough

    case 'beforeinput':
    case 'blur':
    case 'fullscreenchange':
    case 'focus':
    case 'hashchange':
    case 'popstate':
    case 'select':
    case 'selectstart':
      return DiscreteEventPriority;

    case 'drag':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'mousemove':
    case 'mouseout':
    case 'mouseover':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'scroll':
    case 'toggle':
    case 'touchmove':
    case 'wheel': // Not used by React but could be by user code:
    // eslint-disable-next-line no-fallthrough

    case 'mouseenter':
    case 'mouseleave':
    case 'pointerenter':
    case 'pointerleave':
      return ContinuousEventPriority;

    case 'message':
      {
        // We might be in the Scheduler callback.
        // Eventually this mechanism will be replaced by a check
        // of the current priority on the native scheduler.
        var schedulerPriority = getCurrentPriorityLevel();

        switch (schedulerPriority) {
          case ImmediatePriority:
            return DiscreteEventPriority;

          case UserBlockingPriority:
            return ContinuousEventPriority;

          case NormalPriority:
          case LowPriority:
            // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
            return DefaultEventPriority;

          case IdlePriority:
            return IdleEventPriority;

          default:
            return DefaultEventPriority;
        }
      }

    default:
      return DefaultEventPriority;
  }
}

function addEventBubbleListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, false);
  return listener;
}
function addEventCaptureListener(target, eventType, listener) {
  target.addEventListener(eventType, listener, true);
  return listener;
}
function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    capture: true,
    passive: passive
  });
  return listener;
}
function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
  target.addEventListener(eventType, listener, {
    passive: passive
  });
  return listener;
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var root = null;
var startText = null;
var fallbackText = null;
function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}
function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}
function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start;
  var startValue = startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;

  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}
function getText() {
  if ('value' in root) {
    return root.value;
  }

  return root.textContent;
}

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.


  if (charCode === 10) {
    charCode = 13;
  } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.


  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
} // This is intentionally a factory so that we have different returned constructors.
// If we had a single constructor, it would be megamorphic and engines would deopt.


function createSyntheticEvent(Interface) {
  /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */
  function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
    this._reactName = reactName;
    this._targetInst = targetInst;
    this.type = reactEventType;
    this.nativeEvent = nativeEvent;
    this.target = nativeEventTarget;
    this.currentTarget = null;

    for (var _propName in Interface) {
      if (!Interface.hasOwnProperty(_propName)) {
        continue;
      }

      var normalize = Interface[_propName];

      if (normalize) {
        this[_propName] = normalize(nativeEvent);
      } else {
        this[_propName] = nativeEvent[_propName];
      }
    }

    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

    if (defaultPrevented) {
      this.isDefaultPrevented = functionThatReturnsTrue;
    } else {
      this.isDefaultPrevented = functionThatReturnsFalse;
    }

    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  assign(SyntheticBaseEvent.prototype, {
    preventDefault: function () {
      this.defaultPrevented = true;
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.preventDefault) {
        event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.returnValue !== 'unknown') {
        event.returnValue = false;
      }

      this.isDefaultPrevented = functionThatReturnsTrue;
    },
    stopPropagation: function () {
      var event = this.nativeEvent;

      if (!event) {
        return;
      }

      if (event.stopPropagation) {
        event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
      } else if (typeof event.cancelBubble !== 'unknown') {
        // The ChangeEventPlugin registers a "propertychange" event for
        // IE. This event does not support bubbling or cancelling, and
        // any references to cancelBubble throw "Member not found".  A
        // typeof check of "unknown" circumvents this issue (and is also
        // IE specific).
        event.cancelBubble = true;
      }

      this.isPropagationStopped = functionThatReturnsTrue;
    },

    /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */
    persist: function () {// Modern event system doesn't use pooling.
    },

    /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */
    isPersistent: functionThatReturnsTrue
  });
  return SyntheticBaseEvent;
}
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var EventInterface = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
};
var SyntheticEvent = createSyntheticEvent(EventInterface);

var UIEventInterface = assign({}, EventInterface, {
  view: 0,
  detail: 0
});

var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
var lastMovementX;
var lastMovementY;
var lastMouseEvent;

function updateMouseMovementPolyfillState(event) {
  if (event !== lastMouseEvent) {
    if (lastMouseEvent && event.type === 'mousemove') {
      lastMovementX = event.screenX - lastMouseEvent.screenX;
      lastMovementY = event.screenY - lastMouseEvent.screenY;
    } else {
      lastMovementX = 0;
      lastMovementY = 0;
    }

    lastMouseEvent = event;
  }
}
/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var MouseEventInterface = assign({}, UIEventInterface, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: getEventModifierState,
  button: 0,
  buttons: 0,
  relatedTarget: function (event) {
    if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
    return event.relatedTarget;
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    updateMouseMovementPolyfillState(event);
    return lastMovementX;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    } // Don't need to call updateMouseMovementPolyfillState() here
    // because it's guaranteed to have already run when movementX
    // was copied.


    return lastMovementY;
  }
});

var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var DragEventInterface = assign({}, MouseEventInterface, {
  dataTransfer: 0
});

var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var FocusEventInterface = assign({}, UIEventInterface, {
  relatedTarget: 0
});

var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */

var AnimationEventInterface = assign({}, EventInterface, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */

var ClipboardEventInterface = assign({}, EventInterface, {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */

var CompositionEventInterface = assign({}, EventInterface, {
  data: 0
});

var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
// Happens to share the same list for now.

var SyntheticInputEvent = SyntheticCompositionEvent;
/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};
/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */

var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};
/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */

function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.
    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

    if (key !== 'Unidentified') {
      return key;
    }
  } // Browser does not implement `key`, polyfill as much of it as we can.


  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.

    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }

  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }

  return '';
}
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */


var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
}; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;

  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }

  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}
/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */


var KeyboardEventInterface = assign({}, UIEventInterface, {
  key: getEventKey,
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.
    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.
    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }

    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }

    return 0;
  }
});

var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */

var PointerEventInterface = assign({}, MouseEventInterface, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
});

var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */

var TouchEventInterface = assign({}, UIEventInterface, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: getEventModifierState
});

var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */

var TransitionEventInterface = assign({}, EventInterface, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
});

var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */

var WheelEventInterface = assign({}, MouseEventInterface, {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: 0,
  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: 0
});

var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

var START_KEYCODE = 229;
var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
var documentMode = null;

if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
} // Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.


var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.

var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

function registerEvents() {
  registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
  registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
  registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
} // Track whether we've ever handled a keypress on the space key.


var hasSpaceKeypress = false;
/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */

function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}
/**
 * Translate native top level events into event types.
 */


function getCompositionEventType(domEventName) {
  switch (domEventName) {
    case 'compositionstart':
      return 'onCompositionStart';

    case 'compositionend':
      return 'onCompositionEnd';

    case 'compositionupdate':
      return 'onCompositionUpdate';
  }
}
/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */


function isFallbackCompositionStart(domEventName, nativeEvent) {
  return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
}
/**
 * Does our fallback mode think that this event is the end of composition?
 */


function isFallbackCompositionEnd(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'keyup':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

    case 'keydown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;

    case 'keypress':
    case 'mousedown':
    case 'focusout':
      // Events are not possible without cancelling IME.
      return true;

    default:
      return false;
  }
}
/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */


function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;

  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }

  return null;
}
/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */


function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
} // Track the current IME composition status, if any.


var isComposing = false;
/**
 * @return {?object} A SyntheticCompositionEvent.
 */

function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(domEventName);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(domEventName, nativeEvent)) {
      eventType = 'onCompositionStart';
    }
  } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
    eventType = 'onCompositionEnd';
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === 'onCompositionStart') {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === 'onCompositionEnd') {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, eventType);

  if (listeners.length > 0) {
    var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });

    if (fallbackData) {
      // Inject data generated from fallback path into the synthetic event.
      // This matches the property of native CompositionEventInterface.
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);

      if (customData !== null) {
        event.data = customData;
      }
    }
  }
}

function getNativeBeforeInputChars(domEventName, nativeEvent) {
  switch (domEventName) {
    case 'compositionend':
      return getDataFromCustomEvent(nativeEvent);

    case 'keypress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;

      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'textInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.

      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}
/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */


function getFallbackBeforeInputChars(domEventName, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }

    return null;
  }

  switch (domEventName) {
    case 'paste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;

    case 'keypress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }

      return null;

    case 'compositionend':
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

    default:
      return null;
  }
}
/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */


function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(domEventName, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
  } // If no characters are being inserted, no BeforeInput event should
  // be fired.


  if (!chars) {
    return null;
  }

  var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');

  if (listeners.length > 0) {
    var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
    event.data = chars;
  }
}
/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */


function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */

function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = (eventName in document);

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function registerEvents$1() {
  registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);
}

function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  var listeners = accumulateTwoPhaseListeners(inst, 'onChange');

  if (listeners.length > 0) {
    var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
}
/**
 * For IE shims
 */


var activeElement = null;
var activeElementInst = null;
/**
 * SECTION: handle `change` event
 */

function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var dispatchQueue = [];
  createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.

  batchedUpdates(runEventInBatch, dispatchQueue);
}

function runEventInBatch(dispatchQueue) {
  processDispatchQueue(dispatchQueue, 0);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance(targetInst);

  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(domEventName, targetInst) {
  if (domEventName === 'change') {
    return targetInst;
  }
}
/**
 * SECTION: handle `input` event
 */


var isInputEventSupported = false;

if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}
/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */


function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}
/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */


function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}
/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */


function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }

  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
  if (domEventName === 'focusin') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (domEventName === 'focusout') {
    stopWatchingForValueChange();
  }
} // For IE8 and IE9.


function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
  if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}
/**
 * SECTION: handle `click` event
 */


function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(domEventName, targetInst) {
  if (domEventName === 'click') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
  if (domEventName === 'input' || domEventName === 'change') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}
/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */


function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
  var getTargetInstFunc, handleEventFunc;

  if (shouldUseChangeEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForChangeEvent;
  } else if (isTextInputElement(targetNode)) {
    if (isInputEventSupported) {
      getTargetInstFunc = getTargetInstForInputOrChangeEvent;
    } else {
      getTargetInstFunc = getTargetInstForInputEventPolyfill;
      handleEventFunc = handleEventsForInputEventPolyfill;
    }
  } else if (shouldUseClickEvent(targetNode)) {
    getTargetInstFunc = getTargetInstForClickEvent;
  }

  if (getTargetInstFunc) {
    var inst = getTargetInstFunc(domEventName, targetInst);

    if (inst) {
      createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
      return;
    }
  }

  if (handleEventFunc) {
    handleEventFunc(domEventName, targetNode, targetInst);
  } // When blurring, set the value attribute for number inputs


  if (domEventName === 'focusout') {
    handleControlledInputBlur(targetNode);
  }
}

function registerEvents$2() {
  registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);
  registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);
  registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);
  registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);
}
/**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */


function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
  var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';

  if (isOverEvent && !isReplayingEvent(nativeEvent)) {
    // If this is an over event with a target, we might have already dispatched
    // the event in the out event of the other target. If this is replayed,
    // then it's because we couldn't dispatch against this target previously
    // so we have to do it now instead.
    var related = nativeEvent.relatedTarget || nativeEvent.fromElement;

    if (related) {
      // If the related node is managed by React, we can assume that we have
      // already dispatched the corresponding events during its mouseout.
      if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
        return;
      }
    }
  }

  if (!isOutEvent && !isOverEvent) {
    // Must not be a mouse or pointer in or out - ignoring.
    return;
  }

  var win; // TODO: why is this nullable in the types but we read from it?

  if (nativeEventTarget.window === nativeEventTarget) {
    // `nativeEventTarget` is probably a window object.
    win = nativeEventTarget;
  } else {
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    var doc = nativeEventTarget.ownerDocument;

    if (doc) {
      win = doc.defaultView || doc.parentWindow;
    } else {
      win = window;
    }
  }

  var from;
  var to;

  if (isOutEvent) {
    var _related = nativeEvent.relatedTarget || nativeEvent.toElement;

    from = targetInst;
    to = _related ? getClosestInstanceFromNode(_related) : null;

    if (to !== null) {
      var nearestMounted = getNearestMountedFiber(to);

      if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
        to = null;
      }
    }
  } else {
    // Moving to a node from outside the window.
    from = null;
    to = targetInst;
  }

  if (from === to) {
    // Nothing pertains to our managed components.
    return;
  }

  var SyntheticEventCtor = SyntheticMouseEvent;
  var leaveEventType = 'onMouseLeave';
  var enterEventType = 'onMouseEnter';
  var eventTypePrefix = 'mouse';

  if (domEventName === 'pointerout' || domEventName === 'pointerover') {
    SyntheticEventCtor = SyntheticPointerEvent;
    leaveEventType = 'onPointerLeave';
    enterEventType = 'onPointerEnter';
    eventTypePrefix = 'pointer';
  }

  var fromNode = from == null ? win : getNodeFromInstance(from);
  var toNode = to == null ? win : getNodeFromInstance(to);
  var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
  leave.target = fromNode;
  leave.relatedTarget = toNode;
  var enter = null; // We should only process this nativeEvent if we are processing
  // the first ancestor. Next time, we will ignore the event.

  var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);

  if (nativeTargetInst === targetInst) {
    var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
    enterEvent.target = toNode;
    enterEvent.relatedTarget = fromNode;
    enter = enterEvent;
  }

  accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
}

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var objectIs = typeof Object.is === 'function' ? Object.is : is;

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */

function shallowEqual(objA, objB) {
  if (objectIs(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  } // Test for A's keys different from B.


  for (var i = 0; i < keysA.length; i++) {
    var currentKey = keysA[i];

    if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
      return false;
    }
  }

  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }

  return node;
}
/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */


function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }

    node = node.parentNode;
  }
}
/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */


function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */

function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;
  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}
/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */

function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }

      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      } // Moving from `node` to its first child `next`.


      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }

      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }

      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }

      if ((next = node.nextSibling) !== null) {
        break;
      }

      node = parentNode;
      parentNode = node.parentNode;
    } // Moving from `node` to its next sibling `next`.


    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}
/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */

function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)

  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.

  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }

    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();

  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }

    element = getActiveElement(win.document);
  }

  return element;
}
/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */


function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}
function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
  };
}
/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */

function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;

  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    } // Focusing a node can change the scroll position, which is undesirable


    var ancestors = [];
    var ancestor = priorFocusedElem;

    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}
/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */

function getSelection(input) {
  var selection;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || {
    start: 0,
    end: 0
  };
}
/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */

function setSelection(input, offsets) {
  var start = offsets.start;
  var end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

function registerEvents$3() {
  registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);
}

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;
/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */

function getSelection$1(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}
/**
 * Get document associated with the event target.
 */


function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}
/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */


function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return;
  } // Only fire when selection has actually changed.


  var currentSelection = getSelection$1(activeElement$1);

  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;
    var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');

    if (listeners.length > 0) {
      var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
      dispatchQueue.push({
        event: event,
        listeners: listeners
      });
      event.target = activeElement$1;
    }
  }
}
/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */


function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;

  switch (domEventName) {
    // Track the input node that has focus.
    case 'focusin':
      if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
        activeElement$1 = targetNode;
        activeElementInst$1 = targetInst;
        lastSelection = null;
      }

      break;

    case 'focusout':
      activeElement$1 = null;
      activeElementInst$1 = null;
      lastSelection = null;
      break;
    // Don't fire the event while the user is dragging. This matches the
    // semantics of the native select event.

    case 'mousedown':
      mouseDown = true;
      break;

    case 'contextmenu':
    case 'mouseup':
    case 'dragend':
      mouseDown = false;
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      break;
    // Chrome and IE fire non-standard event when selection is changed (and
    // sometimes when it hasn't). IE's event fires out of order with respect
    // to key and input events on deletion, so we discard it.
    //
    // Firefox doesn't support selectionchange, so check selection status
    // after each key entry. The selection changes after keydown and before
    // keyup, but we check on keydown as well in the case of holding down a
    // key, when multiple keydown events are fired but only one keyup is.
    // This is also our approach for IE handling, for the reason above.

    case 'selectionchange':
      if (skipSelectionChangeEvent) {
        break;
      }

    // falls through

    case 'keydown':
    case 'keyup':
      constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
  }
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */

function makePrefixMap(styleProp, eventName) {
  var prefixes = {};
  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  return prefixes;
}
/**
 * A list of event names to a configurable list of vendor prefixes.
 */


var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};
/**
 * Event names that have already been detected and prefixed (if applicable).
 */

var prefixedEventNames = {};
/**
 * Element to check for prefixes on.
 */

var style = {};
/**
 * Bootstrap if a DOM exists.
 */

if (canUseDOM) {
  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.

  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  } // Same as above


  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}
/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */


function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

var ANIMATION_END = getVendorPrefixedEventName('animationend');
var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
var ANIMATION_START = getVendorPrefixedEventName('animationstart');
var TRANSITION_END = getVendorPrefixedEventName('transitionend');

var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
//
// E.g. it needs "pointerDown", not "pointerdown".
// This is because we derive both React name ("onPointerDown")
// and DOM name ("pointerdown") from the same list.
//
// Exceptions that don't match this convention are listed separately.
//
// prettier-ignore

var simpleEventPluginEvents = ['abort', 'auxClick', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'gotPointerCapture', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'lostPointerCapture', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'pointerCancel', 'pointerDown', 'pointerMove', 'pointerOut', 'pointerOver', 'pointerUp', 'progress', 'rateChange', 'reset', 'resize', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchStart', 'volumeChange', 'scroll', 'toggle', 'touchMove', 'waiting', 'wheel'];

function registerSimpleEvent(domEventName, reactName) {
  topLevelEventsToReactNames.set(domEventName, reactName);
  registerTwoPhaseEvent(reactName, [domEventName]);
}

function registerSimpleEvents() {
  for (var i = 0; i < simpleEventPluginEvents.length; i++) {
    var eventName = simpleEventPluginEvents[i];
    var domEventName = eventName.toLowerCase();
    var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
    registerSimpleEvent(domEventName, 'on' + capitalizedEvent);
  } // Special cases where event names don't match.


  registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');
  registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');
  registerSimpleEvent(ANIMATION_START, 'onAnimationStart');
  registerSimpleEvent('dblclick', 'onDoubleClick');
  registerSimpleEvent('focusin', 'onFocus');
  registerSimpleEvent('focusout', 'onBlur');
  registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');
}

function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  var reactName = topLevelEventsToReactNames.get(domEventName);

  if (reactName === undefined) {
    return;
  }

  var SyntheticEventCtor = SyntheticEvent;
  var reactEventType = domEventName;

  switch (domEventName) {
    case 'keypress':
      // Firefox creates a keypress event for function keys too. This removes
      // the unwanted keypress events. Enter is however both printable and
      // non-printable. One would expect Tab to be as well (but it isn't).
      if (getEventCharCode(nativeEvent) === 0) {
        return;
      }

    /* falls through */

    case 'keydown':
    case 'keyup':
      SyntheticEventCtor = SyntheticKeyboardEvent;
      break;

    case 'focusin':
      reactEventType = 'focus';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'focusout':
      reactEventType = 'blur';
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'beforeblur':
    case 'afterblur':
      SyntheticEventCtor = SyntheticFocusEvent;
      break;

    case 'click':
      // Firefox creates a click event on right mouse clicks. This removes the
      // unwanted click events.
      if (nativeEvent.button === 2) {
        return;
      }

    /* falls through */

    case 'auxclick':
    case 'dblclick':
    case 'mousedown':
    case 'mousemove':
    case 'mouseup': // TODO: Disabled elements should not respond to mouse events

    /* falls through */

    case 'mouseout':
    case 'mouseover':
    case 'contextmenu':
      SyntheticEventCtor = SyntheticMouseEvent;
      break;

    case 'drag':
    case 'dragend':
    case 'dragenter':
    case 'dragexit':
    case 'dragleave':
    case 'dragover':
    case 'dragstart':
    case 'drop':
      SyntheticEventCtor = SyntheticDragEvent;
      break;

    case 'touchcancel':
    case 'touchend':
    case 'touchmove':
    case 'touchstart':
      SyntheticEventCtor = SyntheticTouchEvent;
      break;

    case ANIMATION_END:
    case ANIMATION_ITERATION:
    case ANIMATION_START:
      SyntheticEventCtor = SyntheticAnimationEvent;
      break;

    case TRANSITION_END:
      SyntheticEventCtor = SyntheticTransitionEvent;
      break;

    case 'scroll':
      SyntheticEventCtor = SyntheticUIEvent;
      break;

    case 'wheel':
      SyntheticEventCtor = SyntheticWheelEvent;
      break;

    case 'copy':
    case 'cut':
    case 'paste':
      SyntheticEventCtor = SyntheticClipboardEvent;
      break;

    case 'gotpointercapture':
    case 'lostpointercapture':
    case 'pointercancel':
    case 'pointerdown':
    case 'pointermove':
    case 'pointerout':
    case 'pointerover':
    case 'pointerup':
      SyntheticEventCtor = SyntheticPointerEvent;
      break;
  }

  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  {
    // Some events don't bubble in the browser.
    // In the past, React has always bubbled them, but this can be surprising.
    // We're going to try aligning closer to the browser behavior by not bubbling
    // them in React either. We'll start by not bubbling onScroll, and then expand.
    var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
    // nonDelegatedEvents list in DOMPluginEventSystem.
    // Then we can remove this special list.
    // This is a breaking change that can wait until React 18.
    domEventName === 'scroll';

    var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);

    if (_listeners.length > 0) {
      // Intentionally create event lazily.
      var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);

      dispatchQueue.push({
        event: _event,
        listeners: _listeners
      });
    }
  }
}

// TODO: remove top-level side effect.
registerSimpleEvents();
registerEvents$2();
registerEvents$1();
registerEvents$3();
registerEvents();

function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
  // TODO: we should remove the concept of a "SimpleEventPlugin".
  // This is the basic functionality of the event system. All
  // the other plugins are essentially polyfills. So the plugin
  // should probably be inlined somewhere and have its logic
  // be core the to event system. This would potentially allow
  // us to ship builds of React without the polyfilled plugins below.
  extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
  // event's native "bubble" phase, which means that we're
  // not in the capture phase. That's because we emulate
  // the capture phase here still. This is a trade-off,
  // because in an ideal world we would not emulate and use
  // the phases properly, like we do with the SimpleEvent
  // plugin. However, the plugins below either expect
  // emulation (EnterLeave) or use state localized to that
  // plugin (BeforeInput, Change, Select). The state in
  // these modules complicates things, as you'll essentially
  // get the case where the capture phase event might change
  // state, only for the following bubble event to come in
  // later and not trigger anything as the state now
  // invalidates the heuristics of the event plugin. We
  // could alter all these plugins to work in such ways, but
  // that might cause other unknown side-effects that we
  // can't foresee right now.

  if (shouldProcessPolyfillPlugins) {
    extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
  }
} // List of events that need to be individually attached to media elements.


var mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'resize', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather
// set them on the actual target element itself. This is primarily
// because these events do not consistently bubble in the DOM.

var nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));

function executeDispatch(event, listener, currentTarget) {
  var type = event.type || 'unknown-event';
  event.currentTarget = currentTarget;
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
  var previousInstance;

  if (inCapturePhase) {
    for (var i = dispatchListeners.length - 1; i >= 0; i--) {
      var _dispatchListeners$i = dispatchListeners[i],
          instance = _dispatchListeners$i.instance,
          currentTarget = _dispatchListeners$i.currentTarget,
          listener = _dispatchListeners$i.listener;

      if (instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, listener, currentTarget);
      previousInstance = instance;
    }
  } else {
    for (var _i = 0; _i < dispatchListeners.length; _i++) {
      var _dispatchListeners$_i = dispatchListeners[_i],
          _instance = _dispatchListeners$_i.instance,
          _currentTarget = _dispatchListeners$_i.currentTarget,
          _listener = _dispatchListeners$_i.listener;

      if (_instance !== previousInstance && event.isPropagationStopped()) {
        return;
      }

      executeDispatch(event, _listener, _currentTarget);
      previousInstance = _instance;
    }
  }
}

function processDispatchQueue(dispatchQueue, eventSystemFlags) {
  var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

  for (var i = 0; i < dispatchQueue.length; i++) {
    var _dispatchQueue$i = dispatchQueue[i],
        event = _dispatchQueue$i.event,
        listeners = _dispatchQueue$i.listeners;
    processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
  } // This would be a good time to rethrow if any of the event handlers threw.


  rethrowCaughtError();
}

function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var nativeEventTarget = getEventTarget(nativeEvent);
  var dispatchQueue = [];
  extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
  processDispatchQueue(dispatchQueue, eventSystemFlags);
}

function listenToNonDelegatedEvent(domEventName, targetElement) {
  {
    if (!nonDelegatedEvents.has(domEventName)) {
      error('Did not expect a listenToNonDelegatedEvent() call for "%s". ' + 'This is a bug in React. Please file an issue.', domEventName);
    }
  }

  var isCapturePhaseListener = false;
  var listenerSet = getEventListenerSet(targetElement);
  var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);

  if (!listenerSet.has(listenerSetKey)) {
    addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
    listenerSet.add(listenerSetKey);
  }
}
function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
  {
    if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
      error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. ' + 'This is a bug in React. Please file an issue.', domEventName);
    }
  }

  var eventSystemFlags = 0;

  if (isCapturePhaseListener) {
    eventSystemFlags |= IS_CAPTURE_PHASE;
  }

  addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
} // This is only used by createEventHandle when the
var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
function listenToAllSupportedEvents(rootContainerElement) {
  if (!rootContainerElement[listeningMarker]) {
    rootContainerElement[listeningMarker] = true;
    allNativeEvents.forEach(function (domEventName) {
      // We handle selectionchange separately because it
      // doesn't bubble and needs to be on the document.
      if (domEventName !== 'selectionchange') {
        if (!nonDelegatedEvents.has(domEventName)) {
          listenToNativeEvent(domEventName, false, rootContainerElement);
        }

        listenToNativeEvent(domEventName, true, rootContainerElement);
      }
    });
    var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;

    if (ownerDocument !== null) {
      // The selectionchange event also needs deduplication
      // but it is attached to the document.
      if (!ownerDocument[listeningMarker]) {
        ownerDocument[listeningMarker] = true;
        listenToNativeEvent('selectionchange', false, ownerDocument);
      }
    }
  }
}

function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
  var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
  // active and not passive.

  var isPassiveListener = undefined;

  if (passiveBrowserEventsSupported) {
    // Browsers introduced an intervention, making these events
    // passive by default on document. React doesn't bind them
    // to document anymore, but changing this now would undo
    // the performance wins from the change. So we emulate
    // the existing behavior manually on the roots now.
    // https://github.com/facebook/react/issues/19651
    if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {
      isPassiveListener = true;
    }
  }

  targetContainer =  targetContainer;
  var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we


  if (isCapturePhaseListener) {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
    }
  } else {
    if (isPassiveListener !== undefined) {
      unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
    } else {
      unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
  }
}

function isMatchingRootContainer(grandContainer, targetContainer) {
  return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
}

function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
  var ancestorInst = targetInst;

  if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
    var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we

    if (targetInst !== null) {
      // The below logic attempts to work out if we need to change
      // the target fiber to a different ancestor. We had similar logic
      // in the legacy event system, except the big difference between
      // systems is that the modern event system now has an event listener
      // attached to each React Root and React Portal Root. Together,
      // the DOM nodes representing these roots are the "rootContainer".
      // To figure out which ancestor instance we should use, we traverse
      // up the fiber tree from the target instance and attempt to find
      // root boundaries that match that of our current "rootContainer".
      // If we find that "rootContainer", we find the parent fiber
      // sub-tree for that root and make that our ancestor instance.
      var node = targetInst;

      mainLoop: while (true) {
        if (node === null) {
          return;
        }

        var nodeTag = node.tag;

        if (nodeTag === HostRoot || nodeTag === HostPortal) {
          var container = node.stateNode.containerInfo;

          if (isMatchingRootContainer(container, targetContainerNode)) {
            break;
          }

          if (nodeTag === HostPortal) {
            // The target is a portal, but it's not the rootContainer we're looking for.
            // Normally portals handle their own events all the way down to the root.
            // So we should be able to stop now. However, we don't know if this portal
            // was part of *our* root.
            var grandNode = node.return;

            while (grandNode !== null) {
              var grandTag = grandNode.tag;

              if (grandTag === HostRoot || grandTag === HostPortal) {
                var grandContainer = grandNode.stateNode.containerInfo;

                if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                  // This is the rootContainer we're looking for and we found it as
                  // a parent of the Portal. That means we can ignore it because the
                  // Portal will bubble through to us.
                  return;
                }
              }

              grandNode = grandNode.return;
            }
          } // Now we need to find it's corresponding host fiber in the other
          // tree. To do this we can use getClosestInstanceFromNode, but we
          // need to validate that the fiber is a host instance, otherwise
          // we need to traverse up through the DOM till we find the correct
          // node that is from the other tree.


          while (container !== null) {
            var parentNode = getClosestInstanceFromNode(container);

            if (parentNode === null) {
              return;
            }

            var parentTag = parentNode.tag;

            if (parentTag === HostComponent || parentTag === HostText) {
              node = ancestorInst = parentNode;
              continue mainLoop;
            }

            container = container.parentNode;
          }
        }

        node = node.return;
      }
    }
  }

  batchedUpdates(function () {
    return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
  });
}

function createDispatchListener(instance, listener, currentTarget) {
  return {
    instance: instance,
    listener: listener,
    currentTarget: currentTarget
  };
}

function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
  var captureName = reactName !== null ? reactName + 'Capture' : null;
  var reactEventName = inCapturePhase ? captureName : reactName;
  var listeners = [];
  var instance = targetFiber;
  var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance2 = instance,
        stateNode = _instance2.stateNode,
        tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      lastHostComponent = stateNode; // createEventHandle listeners


      if (reactEventName !== null) {
        var listener = getListener(instance, reactEventName);

        if (listener != null) {
          listeners.push(createDispatchListener(instance, listener, lastHostComponent));
        }
      }
    } // If we are only accumulating events for the target, then we don't
    // continue to propagate through the React fiber tree to find other
    // listeners.


    if (accumulateTargetOnly) {
      break;
    } // If we are processing the onBeforeBlur event, then we need to take

    instance = instance.return;
  }

  return listeners;
} // We should only use this function for:
// - BeforeInputEventPlugin
// - ChangeEventPlugin
// - SelectEventPlugin
// This is because we only process these plugins
// in the bubble phase, so we need to accumulate two
// phase event listeners (via emulation).

function accumulateTwoPhaseListeners(targetFiber, reactName) {
  var captureName = reactName + 'Capture';
  var listeners = [];
  var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.

  while (instance !== null) {
    var _instance3 = instance,
        stateNode = _instance3.stateNode,
        tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;
      var captureListener = getListener(instance, captureName);

      if (captureListener != null) {
        listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
      }

      var bubbleListener = getListener(instance, reactName);

      if (bubbleListener != null) {
        listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
      }
    }

    instance = instance.return;
  }

  return listeners;
}

function getParent(inst) {
  if (inst === null) {
    return null;
  }

  do {
    inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);

  if (inst) {
    return inst;
  }

  return null;
}
/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */


function getLowestCommonAncestor(instA, instB) {
  var nodeA = instA;
  var nodeB = instB;
  var depthA = 0;

  for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }

  var depthB = 0;

  for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
    depthB++;
  } // If A is deeper, crawl up.


  while (depthA - depthB > 0) {
    nodeA = getParent(nodeA);
    depthA--;
  } // If B is deeper, crawl up.


  while (depthB - depthA > 0) {
    nodeB = getParent(nodeB);
    depthB--;
  } // Walk in lockstep until we find a match.


  var depth = depthA;

  while (depth--) {
    if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
      return nodeA;
    }

    nodeA = getParent(nodeA);
    nodeB = getParent(nodeB);
  }

  return null;
}

function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
  var registrationName = event._reactName;
  var listeners = [];
  var instance = target;

  while (instance !== null) {
    if (instance === common) {
      break;
    }

    var _instance4 = instance,
        alternate = _instance4.alternate,
        stateNode = _instance4.stateNode,
        tag = _instance4.tag;

    if (alternate !== null && alternate === common) {
      break;
    }

    if (tag === HostComponent && stateNode !== null) {
      var currentTarget = stateNode;

      if (inCapturePhase) {
        var captureListener = getListener(instance, registrationName);

        if (captureListener != null) {
          listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
        }
      } else if (!inCapturePhase) {
        var bubbleListener = getListener(instance, registrationName);

        if (bubbleListener != null) {
          listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
        }
      }
    }

    instance = instance.return;
  }

  if (listeners.length !== 0) {
    dispatchQueue.push({
      event: event,
      listeners: listeners
    });
  }
} // We should only use this function for:
// - EnterLeaveEventPlugin
// This is because we only process this plugin
// in the bubble phase, so we need to accumulate two
// phase event listeners.


function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;

  if (from !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
  }

  if (to !== null && enterEvent !== null) {
    accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
  }
}
function getListenerSetKey(domEventName, capture) {
  return domEventName + "__" + (capture ? 'capture' : 'bubble');
}

var didWarnInvalidHydration = false;
var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML$1 = '__html';
var warnedUnknownTags;
var validatePropertiesInDevelopment;
var warnForPropDifference;
var warnForExtraAttributes;
var warnForInvalidEventListener;
var canDiffStyleForHydrationWarning;
var normalizeHTML;

{
  warnedUnknownTags = {
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, {
      registrationNameDependencies: registrationNameDependencies,
      possibleRegistrationNames: possibleRegistrationNames
    });
  }; // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807


  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }

    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

    if (normalizedServerValue === normalizedClientValue) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });

    error('Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      error('Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  }; // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.


  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
} // HTML parsing normalizes CR and CRLF to LF.
// It also can turn \u0000 into \uFFFD inside attributes.
// https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
// If we have a mismatch, it might be caused by that.
// We will still patch up in this case but not fire the warning.


var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

function normalizeMarkupForTextOrAttribute(markup) {
  {
    checkHtmlStringCoercion(markup);
  }

  var markupString = typeof markup === 'string' ? markup : '' + markup;
  return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
}

function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
  var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
  var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

  if (normalizedServerText === normalizedClientText) {
    return;
  }

  if (shouldWarnDev) {
    {
      if (!didWarnInvalidHydration) {
        didWarnInvalidHydration = true;

        error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      }
    }
  }

  if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
    // In concurrent roots, we throw when there's a text mismatch and revert to
    // client rendering, up to the nearest Suspense boundary.
    throw new Error('Text content does not match server-rendered HTML.');
  }
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = nextProps[propKey];

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      } // Relies on `updateStylesByID` not mutating `styleUpdates`.


      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';

        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];

    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.

  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;

  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }

  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.

      if (!isCustomComponentTag && type !== type.toLowerCase()) {
        error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);
      }
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');

      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.

      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, {
        is: props.is
      });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239

      if (type === 'select') {
        var node = domElement;

        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;

        error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}
function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}
function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);

  {
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  var props;

  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      props = rawProps;
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      props = rawProps;
      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      props = rawProps;
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      props = rawProps;
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      props = rawProps;
      break;

    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'option':
      validateProps(domElement, rawProps);
      props = rawProps;
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    default:
      props = rawProps;
  }

  assertValidProps(tag, props);
  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;

    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;

    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }
} // Calculate the diff between the two objects.

function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;
  var lastProps;
  var nextProps;

  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'select':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;

    case 'textarea':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;

    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;

      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  assertValidProps(tag, nextProps);
  var propKey;
  var styleName;
  var styleUpdates = null;

  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }

    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];

      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }

          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (propKey === AUTOFOCUS) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the allowed property list in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }

  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;

    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }

    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }

      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = '';
          }
        } // Update styles that changed since `lastProp`.


        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }

            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }

          updatePayload.push(propKey, styleUpdates);
        }

        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
      var lastHtml = lastProp ? lastProp[HTML$1] : undefined;

      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, nextHtml);
        }
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string' || typeof nextProp === 'number') {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ; else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }

      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the allowed property list during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }

  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
    }

    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }

  return updatePayload;
} // Apply the diff.

function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.

  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;

    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;

    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();

    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }

    return possibleStandardNames[lowerCasedName] || null;
  }
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
  var isCustomComponentTag;
  var extraAttributeNames;

  {
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
  } // TODO: Make sure that we check isMounted before firing any of these events.


  switch (tag) {
    case 'dialog':
      listenToNonDelegatedEvent('cancel', domElement);
      listenToNonDelegatedEvent('close', domElement);
      break;

    case 'iframe':
    case 'object':
    case 'embed':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the load event.
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'video':
    case 'audio':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for all the media events.
      for (var i = 0; i < mediaEventTypes.length; i++) {
        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
      }

      break;

    case 'source':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the error event.
      listenToNonDelegatedEvent('error', domElement);
      break;

    case 'img':
    case 'image':
    case 'link':
      // We listen to these events in case to ensure emulated bubble
      // listeners still fire for error and load events.
      listenToNonDelegatedEvent('error', domElement);
      listenToNonDelegatedEvent('load', domElement);
      break;

    case 'details':
      // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the toggle event.
      listenToNonDelegatedEvent('toggle', domElement);
      break;

    case 'input':
      initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'option':
      validateProps(domElement, rawProps);
      break;

    case 'select':
      initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;

    case 'textarea':
      initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
      // listeners still fire for the invalid event.

      listenToNonDelegatedEvent('invalid', domElement);
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;

    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();

      switch (name) {
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;

        case 'checked':
          break;

        case 'selected':
          break;

        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;

  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }

    var nextProp = rawProps[propKey];

    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
          }

          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
            checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
          }

          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }

        if (propKey === 'onScroll') {
          listenToNonDelegatedEvent('scroll', domElement);
        }
      }
    } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);

      if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ; else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') ; else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

        if (nextHtml != null) {
          var expectedHTML = normalizeHTML(domElement, nextHtml);

          if (expectedHTML !== serverHTML) {
            warnForPropDifference(propKey, serverHTML, expectedHTML);
          }
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');

          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;

        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;

          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }

          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);

            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

              extraAttributeNames.delete(standardName);
            } // $FlowFixMe - Should be inferred as not undefined.


            extraAttributeNames.delete(propKey);
          }

          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        var dontWarnCustomElement = enableCustomElementPropertySupport  ;

        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    if (shouldWarnDev) {
      if ( // $FlowFixMe - Should be inferred as not undefined.
      extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        // $FlowFixMe - Should be inferred as not undefined.
        warnForExtraAttributes(extraAttributeNames);
      }
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;

    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement);
      break;

    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;

    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }

      break;
  }

  return updatePayload;
}
function diffHydratedText(textNode, text, isConcurrentMode) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}
function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}
function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}
function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }

    if (didWarnInvalidHydration) {
      return;
    }

    didWarnInvalidHydration = true;

    error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}
function restoreControlledState$3(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;

    case 'textarea':
      restoreControlledState$2(domElement, props);
      return;

    case 'select':
      restoreControlledState$1(domElement, props);
      return;
  }
}

var validateDOMNesting = function () {};

var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.
  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

  var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
  var emptyAncestorInfo = {
    current: null,
    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,
    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);

    var info = {
      tag: tag
    };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }

    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    } // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }

    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }

    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }

    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }

    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }

    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }

    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };
  /**
   * Returns whether
   */


  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';

      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but

      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

      case 'html':
        return tag === 'head' || tag === 'body' || tag === 'frameset';

      case 'frameset':
        return tag === 'frame';

      case '#document':
        return tag === 'html';
    } // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frameset':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };
  /**
   * Returns whether
   */


  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn$1 = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      if (childTag != null) {
        error('validateDOMNesting: when childText is passed, childTag should be null');
      }

      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;

    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;

    if (didWarn$1[warnKey]) {
      return;
    }

    didWarn$1[warnKey] = true;
    var tagDisplayName = childTag;
    var whitespaceInfo = '';

    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';

      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
      }

      error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
    } else {
      error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);
    }
  };
}

var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';
var SUSPENSE_PENDING_START_DATA = '$?';
var SUSPENSE_FALLBACK_START_DATA = '$!';
var STYLE$1 = 'style';
var eventsEnabled = null;
var selectionInformation = null;
function getRootHostContext(rootContainerInstance) {
  var type;
  var namespace;
  var nodeType = rootContainerInstance.nodeType;

  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }

    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }

  {
    var validatedTag = type.toLowerCase();
    var ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return {
      namespace: namespace,
      ancestorInfo: ancestorInfo
    };
  }
}
function getPublicInstance(instance) {
  return instance;
}
function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  var activeInstance = null;

  setEnabled(false);
  return activeInstance;
}
function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  setEnabled(eventsEnabled);
  eventsEnabled = null;
  selectionInformation = null;
}
function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace;

  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);

    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }

    parentNamespace = hostContextDev.namespace;
  }

  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}
function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);

  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;

    case 'img':
      return true;

    default:
      return false;
  }
}
function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;

    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }

  return diffProperties(domElement, type, oldProps, newProps);
}
function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}
function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }

  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}
function getCurrentEventPriority() {
  var currentEvent = window.event;

  if (currentEvent === undefined) {
    return DefaultEventPriority;
  }

  return getEventPriority(currentEvent.type);
}
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.

var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1;
var localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------
var scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function (callback) {
  return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
} : scheduleTimeout; // TODO: Determine the best fallback here.

function handleErrorInNextTick(error) {
  setTimeout(function () {
    throw error;
  });
} // -------------------
function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      if (newProps.autoFocus) {
        domElement.focus();
      }

      return;

    case 'img':
      {
        if (newProps.src) {
          domElement.src = newProps.src;
        }

        return;
      }
  }
}
function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
  // with current event handlers.

  updateFiberProps(domElement, newProps);
}
function resetTextContent(domElement) {
  setTextContent(domElement, '');
}
function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}
function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}
function appendChildToContainer(container, child) {
  var parentNode;

  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  } // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918


  var reactRootContainer = container._reactRootContainer;

  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}
function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}
function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}
function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}
function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance; // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);

    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

          retryIfBlockedOn(suspenseInstance);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
        depth++;
      }
    }

    node = nextNode;
  } while (node); // TODO: Warn, we didn't find the end comment boundary.
  // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(suspenseInstance);
}
function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } // Retry if any event replaying was blocked on this.


  retryIfBlockedOn(container);
}
function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  var style = instance.style;

  if (typeof style.setProperty === 'function') {
    style.setProperty('display', 'none', 'important');
  } else {
    style.display = 'none';
  }
}
function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}
function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE$1];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}
function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}
function clearContainer(container) {
  if (container.nodeType === ELEMENT_NODE) {
    container.textContent = '';
  } else if (container.nodeType === DOCUMENT_NODE) {
    if (container.documentElement) {
      container.removeChild(container.documentElement);
    }
  }
} // -------------------
function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  } // This has now been refined to an element node.


  return instance;
}
function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a text node.


  return instance;
}
function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  } // This has now been refined to a suspense node.


  return instance;
}
function isSuspenseInstancePending(instance) {
  return instance.data === SUSPENSE_PENDING_START_DATA;
}
function isSuspenseInstanceFallback(instance) {
  return instance.data === SUSPENSE_FALLBACK_START_DATA;
}
function getSuspenseInstanceFallbackErrorDetails(instance) {
  var dataset = instance.nextSibling && instance.nextSibling.dataset;
  var digest, message, stack;

  if (dataset) {
    digest = dataset.dgst;

    {
      message = dataset.msg;
      stack = dataset.stck;
    }
  }

  {
    return {
      message: message,
      digest: digest,
      stack: stack
    };
  } // let value = {message: undefined, hash: undefined};
  // const nextSibling = instance.nextSibling;
  // if (nextSibling) {
  //   const dataset = ((nextSibling: any): HTMLTemplateElement).dataset;
  //   value.message = dataset.msg;
  //   value.hash = dataset.hash;
  //   if (true) {
  //     value.stack = dataset.stack;
  //   }
  // }
  // return value;

}
function registerSuspenseInstanceRetry(instance, callback) {
  instance._reactRetry = callback;
}

function getNextHydratable(node) {
  // Skip non-hydratable nodes.
  for (; node != null; node = node.nextSibling) {
    var nodeType = node.nodeType;

    if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
      break;
    }

    if (nodeType === COMMENT_NODE) {
      var nodeData = node.data;

      if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
        break;
      }

      if (nodeData === SUSPENSE_END_DATA) {
        return null;
      }
    }
  }

  return node;
}

function getNextHydratableSibling(instance) {
  return getNextHydratable(instance.nextSibling);
}
function getFirstHydratableChild(parentInstance) {
  return getNextHydratable(parentInstance.firstChild);
}
function getFirstHydratableChildWithinContainer(parentContainer) {
  return getNextHydratable(parentContainer.firstChild);
}
function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
  return getNextHydratable(parentInstance.nextSibling);
}
function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
  precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
  // get attached.

  updateFiberProps(instance, props);
  var parentNamespace;

  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  } // TODO: Temporary hack to check if we're in a concurrent root. We can delete
  // when the legacy root API is removed.


  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
}
function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
  precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
  // when the legacy root API is removed.

  var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
  return diffHydratedText(textInstance, text);
}
function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, suspenseInstance);
}
function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        depth++;
      }
    }

    node = node.nextSibling;
  } // TODO: Warn, we didn't find the end comment boundary.


  return null;
} // Returns the SuspenseInstance if this node is a direct child of a
// SuspenseInstance. I.e. if its previous sibling is a Comment with
// SUSPENSE_x_START_DATA. Otherwise, null.

function getParentSuspenseInstance(targetInstance) {
  var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.

  var depth = 0;

  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;

      if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
        if (depth === 0) {
          return node;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_END_DATA) {
        depth++;
      }
    }

    node = node.previousSibling;
  }

  return null;
}
function commitHydratedContainer(container) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(container);
}
function commitHydratedSuspenseInstance(suspenseInstance) {
  // Retry if any event replaying was blocked on this.
  retryIfBlockedOn(suspenseInstance);
}
function shouldDeleteUnhydratedTailInstances(parentType) {
  return parentType !== 'head' && parentType !== 'body';
}
function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
  var shouldWarnDev = true;
  checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
}
function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
  if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
    var shouldWarnDev = true;
    checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
  }
}
function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) ; else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}
function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;

    if (parentNode !== null) {
      if (instance.nodeType === ELEMENT_NODE) {
        warnForDeletedHydratableElement(parentNode, instance);
      } else if (instance.nodeType === COMMENT_NODE) ; else {
        warnForDeletedHydratableText(parentNode, instance);
      }
    }
  }
}
function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      if (instance.nodeType === ELEMENT_NODE) {
        warnForDeletedHydratableElement(parentInstance, instance);
      } else if (instance.nodeType === COMMENT_NODE) ; else {
        warnForDeletedHydratableText(parentInstance, instance);
      }
    }
  }
}
function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type);
  }
}
function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}
function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;
    if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
  }
}
function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
  {
    // $FlowFixMe: Only Element or Document can be parent nodes.
    var parentNode = parentInstance.parentNode;
    if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
  }
}
function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      warnForInsertedHydratedElement(parentInstance, type);
    }
  }
}
function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
  {
    if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
      warnForInsertedHydratedText(parentInstance, text);
    }
  }
}
function errorHydratingContainer(parentContainer) {
  {
    // TODO: This gets logged by onRecoverableError, too, so we should be
    // able to remove it.
    error('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());
  }
}
function preparePortalMount(portalInstance) {
  listenToAllSupportedEvents(portalInstance);
}

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactFiber$' + randomKey;
var internalPropsKey = '__reactProps$' + randomKey;
var internalContainerInstanceKey = '__reactContainer$' + randomKey;
var internalEventHandlersKey = '__reactEvents$' + randomKey;
var internalEventHandlerListenersKey = '__reactListeners$' + randomKey;
var internalEventHandlesSetKey = '__reactHandles$' + randomKey;
function detachDeletedInstance(node) {
  // TODO: This function is only called on host components. I don't think all of
  // these fields are relevant.
  delete node[internalInstanceKey];
  delete node[internalPropsKey];
  delete node[internalEventHandlersKey];
  delete node[internalEventHandlerListenersKey];
  delete node[internalEventHandlesSetKey];
}
function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}
function markContainerAsRoot(hostRoot, node) {
  node[internalContainerInstanceKey] = hostRoot;
}
function unmarkContainerAsRoot(node) {
  node[internalContainerInstanceKey] = null;
}
function isContainerMarkedAsRoot(node) {
  return !!node[internalContainerInstanceKey];
} // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
// If the target node is part of a hydrated or not yet rendered subtree, then
// this may also return a SuspenseComponent or HostRoot to indicate that.
// Conceptually the HostRoot fiber is a child of the Container node. So if you
// pass the Container node as the targetNode, you will not actually get the
// HostRoot back. To get to the HostRoot, you need to pass a child of it.
// The same thing applies to Suspense boundaries.

function getClosestInstanceFromNode(targetNode) {
  var targetInst = targetNode[internalInstanceKey];

  if (targetInst) {
    // Don't return HostRoot or SuspenseComponent here.
    return targetInst;
  } // If the direct event target isn't a React owned DOM node, we need to look
  // to see if one of its parents is a React owned DOM node.


  var parentNode = targetNode.parentNode;

  while (parentNode) {
    // We'll check if this is a container root that could include
    // React nodes in the future. We need to check this first because
    // if we're a child of a dehydrated container, we need to first
    // find that inner container before moving on to finding the parent
    // instance. Note that we don't check this field on  the targetNode
    // itself because the fibers are conceptually between the container
    // node and the first child. It isn't surrounding the container node.
    // If it's not a container, we check if it's an instance.
    targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

    if (targetInst) {
      // Since this wasn't the direct target of the event, we might have
      // stepped past dehydrated DOM nodes to get here. However they could
      // also have been non-React nodes. We need to answer which one.
      // If we the instance doesn't have any children, then there can't be
      // a nested suspense boundary within it. So we can use this as a fast
      // bailout. Most of the time, when people add non-React children to
      // the tree, it is using a ref to a child-less DOM node.
      // Normally we'd only need to check one of the fibers because if it
      // has ever gone from having children to deleting them or vice versa
      // it would have deleted the dehydrated boundary nested inside already.
      // However, since the HostRoot starts out with an alternate it might
      // have one on the alternate so we need to check in case this was a
      // root.
      var alternate = targetInst.alternate;

      if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
        // Next we need to figure out if the node that skipped past is
        // nested within a dehydrated boundary and if so, which one.
        var suspenseInstance = getParentSuspenseInstance(targetNode);

        while (suspenseInstance !== null) {
          // We found a suspense instance. That means that we haven't
          // hydrated it yet. Even though we leave the comments in the
          // DOM after hydrating, and there are boundaries in the DOM
          // that could already be hydrated, we wouldn't have found them
          // through this pass since if the target is hydrated it would
          // have had an internalInstanceKey on it.
          // Let's get the fiber associated with the SuspenseComponent
          // as the deepest instance.
          var targetSuspenseInst = suspenseInstance[internalInstanceKey];

          if (targetSuspenseInst) {
            return targetSuspenseInst;
          } // If we don't find a Fiber on the comment, it might be because
          // we haven't gotten to hydrate it yet. There might still be a
          // parent boundary that hasn't above this one so we need to find
          // the outer most that is known.


          suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
          // host component also hasn't hydrated yet. We can return it
          // below since it will bail out on the isMounted check later.
        }
      }

      return targetInst;
    }

    targetNode = parentNode;
    parentNode = targetNode.parentNode;
  }

  return null;
}
/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */

function getInstanceFromNode(node) {
  var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
      return inst;
    } else {
      return null;
    }
  }

  return null;
}
/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */

function getNodeFromInstance(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  } // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.


  throw new Error('getNodeFromInstance: Invalid argument.');
}
function getFiberCurrentPropsFromNode(node) {
  return node[internalPropsKey] || null;
}
function updateFiberProps(node, props) {
  node[internalPropsKey] = props;
}
function getEventListenerSet(node) {
  var elementListenerSet = node[internalEventHandlersKey];

  if (elementListenerSet === undefined) {
    elementListenerSet = node[internalEventHandlersKey] = new Set();
  }

  return elementListenerSet;
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

var valueStack = [];
var fiberStack;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      error('Unexpected pop.');
    }

    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      error('Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];
  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;
  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

var warnedAboutMissingGetChildContext;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};

{
  Object.freeze(emptyContextObject);
} // A cursor to the current merged context object on the stack.


var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.

var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  {
    if (didPushOwnContextIfProvider && isContextProvider(Component)) {
      // If the fiber is a context provider itself, when we read its context
      // we may have already pushed its own child context on the stack. A context
      // provider should not "see" its own child context. Therefore we read the
      // previous (parent) context instead for a context provider.
      return previousContext;
    }

    return contextStackCursor.current;
  }
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  {
    var instance = workInProgress.stateNode;
    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
  }
}

function getMaskedContext(workInProgress, unmaskedContext) {
  {
    var type = workInProgress.type;
    var contextTypes = type.contextTypes;

    if (!contextTypes) {
      return emptyContextObject;
    } // Avoid recreating masked context unless unmasked context has changed.
    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
    // This may trigger infinite loops if componentWillReceiveProps calls setState.


    var instance = workInProgress.stateNode;

    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
      return instance.__reactInternalMemoizedMaskedChildContext;
    }

    var context = {};

    for (var key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    {
      var name = getComponentNameFromFiber(workInProgress) || 'Unknown';
      checkPropTypes(contextTypes, context, 'context', name);
    } // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // Context is created before the class component is instantiated so check for instance.


    if (instance) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return context;
  }
}

function hasContextChanged() {
  {
    return didPerformWorkStackCursor.current;
  }
}

function isContextProvider(type) {
  {
    var childContextTypes = type.childContextTypes;
    return childContextTypes !== null && childContextTypes !== undefined;
  }
}

function popContext(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function popTopLevelContextObject(fiber) {
  {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }
}

function pushTopLevelContextObject(fiber, context, didChange) {
  {
    if (contextStackCursor.current !== emptyContextObject) {
      throw new Error('Unexpected context found on stack. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }
}

function processChildContext(fiber, type, parentContext) {
  {
    var instance = fiber.stateNode;
    var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
    // It has only been added in Fiber to match the (unintentional) behavior in Stack.

    if (typeof instance.getChildContext !== 'function') {
      {
        var componentName = getComponentNameFromFiber(fiber) || 'Unknown';

        if (!warnedAboutMissingGetChildContext[componentName]) {
          warnedAboutMissingGetChildContext[componentName] = true;

          error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
        }
      }

      return parentContext;
    }

    var childContext = instance.getChildContext();

    for (var contextKey in childContext) {
      if (!(contextKey in childContextTypes)) {
        throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
      }
    }

    {
      var name = getComponentNameFromFiber(fiber) || 'Unknown';
      checkPropTypes(childContextTypes, childContext, 'child context', name);
    }

    return assign({}, parentContext, childContext);
  }
}

function pushContextProvider(workInProgress) {
  {
    var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
    // If the instance does not exist yet, we will push null at first,
    // and replace it on the stack later when invalidating the context.

    var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

    previousContext = contextStackCursor.current;
    push(contextStackCursor, memoizedMergedChildContext, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }
}

function invalidateContextProvider(workInProgress, type, didChange) {
  {
    var instance = workInProgress.stateNode;

    if (!instance) {
      throw new Error('Expected to have an instance by this point. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    if (didChange) {
      // Merge parent and own context.
      // Skip this if we're not updating due to sCU.
      // This avoids unnecessarily recomputing memoized values.
      var mergedContext = processChildContext(workInProgress, type, previousContext);
      instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
      // It is important to unwind the context in the reverse order.

      pop(didPerformWorkStackCursor, workInProgress);
      pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

      push(contextStackCursor, mergedContext, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    } else {
      pop(didPerformWorkStackCursor, workInProgress);
      push(didPerformWorkStackCursor, didChange, workInProgress);
    }
  }
}

function findCurrentUnmaskedContext(fiber) {
  {
    // Currently this is only used with renderSubtreeIntoContainer; not sure if it
    // makes sense elsewhere
    if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
      throw new Error('Expected subtree parent to be a mounted class component. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    var node = fiber;

    do {
      switch (node.tag) {
        case HostRoot:
          return node.stateNode.context;

        case ClassComponent:
          {
            var Component = node.type;

            if (isContextProvider(Component)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }

            break;
          }
      }

      node = node.return;
    } while (node !== null);

    throw new Error('Found unexpected detached subtree parent. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }
}

var LegacyRoot = 0;
var ConcurrentRoot = 1;

var syncQueue = null;
var includesLegacySyncCallbacks = false;
var isFlushingSyncQueue = false;
function scheduleSyncCallback(callback) {
  // Push this callback into an internal queue. We'll flush these either in
  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
  if (syncQueue === null) {
    syncQueue = [callback];
  } else {
    // Push onto existing queue. Don't need to schedule a callback because
    // we already scheduled one when we created the queue.
    syncQueue.push(callback);
  }
}
function scheduleLegacySyncCallback(callback) {
  includesLegacySyncCallbacks = true;
  scheduleSyncCallback(callback);
}
function flushSyncCallbacksOnlyInLegacyMode() {
  // Only flushes the queue if there's a legacy sync callback scheduled.
  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
  // it might make more sense for the queue to be a list of roots instead of a
  // list of generic callbacks. Then we can have two: one for legacy roots, one
  // for concurrent roots. And this method would only flush the legacy ones.
  if (includesLegacySyncCallbacks) {
    flushSyncCallbacks();
  }
}
function flushSyncCallbacks() {
  if (!isFlushingSyncQueue && syncQueue !== null) {
    // Prevent re-entrance.
    isFlushingSyncQueue = true;
    var i = 0;
    var previousUpdatePriority = getCurrentUpdatePriority();

    try {
      var isSync = true;
      var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
      // queue is in the render or commit phases.

      setCurrentUpdatePriority(DiscreteEventPriority);

      for (; i < queue.length; i++) {
        var callback = queue[i];

        do {
          callback = callback(isSync);
        } while (callback !== null);
      }

      syncQueue = null;
      includesLegacySyncCallbacks = false;
    } catch (error) {
      // If something throws, leave the remaining callbacks on the queue.
      if (syncQueue !== null) {
        syncQueue = syncQueue.slice(i + 1);
      } // Resume flushing in the next tick


      scheduleCallback(ImmediatePriority, flushSyncCallbacks);
      throw error;
    } finally {
      setCurrentUpdatePriority(previousUpdatePriority);
      isFlushingSyncQueue = false;
    }
  }

  return null;
}

// TODO: Use the unified fiber stack module instead of this local one?
// Intentionally not using it yet to derisk the initial implementation, because
// the way we push/pop these values is a bit unusual. If there's a mistake, I'd
// rather the ids be wrong than crash the whole reconciler.
var forkStack = [];
var forkStackIndex = 0;
var treeForkProvider = null;
var treeForkCount = 0;
var idStack = [];
var idStackIndex = 0;
var treeContextProvider = null;
var treeContextId = 1;
var treeContextOverflow = '';
function isForkedChild(workInProgress) {
  warnIfNotHydrating();
  return (workInProgress.flags & Forked) !== NoFlags;
}
function getForksAtLevel(workInProgress) {
  warnIfNotHydrating();
  return treeForkCount;
}
function getTreeId() {
  var overflow = treeContextOverflow;
  var idWithLeadingBit = treeContextId;
  var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
  return id.toString(32) + overflow;
}
function pushTreeFork(workInProgress, totalChildren) {
  // This is called right after we reconcile an array (or iterator) of child
  // fibers, because that's the only place where we know how many children in
  // the whole set without doing extra work later, or storing addtional
  // information on the fiber.
  //
  // That's why this function is separate from pushTreeId — it's called during
  // the render phase of the fork parent, not the child, which is where we push
  // the other context values.
  //
  // In the Fizz implementation this is much simpler because the child is
  // rendered in the same callstack as the parent.
  //
  // It might be better to just add a `forks` field to the Fiber type. It would
  // make this module simpler.
  warnIfNotHydrating();
  forkStack[forkStackIndex++] = treeForkCount;
  forkStack[forkStackIndex++] = treeForkProvider;
  treeForkProvider = workInProgress;
  treeForkCount = totalChildren;
}
function pushTreeId(workInProgress, totalChildren, index) {
  warnIfNotHydrating();
  idStack[idStackIndex++] = treeContextId;
  idStack[idStackIndex++] = treeContextOverflow;
  idStack[idStackIndex++] = treeContextProvider;
  treeContextProvider = workInProgress;
  var baseIdWithLeadingBit = treeContextId;
  var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
  // of the id; we use it to account for leading 0s.

  var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
  var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
  var slot = index + 1;
  var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
  // consideration the leading 1 we use to mark the end of the sequence.

  if (length > 30) {
    // We overflowed the bitwise-safe range. Fall back to slower algorithm.
    // This branch assumes the length of the base id is greater than 5; it won't
    // work for smaller ids, because you need 5 bits per character.
    //
    // We encode the id in multiple steps: first the base id, then the
    // remaining digits.
    //
    // Each 5 bit sequence corresponds to a single base 32 character. So for
    // example, if the current id is 23 bits long, we can convert 20 of those
    // bits into a string of 4 characters, with 3 bits left over.
    //
    // First calculate how many bits in the base id represent a complete
    // sequence of characters.
    var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.

    var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.

    var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.

    var restOfBaseId = baseId >> numberOfOverflowBits;
    var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
    // we made more room, this time it won't overflow.

    var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
    var restOfNewBits = slot << restOfBaseLength;
    var id = restOfNewBits | restOfBaseId;
    var overflow = newOverflow + baseOverflow;
    treeContextId = 1 << restOfLength | id;
    treeContextOverflow = overflow;
  } else {
    // Normal path
    var newBits = slot << baseLength;

    var _id = newBits | baseId;

    var _overflow = baseOverflow;
    treeContextId = 1 << length | _id;
    treeContextOverflow = _overflow;
  }
}
function pushMaterializedTreeId(workInProgress) {
  warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
  // in its children.

  var returnFiber = workInProgress.return;

  if (returnFiber !== null) {
    var numberOfForks = 1;
    var slotIndex = 0;
    pushTreeFork(workInProgress, numberOfForks);
    pushTreeId(workInProgress, numberOfForks, slotIndex);
  }
}

function getBitLength(number) {
  return 32 - clz32(number);
}

function getLeadingBit(id) {
  return 1 << getBitLength(id) - 1;
}

function popTreeContext(workInProgress) {
  // Restore the previous values.
  // This is a bit more complicated than other context-like modules in Fiber
  // because the same Fiber may appear on the stack multiple times and for
  // different reasons. We have to keep popping until the work-in-progress is
  // no longer at the top of the stack.
  while (workInProgress === treeForkProvider) {
    treeForkProvider = forkStack[--forkStackIndex];
    forkStack[forkStackIndex] = null;
    treeForkCount = forkStack[--forkStackIndex];
    forkStack[forkStackIndex] = null;
  }

  while (workInProgress === treeContextProvider) {
    treeContextProvider = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
    treeContextOverflow = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
    treeContextId = idStack[--idStackIndex];
    idStack[idStackIndex] = null;
  }
}
function getSuspendedTreeContext() {
  warnIfNotHydrating();

  if (treeContextProvider !== null) {
    return {
      id: treeContextId,
      overflow: treeContextOverflow
    };
  } else {
    return null;
  }
}
function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
  warnIfNotHydrating();
  idStack[idStackIndex++] = treeContextId;
  idStack[idStackIndex++] = treeContextOverflow;
  idStack[idStackIndex++] = treeContextProvider;
  treeContextId = suspendedContext.id;
  treeContextOverflow = suspendedContext.overflow;
  treeContextProvider = workInProgress;
}

function warnIfNotHydrating() {
  {
    if (!getIsHydrating()) {
      error('Expected to be hydrating. This is a bug in React. Please file ' + 'an issue.');
    }
  }
}

// This may have been an insertion or a hydration.

var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false; // This flag allows for warning supression when we expect there to be mismatches
// due to earlier mismatches or a suspended fiber.

var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary

var hydrationErrors = null;

function warnIfHydrating() {
  {
    if (isHydrating) {
      error('We should not be hydrating here. This is a bug in React. Please file a bug.');
    }
  }
}

function markDidThrowWhileHydratingDEV() {
  {
    didSuspendOrErrorDEV = true;
  }
}
function didSuspendOrErrorWhileHydratingDEV() {
  {
    return didSuspendOrErrorDEV;
  }
}

function enterHydrationState(fiber) {

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  hydrationErrors = null;
  didSuspendOrErrorDEV = false;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {

  nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  hydrationErrors = null;
  didSuspendOrErrorDEV = false;

  if (treeContext !== null) {
    restoreSuspendedTreeContext(fiber, treeContext);
  }

  return true;
}

function warnUnhydratedInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
          break;
        }

      case HostComponent:
        {
          var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, // TODO: Delete this argument when we remove the legacy root API.
          isConcurrentMode);
          break;
        }

      case SuspenseComponent:
        {
          var suspenseState = returnFiber.memoizedState;
          if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
          break;
        }
    }
  }
}

function deleteHydratableInstance(returnFiber, instance) {
  warnUnhydratedInstance(returnFiber, instance);
  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  var deletions = returnFiber.deletions;

  if (deletions === null) {
    returnFiber.deletions = [childToDelete];
    returnFiber.flags |= ChildDeletion;
  } else {
    deletions.push(childToDelete);
  }
}

function warnNonhydratedInstance(returnFiber, fiber) {
  {
    if (didSuspendOrErrorDEV) {
      // Inside a boundary that already suspended. We're currently rendering the
      // siblings of a suspended node. The mismatch may be due to the missing
      // data, so it's probably a false positive.
      return;
    }

    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;

          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableInstanceWithinContainer(parentContainer, type);
              break;

            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
              break;
          }

          break;
        }

      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;

          switch (fiber.tag) {
            case HostComponent:
              {
                var _type = fiber.type;
                var _props = fiber.pendingProps;
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, // TODO: Delete this argument when we remove the legacy root API.
                isConcurrentMode);
                break;
              }

            case HostText:
              {
                var _text = fiber.pendingProps;

                var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;

                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, // TODO: Delete this argument when we remove the legacy root API.
                _isConcurrentMode);
                break;
              }
          }

          break;
        }

      case SuspenseComponent:
        {
          var suspenseState = returnFiber.memoizedState;
          var _parentInstance = suspenseState.dehydrated;
          if (_parentInstance !== null) switch (fiber.tag) {
            case HostComponent:
              var _type2 = fiber.type;
              var _props2 = fiber.pendingProps;
              didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
              break;

            case HostText:
              var _text2 = fiber.pendingProps;
              didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
              break;
          }
          break;
        }

      default:
        return;
    }
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.flags = fiber.flags & ~Hydrating | Placement;
  warnNonhydratedInstance(returnFiber, fiber);
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type);

        if (instance !== null) {
          fiber.stateNode = instance;
          hydrationParentFiber = fiber;
          nextHydratableInstance = getFirstHydratableChild(instance);
          return true;
        }

        return false;
      }

    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);

        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.

          nextHydratableInstance = null;
          return true;
        }

        return false;
      }

    case SuspenseComponent:
      {
        var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

        if (suspenseInstance !== null) {
          var suspenseState = {
            dehydrated: suspenseInstance,
            treeContext: getSuspendedTreeContext(),
            retryLane: OffscreenLane
          };
          fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
          // This simplifies the code for getHostSibling and deleting nodes,
          // since it doesn't have to consider all Suspense boundaries and
          // check if they're dehydrated ones or not.

          var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
          dehydratedFragment.return = fiber;
          fiber.child = dehydratedFragment;
          hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
          // it during the first pass. Instead, we'll reenter it later.

          nextHydratableInstance = null;
          return true;
        }

        return false;
      }

    default:
      return false;
  }
}

function shouldClientRenderOnMismatch(fiber) {
  return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
}

function throwOnHydrationMismatch(fiber) {
  throw new Error('Hydration failed because the initial UI does not match what was ' + 'rendered on the server.');
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }

  var nextInstance = nextHydratableInstance;

  if (!nextInstance) {
    if (shouldClientRenderOnMismatch(fiber)) {
      warnNonhydratedInstance(hydrationParentFiber, fiber);
      throwOnHydrationMismatch();
    } // Nothing to hydrate. Make it an insertion.


    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }

  var firstAttemptedInstance = nextInstance;

  if (!tryHydrate(fiber, nextInstance)) {
    if (shouldClientRenderOnMismatch(fiber)) {
      warnNonhydratedInstance(hydrationParentFiber, fiber);
      throwOnHydrationMismatch();
    } // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.


    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    var prevHydrationParentFiber = hydrationParentFiber;

    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    } // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.


    deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
  }
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {

  var instance = fiber.stateNode;
  var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.

  fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.

  if (updatePayload !== null) {
    return true;
  }

  return false;
}

function prepareToHydrateHostTextInstance(fiber) {

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);

  if (shouldUpdate) {
    // We assume that prepareToHydrateHostTextInstance is called in a context where the
    // hydration parent is the parent host component of this host text.
    var returnFiber = hydrationParentFiber;

    if (returnFiber !== null) {
      switch (returnFiber.tag) {
        case HostRoot:
          {
            var parentContainer = returnFiber.stateNode.containerInfo;
            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
            didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.
            isConcurrentMode);
            break;
          }

        case HostComponent:
          {
            var parentType = returnFiber.type;
            var parentProps = returnFiber.memoizedProps;
            var parentInstance = returnFiber.stateNode;

            var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;

            didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, // TODO: Delete this argument when we remove the legacy root API.
            _isConcurrentMode2);
            break;
          }
      }
    }
  }

  return shouldUpdate;
}

function prepareToHydrateHostSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }

  hydrateSuspenseInstance(suspenseInstance, fiber);
}

function skipPastDehydratedSuspenseInstance(fiber) {

  var suspenseState = fiber.memoizedState;
  var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

  if (!suspenseInstance) {
    throw new Error('Expected to have a hydrated suspense instance. ' + 'This error is likely caused by a bug in React. Please file an issue.');
  }

  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;

  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
    parent = parent.return;
  }

  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {

  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }

  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  } // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them. We also don't delete anything inside the root container.


  if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
    var nextInstance = nextHydratableInstance;

    if (nextInstance) {
      if (shouldClientRenderOnMismatch(fiber)) {
        warnIfUnhydratedTailNodes(fiber);
        throwOnHydrationMismatch();
      } else {
        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }
    }
  }

  popToNextHostParent(fiber);

  if (fiber.tag === SuspenseComponent) {
    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
  } else {
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  }

  return true;
}

function hasUnhydratedTailNodes() {
  return isHydrating && nextHydratableInstance !== null;
}

function warnIfUnhydratedTailNodes(fiber) {
  var nextInstance = nextHydratableInstance;

  while (nextInstance) {
    warnUnhydratedInstance(fiber, nextInstance);
    nextInstance = getNextHydratableSibling(nextInstance);
  }
}

function resetHydrationState() {

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
  didSuspendOrErrorDEV = false;
}

function upgradeHydrationErrorsToRecoverable() {
  if (hydrationErrors !== null) {
    // Successfully completed a forced client render. The errors that occurred
    // during the hydration attempt are now recovered. We will log them in
    // commit phase, once the entire tree has finished.
    queueRecoverableErrors(hydrationErrors);
    hydrationErrors = null;
  }
}

function getIsHydrating() {
  return isHydrating;
}

function queueHydrationError(error) {
  if (hydrationErrors === null) {
    hydrationErrors = [error];
  } else {
    hydrationErrors.push(error);
  }
}

var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
var NoTransition = null;
function requestCurrentTransition() {
  return ReactCurrentBatchConfig$1.transition;
}

var ReactStrictModeWarnings = {
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {},
  discardPendingWarnings: function () {}
};

{
  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;
    var node = fiber;

    while (node !== null) {
      if (node.mode & StrictLegacyMode) {
        maybeStrictRoot = node;
      }

      node = node.return;
    }

    return maybeStrictRoot;
  };

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  var pendingComponentWillMountWarnings = [];
  var pendingUNSAFE_ComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

  var didWarnAboutUnsafeLifecycles = new Set();

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    // Dedupe strategy: Warn once per component.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
    instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') {
      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
    }

    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
    }

    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }

    if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    // We do an initial pass to gather component names
    var componentWillMountUniqueNames = new Set();

    if (pendingComponentWillMountWarnings.length > 0) {
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillMountWarnings = [];
    }

    var UNSAFE_componentWillMountUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
      pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillMountWarnings = [];
    }

    var componentWillReceivePropsUniqueNames = new Set();

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillReceivePropsWarnings = [];
    }

    var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    }

    var componentWillUpdateUniqueNames = new Set();

    if (pendingComponentWillUpdateWarnings.length > 0) {
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingComponentWillUpdateWarnings = [];
    }

    var UNSAFE_componentWillUpdateUniqueNames = new Set();

    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutUnsafeLifecycles.add(fiber.type);
      });
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
    } // Finally, we flush all the warnings
    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


    if (UNSAFE_componentWillMountUniqueNames.size > 0) {
      var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);

      error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
    }

    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

      error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
    }

    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

      error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
    }

    if (componentWillMountUniqueNames.size > 0) {
      var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

      warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
    }

    if (componentWillReceivePropsUniqueNames.size > 0) {
      var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

      warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
    }

    if (componentWillUpdateUniqueNames.size > 0) {
      var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

      warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
    }
  };

  var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

  var didWarnAboutLegacyContext = new Set();

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);

    if (strictRoot === null) {
      error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');

      return;
    } // Dedup strategy: Warn once per component.


    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }

      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      if (fiberArray.length === 0) {
        return;
      }

      var firstFiber = fiberArray[0];
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });
      var sortedNames = setToSortedString(uniqueNames);

      try {
        setCurrentFiber(firstFiber);

        error('Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);
      } finally {
        resetCurrentFiber();
      }
    });
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingUNSAFE_ComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUNSAFE_ComponentWillUpdateWarnings = [];
    pendingLegacyContextWarning = new Map();
  };
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = assign({}, baseProps);
    var defaultProps = Component.defaultProps;

    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }

    return props;
  }

  return baseProps;
}

var valueCursor = createCursor(null);
var rendererSigil;

{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastFullyObservedContext = null;
var isDisallowedContextReadInDEV = false;
function resetContextDependencies() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastFullyObservedContext = null;

  {
    isDisallowedContextReadInDEV = false;
  }
}
function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}
function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}
function pushProvider(providerFiber, context, nextValue) {
  {
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;

    {
      if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
        error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');
      }

      context._currentRenderer = rendererSigil;
    }
  }
}
function popProvider(context, providerFiber) {
  var currentValue = valueCursor.current;
  pop(valueCursor, providerFiber);

  {
    {
      context._currentValue = currentValue;
    }
  }
}
function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
  // Update the child lanes of all the ancestors, including the alternates.
  var node = parent;

  while (node !== null) {
    var alternate = node.alternate;

    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
      node.childLanes = mergeLanes(node.childLanes, renderLanes);

      if (alternate !== null) {
        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
      }
    } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {
      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
    }

    if (node === propagationRoot) {
      break;
    }

    node = node.return;
  }

  {
    if (node !== propagationRoot) {
      error('Expected to find the propagation root when scheduling context work. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }
  }
}
function propagateContextChange(workInProgress, context, renderLanes) {
  {
    propagateContextChange_eager(workInProgress, context, renderLanes);
  }
}

function propagateContextChange_eager(workInProgress, context, renderLanes) {

  var fiber = workInProgress.child;

  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }

  while (fiber !== null) {
    var nextFiber = void 0; // Visit this fiber.

    var list = fiber.dependencies;

    if (list !== null) {
      nextFiber = fiber.child;
      var dependency = list.firstContext;

      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context) {
          // Match! Schedule an update on this fiber.
          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var lane = pickArbitraryLane(renderLanes);
            var update = createUpdate(NoTimestamp, lane);
            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.
            // Inlined `enqueueUpdate` to remove interleaved update check

            var updateQueue = fiber.updateQueue;

            if (updateQueue === null) ; else {
              var sharedQueue = updateQueue.shared;
              var pending = sharedQueue.pending;

              if (pending === null) {
                // This is the first update. Create a circular list.
                update.next = update;
              } else {
                update.next = pending.next;
                pending.next = update;
              }

              sharedQueue.pending = update;
            }
          }

          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
          var alternate = fiber.alternate;

          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
          }

          scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.

          list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
          // dependency list.

          break;
        }

        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (fiber.tag === DehydratedFragment) {
      // If a dehydrated suspense boundary is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates.
      var parentSuspense = fiber.return;

      if (parentSuspense === null) {
        throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');
      }

      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
      var _alternate = parentSuspense.alternate;

      if (_alternate !== null) {
        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
      } // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childLanes on
      // this fiber to indicate that a context has changed.


      scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;

      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }

        var sibling = nextFiber.sibling;

        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        } // No more siblings. Traverse up.


        nextFiber = nextFiber.return;
      }
    }

    fiber = nextFiber;
  }
}
function prepareToReadContext(workInProgress, renderLanes) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastFullyObservedContext = null;
  var dependencies = workInProgress.dependencies;

  if (dependencies !== null) {
    {
      var firstContext = dependencies.firstContext;

      if (firstContext !== null) {
        if (includesSomeLane(dependencies.lanes, renderLanes)) {
          // Context list has a pending update. Mark that this fiber performed work.
          markWorkInProgressReceivedUpdate();
        } // Reset the work-in-progress list


        dependencies.firstContext = null;
      }
    }
  }
}
function readContext(context) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    if (isDisallowedContextReadInDEV) {
      error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
    }
  }

  var value =  context._currentValue ;

  if (lastFullyObservedContext === context) ; else {
    var contextItem = {
      context: context,
      memoizedValue: value,
      next: null
    };

    if (lastContextDependency === null) {
      if (currentlyRenderingFiber === null) {
        throw new Error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      } // This is the first dependency for this component. Create a new list.


      lastContextDependency = contextItem;
      currentlyRenderingFiber.dependencies = {
        lanes: NoLanes,
        firstContext: contextItem
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }

  return value;
}

// render. When this render exits, either because it finishes or because it is
// interrupted, the interleaved updates will be transferred onto the main part
// of the queue.

var concurrentQueues = null;
function pushConcurrentUpdateQueue(queue) {
  if (concurrentQueues === null) {
    concurrentQueues = [queue];
  } else {
    concurrentQueues.push(queue);
  }
}
function finishQueueingConcurrentUpdates() {
  // Transfer the interleaved updates onto the main queue. Each queue has a
  // `pending` field and an `interleaved` field. When they are not null, they
  // point to the last node in a circular linked list. We need to append the
  // interleaved list to the end of the pending list by joining them into a
  // single, circular list.
  if (concurrentQueues !== null) {
    for (var i = 0; i < concurrentQueues.length; i++) {
      var queue = concurrentQueues[i];
      var lastInterleavedUpdate = queue.interleaved;

      if (lastInterleavedUpdate !== null) {
        queue.interleaved = null;
        var firstInterleavedUpdate = lastInterleavedUpdate.next;
        var lastPendingUpdate = queue.pending;

        if (lastPendingUpdate !== null) {
          var firstPendingUpdate = lastPendingUpdate.next;
          lastPendingUpdate.next = firstInterleavedUpdate;
          lastInterleavedUpdate.next = firstPendingUpdate;
        }

        queue.pending = lastInterleavedUpdate;
      }
    }

    concurrentQueues = null;
  }
}
function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
  return markUpdateLaneFromFiberToRoot(fiber, lane);
}
function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
}
function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
  var interleaved = queue.interleaved;

  if (interleaved === null) {
    // This is the first update. Create a circular list.
    update.next = update; // At the end of the current render, this queue's interleaved updates will
    // be transferred to the pending queue.

    pushConcurrentUpdateQueue(queue);
  } else {
    update.next = interleaved.next;
    interleaved.next = update;
  }

  queue.interleaved = update;
  return markUpdateLaneFromFiberToRoot(fiber, lane);
}
function enqueueConcurrentRenderForLane(fiber, lane) {
  return markUpdateLaneFromFiberToRoot(fiber, lane);
} // Calling this function outside this module should only be done for backwards
// compatibility and should always be accompanied by a warning.

var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;

function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
  // Update the source fiber's lanes
  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
  var alternate = sourceFiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, lane);
  }

  {
    if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
    }
  } // Walk the parent path to the root and update the child lanes.


  var node = sourceFiber;
  var parent = sourceFiber.return;

  while (parent !== null) {
    parent.childLanes = mergeLanes(parent.childLanes, lane);
    alternate = parent.alternate;

    if (alternate !== null) {
      alternate.childLanes = mergeLanes(alternate.childLanes, lane);
    } else {
      {
        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        }
      }
    }

    node = parent;
    parent = parent.return;
  }

  if (node.tag === HostRoot) {
    var root = node.stateNode;
    return root;
  } else {
    return null;
  }
}

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.

var hasForceUpdate = false;
var didWarnUpdateInsideUpdate;
var currentlyProcessingQueue;

{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
}

function initializeUpdateQueue(fiber) {
  var queue = {
    baseState: fiber.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null,
      interleaved: null,
      lanes: NoLanes
    },
    effects: null
  };
  fiber.updateQueue = queue;
}
function cloneUpdateQueue(current, workInProgress) {
  // Clone the update queue from current. Unless it's already a clone.
  var queue = workInProgress.updateQueue;
  var currentQueue = current.updateQueue;

  if (queue === currentQueue) {
    var clone = {
      baseState: currentQueue.baseState,
      firstBaseUpdate: currentQueue.firstBaseUpdate,
      lastBaseUpdate: currentQueue.lastBaseUpdate,
      shared: currentQueue.shared,
      effects: currentQueue.effects
    };
    workInProgress.updateQueue = clone;
  }
}
function createUpdate(eventTime, lane) {
  var update = {
    eventTime: eventTime,
    lane: lane,
    tag: UpdateState,
    payload: null,
    callback: null,
    next: null
  };
  return update;
}
function enqueueUpdate(fiber, update, lane) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return null;
  }

  var sharedQueue = updateQueue.shared;

  {
    if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
      error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');

      didWarnUpdateInsideUpdate = true;
    }
  }

  if (isUnsafeClassRenderPhaseUpdate()) {
    // This is an unsafe render phase update. Add directly to the update
    // queue so we can process it immediately during the current render.
    var pending = sharedQueue.pending;

    if (pending === null) {
      // This is the first update. Create a circular list.
      update.next = update;
    } else {
      update.next = pending.next;
      pending.next = update;
    }

    sharedQueue.pending = update; // Update the childLanes even though we're most likely already rendering
    // this fiber. This is for backwards compatibility in the case where you
    // update a different component during render phase than the one that is
    // currently renderings (a pattern that is accompanied by a warning).

    return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
  } else {
    return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
  }
}
function entangleTransitions(root, fiber, lane) {
  var updateQueue = fiber.updateQueue;

  if (updateQueue === null) {
    // Only occurs if the fiber has been unmounted.
    return;
  }

  var sharedQueue = updateQueue.shared;

  if (isTransitionLane(lane)) {
    var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
    // have finished. We can remove them from the shared queue, which represents
    // a superset of the actually pending lanes. In some cases we may entangle
    // more than we need to, but that's OK. In fact it's worse if we *don't*
    // entangle when we should.

    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.

    var newQueueLanes = mergeLanes(queueLanes, lane);
    sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
    // the lane finished since the last time we entangled it. So we need to
    // entangle it again, just to be sure.

    markRootEntangled(root, newQueueLanes);
  }
}
function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
  // Captured updates are updates that are thrown by a child during the render
  // phase. They should be discarded if the render is aborted. Therefore,
  // we should only put them on the work-in-progress queue, not the current one.
  var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.

  var current = workInProgress.alternate;

  if (current !== null) {
    var currentQueue = current.updateQueue;

    if (queue === currentQueue) {
      // The work-in-progress queue is the same as current. This happens when
      // we bail out on a parent fiber that then captures an error thrown by
      // a child. Since we want to append the update only to the work-in
      // -progress queue, we need to clone the updates. We usually clone during
      // processUpdateQueue, but that didn't happen in this case because we
      // skipped over the parent when we bailed out.
      var newFirst = null;
      var newLast = null;
      var firstBaseUpdate = queue.firstBaseUpdate;

      if (firstBaseUpdate !== null) {
        // Loop through the updates and clone them.
        var update = firstBaseUpdate;

        do {
          var clone = {
            eventTime: update.eventTime,
            lane: update.lane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };

          if (newLast === null) {
            newFirst = newLast = clone;
          } else {
            newLast.next = clone;
            newLast = clone;
          }

          update = update.next;
        } while (update !== null); // Append the captured update the end of the cloned list.


        if (newLast === null) {
          newFirst = newLast = capturedUpdate;
        } else {
          newLast.next = capturedUpdate;
          newLast = capturedUpdate;
        }
      } else {
        // There are no base updates.
        newFirst = newLast = capturedUpdate;
      }

      queue = {
        baseState: currentQueue.baseState,
        firstBaseUpdate: newFirst,
        lastBaseUpdate: newLast,
        shared: currentQueue.shared,
        effects: currentQueue.effects
      };
      workInProgress.updateQueue = queue;
      return;
    }
  } // Append the update to the end of the list.


  var lastBaseUpdate = queue.lastBaseUpdate;

  if (lastBaseUpdate === null) {
    queue.firstBaseUpdate = capturedUpdate;
  } else {
    lastBaseUpdate.next = capturedUpdate;
  }

  queue.lastBaseUpdate = capturedUpdate;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var payload = update.payload;

        if (typeof payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          var nextState = payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);

              try {
                payload.call(instance, prevState, nextProps);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }

            exitDisallowedContextReadInDEV();
          }

          return nextState;
        } // State object


        return payload;
      }

    case CaptureUpdate:
      {
        workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough

    case UpdateState:
      {
        var _payload = update.payload;
        var partialState;

        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
          }

          partialState = _payload.call(instance, prevState, nextProps);

          {
            if ( workInProgress.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);

              try {
                _payload.call(instance, prevState, nextProps);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }

            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload;
        }

        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        } // Merge the partial state and the previous state.


        return assign({}, prevState, partialState);
      }

    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }

  return prevState;
}

function processUpdateQueue(workInProgress, props, instance, renderLanes) {
  // This is always non-null on a ClassComponent or HostRoot
  var queue = workInProgress.updateQueue;
  hasForceUpdate = false;

  {
    currentlyProcessingQueue = queue.shared;
  }

  var firstBaseUpdate = queue.firstBaseUpdate;
  var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.

  var pendingQueue = queue.shared.pending;

  if (pendingQueue !== null) {
    queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
    // and last so that it's non-circular.

    var lastPendingUpdate = pendingQueue;
    var firstPendingUpdate = lastPendingUpdate.next;
    lastPendingUpdate.next = null; // Append pending updates to base queue

    if (lastBaseUpdate === null) {
      firstBaseUpdate = firstPendingUpdate;
    } else {
      lastBaseUpdate.next = firstPendingUpdate;
    }

    lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
    // we need to transfer the updates to that queue, too. Because the base
    // queue is a singly-linked list with no cycles, we can append to both
    // lists and take advantage of structural sharing.
    // TODO: Pass `current` as argument

    var current = workInProgress.alternate;

    if (current !== null) {
      // This is always non-null on a ClassComponent or HostRoot
      var currentQueue = current.updateQueue;
      var currentLastBaseUpdate = currentQueue.lastBaseUpdate;

      if (currentLastBaseUpdate !== lastBaseUpdate) {
        if (currentLastBaseUpdate === null) {
          currentQueue.firstBaseUpdate = firstPendingUpdate;
        } else {
          currentLastBaseUpdate.next = firstPendingUpdate;
        }

        currentQueue.lastBaseUpdate = lastPendingUpdate;
      }
    }
  } // These values may change as we process the queue.


  if (firstBaseUpdate !== null) {
    // Iterate through the list of updates to compute the result.
    var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
    // from the original lanes.

    var newLanes = NoLanes;
    var newBaseState = null;
    var newFirstBaseUpdate = null;
    var newLastBaseUpdate = null;
    var update = firstBaseUpdate;

    do {
      var updateLane = update.lane;
      var updateEventTime = update.eventTime;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          eventTime: updateEventTime,
          lane: updateLane,
          tag: update.tag,
          payload: update.payload,
          callback: update.callback,
          next: null
        };

        if (newLastBaseUpdate === null) {
          newFirstBaseUpdate = newLastBaseUpdate = clone;
          newBaseState = newState;
        } else {
          newLastBaseUpdate = newLastBaseUpdate.next = clone;
        } // Update the remaining priority in the queue.


        newLanes = mergeLanes(newLanes, updateLane);
      } else {
        // This update does have sufficient priority.
        if (newLastBaseUpdate !== null) {
          var _clone = {
            eventTime: updateEventTime,
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            tag: update.tag,
            payload: update.payload,
            callback: update.callback,
            next: null
          };
          newLastBaseUpdate = newLastBaseUpdate.next = _clone;
        } // Process this update.


        newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
        var callback = update.callback;

        if (callback !== null && // If the update was already committed, we should not queue its
        // callback again.
        update.lane !== NoLane) {
          workInProgress.flags |= Callback;
          var effects = queue.effects;

          if (effects === null) {
            queue.effects = [update];
          } else {
            effects.push(update);
          }
        }
      }

      update = update.next;

      if (update === null) {
        pendingQueue = queue.shared.pending;

        if (pendingQueue === null) {
          break;
        } else {
          // An update was scheduled from inside a reducer. Add the new
          // pending updates to the end of the list and keep processing.
          var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
          // unravel them when transferring them to the base queue.

          var _firstPendingUpdate = _lastPendingUpdate.next;
          _lastPendingUpdate.next = null;
          update = _firstPendingUpdate;
          queue.lastBaseUpdate = _lastPendingUpdate;
          queue.shared.pending = null;
        }
      }
    } while (true);

    if (newLastBaseUpdate === null) {
      newBaseState = newState;
    }

    queue.baseState = newBaseState;
    queue.firstBaseUpdate = newFirstBaseUpdate;
    queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
    // process them during this render, but we do need to track which lanes
    // are remaining.

    var lastInterleaved = queue.shared.interleaved;

    if (lastInterleaved !== null) {
      var interleaved = lastInterleaved;

      do {
        newLanes = mergeLanes(newLanes, interleaved.lane);
        interleaved = interleaved.next;
      } while (interleaved !== lastInterleaved);
    } else if (firstBaseUpdate === null) {
      // `queue.lanes` is used for entangling transitions. We can set it back to
      // zero once the queue is empty.
      queue.shared.lanes = NoLanes;
    } // Set the remaining expiration time to be whatever is remaining in the queue.
    // This should be fine because the only two other things that contribute to
    // expiration time are props and context. We're already in the middle of the
    // begin phase by the time we start processing the queue, so we've already
    // dealt with the props. Context in components that specify
    // shouldComponentUpdate is tricky; but we'll have to account for
    // that regardless.


    markSkippedUpdateLanes(newLanes);
    workInProgress.lanes = newLanes;
    workInProgress.memoizedState = newState;
  }

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  if (typeof callback !== 'function') {
    throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + ("received: " + callback));
  }

  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}
function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}
function commitUpdateQueue(finishedWork, finishedQueue, instance) {
  // Commit the effects
  var effects = finishedQueue.effects;
  finishedQueue.effects = null;

  if (effects !== null) {
    for (var i = 0; i < effects.length; i++) {
      var effect = effects[i];
      var callback = effect.callback;

      if (callback !== null) {
        effect.callback = null;
        callCallback(callback, instance);
      }
    }
  }
}

var fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.

var emptyRefsObject = new React.Component().refs;
var didWarnAboutStateAssignmentForComponent;
var didWarnAboutUninitializedState;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
var didWarnAboutLegacyLifecyclesAndDerivedState;
var didWarnAboutUndefinedDerivedState;
var warnOnUndefinedDerivedState;
var warnOnInvalidCallback;
var didWarnAboutDirectlyAssigningPropsToState;
var didWarnAboutContextTypeAndContextTypes;
var didWarnAboutInvalidateContextType;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();
  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }

    var key = callerName + '_' + callback;

    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);

      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentNameFromType(type) || 'Component';

      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);

        error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  }; // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.


  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      throw new Error('_processChildContext is not available in React 16+. This likely ' + 'means you have multiple copies of React and are attempting to nest ' + 'a React 15 tree inside a React 16 tree using ' + "unstable_renderSubtreeIntoContainer, which isn't supported. Try " + 'to make sure you have only one copy of React (and ideally, switch ' + 'to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;
  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        // Invoke the function an extra time to help detect side-effects.
        partialState = getDerivedStateFromProps(nextProps, prevState);
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    warnOnUndefinedDerivedState(ctor, partialState);
  } // Merge the partial state and the previous state.


  var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
  // base state.

  if (workInProgress.lanes === NoLanes) {
    // Queue is always non-null for classes
    var updateQueue = workInProgress.updateQueue;
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'setState');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markStateUpdateScheduled(fiber, lane);
    }
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markStateUpdateScheduled(fiber, lane);
    }
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var eventTime = requestEventTime();
    var lane = requestUpdateLane(fiber);
    var update = createUpdate(eventTime, lane);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }

      update.callback = callback;
    }

    var root = enqueueUpdate(fiber, update, lane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitions(root, fiber, lane);
    }

    {
      markForceUpdateScheduled(fiber, lane);
    }
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;

  if (typeof instance.shouldComponentUpdate === 'function') {
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);

    {
      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          // Invoke the function an extra time to help detect side-effects.
          shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }

      if (shouldUpdate === undefined) {
        error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentNameFromType(ctor) || 'Component');
      }
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;

  {
    var name = getComponentNameFromType(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
      error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
    }

    if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
    }

    if (instance.propTypes) {
      error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
    }

    if (instance.contextType) {
      error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);
    }

    {
      if (instance.contextTypes) {
        error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      }

      if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
        didWarnAboutContextTypeAndContextTypes.add(ctor);

        error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
      }
    }

    if (typeof instance.componentShouldUpdate === 'function') {
      error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
    }

    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentNameFromType(ctor) || 'A pure component');
    }

    if (typeof instance.componentDidUnmount === 'function') {
      error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
    }

    if (typeof instance.componentDidReceiveProps === 'function') {
      error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
    }

    if (typeof instance.componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
    }

    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {
      error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);
    }

    var hasMutatedProps = instance.props !== newProps;

    if (instance.props !== undefined && hasMutatedProps) {
      error('%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
    }

    if (instance.defaultProps) {
      error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);

      error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentNameFromType(ctor));
    }

    if (typeof instance.getDerivedStateFromProps === 'function') {
      error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof instance.getDerivedStateFromError === 'function') {
      error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
    }

    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
      error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);
    }

    var _state = instance.state;

    if (_state && (typeof _state !== 'object' || isArray(_state))) {
      error('%s.state: must be set to an object or null', name);
    }

    if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {
      error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

  set(instance, workInProgress);

  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = emptyContextObject;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid = // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);
        var addendum = '';

        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }

        error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentNameFromType(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  }

  var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.

  {
    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        instance = new ctor(props, context); // eslint-disable-line no-new
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }
  }

  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentNameFromType(ctor) || 'Component';

      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);

        error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    } // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.


    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;

      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }

      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }

      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }

      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentNameFromType(ctor) || 'Component';

        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);

          error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
        }
      }
    }
  } // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.


  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }

  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  if (oldState !== instance.state) {
    {
      error('%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentNameFromFiber(workInProgress) || 'Component');
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;

  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }

  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }

  if (instance.state !== oldState) {
    {
      var componentName = getComponentNameFromFiber(workInProgress) || 'Component';

      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);

        error('%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }

    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
} // Invokes the mount life-cycles on a previously never rendered instance.


function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;
  initializeUpdateQueue(workInProgress);
  var contextType = ctor.contextType;

  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentNameFromType(ctor) || 'Component';

      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);

        error('%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictLegacyMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
    }
  }

  instance.state = workInProgress.memoizedState;
  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  } // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.


  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
    // process them now.

    processUpdateQueue(workInProgress, newProps, instance, renderLanes);
    instance.state = workInProgress.memoizedState;
  }

  if (typeof instance.componentDidMount === 'function') {
    var fiberFlags = Update;

    {
      fiberFlags |= LayoutStatic;
    }

    if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
      fiberFlags |= MountLayoutDev;
    }

    workInProgress.flags |= fiberFlags;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      var fiberFlags = Update;

      {
        fiberFlags |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        fiberFlags |= MountLayoutDev;
      }

      workInProgress.flags |= fiberFlags;
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
    }

    if (typeof instance.componentDidMount === 'function') {
      var _fiberFlags = Update;

      {
        _fiberFlags |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        _fiberFlags |= MountLayoutDev;
      }

      workInProgress.flags |= _fiberFlags;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      var _fiberFlags2 = Update;

      {
        _fiberFlags2 |= LayoutStatic;
      }

      if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
        _fiberFlags2 |= MountLayoutDev;
      }

      workInProgress.flags |= _fiberFlags2;
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
} // Invokes the update life-cycles and returns false if it shouldn't rerender.


function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
  var instance = workInProgress.stateNode;
  cloneUpdateQueue(current, workInProgress);
  var unresolvedOldProps = workInProgress.memoizedProps;
  var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
  instance.props = oldProps;
  var unresolvedNewProps = workInProgress.pendingProps;
  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = emptyContextObject;

  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.
  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.

  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();
  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  processUpdateQueue(workInProgress, newProps, instance, renderLanes);
  newState = workInProgress.memoizedState;

  if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !(enableLazyContextPropagation   )) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    }

    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
  // both before and after `shouldComponentUpdate` has been called. Not ideal,
  // but I'm loath to refactor this function. This only happens for memoized
  // components so it's not that common.
  enableLazyContextPropagation   ;

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
    }

    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.flags |= Update;
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.flags |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Update;
      }
    }

    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.flags |= Snapshot;
      }
    } // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.


    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  } // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.


  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;
  return shouldUpdate;
}

var didWarnAboutMaps;
var didWarnAboutGenerators;
var didWarnAboutStringRefs;
var ownerHasKeyUseWarning;
var ownerHasFunctionTypeWarning;

var warnForMissingKey = function (child, returnFiber) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefs = {};
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */

  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child, returnFiber) {
    if (child === null || typeof child !== 'object') {
      return;
    }

    if (!child._store || child._store.validated || child.key != null) {
      return;
    }

    if (typeof child._store !== 'object') {
      throw new Error('React Component in warnForMissingKey should have a _store. ' + 'This error is likely caused by a bug in React. Please file an issue.');
    }

    child._store.validated = true;
    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

    if (ownerHasKeyUseWarning[componentName]) {
      return;
    }

    ownerHasKeyUseWarning[componentName] = true;

    error('Each child in a list should have a unique ' + '"key" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');
  };
}

function coerceRef(returnFiber, current, element) {
  var mixedRef = element.ref;

  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      // TODO: Clean this up once we turn on the string ref warning for
      // everyone, because the strict mode case will no longer be relevant
      if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
      // because these cannot be automatically converted to an arrow function
      // using a codemod. Therefore, we don't have to warn about string refs again.
      !(element._owner && element._self && element._owner.stateNode !== element._self)) {
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

        if (!didWarnAboutStringRefs[componentName]) {
          {
            error('A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);
          }

          didWarnAboutStringRefs[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst;

      if (owner) {
        var ownerFiber = owner;

        if (ownerFiber.tag !== ClassComponent) {
          throw new Error('Function components cannot have string refs. ' + 'We recommend using useRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref');
        }

        inst = ownerFiber.stateNode;
      }

      if (!inst) {
        throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + 'bug in React. Please file an issue.');
      } // Assigning this to a const so Flow knows it won't change in the closure


      var resolvedInst = inst;

      {
        checkPropStringCoercion(mixedRef, 'ref');
      }

      var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
        return current.ref;
      }

      var ref = function (value) {
        var refs = resolvedInst.refs;

        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = resolvedInst.refs = {};
        }

        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };

      ref._stringRef = stringRef;
      return ref;
    } else {
      if (typeof mixedRef !== 'string') {
        throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');
      }

      if (!element._owner) {
        throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + ' the following reasons:\n' + '1. You may be adding a ref to a function component\n' + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + '3. You have multiple copies of React loaded\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');
      }
    }
  }

  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  var childString = Object.prototype.toString.call(newChild);
  throw new Error("Objects are not valid as a React child (found: " + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
}

function warnOnFunctionType(returnFiber) {
  {
    var componentName = getComponentNameFromFiber(returnFiber) || 'Component';

    if (ownerHasFunctionTypeWarning[componentName]) {
      return;
    }

    ownerHasFunctionTypeWarning[componentName] = true;

    error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
  }
}

function resolveLazy(lazyType) {
  var payload = lazyType._payload;
  var init = lazyType._init;
  return init(payload);
} // This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.


function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }

    var deletions = returnFiber.deletions;

    if (deletions === null) {
      returnFiber.deletions = [childToDelete];
      returnFiber.flags |= ChildDeletion;
    } else {
      deletions.push(childToDelete);
    }
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    } // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.


    var childToDelete = currentFirstChild;

    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }

    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    // instead.
    var existingChildren = new Map();
    var existingChild = currentFirstChild;

    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }

      existingChild = existingChild.sibling;
    }

    return existingChildren;
  }

  function useFiber(fiber, pendingProps) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;

    if (!shouldTrackSideEffects) {
      // During hydration, the useId algorithm needs to know which fibers are
      // part of a list of children (arrays, iterators).
      newFiber.flags |= Forked;
      return lastPlacedIndex;
    }

    var current = newFiber.alternate;

    if (current !== null) {
      var oldIndex = current.index;

      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.flags |= Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.flags |= Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.flags |= Placement;
    }

    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, lanes) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, lanes) {
    var elementType = element.type;

    if (elementType === REACT_FRAGMENT_TYPE) {
      return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
    }

    if (current !== null) {
      if (current.elementType === elementType || ( // Keep this check inline so it only runs on the false path:
       isCompatibleFamilyForHotReloading(current, element) ) || // Lazy types should reconcile their resolved type.
      // We need to do this after the Hot Reloading check above,
      // because hot reloading has different semantics than prod because
      // it doesn't resuspend. So we can't let the call below suspend.
      typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
        // Move based on index
        var existing = useFiber(current, element.props);
        existing.ref = coerceRef(returnFiber, current, element);
        existing.return = returnFiber;

        {
          existing._debugSource = element._source;
          existing._debugOwner = element._owner;
        }

        return existing;
      }
    } // Insert


    var created = createFiberFromElement(element, returnFiber.mode, lanes);
    created.ref = coerceRef(returnFiber, current, element);
    created.return = returnFiber;
    return created;
  }

  function updatePortal(returnFiber, current, portal, lanes) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || []);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, lanes, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, lanes) {
    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);

            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);

            _created2.return = returnFiber;
            return _created2;
          }

        case REACT_LAZY_TYPE:
          {
            var payload = newChild._payload;
            var init = newChild._init;
            return createChild(returnFiber, init(payload), lanes);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);

        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, lanes) {
    // Update the fiber if the keys match, otherwise return null.
    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }

      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              return updateElement(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, lanes);
            } else {
              return null;
            }
          }

        case REACT_LAZY_TYPE:
          {
            var payload = newChild._payload;
            var init = newChild._init;
            return updateSlot(returnFiber, oldFiber, init(payload), lanes);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updateElement(returnFiber, _matchedFiber, newChild, lanes);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
          }

        case REACT_LAZY_TYPE:
          var payload = newChild._payload;
          var init = newChild._init;
          return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;

        return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    }

    return null;
  }
  /**
   * Warns if there is a duplicate or missing key
   */


  function warnOnInvalidKey(child, knownKeys, returnFiber) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }

      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child, returnFiber);
          var key = child.key;

          if (typeof key !== 'string') {
            break;
          }

          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }

          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }

          error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);

          break;

        case REACT_LAZY_TYPE:
          var payload = child._payload;
          var init = child._init;
          warnOnInvalidKey(init(payload), knownKeys, returnFiber);
          break;
      }
    }

    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.
    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.
    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.
    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.
    {
      // First, validate keys.
      var knownKeys = null;

      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);

      if (getIsHydrating()) {
        var numberOfForks = newIdx;
        pushTreeFork(returnFiber, numberOfForks);
      }

      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);

        if (_newFiber === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }

        previousNewFiber = _newFiber;
      }

      if (getIsHydrating()) {
        var _numberOfForks = newIdx;
        pushTreeFork(returnFiber, _numberOfForks);
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);

      if (_newFiber2 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }

        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    if (getIsHydrating()) {
      var _numberOfForks2 = newIdx;
      pushTreeFork(returnFiber, _numberOfForks2);
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.
    var iteratorFn = getIteratorFn(newChildrenIterable);

    if (typeof iteratorFn !== 'function') {
      throw new Error('An object is not an iterable. This error is likely caused by a bug in ' + 'React. Please file an issue.');
    }

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        if (!didWarnAboutGenerators) {
          error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');
        }

        didWarnAboutGenerators = true;
      } // Warn about using Maps as children


      if (newChildrenIterable.entries === iteratorFn) {
        if (!didWarnAboutMaps) {
          error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
        }

        didWarnAboutMaps = true;
      } // First, validate keys.
      // We'll get a different iterator later for the main pass.


      var _newChildren = iteratorFn.call(newChildrenIterable);

      if (_newChildren) {
        var knownKeys = null;

        var _step = _newChildren.next();

        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);

    if (newChildren == null) {
      throw new Error('An iterable object provided no iterator.');
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;
    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    var step = newChildren.next();

    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }

      var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);

      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }

        break;
      }

      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }

      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }

      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);

      if (getIsHydrating()) {
        var numberOfForks = newIdx;
        pushTreeFork(returnFiber, numberOfForks);
      }

      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, lanes);

        if (_newFiber3 === null) {
          continue;
        }

        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }

        previousNewFiber = _newFiber3;
      }

      if (getIsHydrating()) {
        var _numberOfForks3 = newIdx;
        pushTreeFork(returnFiber, _numberOfForks3);
      }

      return resultingFirstChild;
    } // Add all children to a key map for quick lookups.


    var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);

      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }

        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }

        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    if (getIsHydrating()) {
      var _numberOfForks4 = newIdx;
      pushTreeFork(returnFiber, _numberOfForks4);
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent);
      existing.return = returnFiber;
      return existing;
    } // The existing first child is not a text node so we need to create one
    // and delete the existing ones.


    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
    var key = element.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        var elementType = element.type;

        if (elementType === REACT_FRAGMENT_TYPE) {
          if (child.tag === Fragment) {
            deleteRemainingChildren(returnFiber, child.sibling);
            var existing = useFiber(child, element.props.children);
            existing.return = returnFiber;

            {
              existing._debugSource = element._source;
              existing._debugOwner = element._owner;
            }

            return existing;
          }
        } else {
          if (child.elementType === elementType || ( // Keep this check inline so it only runs on the false path:
           isCompatibleFamilyForHotReloading(child, element) ) || // Lazy types should reconcile their resolved type.
          // We need to do this after the Hot Reloading check above,
          // because hot reloading has different semantics than prod because
          // it doesn't resuspend. So we can't let the call below suspend.
          typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
            deleteRemainingChildren(returnFiber, child.sibling);

            var _existing = useFiber(child, element.props);

            _existing.ref = coerceRef(returnFiber, child, element);
            _existing.return = returnFiber;

            {
              _existing._debugSource = element._source;
              _existing._debugOwner = element._owner;
            }

            return _existing;
          }
        } // Didn't match.


        deleteRemainingChildren(returnFiber, child);
        break;
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);

      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
    var key = portal.key;
    var child = currentFirstChild;

    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || []);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }

      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
    created.return = returnFiber;
    return created;
  } // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.


  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.
    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    } // Handle object types


    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));

        case REACT_LAZY_TYPE:
          var payload = newChild._payload;
          var init = newChild._init; // TODO: This function is supposed to be non-recursive.

          return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
      }

      if (isArray(newChild)) {
        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
      }

      if (getIteratorFn(newChild)) {
        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType(returnFiber);
      }
    } // Remaining cases are all treated as empty.


    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);
function cloneChildFibers(current, workInProgress) {
  if (current !== null && workInProgress.child !== current.child) {
    throw new Error('Resuming work not yet implemented.');
  }

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
  workInProgress.child = newChild;
  newChild.return = workInProgress;

  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
    newChild.return = workInProgress;
  }

  newChild.sibling = null;
} // Reset a workInProgress child set to prepare it for a second pass.

function resetChildFibers(workInProgress, lanes) {
  var child = workInProgress.child;

  while (child !== null) {
    resetWorkInProgress(child, lanes);
    child = child.sibling;
  }
}

var NO_CONTEXT = {};
var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  if (c === NO_CONTEXT) {
    throw new Error('Expected host context to exist. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }

  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.

  push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.

  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.

  if (context === nextContext) {
    return;
  } // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.


  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
// inherited deeply down the subtree. The upper bits only affect
// this immediate suspense boundary and gets reset each new
// boundary or suspense list.

var SubtreeSuspenseContextMask = 1; // Subtree Flags:
// InvisibleParentSuspenseContext indicates that one of our parent Suspense
// boundaries is not currently showing visible main content.
// Either because it is already showing a fallback or is not mounted at all.
// We can use this to determine if it is desirable to trigger a fallback at
// the parent. If not, then we might need to trigger undesirable boundaries
// and/or suspend the commit to avoid hiding the parent content.

var InvisibleParentSuspenseContext = 1; // Shallow Flags:
// ForceSuspenseFallback can be used by SuspenseList to force newly added
// items into their fallback state during one of the render passes.

var ForceSuspenseFallback = 2;
var suspenseStackCursor = createCursor(DefaultSuspenseContext);
function hasSuspenseContext(parentContext, flag) {
  return (parentContext & flag) !== 0;
}
function setDefaultShallowSuspenseContext(parentContext) {
  return parentContext & SubtreeSuspenseContextMask;
}
function setShallowSuspenseContext(parentContext, shallowContext) {
  return parentContext & SubtreeSuspenseContextMask | shallowContext;
}
function addSubtreeSuspenseContext(parentContext, subtreeContext) {
  return parentContext | subtreeContext;
}
function pushSuspenseContext(fiber, newContext) {
  push(suspenseStackCursor, newContext, fiber);
}
function popSuspenseContext(fiber) {
  pop(suspenseStackCursor, fiber);
}

function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;

  if (nextState !== null) {
    if (nextState.dehydrated !== null) {
      // A dehydrated boundary always captures.
      return true;
    }

    return false;
  }

  var props = workInProgress.memoizedProps; // Regular boundaries always capture.

  {
    return true;
  } // If it's a boundary we should avoid, then we prefer to bubble up to the
}
function findFirstSuspended(row) {
  var node = row;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        var dehydrated = state.dehydrated;

        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
          return node;
        }
      }
    } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
    // keep track of whether it suspended or not.
    node.memoizedProps.revealOrder !== undefined) {
      var didSuspend = (node.flags & DidCapture) !== NoFlags;

      if (didSuspend) {
        return node;
      }
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === row) {
      return null;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === row) {
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }

  return null;
}

var NoFlags$1 =
/*   */
0; // Represents whether effect should fire.

var HasEffect =
/* */
1; // Represents the phase in which the effect (not the clean-up) fires.

var Insertion =
/*  */
2;
var Layout =
/*    */
4;
var Passive$1 =
/*   */
8;

// and should be reset before starting a new render.
// This tracks which mutable sources need to be reset after a render.

var workInProgressSources = [];
function resetWorkInProgressVersions() {
  for (var i = 0; i < workInProgressSources.length; i++) {
    var mutableSource = workInProgressSources[i];

    {
      mutableSource._workInProgressVersionPrimary = null;
    }
  }

  workInProgressSources.length = 0;
}
// This ensures that the version used for server rendering matches the one
// that is eventually read during hydration.
// If they don't match there's a potential tear and a full deopt render is required.

function registerMutableSourceForHydration(root, mutableSource) {
  var getVersion = mutableSource._getVersion;
  var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
  // Retaining it forever may interfere with GC.

  if (root.mutableSourceEagerHydrationData == null) {
    root.mutableSourceEagerHydrationData = [mutableSource, version];
  } else {
    root.mutableSourceEagerHydrationData.push(mutableSource, version);
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
var didWarnAboutMismatchedHooksForComponent;
var didWarnUncachedGetSnapshot;

{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.

var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.

var currentHook = null;
var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
// does not get reset if we do another render pass; only when we're completely
// finished evaluating this component. This is an optimization so we know
// whether we need to clear render phase updates after a throw.

var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
// gets reset after each attempt.
// TODO: Maybe there's some way to consolidate this with
// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.

var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.

var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
// hydration). This counter is global, so client ids are not stable across
// render attempts.

var globalClientIdCounter = 0;
var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.

var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
// the dependencies for Hooks that need them (e.g. useEffect or useMemo).
// When true, such Hooks will always be "remounted". Only used during hot reload.

var ignorePreviousDependencies = false;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;

      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function checkDepsAreArrayDev(deps) {
  {
    if (deps !== undefined && deps !== null && !isArray(deps)) {
      // Verify deps, but only on mount to avoid extra checks.
      // It's unlikely their type would change as usually you define them inline.
      error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);

    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';
        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
          var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
          // lol @ IE not supporting String#repeat

          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';
          table += row;
        }

        error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  throw new Error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
}

function areHookInputsEqual(nextDeps, prevDeps) {
  {
    if (ignorePreviousDependencies) {
      // Only true when this component is being hot reloaded.
      return false;
    }
  }

  if (prevDeps === null) {
    {
      error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }

    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
    }
  }

  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (objectIs(nextDeps[i], prevDeps[i])) {
      continue;
    }

    return false;
  }

  return true;
}

function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
  renderLanes = nextRenderLanes;
  currentlyRenderingFiber$1 = workInProgress;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1; // Used for hot reloading:

    ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
  }

  workInProgress.memoizedState = null;
  workInProgress.updateQueue = null;
  workInProgress.lanes = NoLanes; // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;
  // didScheduleRenderPhaseUpdate = false;
  // localIdCounter = 0;
  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because memoizedState === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)
  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so memoizedState would be null during updates and mounts.

  {
    if (current !== null && current.memoizedState !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, secondArg); // Check if there was a render phase update

  if (didScheduleRenderPhaseUpdateDuringThisPass) {
    // Keep rendering in a loop for as long as render phase updates continue to
    // be scheduled. Use a counter to prevent infinite loops.
    var numberOfReRenders = 0;

    do {
      didScheduleRenderPhaseUpdateDuringThisPass = false;
      localIdCounter = 0;

      if (numberOfReRenders >= RE_RENDER_LIMIT) {
        throw new Error('Too many re-renders. React limits the number of renders to prevent ' + 'an infinite loop.');
      }

      numberOfReRenders += 1;

      {
        // Even when hot reloading, allow dependencies to stabilize
        // after first render to prevent infinite render phase updates.
        ignorePreviousDependencies = false;
      } // Start over from the beginning of the list


      currentHook = null;
      workInProgressHook = null;
      workInProgress.updateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current =  HooksDispatcherOnRerenderInDEV ;
      children = Component(props, secondArg);
    } while (didScheduleRenderPhaseUpdateDuringThisPass);
  } // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrance.


  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  {
    workInProgress._debugHookTypes = hookTypesDev;
  } // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.


  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
    // render. If this fires, it suggests that we incorrectly reset the static
    // flags in some other part of the codebase. This has happened before, for
    // example, in the SuspenseList implementation.

    if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
    // and creates false positives. To make this work in legacy mode, we'd
    // need to mark fibers that commit in an incomplete state, somehow. For
    // now I'll disable the warning that most of the bugs that would trigger
    // it are either exclusive to concurrent mode or exist in both.
    (current.mode & ConcurrentMode) !== NoMode) {
      error('Internal React error: Expected static flag was missing. Please ' + 'notify the React team.');
    }
  }

  didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
  // localIdCounter = 0;

  if (didRenderTooFewHooks) {
    throw new Error('Rendered fewer hooks than expected. This may be caused by an accidental ' + 'early return statement.');
  }

  return children;
}
function checkDidRenderIdHook() {
  // This should be called immediately after every renderWithHooks call.
  // Conceptually, it's part of the return value of renderWithHooks; it's only a
  // separate function to avoid using an array tuple.
  var didRenderIdHook = localIdCounter !== 0;
  localIdCounter = 0;
  return didRenderIdHook;
}
function bailoutHooks(current, workInProgress, lanes) {
  workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
  // complete phase (bubbleProperties).

  if ( (workInProgress.mode & StrictEffectsMode) !== NoMode) {
    workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
  } else {
    workInProgress.flags &= ~(Passive | Update);
  }

  current.lanes = removeLanes(current.lanes, lanes);
}
function resetHooksAfterThrow() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrance.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  if (didScheduleRenderPhaseUpdate) {
    // There were render phase updates. These are only valid for this render
    // phase, which we are now aborting. Remove the updates from the queues so
    // they do not persist to the next render. Do not remove updates from hooks
    // that weren't processed.
    //
    // Only reset the updates from the queue if it has a clone. If it does
    // not have a clone, that means it wasn't processed, and the updates were
    // scheduled before we entered the render phase.
    var hook = currentlyRenderingFiber$1.memoizedState;

    while (hook !== null) {
      var queue = hook.queue;

      if (queue !== null) {
        queue.pending = null;
      }

      hook = hook.next;
    }

    didScheduleRenderPhaseUpdate = false;
  }

  renderLanes = NoLanes;
  currentlyRenderingFiber$1 = null;
  currentHook = null;
  workInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
    currentHookNameInDev = null;
    isUpdatingOpaqueValueInRenderPhase = false;
  }

  didScheduleRenderPhaseUpdateDuringThisPass = false;
  localIdCounter = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }

  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  var nextCurrentHook;

  if (currentHook === null) {
    var current = currentlyRenderingFiber$1.alternate;

    if (current !== null) {
      nextCurrentHook = current.memoizedState;
    } else {
      nextCurrentHook = null;
    }
  } else {
    nextCurrentHook = currentHook.next;
  }

  var nextWorkInProgressHook;

  if (workInProgressHook === null) {
    nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
  } else {
    nextWorkInProgressHook = workInProgressHook.next;
  }

  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;
    currentHook = nextCurrentHook;
  } else {
    // Clone from the current hook.
    if (nextCurrentHook === null) {
      throw new Error('Rendered more hooks than during the previous render.');
    }

    currentHook = nextCurrentHook;
    var newHook = {
      memoizedState: currentHook.memoizedState,
      baseState: currentHook.baseState,
      baseQueue: currentHook.baseQueue,
      queue: currentHook.queue,
      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
  }

  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null,
    stores: null
  };
}

function basicStateReducer(state, action) {
  // $FlowFixMe: Flow doesn't like mixed types
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState;

  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = {
    pending: null,
    interleaved: null,
    lanes: NoLanes,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  hook.queue = queue;
  var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (queue === null) {
    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
  }

  queue.lastRenderedReducer = reducer;
  var current = currentHook; // The last rebase update that is NOT part of the base state.

  var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.

  var pendingQueue = queue.pending;

  if (pendingQueue !== null) {
    // We have new updates that haven't been processed yet.
    // We'll add them to the base queue.
    if (baseQueue !== null) {
      // Merge the pending queue and the base queue.
      var baseFirst = baseQueue.next;
      var pendingFirst = pendingQueue.next;
      baseQueue.next = pendingFirst;
      pendingQueue.next = baseFirst;
    }

    {
      if (current.baseQueue !== baseQueue) {
        // Internal invariant that should never happen, but feasibly could in
        // the future if we implement resuming, or some form of that.
        error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');
      }
    }

    current.baseQueue = baseQueue = pendingQueue;
    queue.pending = null;
  }

  if (baseQueue !== null) {
    // We have a queue to process.
    var first = baseQueue.next;
    var newState = current.baseState;
    var newBaseState = null;
    var newBaseQueueFirst = null;
    var newBaseQueueLast = null;
    var update = first;

    do {
      var updateLane = update.lane;

      if (!isSubsetOfLanes(renderLanes, updateLane)) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        var clone = {
          lane: updateLane,
          action: update.action,
          hasEagerState: update.hasEagerState,
          eagerState: update.eagerState,
          next: null
        };

        if (newBaseQueueLast === null) {
          newBaseQueueFirst = newBaseQueueLast = clone;
          newBaseState = newState;
        } else {
          newBaseQueueLast = newBaseQueueLast.next = clone;
        } // Update the remaining priority in the queue.
        // TODO: Don't need to accumulate this. Instead, we can remove
        // renderLanes from the original lanes.


        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
        markSkippedUpdateLanes(updateLane);
      } else {
        // This update does have sufficient priority.
        if (newBaseQueueLast !== null) {
          var _clone = {
            // This update is going to be committed so we never want uncommit
            // it. Using NoLane works because 0 is a subset of all bitmasks, so
            // this will never be skipped by the check above.
            lane: NoLane,
            action: update.action,
            hasEagerState: update.hasEagerState,
            eagerState: update.eagerState,
            next: null
          };
          newBaseQueueLast = newBaseQueueLast.next = _clone;
        } // Process this update.


        if (update.hasEagerState) {
          // If this update is a state update (not a reducer) and was processed eagerly,
          // we can use the eagerly computed state
          newState = update.eagerState;
        } else {
          var action = update.action;
          newState = reducer(newState, action);
        }
      }

      update = update.next;
    } while (update !== null && update !== first);

    if (newBaseQueueLast === null) {
      newBaseState = newState;
    } else {
      newBaseQueueLast.next = newBaseQueueFirst;
    } // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState;
    hook.baseState = newBaseState;
    hook.baseQueue = newBaseQueueLast;
    queue.lastRenderedState = newState;
  } // Interleaved updates are stored on a separate queue. We aren't going to
  // process them during this render, but we do need to track which lanes
  // are remaining.


  var lastInterleaved = queue.interleaved;

  if (lastInterleaved !== null) {
    var interleaved = lastInterleaved;

    do {
      var interleavedLane = interleaved.lane;
      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
      markSkippedUpdateLanes(interleavedLane);
      interleaved = interleaved.next;
    } while (interleaved !== lastInterleaved);
  } else if (baseQueue === null) {
    // `queue.lanes` is used for entangling transitions. We can set it back to
    // zero once the queue is empty.
    queue.lanes = NoLanes;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function rerenderReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;

  if (queue === null) {
    throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
  }

  queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
  // work-in-progress hook.

  var dispatch = queue.dispatch;
  var lastRenderPhaseUpdate = queue.pending;
  var newState = hook.memoizedState;

  if (lastRenderPhaseUpdate !== null) {
    // The queue doesn't persist past this render pass.
    queue.pending = null;
    var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
    var update = firstRenderPhaseUpdate;

    do {
      // Process this render phase update. We don't have to check the
      // priority because it will always be the same as the current
      // render's.
      var action = update.action;
      newState = reducer(newState, action);
      update = update.next;
    } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
    // different from the current state.


    if (!objectIs(newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
    // the base state unless the queue is empty.
    // TODO: Not sure if this is the desired semantics, but it's what we
    // do for gDSFP. I can't remember why.

    if (hook.baseQueue === null) {
      hook.baseState = newState;
    }

    queue.lastRenderedState = newState;
  }

  return [newState, dispatch];
}

function mountMutableSource(source, getSnapshot, subscribe) {
  {
    return undefined;
  }
}

function updateMutableSource(source, getSnapshot, subscribe) {
  {
    return undefined;
  }
}

function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var fiber = currentlyRenderingFiber$1;
  var hook = mountWorkInProgressHook();
  var nextSnapshot;
  var isHydrating = getIsHydrating();

  if (isHydrating) {
    if (getServerSnapshot === undefined) {
      throw new Error('Missing getServerSnapshot, which is required for ' + 'server-rendered content. Will revert to client rendering.');
    }

    nextSnapshot = getServerSnapshot();

    {
      if (!didWarnUncachedGetSnapshot) {
        if (nextSnapshot !== getServerSnapshot()) {
          error('The result of getServerSnapshot should be cached to avoid an infinite loop');

          didWarnUncachedGetSnapshot = true;
        }
      }
    }
  } else {
    nextSnapshot = getSnapshot();

    {
      if (!didWarnUncachedGetSnapshot) {
        var cachedSnapshot = getSnapshot();

        if (!objectIs(nextSnapshot, cachedSnapshot)) {
          error('The result of getSnapshot should be cached to avoid an infinite loop');

          didWarnUncachedGetSnapshot = true;
        }
      }
    } // Unless we're rendering a blocking lane, schedule a consistency check.
    // Right before committing, we will walk the tree and check if any of the
    // stores were mutated.
    //
    // We won't do this if we're hydrating server-rendered content, because if
    // the content is stale, it's already visible anyway. Instead we'll patch
    // it up in a passive effect.


    var root = getWorkInProgressRoot();

    if (root === null) {
      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
    }

    if (!includesBlockingLane(root, renderLanes)) {
      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
  } // Read the current snapshot from the store on every render. This breaks the
  // normal rules of React, and only works because store updates are
  // always synchronous.


  hook.memoizedState = nextSnapshot;
  var inst = {
    value: nextSnapshot,
    getSnapshot: getSnapshot
  };
  hook.queue = inst; // Schedule an effect to subscribe to the store.

  mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Schedule an effect to update the mutable instance fields. We will update
  // this whenever subscribe, getSnapshot, or value changes. Because there's no
  // clean-up function, and we track the deps correctly, we can call pushEffect
  // directly, without storing any additional state. For the same reason, we
  // don't need to set a static flag, either.
  // TODO: We can move this to the passive phase once we add a pre-commit
  // consistency check. See the next comment.

  fiber.flags |= Passive;
  pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
  return nextSnapshot;
}

function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var fiber = currentlyRenderingFiber$1;
  var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
  // normal rules of React, and only works because store updates are
  // always synchronous.

  var nextSnapshot = getSnapshot();

  {
    if (!didWarnUncachedGetSnapshot) {
      var cachedSnapshot = getSnapshot();

      if (!objectIs(nextSnapshot, cachedSnapshot)) {
        error('The result of getSnapshot should be cached to avoid an infinite loop');

        didWarnUncachedGetSnapshot = true;
      }
    }
  }

  var prevSnapshot = hook.memoizedState;
  var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);

  if (snapshotChanged) {
    hook.memoizedState = nextSnapshot;
    markWorkInProgressReceivedUpdate();
  }

  var inst = hook.queue;
  updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]); // Whenever getSnapshot or subscribe changes, we need to check in the
  // commit phase if there was an interleaved mutation. In concurrent mode
  // this can happen all the time, but even in synchronous mode, an earlier
  // effect may have mutated the store.

  if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
  // checking whether we scheduled a subscription effect above.
  workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
    fiber.flags |= Passive;
    pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
    // Right before committing, we will walk the tree and check if any of the
    // stores were mutated.

    var root = getWorkInProgressRoot();

    if (root === null) {
      throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
    }

    if (!includesBlockingLane(root, renderLanes)) {
      pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
    }
  }

  return nextSnapshot;
}

function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
  fiber.flags |= StoreConsistency;
  var check = {
    getSnapshot: getSnapshot,
    value: renderedSnapshot
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.stores = [check];
  } else {
    var stores = componentUpdateQueue.stores;

    if (stores === null) {
      componentUpdateQueue.stores = [check];
    } else {
      stores.push(check);
    }
  }
}

function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
  // These are updated in the passive phase
  inst.value = nextSnapshot;
  inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
  // have been in an event that fired before the passive effects, or it could
  // have been in a layout effect. In that case, we would have used the old
  // snapsho and getSnapshot values to bail out. We need to check one more time.

  if (checkIfSnapshotChanged(inst)) {
    // Force a re-render.
    forceStoreRerender(fiber);
  }
}

function subscribeToStore(fiber, inst, subscribe) {
  var handleStoreChange = function () {
    // The store changed. Check if the snapshot changed since the last time we
    // read from the store.
    if (checkIfSnapshotChanged(inst)) {
      // Force a re-render.
      forceStoreRerender(fiber);
    }
  }; // Subscribe to the store and return a clean-up function.


  return subscribe(handleStoreChange);
}

function checkIfSnapshotChanged(inst) {
  var latestGetSnapshot = inst.getSnapshot;
  var prevValue = inst.value;

  try {
    var nextValue = latestGetSnapshot();
    return !objectIs(prevValue, nextValue);
  } catch (error) {
    return true;
  }
}

function forceStoreRerender(fiber) {
  var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

  if (root !== null) {
    scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
  }
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();

  if (typeof initialState === 'function') {
    // $FlowFixMe: Flow doesn't like mixed types
    initialState = initialState();
  }

  hook.memoizedState = hook.baseState = initialState;
  var queue = {
    pending: null,
    interleaved: null,
    lanes: NoLanes,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  hook.queue = queue;
  var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer);
}

function rerenderState(initialState) {
  return rerenderReducer(basicStateReducer);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var lastEffect = componentUpdateQueue.lastEffect;

    if (lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = lastEffect.next;
      lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }

  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();

  {
    var _ref2 = {
      current: initialValue
    };
    hook.memoizedState = _ref2;
    return _ref2;
  }
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
}

function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;

    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
        return;
      }
    }
  }

  currentlyRenderingFiber$1.flags |= fiberFlags;
  hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
  } else {
    return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
  }
}

function updateEffect(create, deps) {
  return updateEffectImpl(Passive, Passive$1, create, deps);
}

function mountInsertionEffect(create, deps) {
  return mountEffectImpl(Update, Insertion, create, deps);
}

function updateInsertionEffect(create, deps) {
  return updateEffectImpl(Update, Insertion, create, deps);
}

function mountLayoutEffect(create, deps) {
  var fiberFlags = Update;

  {
    fiberFlags |= LayoutStatic;
  }

  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    fiberFlags |= MountLayoutDev;
  }

  return mountEffectImpl(fiberFlags, Layout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, Layout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;

    var _inst = create();

    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;

    {
      if (!refObject.hasOwnProperty('current')) {
        error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
      }
    }

    var _inst2 = create();

    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  var fiberFlags = Update;

  {
    fiberFlags |= LayoutStatic;
  }

  if ( (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
    fiberFlags |= MountLayoutDev;
  }

  return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    if (typeof create !== 'function') {
      error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
    }
  } // TODO: If deps are provided, should we skip comparing the ref itself?


  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
  return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;

  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];

      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }

  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function mountDeferredValue(value) {
  var hook = mountWorkInProgressHook();
  hook.memoizedState = value;
  return value;
}

function updateDeferredValue(value) {
  var hook = updateWorkInProgressHook();
  var resolvedCurrentHook = currentHook;
  var prevValue = resolvedCurrentHook.memoizedState;
  return updateDeferredValueImpl(hook, prevValue, value);
}

function rerenderDeferredValue(value) {
  var hook = updateWorkInProgressHook();

  if (currentHook === null) {
    // This is a rerender during a mount.
    hook.memoizedState = value;
    return value;
  } else {
    // This is a rerender during an update.
    var prevValue = currentHook.memoizedState;
    return updateDeferredValueImpl(hook, prevValue, value);
  }
}

function updateDeferredValueImpl(hook, prevValue, value) {
  var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);

  if (shouldDeferValue) {
    // This is an urgent update. If the value has changed, keep using the
    // previous value and spawn a deferred render to update it later.
    if (!objectIs(value, prevValue)) {
      // Schedule a deferred render
      var deferredLane = claimNextTransitionLane();
      currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
      markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
      // from the latest value. The name "baseState" doesn't really match how we
      // use it because we're reusing a state hook field instead of creating a
      // new one.

      hook.baseState = true;
    } // Reuse the previous value


    return prevValue;
  } else {
    // This is not an urgent update, so we can use the latest value regardless
    // of what it is. No need to defer it.
    // However, if we're currently inside a spawned render, then we need to mark
    // this as an update to prevent the fiber from bailing out.
    //
    // `baseState` is true when the current value is different from the rendered
    // value. The name doesn't really match how we use it because we're reusing
    // a state hook field instead of creating a new one.
    if (hook.baseState) {
      // Flip this back to false.
      hook.baseState = false;
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = value;
    return value;
  }
}

function startTransition(setPending, callback, options) {
  var previousPriority = getCurrentUpdatePriority();
  setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
  setPending(true);
  var prevTransition = ReactCurrentBatchConfig$2.transition;
  ReactCurrentBatchConfig$2.transition = {};
  var currentTransition = ReactCurrentBatchConfig$2.transition;

  {
    ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
  }

  try {
    setPending(false);
    callback();
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$2.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

function mountTransition() {
  var _mountState = mountState(false),
      isPending = _mountState[0],
      setPending = _mountState[1]; // The `start` method never changes.


  var start = startTransition.bind(null, setPending);
  var hook = mountWorkInProgressHook();
  hook.memoizedState = start;
  return [isPending, start];
}

function updateTransition() {
  var _updateState = updateState(),
      isPending = _updateState[0];

  var hook = updateWorkInProgressHook();
  var start = hook.memoizedState;
  return [isPending, start];
}

function rerenderTransition() {
  var _rerenderState = rerenderState(),
      isPending = _rerenderState[0];

  var hook = updateWorkInProgressHook();
  var start = hook.memoizedState;
  return [isPending, start];
}

var isUpdatingOpaqueValueInRenderPhase = false;
function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
  {
    return isUpdatingOpaqueValueInRenderPhase;
  }
}

function mountId() {
  var hook = mountWorkInProgressHook();
  var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
  // should do this in Fiber, too? Deferring this decision for now because
  // there's no other place to store the prefix except for an internal field on
  // the public createRoot object, which the fiber tree does not currently have
  // a reference to.

  var identifierPrefix = root.identifierPrefix;
  var id;

  if (getIsHydrating()) {
    var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.

    id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end
    // that represents the position of this useId hook among all the useId
    // hooks for this fiber.

    var localId = localIdCounter++;

    if (localId > 0) {
      id += 'H' + localId.toString(32);
    }

    id += ':';
  } else {
    // Use a lowercase r prefix for client-generated ids.
    var globalClientId = globalClientIdCounter++;
    id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';
  }

  hook.memoizedState = id;
  return id;
}

function updateId() {
  var hook = updateWorkInProgressHook();
  var id = hook.memoizedState;
  return id;
}

function dispatchReducerAction(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    hasEagerState: false,
    eagerState: null,
    next: null
  };

  if (isRenderPhaseUpdate(fiber)) {
    enqueueRenderPhaseUpdate(queue, update);
  } else {
    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);

    if (root !== null) {
      var eventTime = requestEventTime();
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitionUpdate(root, queue, lane);
    }
  }

  markUpdateInDevTools(fiber, lane);
}

function dispatchSetState(fiber, queue, action) {
  {
    if (typeof arguments[3] === 'function') {
      error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
    }
  }

  var lane = requestUpdateLane(fiber);
  var update = {
    lane: lane,
    action: action,
    hasEagerState: false,
    eagerState: null,
    next: null
  };

  if (isRenderPhaseUpdate(fiber)) {
    enqueueRenderPhaseUpdate(queue, update);
  } else {
    var alternate = fiber.alternate;

    if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var lastRenderedReducer = queue.lastRenderedReducer;

      if (lastRenderedReducer !== null) {
        var prevDispatcher;

        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }

        try {
          var currentState = queue.lastRenderedState;
          var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.

          update.hasEagerState = true;
          update.eagerState = eagerState;

          if (objectIs(eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            // TODO: Do we still need to entangle transitions in this case?
            enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
            return;
          }
        } catch (error) {// Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }

    var root = enqueueConcurrentHookUpdate(fiber, queue, update, lane);

    if (root !== null) {
      var eventTime = requestEventTime();
      scheduleUpdateOnFiber(root, fiber, lane, eventTime);
      entangleTransitionUpdate(root, queue, lane);
    }
  }

  markUpdateInDevTools(fiber, lane);
}

function isRenderPhaseUpdate(fiber) {
  var alternate = fiber.alternate;
  return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
}

function enqueueRenderPhaseUpdate(queue, update) {
  // This is a render phase update. Stash it in a lazily-created map of
  // queue -> linked list of updates. After this render pass, we'll restart
  // and apply the stashed updates on top of the work-in-progress hook.
  didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
  var pending = queue.pending;

  if (pending === null) {
    // This is the first update. Create a circular list.
    update.next = update;
  } else {
    update.next = pending.next;
    pending.next = update;
  }

  queue.pending = update;
} // TODO: Move to ReactFiberConcurrentUpdates?


function entangleTransitionUpdate(root, queue, lane) {
  if (isTransitionLane(lane)) {
    var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
    // must have finished. We can remove them from the shared queue, which
    // represents a superset of the actually pending lanes. In some cases we
    // may entangle more than we need to, but that's OK. In fact it's worse if
    // we *don't* entangle when we should.

    queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.

    var newQueueLanes = mergeLanes(queueLanes, lane);
    queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
    // the lane finished since the last time we entangled it. So we need to
    // entangle it again, just to be sure.

    markRootEntangled(root, newQueueLanes);
  }
}

function markUpdateInDevTools(fiber, lane, action) {

  {
    markStateUpdateScheduled(fiber, lane);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,
  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useInsertionEffect: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError,
  useDeferredValue: throwInvalidHookError,
  useTransition: throwInvalidHookError,
  useMutableSource: throwInvalidHookError,
  useSyncExternalStore: throwInvalidHookError,
  useId: throwInvalidHookError,
  unstable_isNewReconciler: enableNewReconciler
};

var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var HooksDispatcherOnRerenderInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnRerenderInDEV = null;

{
  var warnInvalidContextAccess = function () {
    error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      checkDepsAreArrayDev(deps);
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      mountHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      mountHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      mountHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  HooksDispatcherOnRerenderInDEV = {
    readContext: function (context) {
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };

  InvalidNestedHooksDispatcherOnRerenderInDEV = {
    readContext: function (context) {
      warnInvalidContextAccess();
      return readContext(context);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useInsertionEffect: function (create, deps) {
      currentHookNameInDev = 'useInsertionEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateInsertionEffect(create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef();
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

      try {
        return rerenderState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue();
    },
    useDeferredValue: function (value) {
      currentHookNameInDev = 'useDeferredValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderDeferredValue(value);
    },
    useTransition: function () {
      currentHookNameInDev = 'useTransition';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return rerenderTransition();
    },
    useMutableSource: function (source, getSnapshot, subscribe) {
      currentHookNameInDev = 'useMutableSource';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateMutableSource();
    },
    useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
      currentHookNameInDev = 'useSyncExternalStore';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateSyncExternalStore(subscribe, getSnapshot);
    },
    useId: function () {
      currentHookNameInDev = 'useId';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateId();
    },
    unstable_isNewReconciler: enableNewReconciler
  };
}

var now$1 = Scheduler.unstable_now;
var commitTime = 0;
var layoutEffectStartTime = -1;
var profilerStartTime = -1;
var passiveEffectStartTime = -1;
/**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */

var currentUpdateIsNested = false;
var nestedUpdateScheduled = false;

function isCurrentUpdateNested() {
  return currentUpdateIsNested;
}

function markNestedUpdateScheduled() {
  {
    nestedUpdateScheduled = true;
  }
}

function resetNestedUpdateFlag() {
  {
    currentUpdateIsNested = false;
    nestedUpdateScheduled = false;
  }
}

function syncNestedUpdateFlag() {
  {
    currentUpdateIsNested = nestedUpdateScheduled;
    nestedUpdateScheduled = false;
  }
}

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {

  commitTime = now$1();
}

function startProfilerTimer(fiber) {

  profilerStartTime = now$1();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = now$1();
  }
}

function stopProfilerTimerIfRunning(fiber) {

  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {

  if (profilerStartTime >= 0) {
    var elapsedTime = now$1() - profilerStartTime;
    fiber.actualDuration += elapsedTime;

    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }

    profilerStartTime = -1;
  }
}

function recordLayoutEffectDuration(fiber) {

  if (layoutEffectStartTime >= 0) {
    var elapsedTime = now$1() - layoutEffectStartTime;
    layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
    // Or the root (for the DevTools Profiler to read)

    var parentFiber = fiber.return;

    while (parentFiber !== null) {
      switch (parentFiber.tag) {
        case HostRoot:
          var root = parentFiber.stateNode;
          root.effectDuration += elapsedTime;
          return;

        case Profiler:
          var parentStateNode = parentFiber.stateNode;
          parentStateNode.effectDuration += elapsedTime;
          return;
      }

      parentFiber = parentFiber.return;
    }
  }
}

function recordPassiveEffectDuration(fiber) {

  if (passiveEffectStartTime >= 0) {
    var elapsedTime = now$1() - passiveEffectStartTime;
    passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
    // Or the root (for the DevTools Profiler to read)

    var parentFiber = fiber.return;

    while (parentFiber !== null) {
      switch (parentFiber.tag) {
        case HostRoot:
          var root = parentFiber.stateNode;

          if (root !== null) {
            root.passiveEffectDuration += elapsedTime;
          }

          return;

        case Profiler:
          var parentStateNode = parentFiber.stateNode;

          if (parentStateNode !== null) {
            // Detached fibers have their state node cleared out.
            // In this case, the return pointer is also cleared out,
            // so we won't be able to report the time spent in this Profiler's subtree.
            parentStateNode.passiveEffectDuration += elapsedTime;
          }

          return;
      }

      parentFiber = parentFiber.return;
    }
  }
}

function startLayoutEffectTimer() {

  layoutEffectStartTime = now$1();
}

function startPassiveEffectTimer() {

  passiveEffectStartTime = now$1();
}

function transferActualDuration(fiber) {
  // Transfer time spent rendering these children so we don't lose it
  // after we rerender. This is used as a helper in special cases
  // where we should count the work of multiple passes.
  var child = fiber.child;

  while (child) {
    fiber.actualDuration += child.actualDuration;
    child = child.sibling;
  }
}

function createCapturedValueAtFiber(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source),
    digest: null
  };
}
function createCapturedValue(value, digest, stack) {
  return {
    value: value,
    source: null,
    stack: stack != null ? stack : null,
    digest: digest != null ? digest : null
  };
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(boundary, errorInfo) {
  return true;
}

function logCapturedError(boundary, errorInfo) {
  try {
    var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
    // This enables renderers like ReactNative to better manage redbox behavior.

    if (logError === false) {
      return;
    }

    var error = errorInfo.value;

    if (true) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;
      var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
      // `preventDefault()` in window `error` handler.
      // We record this information as an expando on the error.

      if (error != null && error._suppressLogging) {
        if (boundary.tag === ClassComponent) {
          // The error is recoverable and was silenced.
          // Ignore it and don't print the stack addendum.
          // This is handy for testing error boundaries without noise.
          return;
        } // The error is fatal. Since the silencing might have
        // been accidental, we'll surface it anyway.
        // However, the browser would have silenced the original error
        // so we'll print it first, and then print the stack addendum.


        console['error'](error); // Don't transform to our wrapper
        // For a more detailed description of this block, see:
        // https://github.com/facebook/react/pull/13384
      }

      var componentName = source ? getComponentNameFromFiber(source) : null;
      var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
      var errorBoundaryMessage;

      if (boundary.tag === HostRoot) {
        errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';
      } else {
        var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';
        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
      }

      var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
      // We don't include the original error message and JS stack because the browser
      // has already printed it. Even if the application swallows the error, it is still
      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

      console['error'](combinedMessage); // Don't transform to our wrapper
    } else {}
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.

  update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: null
  };
  var error = errorInfo.value;

  update.callback = function () {
    onUncaughtError(error);
    logCapturedError(fiber, errorInfo);
  };

  return update;
}

function createClassErrorUpdate(fiber, errorInfo, lane) {
  var update = createUpdate(NoTimestamp, lane);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

  if (typeof getDerivedStateFromError === 'function') {
    var error$1 = errorInfo.value;

    update.payload = function () {
      return getDerivedStateFromError(error$1);
    };

    update.callback = function () {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      logCapturedError(fiber, errorInfo);
    };
  }

  var inst = fiber.stateNode;

  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      {
        markFailedErrorBoundaryForHotReloading(fiber);
      }

      logCapturedError(fiber, errorInfo);

      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }

      var error$1 = errorInfo.value;
      var stack = errorInfo.stack;
      this.componentDidCatch(error$1, {
        componentStack: stack !== null ? stack : ''
      });

      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          if (!includesSomeLane(fiber.lanes, SyncLane)) {
            error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentNameFromFiber(fiber) || 'Unknown');
          }
        }
      }
    };
  }

  return update;
}

function attachPingListener(root, wakeable, lanes) {
  // Attach a ping listener
  //
  // The data might resolve before we have a chance to commit the fallback. Or,
  // in the case of a refresh, we'll never commit a fallback. So we need to
  // attach a listener now. When it resolves ("pings"), we can decide whether to
  // try rendering the tree again.
  //
  // Only attach a listener if one does not already exist for the lanes
  // we're currently rendering (which acts like a "thread ID" here).
  //
  // We only need to do this in concurrent mode. Legacy Suspense always
  // commits fallbacks synchronously, so there are no pings.
  var pingCache = root.pingCache;
  var threadIDs;

  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap$1();
    threadIDs = new Set();
    pingCache.set(wakeable, threadIDs);
  } else {
    threadIDs = pingCache.get(wakeable);

    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(wakeable, threadIDs);
    }
  }

  if (!threadIDs.has(lanes)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(lanes);
    var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);

    {
      if (isDevToolsPresent) {
        // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, lanes);
      }
    }

    wakeable.then(ping, ping);
  }
}

function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
  // Retry listener
  //
  // If the fallback does commit, we need to attach a different type of
  // listener. This one schedules an update on the Suspense boundary to turn
  // the fallback state off.
  //
  // Stash the wakeable on the boundary fiber so we can access it in the
  // commit phase.
  //
  // When the wakeable resolves, we'll attempt to render the boundary
  // again ("retry").
  var wakeables = suspenseBoundary.updateQueue;

  if (wakeables === null) {
    var updateQueue = new Set();
    updateQueue.add(wakeable);
    suspenseBoundary.updateQueue = updateQueue;
  } else {
    wakeables.add(wakeable);
  }
}

function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
  // A legacy mode Suspense quirk, only relevant to hook components.


  var tag = sourceFiber.tag;

  if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
    var currentSource = sourceFiber.alternate;

    if (currentSource) {
      sourceFiber.updateQueue = currentSource.updateQueue;
      sourceFiber.memoizedState = currentSource.memoizedState;
      sourceFiber.lanes = currentSource.lanes;
    } else {
      sourceFiber.updateQueue = null;
      sourceFiber.memoizedState = null;
    }
  }
}

function getNearestSuspenseBoundaryToCapture(returnFiber) {
  var node = returnFiber;

  do {
    if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
      return node;
    } // This boundary already captured during this render. Continue to the next
    // boundary.


    node = node.return;
  } while (node !== null);

  return null;
}

function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
  // This marks a Suspense boundary so that when we're unwinding the stack,
  // it captures the suspended "exception" and does a second (fallback) pass.
  if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
    // Legacy Mode Suspense
    //
    // If the boundary is in legacy mode, we should *not*
    // suspend the commit. Pretend as if the suspended component rendered
    // null and keep rendering. When the Suspense boundary completes,
    // we'll do a second pass to render the fallback.
    if (suspenseBoundary === returnFiber) {
      // Special case where we suspended while reconciling the children of
      // a Suspense boundary's inner Offscreen wrapper fiber. This happens
      // when a React.lazy component is a direct child of a
      // Suspense boundary.
      //
      // Suspense boundaries are implemented as multiple fibers, but they
      // are a single conceptual unit. The legacy mode behavior where we
      // pretend the suspended fiber committed as `null` won't work,
      // because in this case the "suspended" fiber is the inner
      // Offscreen wrapper.
      //
      // Because the contents of the boundary haven't started rendering
      // yet (i.e. nothing in the tree has partially rendered) we can
      // switch to the regular, concurrent mode behavior: mark the
      // boundary with ShouldCapture and enter the unwind phase.
      suspenseBoundary.flags |= ShouldCapture;
    } else {
      suspenseBoundary.flags |= DidCapture;
      sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
      // But we shouldn't call any lifecycle methods or callbacks. Remove
      // all lifecycle effect tags.

      sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);

      if (sourceFiber.tag === ClassComponent) {
        var currentSourceFiber = sourceFiber.alternate;

        if (currentSourceFiber === null) {
          // This is a new mount. Change the tag so it's not mistaken for a
          // completed class component. For example, we should not call
          // componentWillUnmount if it is deleted.
          sourceFiber.tag = IncompleteClassComponent;
        } else {
          // When we try rendering again, we should not reuse the current fiber,
          // since it's known to be in an inconsistent state. Use a force update to
          // prevent a bail out.
          var update = createUpdate(NoTimestamp, SyncLane);
          update.tag = ForceUpdate;
          enqueueUpdate(sourceFiber, update, SyncLane);
        }
      } // The source fiber did not complete. Mark it with Sync priority to
      // indicate that it still has pending work.


      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
    }

    return suspenseBoundary;
  } // Confirmed that the boundary is in a concurrent mode tree. Continue
  // with the normal suspend path.
  //
  // After this we'll use a set of heuristics to determine whether this
  // render pass will run to completion or restart or "suspend" the commit.
  // The actual logic for this is spread out in different places.
  //
  // This first principle is that if we're going to suspend when we complete
  // a root, then we should also restart if we get an update or ping that
  // might unsuspend it, and vice versa. The only reason to suspend is
  // because you think you might want to restart before committing. However,
  // it doesn't make sense to restart only while in the period we're suspended.
  //
  // Restarting too aggressively is also not good because it starves out any
  // intermediate loading state. So we use heuristics to determine when.
  // Suspense Heuristics
  //
  // If nothing threw a Promise or all the same fallbacks are already showing,
  // then don't suspend/restart.
  //
  // If this is an initial render of a new tree of Suspense boundaries and
  // those trigger a fallback, then don't suspend/restart. We want to ensure
  // that we can show the initial loading state as quickly as possible.
  //
  // If we hit a "Delayed" case, such as when we'd switch from content back into
  // a fallback, then we should always suspend/restart. Transitions apply
  // to this case. If none is defined, JND is used instead.
  //
  // If we're already showing a fallback and it gets "retried", allowing us to show
  // another level, but there's still an inner boundary that would show a fallback,
  // then we suspend/restart for 500ms since the last time we showed a fallback
  // anywhere in the tree. This effectively throttles progressive loading into a
  // consistent train of commits. This also gives us an opportunity to restart to
  // get to the completed state slightly earlier.
  //
  // If there's ambiguity due to batching it's resolved in preference of:
  // 1) "delayed", 2) "initial render", 3) "retry".
  //
  // We want to ensure that a "busy" state doesn't get force committed. We want to
  // ensure that new initial loading states can commit as soon as possible.


  suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
  // the begin phase to prevent an early bailout.

  suspenseBoundary.lanes = rootRenderLanes;
  return suspenseBoundary;
}

function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
  // The source fiber did not complete.
  sourceFiber.flags |= Incomplete;

  {
    if (isDevToolsPresent) {
      // If we have pending work still, restore the original updaters
      restorePendingUpdaters(root, rootRenderLanes);
    }
  }

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a wakeable. The component suspended.
    var wakeable = value;
    resetSuspendedComponent(sourceFiber);

    {
      if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
        markDidThrowWhileHydratingDEV();
      }
    }


    var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);

    if (suspenseBoundary !== null) {
      suspenseBoundary.flags &= ~ForceClientRender;
      markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
      // commits fallbacks synchronously, so there are no pings.

      if (suspenseBoundary.mode & ConcurrentMode) {
        attachPingListener(root, wakeable, rootRenderLanes);
      }

      attachRetryListener(suspenseBoundary, root, wakeable);
      return;
    } else {
      // No boundary was found. Unless this is a sync update, this is OK.
      // We can suspend and wait for more data to arrive.
      if (!includesSyncLane(rootRenderLanes)) {
        // This is not a sync update. Suspend. Since we're not activating a
        // Suspense boundary, this will unwind all the way to the root without
        // performing a second pass to render a fallback. (This is arguably how
        // refresh transitions should work, too, since we're not going to commit
        // the fallbacks anyway.)
        //
        // This case also applies to initial hydration.
        attachPingListener(root, wakeable, rootRenderLanes);
        renderDidSuspendDelayIfPossible();
        return;
      } // This is a sync/discrete update. We treat this case like an error
      // because discrete renders are expected to produce a complete tree
      // synchronously to maintain consistency with external state.


      var uncaughtSuspenseError = new Error('A component suspended while responding to synchronous input. This ' + 'will cause the UI to be replaced with a loading indicator. To ' + 'fix, updates that suspend should be wrapped ' + 'with startTransition.'); // If we're outside a transition, fall through to the regular error path.
      // The error will be caught by the nearest suspense boundary.

      value = uncaughtSuspenseError;
    }
  } else {
    // This is a regular error, not a Suspense wakeable.
    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
      markDidThrowWhileHydratingDEV();

      var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
      // discarding the dehydrated content and switching to a client render.
      // Instead of surfacing the error, find the nearest Suspense boundary
      // and render it again without hydration.


      if (_suspenseBoundary !== null) {
        if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
          // Set a flag to indicate that we should try rendering the normal
          // children again, not the fallback.
          _suspenseBoundary.flags |= ForceClientRender;
        }

        markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
        // still log it so it can be fixed.

        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
        return;
      }
    }
  }

  value = createCapturedValueAtFiber(value, sourceFiber);
  renderDidError(value); // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.

  var workInProgress = returnFiber;

  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.flags |= ShouldCapture;
          var lane = pickArbitraryLane(rootRenderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
          var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
          enqueueCapturedUpdate(workInProgress, update);
          return;
        }

      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;

        if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.flags |= ShouldCapture;

          var _lane = pickArbitraryLane(rootRenderLanes);

          workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state

          var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);

          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }

        break;
    }

    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function getSuspendedCache() {
  {
    return null;
  } // This function is called when a Suspense boundary suspends. It returns the
}

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
var didReceiveUpdate = false;
var didWarnAboutBadClass;
var didWarnAboutModulePatternComponent;
var didWarnAboutContextTypeOnFunctionComponent;
var didWarnAboutGetDerivedStateOnFunctionComponent;
var didWarnAboutFunctionRefs;
var didWarnAboutReassigningProps;
var didWarnAboutRevealOrder;
var didWarnAboutTailOptions;

{
  didWarnAboutBadClass = {};
  didWarnAboutModulePatternComponent = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
  didWarnAboutRevealOrder = {};
  didWarnAboutTailOptions = {};
}

function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
  if (current === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.
    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
  }
}

function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their
  // identities match.

  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
}

function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

  var nextChildren;
  var hasId;
  prepareToReadContext(workInProgress, renderLanes);

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
    hasId = checkDidRenderIdHook();

    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  if (getIsHydrating() && hasId) {
    pushMaterializedTreeId(workInProgress);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
  if (current === null) {
    var type = Component.type;

    if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      var resolvedType = type;

      {
        resolvedType = resolveFunctionForHotReloading(type);
      } // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.


      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = resolvedType;

      {
        validateFunctionComponentInDev(workInProgress, type);
      }

      return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
    }

    {
      var innerPropTypes = type.propTypes;

      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(type));
      }
    }

    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }

  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;

    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentNameFromType(_type));
    }
  }

  var currentChild = current.child; // This is always exactly one child

  var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);

  if (!hasScheduledUpdateOrContext) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps; // Default to shallow comparison

    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;

    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;

      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        var lazyComponent = outerMemoType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;

        try {
          outerMemoType = init(payload);
        } catch (x) {
          outerMemoType = null;
        } // Inner propTypes will be validated in the function component path.


        var outerPropTypes = outerMemoType && outerMemoType.propTypes;

        if (outerPropTypes) {
          checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
          'prop', getComponentNameFromType(outerMemoType));
        }
      }
    }
  }

  if (current !== null) {
    var prevProps = current.memoizedProps;

    if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && ( // Prevent bailout if the implementation changed due to hot reload.
     workInProgress.type === current.type )) {
      didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
      // would during a normal fiber bailout.
      //
      // We don't have strong guarantees that the props object is referentially
      // equal during updates where we can't bail out anyway — like if the props
      // are shallowly equal, but there's a local state or context update in the
      // same batch.
      //
      // However, as a principle, we should aim to make the behavior consistent
      // across different ways of memoizing a component. For example, React.memo
      // has a different internal Fiber layout if you pass a normal function
      // component (SimpleMemoComponent) versus if you pass a different type
      // like forwardRef (MemoComponent). But this is an implementation detail.
      // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
      // affect whether the props object is reused during a bailout.

      workInProgress.pendingProps = nextProps = prevProps;

      if (!checkScheduledUpdateOrContext(current, renderLanes)) {
        // The pending lanes were cleared at the beginning of beginWork. We're
        // about to bail out, but there might be other lanes that weren't
        // included in the current render. Usually, the priority level of the
        // remaining updates is accumulated during the evaluation of the
        // component (i.e. when processing the update queue). But since since
        // we're bailing out early *without* evaluating the component, we need
        // to account for it here, too. Reset to the value of the current fiber.
        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
        // because a MemoComponent fiber does not have hooks or an update queue;
        // rather, it wraps around an inner component, which may or may not
        // contains hooks.
        // TODO: Move the reset at in beginWork out of the common path so that
        // this is no longer necessary.
        workInProgress.lanes = current.lanes;
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      }
    }
  }

  return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
}

function updateOffscreenComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  var prevState = current !== null ? current.memoizedState : null;

  if (nextProps.mode === 'hidden' || enableLegacyHidden ) {
    // Rendering a hidden tree.
    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      // In legacy sync mode, don't defer the subtree. Render it now.
      // TODO: Consider how Offscreen should work with transitions in the future
      var nextState = {
        baseLanes: NoLanes,
        cachePool: null,
        transitions: null
      };
      workInProgress.memoizedState = nextState;

      pushRenderLanes(workInProgress, renderLanes);
    } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
      var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
      // and resume this tree later.

      var nextBaseLanes;

      if (prevState !== null) {
        var prevBaseLanes = prevState.baseLanes;
        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
      } else {
        nextBaseLanes = renderLanes;
      } // Schedule this fiber to re-render at offscreen priority. Then bailout.


      workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
      var _nextState = {
        baseLanes: nextBaseLanes,
        cachePool: spawnedCachePool,
        transitions: null
      };
      workInProgress.memoizedState = _nextState;
      workInProgress.updateQueue = null;
      // to avoid a push/pop misalignment.


      pushRenderLanes(workInProgress, nextBaseLanes);

      return null;
    } else {
      // This is the second render. The surrounding visible content has already
      // committed. Now we resume rendering the hidden tree.
      // Rendering at offscreen, so we can clear the base lanes.
      var _nextState2 = {
        baseLanes: NoLanes,
        cachePool: null,
        transitions: null
      };
      workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.

      var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;

      pushRenderLanes(workInProgress, subtreeRenderLanes);
    }
  } else {
    // Rendering a visible tree.
    var _subtreeRenderLanes;

    if (prevState !== null) {
      // We're going from hidden -> visible.
      _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);

      workInProgress.memoizedState = null;
    } else {
      // We weren't previously hidden, and we still aren't, so there's nothing
      // special to do. Need to push to the stack regardless, though, to avoid
      // a push/pop misalignment.
      _subtreeRenderLanes = renderLanes;
    }

    pushRenderLanes(workInProgress, _subtreeRenderLanes);
  }

  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
} // Note: These happen to have identical begin phases, for now. We shouldn't hold

function updateFragment(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateMode(current, workInProgress, renderLanes) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateProfiler(current, workInProgress, renderLanes) {
  {
    workInProgress.flags |= Update;

    {
      // Reset effect durations for the next eventual effect phase.
      // These are reset during render to allow the DevTools commit hook a chance to read them,
      var stateNode = workInProgress.stateNode;
      stateNode.effectDuration = 0;
      stateNode.passiveEffectDuration = 0;
    }
  }

  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function markRef(current, workInProgress) {
  var ref = workInProgress.ref;

  if (current === null && ref !== null || current !== null && current.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.flags |= Ref;

    {
      workInProgress.flags |= RefStatic;
    }
  }
}

function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  }

  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  var nextChildren;
  var hasId;
  prepareToReadContext(workInProgress, renderLanes);

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
    hasId = checkDidRenderIdHook();

    if ( workInProgress.mode & StrictLegacyMode) {
      setIsStrictModeForDevtools(true);

      try {
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
      } finally {
        setIsStrictModeForDevtools(false);
      }
    }

    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  }

  if (current !== null && !didReceiveUpdate) {
    bailoutHooks(current, workInProgress, renderLanes);
    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  if (getIsHydrating() && hasId) {
    pushMaterializedTreeId(workInProgress);
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
  {
    // This is used by DevTools to force a boundary to error.
    switch (shouldError(workInProgress)) {
      case false:
        {
          var _instance = workInProgress.stateNode;
          var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
          // Is there a better way to do this?

          var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
          var state = tempInstance.state;

          _instance.updater.enqueueSetState(_instance, state, null);

          break;
        }

      case true:
        {
          workInProgress.flags |= DidCapture;
          workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes

          var error$1 = new Error('Simulated error coming from DevTools');
          var lane = pickArbitraryLane(renderLanes);
          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state

          var update = createClassErrorUpdate(workInProgress, createCapturedValueAtFiber(error$1, workInProgress), lane);
          enqueueCapturedUpdate(workInProgress, update);
          break;
        }
    }

    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;

      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentNameFromType(Component));
      }
    }
  } // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.


  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  var instance = workInProgress.stateNode;
  var shouldUpdate;

  if (instance === null) {
    resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress); // In the initial pass we might need to construct the instance.

    constructClassInstance(workInProgress, Component, nextProps);
    mountClassInstance(workInProgress, Component, nextProps, renderLanes);
    shouldUpdate = true;
  } else if (current === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
  } else {
    shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
  }

  var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);

  {
    var inst = workInProgress.stateNode;

    if (shouldUpdate && inst.props !== nextProps) {
      if (!didWarnAboutReassigningProps) {
        error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentNameFromFiber(workInProgress) || 'a component');
      }

      didWarnAboutReassigningProps = true;
    }
  }

  return nextUnitOfWork;
}

function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current, workInProgress);
  var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
  }

  var instance = workInProgress.stateNode; // Rerender

  ReactCurrentOwner$1.current = workInProgress;
  var nextChildren;

  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFromError is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    {
      stopProfilerTimerIfRunning();
    }
  } else {
    {
      markComponentRenderStarted(workInProgress);
    }

    {
      setIsRendering(true);
      nextChildren = instance.render();

      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          instance.render();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }

      setIsRendering(false);
    }

    {
      markComponentRenderStopped();
    }
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  if (current !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  } // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.


  workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;

  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }

  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current, workInProgress, renderLanes) {
  pushHostRootContext(workInProgress);

  if (current === null) {
    throw new Error('Should have a current fiber. This is a bug in React.');
  }

  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState.element;
  cloneUpdateQueue(current, workInProgress);
  processUpdateQueue(workInProgress, nextProps, null, renderLanes);
  var nextState = workInProgress.memoizedState;
  var root = workInProgress.stateNode;
  // being called "element".


  var nextChildren = nextState.element;

  if ( prevState.isDehydrated) {
    // This is a hydration root whose shell has not yet hydrated. We should
    // attempt to hydrate.
    // Flip isDehydrated to false to indicate that when this render
    // finishes, the root will no longer be dehydrated.
    var overrideState = {
      element: nextChildren,
      isDehydrated: false,
      cache: nextState.cache,
      pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
      transitions: nextState.transitions
    };
    var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
    // have reducer functions so it doesn't need rebasing.

    updateQueue.baseState = overrideState;
    workInProgress.memoizedState = overrideState;

    if (workInProgress.flags & ForceClientRender) {
      // Something errored during a previous attempt to hydrate the shell, so we
      // forced a client render.
      var recoverableError = createCapturedValueAtFiber(new Error('There was an error while hydrating. Because the error happened outside ' + 'of a Suspense boundary, the entire root will switch to ' + 'client rendering.'), workInProgress);
      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
    } else if (nextChildren !== prevChildren) {
      var _recoverableError = createCapturedValueAtFiber(new Error('This root received an early update, before anything was able ' + 'hydrate. Switched the entire root to client rendering.'), workInProgress);

      return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
    } else {
      // The outermost shell has not hydrated yet. Start hydrating.
      enterHydrationState(workInProgress);

      var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
      workInProgress.child = child;
      var node = child;

      while (node) {
        // Mark each child as hydrating. This is a fast path to know whether this
        // tree is part of a hydrating tree. This is used to determine if a child
        // node has fully mounted yet, and for scheduling event replaying.
        // Conceptually this is similar to Placement in that a new subtree is
        // inserted into the React tree here. It just happens to not need DOM
        // mutations because it already exists.
        node.flags = node.flags & ~Placement | Hydrating;
        node = node.sibling;
      }
    }
  } else {
    // Root is not dehydrated. Either this is a client-only root, or it
    // already hydrated.
    resetHydrationState();

    if (nextChildren === prevChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }

    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
  // Revert to client rendering.
  resetHydrationState();
  queueHydrationError(recoverableError);
  workInProgress.flags |= ForceClientRender;
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostComponent(current, workInProgress, renderLanes) {
  pushHostContext(workInProgress);

  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current !== null ? current.memoizedProps : null;
  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also has access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.flags |= ContentReset;
  }

  markRef(current, workInProgress);
  reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  return workInProgress.child;
}

function updateHostText(current, workInProgress) {
  if (current === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  } // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.


  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
  var props = workInProgress.pendingProps;
  var lazyComponent = elementType;
  var payload = lazyComponent._payload;
  var init = lazyComponent._init;
  var Component = init(payload); // Store the unwrapped component in the type.

  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child;

  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
          workInProgress.type = Component = resolveFunctionForHotReloading(Component);
        }

        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ClassComponent:
      {
        {
          workInProgress.type = Component = resolveClassForHotReloading(Component);
        }

        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case ForwardRef:
      {
        {
          workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
        }

        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
        return child;
      }

    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentNameFromType(Component));
            }
          }
        }

        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        renderLanes);
        return child;
      }
  }

  var hint = '';

  {
    if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
      hint = ' Did you wrap a component in React.lazy() more than once?';
    }
  } // This message intentionally doesn't mention ForwardRef or MemoComponent
  // because the fact that it's a separate type of work is an
  // implementation detail.


  throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress); // Promote the fiber to a class and try rendering again.

  workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.

  var hasContext;

  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }

  prepareToReadContext(workInProgress, renderLanes);
  constructClassInstance(workInProgress, Component, nextProps);
  mountClassInstance(workInProgress, Component, nextProps, renderLanes);
  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
  resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress);
  var props = workInProgress.pendingProps;
  var context;

  {
    var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
    context = getMaskedContext(workInProgress, unmaskedContext);
  }

  prepareToReadContext(workInProgress, renderLanes);
  var value;
  var hasId;

  {
    markComponentRenderStarted(workInProgress);
  }

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);

        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictLegacyMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    setIsRendering(true);
    ReactCurrentOwner$1.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
    hasId = checkDidRenderIdHook();
    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;

  {
    // Support for module components is deprecated and is removed behind a flag.
    // Whether or not it would crash later, we want to show a good message in DEV first.
    if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
      var _componentName = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);

        didWarnAboutModulePatternComponent[_componentName] = true;
      }
    }
  }

  if ( // Run these checks in production only if the flag is off.
  // Eventually we'll delete this branch altogether.
   typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    {
      var _componentName2 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutModulePatternComponent[_componentName2]) {
        error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);

        didWarnAboutModulePatternComponent[_componentName2] = true;
      }
    } // Proceed under the assumption that this is a class instance


    workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.

    var hasContext = false;

    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
    initializeUpdateQueue(workInProgress);
    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderLanes);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;

    {

      if ( workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(true);

        try {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
          hasId = checkDidRenderIdHook();
        } finally {
          setIsStrictModeForDevtools(false);
        }
      }
    }

    if (getIsHydrating() && hasId) {
      pushMaterializedTreeId(workInProgress);
    }

    reconcileChildren(null, workInProgress, value, renderLanes);

    {
      validateFunctionComponentInDev(workInProgress, Component);
    }

    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  {
    if (Component) {
      if (Component.childContextTypes) {
        error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
      }
    }

    if (workInProgress.ref !== null) {
      var info = '';
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }

      var warningKey = ownerName || '';
      var debugSource = workInProgress._debugSource;

      if (debugSource) {
        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
      }

      if (!didWarnAboutFunctionRefs[warningKey]) {
        didWarnAboutFunctionRefs[warningKey] = true;

        error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
      }
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      var _componentName3 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
        error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);

        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
      }
    }

    if (typeof Component.contextType === 'object' && Component.contextType !== null) {
      var _componentName4 = getComponentNameFromType(Component) || 'Unknown';

      if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
        error('%s: Function components do not support contextType.', _componentName4);

        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
      }
    }
  }
}

var SUSPENDED_MARKER = {
  dehydrated: null,
  treeContext: null,
  retryLane: NoLane
};

function mountSuspenseOffscreenState(renderLanes) {
  return {
    baseLanes: renderLanes,
    cachePool: getSuspendedCache(),
    transitions: null
  };
}

function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
  var cachePool = null;

  return {
    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
    cachePool: cachePool,
    transitions: prevOffscreenState.transitions
  };
} // TODO: Probably should inline this back


function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
  // If we're already showing a fallback, there are cases where we need to
  // remain on that fallback regardless of whether the content has resolved.
  // For example, SuspenseList coordinates when nested content appears.
  if (current !== null) {
    var suspenseState = current.memoizedState;

    if (suspenseState === null) {
      // Currently showing content. Don't hide it, even if ForceSuspenseFallback
      // is true. More precise name might be "ForceRemainSuspenseFallback".
      // Note: This is a factoring smell. Can't remain on a fallback if there's
      // no fallback to remain on.
      return false;
    }
  } // Not currently showing content. Consult the Suspense context.


  return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
}

function getRemainingWorkInPrimaryTree(current, renderLanes) {
  // TODO: Should not remove render lanes that were pinged during this render
  return removeLanes(current.childLanes, renderLanes);
}

function updateSuspenseComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

  {
    if (shouldSuspend(workInProgress)) {
      workInProgress.flags |= DidCapture;
    }
  }

  var suspenseContext = suspenseStackCursor.current;
  var showFallback = false;
  var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;

  if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    showFallback = true;
    workInProgress.flags &= ~DidCapture;
  } else {
    // Attempting the main content
    if (current === null || current.memoizedState !== null) {
      // This is a new mount or this boundary is already showing a fallback state.
      // Mark this subtree context as having at least one invisible parent that could
      // handle the fallback state.
      // Avoided boundaries are not considered since they cannot handle preferred fallback states.
      {
        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
      }
    }
  }

  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
  // boundary's children. This involves some custom reconciliation logic. Two
  // main reasons this is so complicated.
  //
  // First, Legacy Mode has different semantics for backwards compatibility. The
  // primary tree will commit in an inconsistent state, so when we do the
  // second pass to render the fallback, we do some exceedingly, uh, clever
  // hacks to make that not totally break. Like transferring effects and
  // deletions from hidden tree. In Concurrent Mode, it's much simpler,
  // because we bailout on the primary tree completely and leave it in its old
  // state, no effects. Same as what we do for Offscreen (except that
  // Offscreen doesn't have the first render pass).
  //
  // Second is hydration. During hydration, the Suspense fiber has a slightly
  // different layout, where the child points to a dehydrated fragment, which
  // contains the DOM rendered by the server.
  //
  // Third, even if you set all that aside, Suspense is like error boundaries in
  // that we first we try to render one tree, and if that fails, we render again
  // and switch to a different tree. Like a try/catch block. So we have to track
  // which branch we're currently rendering. Ideally we would model this using
  // a stack.

  if (current === null) {
    // Initial mount
    // Special path for hydration
    // If we're currently hydrating, try to hydrate this boundary.
    tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

    var suspenseState = workInProgress.memoizedState;

    if (suspenseState !== null) {
      var dehydrated = suspenseState.dehydrated;

      if (dehydrated !== null) {
        return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
      }
    }

    var nextPrimaryChildren = nextProps.children;
    var nextFallbackChildren = nextProps.fallback;

    if (showFallback) {
      var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var primaryChildFragment = workInProgress.child;
      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;

      return fallbackFragment;
    } else {
      return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
    }
  } else {
    // This is an update.
    // Special path for hydration
    var prevState = current.memoizedState;

    if (prevState !== null) {
      var _dehydrated = prevState.dehydrated;

      if (_dehydrated !== null) {
        return updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, _dehydrated, prevState, renderLanes);
      }
    }

    if (showFallback) {
      var _nextFallbackChildren = nextProps.fallback;
      var _nextPrimaryChildren = nextProps.children;
      var fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
      var _primaryChildFragment2 = workInProgress.child;
      var prevOffscreenState = current.child.memoizedState;
      _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);

      _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackChildFragment;
    } else {
      var _nextPrimaryChildren2 = nextProps.children;

      var _primaryChildFragment3 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren2, renderLanes);

      workInProgress.memoizedState = null;
      return _primaryChildFragment3;
    }
  }
}

function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
  var mode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
  primaryChildFragment.return = workInProgress;
  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var progressedPrimaryFragment = workInProgress.child;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;
  var fallbackChildFragment;

  if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
    // In legacy mode, we commit the primary tree as if it successfully
    // completed, even though it's in an inconsistent state.
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = 0;
      primaryChildFragment.treeBaseDuration = 0;
    }

    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  } else {
    primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
  }

  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
  // this wrapper function to constrain it.
  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
}

function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
  // The props argument to `createWorkInProgress` is `any` typed, so we use this
  // wrapper function to constrain it.
  return createWorkInProgress(current, offscreenProps);
}

function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
    mode: 'visible',
    children: primaryChildren
  });

  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    primaryChildFragment.lanes = renderLanes;
  }

  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = null;

  if (currentFallbackChildFragment !== null) {
    // Delete the fallback child fragment
    var deletions = workInProgress.deletions;

    if (deletions === null) {
      workInProgress.deletions = [currentFallbackChildFragment];
      workInProgress.flags |= ChildDeletion;
    } else {
      deletions.push(currentFallbackChildFragment);
    }
  }

  workInProgress.child = primaryChildFragment;
  return primaryChildFragment;
}

function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var mode = workInProgress.mode;
  var currentPrimaryChildFragment = current.child;
  var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
  var primaryChildProps = {
    mode: 'hidden',
    children: primaryChildren
  };
  var primaryChildFragment;

  if ( // In legacy mode, we commit the primary tree as if it successfully
  // completed, even though it's in an inconsistent state.
  (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
  // already cloned. In legacy mode, the only case where this isn't true is
  // when DevTools forces us to display a fallback; we skip the first render
  // pass entirely and go straight to rendering the fallback. (In Concurrent
  // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
  // only codepath.)
  workInProgress.child !== currentPrimaryChildFragment) {
    var progressedPrimaryFragment = workInProgress.child;
    primaryChildFragment = progressedPrimaryFragment;
    primaryChildFragment.childLanes = NoLanes;
    primaryChildFragment.pendingProps = primaryChildProps;

    if ( workInProgress.mode & ProfileMode) {
      // Reset the durations from the first pass so they aren't included in the
      // final amounts. This seems counterintuitive, since we're intentionally
      // not measuring part of the render phase, but this makes it match what we
      // do in Concurrent Mode.
      primaryChildFragment.actualDuration = 0;
      primaryChildFragment.actualStartTime = -1;
      primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
      primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
    } // The fallback fiber was added as a deletion during the first pass.
    // However, since we're going to remain on the fallback, we no longer want
    // to delete it.


    workInProgress.deletions = null;
  } else {
    primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps); // Since we're reusing a current tree, we need to reuse the flags, too.
    // (We don't do this in legacy mode, because in legacy mode we don't re-use
    // the current tree; see previous branch.)

    primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
  }

  var fallbackChildFragment;

  if (currentFallbackChildFragment !== null) {
    fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
  } else {
    fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
    // mounted but this is a new fiber.

    fallbackChildFragment.flags |= Placement;
  }

  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;
  return fallbackChildFragment;
}

function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
  // Falling back to client rendering. Because this has performance
  // implications, it's considered a recoverable error, even though the user
  // likely won't observe anything wrong with the UI.
  //
  // The error is passed in as an argument to enforce that every caller provide
  // a custom message, or explicitly opt out (currently the only path that opts
  // out is legacy mode; every concurrent path provides an error).
  if (recoverableError !== null) {
    queueHydrationError(recoverableError);
  } // This will add the old fiber to the deletion list


  reconcileChildFibers(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.

  var nextProps = workInProgress.pendingProps;
  var primaryChildren = nextProps.children;
  var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
  // mounted but this is a new fiber.

  primaryChildFragment.flags |= Placement;
  workInProgress.memoizedState = null;
  return primaryChildFragment;
}

function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
  var fiberMode = workInProgress.mode;
  var primaryChildProps = {
    mode: 'visible',
    children: primaryChildren
  };
  var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
  var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
  // boundary) already mounted but this is a new fiber.

  fallbackChildFragment.flags |= Placement;
  primaryChildFragment.return = workInProgress;
  fallbackChildFragment.return = workInProgress;
  primaryChildFragment.sibling = fallbackChildFragment;
  workInProgress.child = primaryChildFragment;

  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
    // We will have dropped the effect list which contains the
    // deletion. We need to reconcile to delete the current child.
    reconcileChildFibers(workInProgress, current.child, null, renderLanes);
  }

  return fallbackChildFragment;
}

function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
  // During the first pass, we'll bail out and not drill into the children.
  // Instead, we'll leave the content in place and try to hydrate it later.
  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    {
      error('Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOMClient.hydrateRoot(container, <App />)' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
    }

    workInProgress.lanes = laneToLanes(SyncLane);
  } else if (isSuspenseInstanceFallback(suspenseInstance)) {
    // This is a client-only boundary. Since we won't get any content from the server
    // for this, we need to schedule that at a higher priority based on when it would
    // have timed out. In theory we could render it in this pass but it would have the
    // wrong priority associated with it and will prevent hydration of parent path.
    // Instead, we'll leave work left on it to render it in a separate commit.
    // TODO This time should be the time at which the server rendered response that is
    // a parent to this boundary was displayed. However, since we currently don't have
    // a protocol to transfer that time, we'll just estimate it by using the current
    // time. This will mean that Suspense timeouts are slightly shifted to later than
    // they should be.
    // Schedule a normal pri update to render this content.
    workInProgress.lanes = laneToLanes(DefaultHydrationLane);
  } else {
    // We'll continue hydrating the rest at offscreen priority since we'll already
    // be showing the right content coming from the server, it is no rush.
    workInProgress.lanes = laneToLanes(OffscreenLane);
  }

  return null;
}

function updateDehydratedSuspenseComponent(current, workInProgress, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes) {
  if (!didSuspend) {
    // This is the first render pass. Attempt to hydrate.
    // We should never be hydrating at this point because it is the first pass,
    // but after we've already committed once.
    warnIfHydrating();

    if ((workInProgress.mode & ConcurrentMode) === NoMode) {
      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // TODO: When we delete legacy mode, we should make this error argument
      // required — every concurrent mode path that causes hydration to
      // de-opt to client rendering should have an error message.
      null);
    }

    if (isSuspenseInstanceFallback(suspenseInstance)) {
      // This boundary is in a permanent fallback state. In this case, we'll never
      // get an update and we'll never be able to hydrate the final content. Let's just try the
      // client side render instead.
      var digest, message, stack;

      {
        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);

        digest = _getSuspenseInstanceF.digest;
        message = _getSuspenseInstanceF.message;
        stack = _getSuspenseInstanceF.stack;
      }

      var error;

      if (message) {
        // eslint-disable-next-line react-internal/prod-error-codes
        error = new Error(message);
      } else {
        error = new Error('The server could not finish this Suspense boundary, likely ' + 'due to an error during server rendering. Switched to ' + 'client rendering.');
      }

      var capturedValue = createCapturedValue(error, digest, stack);
      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, capturedValue);
    }
    // any context has changed, we need to treat is as if the input might have changed.


    var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);

    if (didReceiveUpdate || hasContextChanged) {
      // This boundary has changed since the first render. This means that we are now unable to
      // hydrate it. We might still be able to hydrate it using a higher priority lane.
      var root = getWorkInProgressRoot();

      if (root !== null) {
        var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);

        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
          // Intentionally mutating since this render will get interrupted. This
          // is one of the very rare times where we mutate the current tree
          // during the render phase.
          suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render

          var eventTime = NoTimestamp;
          enqueueConcurrentRenderForLane(current, attemptHydrationAtLane);
          scheduleUpdateOnFiber(root, current, attemptHydrationAtLane, eventTime);
        }
      } // If we have scheduled higher pri work above, this will probably just abort the render
      // since we now have higher priority work, but in case it doesn't, we need to prepare to
      // render something, if we time out. Even if that requires us to delete everything and
      // skip hydration.
      // Delay having to do this as long as the suspense timeout allows us.


      renderDidSuspendDelayIfPossible();

      var _capturedValue = createCapturedValue(new Error('This Suspense boundary received an update before it finished ' + 'hydrating. This caused the boundary to switch to client rendering. ' + 'The usual way to fix this is to wrap the original update ' + 'in startTransition.'));

      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue);
    } else if (isSuspenseInstancePending(suspenseInstance)) {
      // This component is still pending more data from the server, so we can't hydrate its
      // content. We treat it as if this component suspended itself. It might seem as if
      // we could just try to render it client-side instead. However, this will perform a
      // lot of unnecessary work and is unlikely to complete since it often will suspend
      // on missing data anyway. Additionally, the server might be able to render more
      // than we can on the client yet. In that case we'd end up with more fallback states
      // on the client than if we just leave it alone. If the server times out or errors
      // these should update this boundary to the permanent Fallback state instead.
      // Mark it as having captured (i.e. suspended).
      workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

      workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.

      var retry = retryDehydratedSuspenseBoundary.bind(null, current);
      registerSuspenseInstanceRetry(suspenseInstance, retry);
      return null;
    } else {
      // This is the first attempt.
      reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
      var primaryChildren = nextProps.children;
      var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
      // tree is part of a hydrating tree. This is used to determine if a child
      // node has fully mounted yet, and for scheduling event replaying.
      // Conceptually this is similar to Placement in that a new subtree is
      // inserted into the React tree here. It just happens to not need DOM
      // mutations because it already exists.

      primaryChildFragment.flags |= Hydrating;
      return primaryChildFragment;
    }
  } else {
    // This is the second render pass. We already attempted to hydrated, but
    // something either suspended or errored.
    if (workInProgress.flags & ForceClientRender) {
      // Something errored during hydration. Try again without hydrating.
      workInProgress.flags &= ~ForceClientRender;

      var _capturedValue2 = createCapturedValue(new Error('There was an error while hydrating this Suspense boundary. ' + 'Switched to client rendering.'));

      return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, _capturedValue2);
    } else if (workInProgress.memoizedState !== null) {
      // Something suspended and we should still be in dehydrated mode.
      // Leave the existing child in place.
      workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
      // but the normal suspense pass doesn't.

      workInProgress.flags |= DidCapture;
      return null;
    } else {
      // Suspended but we should no longer be in dehydrated mode.
      // Therefore we now have to render the fallback.
      var nextPrimaryChildren = nextProps.children;
      var nextFallbackChildren = nextProps.fallback;
      var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
      var _primaryChildFragment4 = workInProgress.child;
      _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes);
      workInProgress.memoizedState = SUSPENDED_MARKER;
      return fallbackChildFragment;
    }
  }
}

function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
  }

  scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
}

function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
  // Mark any Suspense boundaries with fallbacks as having work to do.
  // If they were previously forced into fallbacks, they may now be able
  // to unblock.
  var node = firstChild;

  while (node !== null) {
    if (node.tag === SuspenseComponent) {
      var state = node.memoizedState;

      if (state !== null) {
        scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
      }
    } else if (node.tag === SuspenseListComponent) {
      // If the tail is hidden there might not be an Suspense boundaries
      // to schedule work on. In this case we have to schedule it on the
      // list itself.
      // We don't have to traverse to the children of the list since
      // the list will propagate the change when it rerenders.
      scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }

    if (node === workInProgress) {
      return;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === workInProgress) {
        return;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function findLastContentRow(firstChild) {
  // This is going to find the last row among these children that is already
  // showing content on the screen, as opposed to being in fallback state or
  // new. If a row has multiple Suspense boundaries, any of them being in the
  // fallback state, counts as the whole row being in a fallback state.
  // Note that the "rows" will be workInProgress, but any nested children
  // will still be current since we haven't rendered them yet. The mounted
  // order may not be the same as the new order. We use the new order.
  var row = firstChild;
  var lastContentRow = null;

  while (row !== null) {
    var currentRow = row.alternate; // New rows can't be content rows.

    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
      lastContentRow = row;
    }

    row = row.sibling;
  }

  return lastContentRow;
}

function validateRevealOrder(revealOrder) {
  {
    if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
      didWarnAboutRevealOrder[revealOrder] = true;

      if (typeof revealOrder === 'string') {
        switch (revealOrder.toLowerCase()) {
          case 'together':
          case 'forwards':
          case 'backwards':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          case 'forward':
          case 'backward':
            {
              error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());

              break;
            }

          default:
            error('"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);

            break;
        }
      } else {
        error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
    }
  }
}

function validateTailOptions(tailMode, revealOrder) {
  {
    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
        didWarnAboutTailOptions[tailMode] = true;

        error('"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
        didWarnAboutTailOptions[tailMode] = true;

        error('<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
      }
    }
  }
}

function validateSuspenseListNestedChild(childSlot, index) {
  {
    var isAnArray = isArray(childSlot);
    var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';

    if (isAnArray || isIterable) {
      var type = isAnArray ? 'array' : 'iterable';

      error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);

      return false;
    }
  }

  return true;
}

function validateSuspenseListChildren(children, revealOrder) {
  {
    if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
      if (isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          if (!validateSuspenseListNestedChild(children[i], i)) {
            return;
          }
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var childrenIterator = iteratorFn.call(children);

          if (childrenIterator) {
            var step = childrenIterator.next();
            var _i = 0;

            for (; !step.done; step = childrenIterator.next()) {
              if (!validateSuspenseListNestedChild(step.value, _i)) {
                return;
              }

              _i++;
            }
          }
        } else {
          error('A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
        }
      }
    }
  }
}

function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
  var renderState = workInProgress.memoizedState;

  if (renderState === null) {
    workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      renderingStartTime: 0,
      last: lastContentRow,
      tail: tail,
      tailMode: tailMode
    };
  } else {
    // We can reuse the existing object from previous renders.
    renderState.isBackwards = isBackwards;
    renderState.rendering = null;
    renderState.renderingStartTime = 0;
    renderState.last = lastContentRow;
    renderState.tail = tail;
    renderState.tailMode = tailMode;
  }
} // This can end up rendering this component multiple passes.
// The first pass splits the children fibers into two sets. A head and tail.
// We first render the head. If anything is in fallback state, we do another
// pass through beginWork to rerender all children (including the tail) with
// the force suspend context. If the first render didn't have anything in
// in fallback state. Then we render each row in the tail one-by-one.
// That happens in the completeWork phase without going back to beginWork.


function updateSuspenseListComponent(current, workInProgress, renderLanes) {
  var nextProps = workInProgress.pendingProps;
  var revealOrder = nextProps.revealOrder;
  var tailMode = nextProps.tail;
  var newChildren = nextProps.children;
  validateRevealOrder(revealOrder);
  validateTailOptions(tailMode, revealOrder);
  validateSuspenseListChildren(newChildren, revealOrder);
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  var suspenseContext = suspenseStackCursor.current;
  var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

  if (shouldForceFallback) {
    suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
    workInProgress.flags |= DidCapture;
  } else {
    var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;

    if (didSuspendBefore) {
      // If we previously forced a fallback, we need to schedule work
      // on any nested boundaries to let them know to try to render
      // again. This is the same as context updating.
      propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
    }

    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
  }

  pushSuspenseContext(workInProgress, suspenseContext);

  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    // In legacy mode, SuspenseList doesn't work so we just
    // use make it a noop by treating it as the default revealOrder.
    workInProgress.memoizedState = null;
  } else {
    switch (revealOrder) {
      case 'forwards':
        {
          var lastContentRow = findLastContentRow(workInProgress.child);
          var tail;

          if (lastContentRow === null) {
            // The whole list is part of the tail.
            // TODO: We could fast path by just rendering the tail now.
            tail = workInProgress.child;
            workInProgress.child = null;
          } else {
            // Disconnect the tail rows after the content row.
            // We're going to render them separately later.
            tail = lastContentRow.sibling;
            lastContentRow.sibling = null;
          }

          initSuspenseListRenderState(workInProgress, false, // isBackwards
          tail, lastContentRow, tailMode);
          break;
        }

      case 'backwards':
        {
          // We're going to find the first row that has existing content.
          // At the same time we're going to reverse the list of everything
          // we pass in the meantime. That's going to be our tail in reverse
          // order.
          var _tail = null;
          var row = workInProgress.child;
          workInProgress.child = null;

          while (row !== null) {
            var currentRow = row.alternate; // New rows can't be content rows.

            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              // This is the beginning of the main content.
              workInProgress.child = row;
              break;
            }

            var nextRow = row.sibling;
            row.sibling = _tail;
            _tail = row;
            row = nextRow;
          } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


          initSuspenseListRenderState(workInProgress, true, // isBackwards
          _tail, null, // last
          tailMode);
          break;
        }

      case 'together':
        {
          initSuspenseListRenderState(workInProgress, false, // isBackwards
          null, // tail
          null, // last
          undefined);
          break;
        }

      default:
        {
          // The default reveal order is the same as not having
          // a boundary.
          workInProgress.memoizedState = null;
        }
    }
  }

  return workInProgress.child;
}

function updatePortalComponent(current, workInProgress, renderLanes) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;

  if (current === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
  } else {
    reconcileChildren(current, workInProgress, nextChildren, renderLanes);
  }

  return workInProgress.child;
}

var hasWarnedAboutUsingNoValuePropOnContextProvider = false;

function updateContextProvider(current, workInProgress, renderLanes) {
  var providerType = workInProgress.type;
  var context = providerType._context;
  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;
  var newValue = newProps.value;

  {
    if (!('value' in newProps)) {
      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
        hasWarnedAboutUsingNoValuePropOnContextProvider = true;

        error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
      }
    }

    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
    }
  }

  pushProvider(workInProgress, context, newValue);

  {
    if (oldProps !== null) {
      var oldValue = oldProps.value;

      if (objectIs(oldValue, newValue)) {
        // No change. Bailout early if children are the same.
        if (oldProps.children === newProps.children && !hasContextChanged()) {
          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
      } else {
        // The context value changed. Search for matching consumers and schedule
        // them to update.
        propagateContextChange(workInProgress, context, renderLanes);
      }
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current, workInProgress, renderLanes) {
  var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.

  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;

          error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }

  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    if (typeof render !== 'function') {
      error('A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');
    }
  }

  prepareToReadContext(workInProgress, renderLanes);
  var newValue = readContext(context);

  {
    markComponentRenderStarted(workInProgress);
  }

  var newChildren;

  {
    ReactCurrentOwner$1.current = workInProgress;
    setIsRendering(true);
    newChildren = render(newValue);
    setIsRendering(false);
  }

  {
    markComponentRenderStopped();
  } // React DevTools reads this flag.


  workInProgress.flags |= PerformedWork;
  reconcileChildren(current, workInProgress, newChildren, renderLanes);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function resetSuspendedCurrentOnMountInLegacyMode(current, workInProgress) {
  if ((workInProgress.mode & ConcurrentMode) === NoMode) {
    if (current !== null) {
      // A lazy component only mounts if it suspended inside a non-
      // concurrent tree, in an inconsistent state. We want to treat it like
      // a new mount, even though an empty version of it already committed.
      // Disconnect the alternate pointers.
      current.alternate = null;
      workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

      workInProgress.flags |= Placement;
    }
  }
}

function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
  if (current !== null) {
    // Reuse previous dependencies
    workInProgress.dependencies = current.dependencies;
  }

  {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning();
  }

  markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.

  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    {
      return null;
    }
  } // This fiber doesn't have work, but its subtree does. Clone the child
  // fibers and continue.


  cloneChildFibers(current, workInProgress);
  return workInProgress.child;
}

function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
  {
    var returnFiber = oldWorkInProgress.return;

    if (returnFiber === null) {
      // eslint-disable-next-line react-internal/prod-error-codes
      throw new Error('Cannot swap the root fiber.');
    } // Disconnect from the old current.
    // It will get deleted.


    current.alternate = null;
    oldWorkInProgress.alternate = null; // Connect to the new tree.

    newWorkInProgress.index = oldWorkInProgress.index;
    newWorkInProgress.sibling = oldWorkInProgress.sibling;
    newWorkInProgress.return = oldWorkInProgress.return;
    newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

    if (oldWorkInProgress === returnFiber.child) {
      returnFiber.child = newWorkInProgress;
    } else {
      var prevSibling = returnFiber.child;

      if (prevSibling === null) {
        // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error('Expected parent to have a child.');
      }

      while (prevSibling.sibling !== oldWorkInProgress) {
        prevSibling = prevSibling.sibling;

        if (prevSibling === null) {
          // eslint-disable-next-line react-internal/prod-error-codes
          throw new Error('Expected to find the previous sibling.');
        }
      }

      prevSibling.sibling = newWorkInProgress;
    } // Delete the old fiber and place the new one.
    // Since the old fiber is disconnected, we have to schedule it manually.


    var deletions = returnFiber.deletions;

    if (deletions === null) {
      returnFiber.deletions = [current];
      returnFiber.flags |= ChildDeletion;
    } else {
      deletions.push(current);
    }

    newWorkInProgress.flags |= Placement; // Restart work from the new fiber.

    return newWorkInProgress;
  }
}

function checkScheduledUpdateOrContext(current, renderLanes) {
  // Before performing an early bailout, we must check if there are pending
  // updates or context.
  var updateLanes = current.lanes;

  if (includesSomeLane(updateLanes, renderLanes)) {
    return true;
  } // No pending update, but because context is propagated lazily, we need

  return false;
}

function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
  // This fiber does not have any pending work. Bailout without entering
  // the begin phase. There's still some bookkeeping we that needs to be done
  // in this optimized path, mostly pushing stuff onto the stack.
  switch (workInProgress.tag) {
    case HostRoot:
      pushHostRootContext(workInProgress);
      var root = workInProgress.stateNode;

      resetHydrationState();
      break;

    case HostComponent:
      pushHostContext(workInProgress);
      break;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          pushContextProvider(workInProgress);
        }

        break;
      }

    case HostPortal:
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      break;

    case ContextProvider:
      {
        var newValue = workInProgress.memoizedProps.value;
        var context = workInProgress.type._context;
        pushProvider(workInProgress, context, newValue);
        break;
      }

    case Profiler:
      {
        // Profiler should only call onRender when one of its descendants actually rendered.
        var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

        if (hasChildWork) {
          workInProgress.flags |= Update;
        }

        {
          // Reset effect durations for the next eventual effect phase.
          // These are reset during render to allow the DevTools commit hook a chance to read them,
          var stateNode = workInProgress.stateNode;
          stateNode.effectDuration = 0;
          stateNode.passiveEffectDuration = 0;
        }
      }

      break;

    case SuspenseComponent:
      {
        var state = workInProgress.memoizedState;

        if (state !== null) {
          if (state.dehydrated !== null) {
            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
            // been unsuspended it has committed as a resolved Suspense component.
            // If it needs to be retried, it should have work scheduled on it.

            workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.

            return null;
          } // If this boundary is currently timed out, we need to decide
          // whether to retry the primary children, or to skip over it and
          // go straight to the fallback. Check the priority of the primary
          // child fragment.


          var primaryChildFragment = workInProgress.child;
          var primaryChildLanes = primaryChildFragment.childLanes;

          if (includesSomeLane(renderLanes, primaryChildLanes)) {
            // The primary children have pending work. Use the normal path
            // to attempt to render the primary children again.
            return updateSuspenseComponent(current, workInProgress, renderLanes);
          } else {
            // The primary child fragment does not have pending work marked
            // on it
            pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
            // priority. Bailout.

            var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);

            if (child !== null) {
              // The fallback children have pending work. Skip over the
              // primary children and work on the fallback.
              return child.sibling;
            } else {
              // Note: We can return `null` here because we already checked
              // whether there were nested context consumers, via the call to
              // `bailoutOnAlreadyFinishedWork` above.
              return null;
            }
          }
        } else {
          pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
        }

        break;
      }

    case SuspenseListComponent:
      {
        var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;

        var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

        if (didSuspendBefore) {
          if (_hasChildWork) {
            // If something was in fallback state last time, and we have all the
            // same children then we're still in progressive loading state.
            // Something might get unblocked by state updates or retries in the
            // tree which will affect the tail. So we need to use the normal
            // path to compute the correct tail.
            return updateSuspenseListComponent(current, workInProgress, renderLanes);
          } // If none of the children had any work, that means that none of
          // them got retried so they'll still be blocked in the same way
          // as before. We can fast bail out.


          workInProgress.flags |= DidCapture;
        } // If nothing suspended before and we're rendering the same children,
        // then the tail doesn't matter. Anything new that suspends will work
        // in the "together" mode, so we can continue from the state we had.


        var renderState = workInProgress.memoizedState;

        if (renderState !== null) {
          // Reset to the "together" mode in case we've started a different
          // update in the past but didn't complete it.
          renderState.rendering = null;
          renderState.tail = null;
          renderState.lastEffect = null;
        }

        pushSuspenseContext(workInProgress, suspenseStackCursor.current);

        if (_hasChildWork) {
          break;
        } else {
          // If none of the children had any work, that means that none of
          // them got retried so they'll still be blocked in the same way
          // as before. We can fast bail out.
          return null;
        }
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        // Need to check if the tree still needs to be deferred. This is
        // almost identical to the logic used in the normal update path,
        // so we'll just enter that. The only difference is we'll bail out
        // at the next level instead of this one, because the child props
        // have not changed. Which is fine.
        // TODO: Probably should refactor `beginWork` to split the bailout
        // path from the normal path. I'm tempted to do a labeled break here
        // but I won't :)
        workInProgress.lanes = NoLanes;
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }
  }

  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
}

function beginWork(current, workInProgress, renderLanes) {
  {
    if (workInProgress._debugNeedsRemount && current !== null) {
      // This will restart the begin phase with a new fiber.
      return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
    }
  }

  if (current !== null) {
    var oldProps = current.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged() || ( // Force a re-render if the implementation changed due to hot reload:
     workInProgress.type !== current.type )) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else {
      // Neither props nor legacy context changes. Check if there's a pending
      // update or context change.
      var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);

      if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
      // may not be work scheduled on `current`, so we check for this flag.
      (workInProgress.flags & DidCapture) === NoFlags) {
        // No pending updates or context. Bail out now.
        didReceiveUpdate = false;
        return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
      }

      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
        // This is a special case that only exists for legacy mode.
        // See https://github.com/facebook/react/pull/19216.
        didReceiveUpdate = true;
      } else {
        // An update was scheduled on this fiber, but there are no new props
        // nor legacy context. Set this to false. If an update queue or context
        // consumer produces a changed value, it will set this to true. Otherwise,
        // the component will assume the children have not changed and bail out.
        didReceiveUpdate = false;
      }
    }
  } else {
    didReceiveUpdate = false;

    if (getIsHydrating() && isForkedChild(workInProgress)) {
      // Check if this child belongs to a list of muliple children in
      // its parent.
      //
      // In a true multi-threaded implementation, we would render children on
      // parallel threads. This would represent the beginning of a new render
      // thread for this subtree.
      //
      // We only use this for id generation during hydration, which is why the
      // logic is located in this special branch.
      var slotIndex = workInProgress.index;
      var numberOfForks = getForksAtLevel();
      pushTreeId(workInProgress, numberOfForks, slotIndex);
    }
  } // Before entering the begin phase, clear pending update priority.
  // TODO: This assumes that we're about to evaluate the component and process
  // the update queue. However, there's an exception: SimpleMemoComponent
  // sometimes bails out later in the begin phase. This indicates that we should
  // move this assignment out of the common path and into each branch.


  workInProgress.lanes = NoLanes;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
      }

    case LazyComponent:
      {
        var elementType = workInProgress.elementType;
        return mountLazyComponent(current, workInProgress, elementType, renderLanes);
      }

    case FunctionComponent:
      {
        var Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
        return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
      }

    case ClassComponent:
      {
        var _Component = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;

        var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);

        return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
      }

    case HostRoot:
      return updateHostRoot(current, workInProgress, renderLanes);

    case HostComponent:
      return updateHostComponent(current, workInProgress, renderLanes);

    case HostText:
      return updateHostText(current, workInProgress);

    case SuspenseComponent:
      return updateSuspenseComponent(current, workInProgress, renderLanes);

    case HostPortal:
      return updatePortalComponent(current, workInProgress, renderLanes);

    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;

        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

        return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
      }

    case Fragment:
      return updateFragment(current, workInProgress, renderLanes);

    case Mode:
      return updateMode(current, workInProgress, renderLanes);

    case Profiler:
      return updateProfiler(current, workInProgress, renderLanes);

    case ContextProvider:
      return updateContextProvider(current, workInProgress, renderLanes);

    case ContextConsumer:
      return updateContextConsumer(current, workInProgress, renderLanes);

    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentNameFromType(_type2));
            }
          }
        }

        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
      }

    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
      }

    case IncompleteClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;

        var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);

        return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
      }

    case SuspenseListComponent:
      {
        return updateSuspenseListComponent(current, workInProgress, renderLanes);
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
      {
        return updateOffscreenComponent(current, workInProgress, renderLanes);
      }
  }

  throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.flags |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.flags |= Ref;

  {
    workInProgress.flags |= RefStatic;
  }
}

var appendAllChildren;
var updateHostContainer;
var updateHostComponent$1;
var updateHostText$1;

{
  // Mutation mode
  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;

    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === workInProgress) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (current, workInProgress) {// Noop
  };

  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;

    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    } // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.


    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.

    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

    workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.

    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };

  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
}

function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
  if (getIsHydrating()) {
    // If we're hydrating, we should consume as many items as we can
    // so we don't leave any behind.
    return;
  }

  switch (renderState.tailMode) {
    case 'hidden':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var tailNode = renderState.tail;
        var lastTailNode = null;

        while (tailNode !== null) {
          if (tailNode.alternate !== null) {
            lastTailNode = tailNode;
          }

          tailNode = tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (lastTailNode === null) {
          // All remaining items in the tail are insertions.
          renderState.tail = null;
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          lastTailNode.sibling = null;
        }

        break;
      }

    case 'collapsed':
      {
        // Any insertions at the end of the tail list after this point
        // should be invisible. If there are already mounted boundaries
        // anything before them are not considered for collapsing.
        // Therefore we need to go through the whole tail to find if
        // there are any.
        var _tailNode = renderState.tail;
        var _lastTailNode = null;

        while (_tailNode !== null) {
          if (_tailNode.alternate !== null) {
            _lastTailNode = _tailNode;
          }

          _tailNode = _tailNode.sibling;
        } // Next we're simply going to delete all insertions after the
        // last rendered item.


        if (_lastTailNode === null) {
          // All remaining items in the tail are insertions.
          if (!hasRenderedATailFallback && renderState.tail !== null) {
            // We suspended during the head. We want to show at least one
            // row at the tail. So we'll keep on and cut off the rest.
            renderState.tail.sibling = null;
          } else {
            renderState.tail = null;
          }
        } else {
          // Detach the insertion after the last node that was already
          // inserted.
          _lastTailNode.sibling = null;
        }

        break;
      }
  }
}

function bubbleProperties(completedWork) {
  var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
  var newChildLanes = NoLanes;
  var subtreeFlags = NoFlags;

  if (!didBailout) {
    // Bubble up the earliest expiration time.
    if ( (completedWork.mode & ProfileMode) !== NoMode) {
      // In profiling mode, resetChildExpirationTime is also used to reset
      // profiler durations.
      var actualDuration = completedWork.actualDuration;
      var treeBaseDuration = completedWork.selfBaseDuration;
      var child = completedWork.child;

      while (child !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
        subtreeFlags |= child.subtreeFlags;
        subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
        // only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration. If
        // the fiber has not been cloned though, (meaning no work was done), then
        // this value will reflect the amount of time spent working on a previous
        // render. In that case it should not bubble. We determine whether it was
        // cloned by comparing the child pointer.

        actualDuration += child.actualDuration;
        treeBaseDuration += child.treeBaseDuration;
        child = child.sibling;
      }

      completedWork.actualDuration = actualDuration;
      completedWork.treeBaseDuration = treeBaseDuration;
    } else {
      var _child = completedWork.child;

      while (_child !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
        subtreeFlags |= _child.subtreeFlags;
        subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
        // smell because it assumes the commit phase is never concurrent with
        // the render phase. Will address during refactor to alternate model.

        _child.return = completedWork;
        _child = _child.sibling;
      }
    }

    completedWork.subtreeFlags |= subtreeFlags;
  } else {
    // Bubble up the earliest expiration time.
    if ( (completedWork.mode & ProfileMode) !== NoMode) {
      // In profiling mode, resetChildExpirationTime is also used to reset
      // profiler durations.
      var _treeBaseDuration = completedWork.selfBaseDuration;
      var _child2 = completedWork.child;

      while (_child2 !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
        // so we should bubble those up even during a bailout. All the other
        // flags have a lifetime only of a single render + commit, so we should
        // ignore them.

        subtreeFlags |= _child2.subtreeFlags & StaticMask;
        subtreeFlags |= _child2.flags & StaticMask;
        _treeBaseDuration += _child2.treeBaseDuration;
        _child2 = _child2.sibling;
      }

      completedWork.treeBaseDuration = _treeBaseDuration;
    } else {
      var _child3 = completedWork.child;

      while (_child3 !== null) {
        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
        // so we should bubble those up even during a bailout. All the other
        // flags have a lifetime only of a single render + commit, so we should
        // ignore them.

        subtreeFlags |= _child3.subtreeFlags & StaticMask;
        subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
        // smell because it assumes the commit phase is never concurrent with
        // the render phase. Will address during refactor to alternate model.

        _child3.return = completedWork;
        _child3 = _child3.sibling;
      }
    }

    completedWork.subtreeFlags |= subtreeFlags;
  }

  completedWork.childLanes = newChildLanes;
  return didBailout;
}

function completeDehydratedSuspenseBoundary(current, workInProgress, nextState) {
  if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
    warnIfUnhydratedTailNodes(workInProgress);
    resetHydrationState();
    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
    return false;
  }

  var wasHydrated = popHydrationState(workInProgress);

  if (nextState !== null && nextState.dehydrated !== null) {
    // We might be inside a hydration state the first time we're picking up this
    // Suspense boundary, and also after we've reentered it for further hydration.
    if (current === null) {
      if (!wasHydrated) {
        throw new Error('A dehydrated suspense component was completed without a hydrated node. ' + 'This is probably a bug in React.');
      }

      prepareToHydrateHostSuspenseInstance(workInProgress);
      bubbleProperties(workInProgress);

      {
        if ((workInProgress.mode & ProfileMode) !== NoMode) {
          var isTimedOutSuspense = nextState !== null;

          if (isTimedOutSuspense) {
            // Don't count time spent in a timed out Suspense subtree as part of the base duration.
            var primaryChildFragment = workInProgress.child;

            if (primaryChildFragment !== null) {
              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
              workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
            }
          }
        }
      }

      return false;
    } else {
      // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
      // state since we're now exiting out of it. popHydrationState doesn't do that for us.
      resetHydrationState();

      if ((workInProgress.flags & DidCapture) === NoFlags) {
        // This boundary did not suspend so it's now hydrated and unsuspended.
        workInProgress.memoizedState = null;
      } // If nothing suspended, we need to schedule an effect to mark this boundary
      // as having hydrated so events know that they're free to be invoked.
      // It's also a signal to replay events and the suspense callback.
      // If something suspended, schedule an effect to attach retry listeners.
      // So we might as well always mark this.


      workInProgress.flags |= Update;
      bubbleProperties(workInProgress);

      {
        if ((workInProgress.mode & ProfileMode) !== NoMode) {
          var _isTimedOutSuspense = nextState !== null;

          if (_isTimedOutSuspense) {
            // Don't count time spent in a timed out Suspense subtree as part of the base duration.
            var _primaryChildFragment = workInProgress.child;

            if (_primaryChildFragment !== null) {
              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
              workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
            }
          }
        }
      }

      return false;
    }
  } else {
    // Successfully completed this tree. If this was a forced client render,
    // there may have been recoverable errors during first hydration
    // attempt. If so, add them to a queue so we can log them in the
    // commit phase.
    upgradeHydrationErrorsToRecoverable(); // Fall through to normal Suspense path

    return true;
  }
}

function completeWork(current, workInProgress, renderLanes) {
  var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.

  popTreeContext(workInProgress);

  switch (workInProgress.tag) {
    case IndeterminateComponent:
    case LazyComponent:
    case SimpleMemoComponent:
    case FunctionComponent:
    case ForwardRef:
    case Fragment:
    case Mode:
    case Profiler:
    case ContextConsumer:
    case MemoComponent:
      bubbleProperties(workInProgress);
      return null;

    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case HostRoot:
      {
        var fiberRoot = workInProgress.stateNode;
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();

        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }

        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          var wasHydrated = popHydrationState(workInProgress);

          if (wasHydrated) {
            // If we hydrated, then we'll need to schedule an update for
            // the commit side-effects on the root.
            markUpdate(workInProgress);
          } else {
            if (current !== null) {
              var prevState = current.memoizedState;

              if ( // Check if this is a client root
              !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
              (workInProgress.flags & ForceClientRender) !== NoFlags) {
                // Schedule an effect to clear this container at the start of the
                // next commit. This handles the case of React rendering into a
                // container with previous children. It's also safe to do for
                // updates too, because current.child would only be null if the
                // previous render was null (so the container would already
                // be empty).
                workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                // recoverable errors during first hydration attempt. If so, add
                // them to a queue so we can log them in the commit phase.

                upgradeHydrationErrorsToRecoverable();
              }
            }
          }
        }

        updateHostContainer(current, workInProgress);
        bubbleProperties(workInProgress);

        return null;
      }

    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;

        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            if (workInProgress.stateNode === null) {
              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            } // This can happen when we abort work.


            bubbleProperties(workInProgress);
            return null;
          }

          var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on whether we want to add them top->down or
          // bottom->up. Top->down is faster in IE11.

          var _wasHydrated = popHydrationState(workInProgress);

          if (_wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node need to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
            appendAllChildren(instance, workInProgress, false, false);
            workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.

            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
              markUpdate(workInProgress);
            }
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case HostText:
      {
        var newText = newProps;

        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.

          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            if (workInProgress.stateNode === null) {
              throw new Error('We must have new props for new mounts. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            } // This can happen when we abort work.

          }

          var _rootContainerInstance = getRootHostContainer();

          var _currentHostContext = getHostContext();

          var _wasHydrated2 = popHydrationState(workInProgress);

          if (_wasHydrated2) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var nextState = workInProgress.memoizedState; // Special path for dehydrated boundaries. We may eventually move this
        // to its own fiber type so that we can add other kinds of hydration
        // boundaries that aren't associated with a Suspense tree. In anticipation
        // of such a refactor, all the hydration logic is contained in
        // this branch.

        if (current === null || current.memoizedState !== null && current.memoizedState.dehydrated !== null) {
          var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current, workInProgress, nextState);

          if (!fallthroughToNormalSuspensePath) {
            if (workInProgress.flags & ShouldCapture) {
              // Special case. There were remaining unhydrated nodes. We treat
              // this as a mismatch. Revert to client rendering.
              return workInProgress;
            } else {
              // Did not finish hydrating, either because this is the initial
              // render or because something suspended.
              return null;
            }
          } // Continue with the normal Suspense path.

        }

        if ((workInProgress.flags & DidCapture) !== NoFlags) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.lanes = renderLanes; // Do not reset the effect list.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          } // Don't bubble properties in this case.


          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = current !== null && current.memoizedState !== null;
        // a passive effect, which is when we process the transitions


        if (nextDidTimeout !== prevDidTimeout) {
          // an effect to toggle the subtree's visibility. When we switch from
          // fallback -> primary, the inner Offscreen fiber schedules this effect
          // as part of its normal complete phase. But when we switch from
          // primary -> fallback, the inner Offscreen fiber does not have a complete
          // phase. So we need to schedule its effect here.
          //
          // We also use this flag to connect/disconnect the effects, but the same
          // logic applies: when re-connecting, the Offscreen fiber's complete
          // phase will handle scheduling the effect. It's only when the fallback
          // is active that we have to do anything special.


          if (nextDidTimeout) {
            var _offscreenFiber2 = workInProgress.child;
            _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
            // in the concurrent tree already suspended during this render.
            // This is a known bug.

            if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
              // TODO: Move this back to throwException because this is too late
              // if this is a large tree which is common for initial loads. We
              // don't know if we should restart a render or not until we get
              // this marker, and this is too late.
              // If this render already had a ping or lower pri updates,
              // and this is the first time we know we're going to suspend we
              // should be able to immediately restart from within throwException.
              var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);

              if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                // If this was in an invisible tree or a new render, then showing
                // this boundary is ok.
                renderDidSuspend();
              } else {
                // Otherwise, we're going to have to hide content so we should
                // suspend for longer if possible.
                renderDidSuspendDelayIfPossible();
              }
            }
          }
        }

        var wakeables = workInProgress.updateQueue;

        if (wakeables !== null) {
          // Schedule an effect to attach a retry listener to the promise.
          // TODO: Move to passive phase
          workInProgress.flags |= Update;
        }

        bubbleProperties(workInProgress);

        {
          if ((workInProgress.mode & ProfileMode) !== NoMode) {
            if (nextDidTimeout) {
              // Don't count time spent in a timed out Suspense subtree as part of the base duration.
              var primaryChildFragment = workInProgress.child;

              if (primaryChildFragment !== null) {
                // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
              }
            }
          }
        }

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(current, workInProgress);

      if (current === null) {
        preparePortalMount(workInProgress.stateNode.containerInfo);
      }

      bubbleProperties(workInProgress);
      return null;

    case ContextProvider:
      // Pop provider fiber
      var context = workInProgress.type._context;
      popProvider(context, workInProgress);
      bubbleProperties(workInProgress);
      return null;

    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;

        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress);
        var renderState = workInProgress.memoizedState;

        if (renderState === null) {
          // We're running in the default, "independent" mode.
          // We don't do anything in this mode.
          bubbleProperties(workInProgress);
          return null;
        }

        var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
        var renderedTail = renderState.rendering;

        if (renderedTail === null) {
          // We just rendered the head.
          if (!didSuspendAlready) {
            // This is the first pass. We need to figure out if anything is still
            // suspended in the rendered set.
            // If new content unsuspended, but there's still some content that
            // didn't. Then we need to do a second pass that forces everything
            // to keep showing their fallbacks.
            // We might be suspended if something in this render pass suspended, or
            // something in the previous committed pass suspended. Otherwise,
            // there's no chance so we can skip the expensive call to
            // findFirstSuspended.
            var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);

            if (!cannotBeSuspended) {
              var row = workInProgress.child;

              while (row !== null) {
                var suspended = findFirstSuspended(row);

                if (suspended !== null) {
                  didSuspendAlready = true;
                  workInProgress.flags |= DidCapture;
                  cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                  // part of the second pass. In that case nothing will subscribe to
                  // its thenables. Instead, we'll transfer its thenables to the
                  // SuspenseList so that it can retry if they resolve.
                  // There might be multiple of these in the list but since we're
                  // going to wait for all of them anyway, it doesn't really matter
                  // which ones gets to ping. In theory we could get clever and keep
                  // track of how many dependencies remain but it gets tricky because
                  // in the meantime, we can add/remove/change items and dependencies.
                  // We might bail out of the loop before finding any but that
                  // doesn't matter since that means that the other boundaries that
                  // we did find already has their listeners attached.

                  var newThenables = suspended.updateQueue;

                  if (newThenables !== null) {
                    workInProgress.updateQueue = newThenables;
                    workInProgress.flags |= Update;
                  } // Rerender the whole list, but this time, we'll force fallbacks
                  // to stay in place.
                  // Reset the effect flags before doing the second pass since that's now invalid.
                  // Reset the child fibers to their original state.


                  workInProgress.subtreeFlags = NoFlags;
                  resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                  // rerender the children.

                  pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.

                  return workInProgress.child;
                }

                row = row.sibling;
              }
            }

            if (renderState.tail !== null && now() > getRenderTargetTime()) {
              // We have already passed our CPU deadline but we still have rows
              // left in the tail. We'll just give up further attempts to render
              // the main content and only render fallbacks.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;
            }
          } else {
            cutOffTailIfNeeded(renderState, false);
          } // Next we're going to render the tail.

        } else {
          // Append the rendered row to the child list.
          if (!didSuspendAlready) {
            var _suspended = findFirstSuspended(renderedTail);

            if (_suspended !== null) {
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
              // get lost if this row ends up dropped during a second pass.

              var _newThenables = _suspended.updateQueue;

              if (_newThenables !== null) {
                workInProgress.updateQueue = _newThenables;
                workInProgress.flags |= Update;
              }

              cutOffTailIfNeeded(renderState, true); // This might have been modified.

              if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
              ) {
                  // We're done.
                  bubbleProperties(workInProgress);
                  return null;
                }
            } else if ( // The time it took to render last row is greater than the remaining
            // time we have to render. So rendering one more row would likely
            // exceed it.
            now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
              // We have now passed our CPU deadline and we'll just give up further
              // attempts to render the main content and only render fallbacks.
              // The assumption is that this is usually faster.
              workInProgress.flags |= DidCapture;
              didSuspendAlready = true;
              cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
              // to get it started back up to attempt the next item. While in terms
              // of priority this work has the same priority as this current render,
              // it's not part of the same transition once the transition has
              // committed. If it's sync, we still want to yield so that it can be
              // painted. Conceptually, this is really the same as pinging.
              // We can use any RetryLane even if it's the one currently rendering
              // since we're leaving it behind on this node.

              workInProgress.lanes = SomeRetryLane;
            }
          }

          if (renderState.isBackwards) {
            // The effect list of the backwards tail will have been added
            // to the end. This breaks the guarantee that life-cycles fire in
            // sibling order but that isn't a strong guarantee promised by React.
            // Especially since these might also just pop in during future commits.
            // Append to the beginning of the list.
            renderedTail.sibling = workInProgress.child;
            workInProgress.child = renderedTail;
          } else {
            var previousSibling = renderState.last;

            if (previousSibling !== null) {
              previousSibling.sibling = renderedTail;
            } else {
              workInProgress.child = renderedTail;
            }

            renderState.last = renderedTail;
          }
        }

        if (renderState.tail !== null) {
          // We still have tail rows to render.
          // Pop a row.
          var next = renderState.tail;
          renderState.rendering = next;
          renderState.tail = next.sibling;
          renderState.renderingStartTime = now();
          next.sibling = null; // Restore the context.
          // TODO: We can probably just avoid popping it instead and only
          // setting it the first time we go from not suspended to suspended.

          var suspenseContext = suspenseStackCursor.current;

          if (didSuspendAlready) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
          } else {
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }

          pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
          // Don't bubble properties in this case.

          return next;
        }

        bubbleProperties(workInProgress);
        return null;
      }

    case ScopeComponent:
      {

        break;
      }

    case OffscreenComponent:
    case LegacyHiddenComponent:
      {
        popRenderLanes(workInProgress);
        var _nextState = workInProgress.memoizedState;
        var nextIsHidden = _nextState !== null;

        if (current !== null) {
          var _prevState = current.memoizedState;
          var prevIsHidden = _prevState !== null;

          if (prevIsHidden !== nextIsHidden && ( // LegacyHidden doesn't do any hiding — it only pre-renders.
          !enableLegacyHidden )) {
            workInProgress.flags |= Visibility;
          }
        }

        if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {
          bubbleProperties(workInProgress);
        } else {
          // Don't bubble properties for hidden children unless we're rendering
          // at offscreen priority.
          if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
            bubbleProperties(workInProgress);

            {
              // Check if there was an insertion or update in the hidden subtree.
              // If so, we need to hide those nodes in the commit phase, so
              // schedule a visibility effect.
              if ( workInProgress.subtreeFlags & (Placement | Update)) {
                workInProgress.flags |= Visibility;
              }
            }
          }
        }
        return null;
      }

    case CacheComponent:
      {

        return null;
      }

    case TracingMarkerComponent:
      {

        return null;
      }
  }

  throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
}

function unwindWork(current, workInProgress, renderLanes) {
  // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.
  popTreeContext(workInProgress);

  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;

        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }

        var flags = workInProgress.flags;

        if (flags & ShouldCapture) {
          workInProgress.flags = flags & ~ShouldCapture | DidCapture;

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case HostRoot:
      {
        var root = workInProgress.stateNode;
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        resetWorkInProgressVersions();
        var _flags = workInProgress.flags;

        if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
          // There was an error during render that wasn't captured by a suspense
          // boundary. Do a second pass on the root to unmount the children.
          workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
          return workInProgress;
        } // We unwound to the root without completing it. Exit.


        return null;
      }

    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }

    case SuspenseComponent:
      {
        popSuspenseContext(workInProgress);
        var suspenseState = workInProgress.memoizedState;

        if (suspenseState !== null && suspenseState.dehydrated !== null) {
          if (workInProgress.alternate === null) {
            throw new Error('Threw in newly mounted dehydrated component. This is likely a bug in ' + 'React. Please file an issue.');
          }

          resetHydrationState();
        }

        var _flags2 = workInProgress.flags;

        if (_flags2 & ShouldCapture) {
          workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

          if ( (workInProgress.mode & ProfileMode) !== NoMode) {
            transferActualDuration(workInProgress);
          }

          return workInProgress;
        }

        return null;
      }

    case SuspenseListComponent:
      {
        popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
        // caught by a nested boundary. If not, it should bubble through.

        return null;
      }

    case HostPortal:
      popHostContainer(workInProgress);
      return null;

    case ContextProvider:
      var context = workInProgress.type._context;
      popProvider(context, workInProgress);
      return null;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(workInProgress);
      return null;

    case CacheComponent:

      return null;

    default:
      return null;
  }
}

function unwindInterruptedWork(current, interruptedWork, renderLanes) {
  // Note: This intentionally doesn't check if we're hydrating because comparing
  // to the current tree provider fiber is just as fast and less error-prone.
  // Ideally we would have a special version of the work loop only
  // for hydration.
  popTreeContext(interruptedWork);

  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;

        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }

        break;
      }

    case HostRoot:
      {
        var root = interruptedWork.stateNode;
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        resetWorkInProgressVersions();
        break;
      }

    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }

    case HostPortal:
      popHostContainer(interruptedWork);
      break;

    case SuspenseComponent:
      popSuspenseContext(interruptedWork);
      break;

    case SuspenseListComponent:
      popSuspenseContext(interruptedWork);
      break;

    case ContextProvider:
      var context = interruptedWork.type._context;
      popProvider(context, interruptedWork);
      break;

    case OffscreenComponent:
    case LegacyHiddenComponent:
      popRenderLanes(interruptedWork);
      break;
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;

{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
} // Used during the commit phase to track the state of the Offscreen component stack.
// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
// Only used when enableSuspenseLayoutEffectSemantics is enabled.


var offscreenSubtreeIsHidden = false;
var offscreenSubtreeWasHidden = false;
var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
var nextEffect = null; // Used for Profiling builds to track updaters.

var inProgressLanes = null;
var inProgressRoot = null;
function reportUncaughtErrorInDEV(error) {
  // Wrapping each small part of the commit phase into a guarded
  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).
  // But we rely on it to surface errors to DEV tools like overlays
  // (https://github.com/facebook/react/issues/21712).
  // As a compromise, rethrow only caught errors in a guard.
  {
    invokeGuardedCallback(null, function () {
      throw error;
    });
    clearCaughtError();
  }
}

var callComponentWillUnmountWithTimer = function (current, instance) {
  instance.props = current.memoizedProps;
  instance.state = current.memoizedState;

  if ( current.mode & ProfileMode) {
    try {
      startLayoutEffectTimer();
      instance.componentWillUnmount();
    } finally {
      recordLayoutEffectDuration(current);
    }
  } else {
    instance.componentWillUnmount();
  }
}; // Capture errors so they don't interrupt mounting.


function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
  try {
    commitHookEffectListMount(Layout, current);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt unmounting.


function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
  try {
    callComponentWillUnmountWithTimer(current, instance);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt mounting.


function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
  try {
    instance.componentDidMount();
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
} // Capture errors so they don't interrupt mounting.


function safelyAttachRef(current, nearestMountedAncestor) {
  try {
    commitAttachRef(current);
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}

function safelyDetachRef(current, nearestMountedAncestor) {
  var ref = current.ref;

  if (ref !== null) {
    if (typeof ref === 'function') {
      var retVal;

      try {
        if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) {
          try {
            startLayoutEffectTimer();
            retVal = ref(null);
          } finally {
            recordLayoutEffectDuration(current);
          }
        } else {
          retVal = ref(null);
        }
      } catch (error) {
        captureCommitPhaseError(current, nearestMountedAncestor, error);
      }

      {
        if (typeof retVal === 'function') {
          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(current));
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
  try {
    destroy();
  } catch (error) {
    captureCommitPhaseError(current, nearestMountedAncestor, error);
  }
}

var focusedInstanceHandle = null;
var shouldFireAfterActiveInstanceBlur = false;
function commitBeforeMutationEffects(root, firstChild) {
  focusedInstanceHandle = prepareForCommit(root.containerInfo);
  nextEffect = firstChild;
  commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber

  var shouldFire = shouldFireAfterActiveInstanceBlur;
  shouldFireAfterActiveInstanceBlur = false;
  focusedInstanceHandle = null;
  return shouldFire;
}

function commitBeforeMutationEffects_begin() {
  while (nextEffect !== null) {
    var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.

    var child = fiber.child;

    if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitBeforeMutationEffects_complete();
    }
  }
}

function commitBeforeMutationEffects_complete() {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    setCurrentFiber(fiber);

    try {
      commitBeforeMutationEffectsOnFiber(fiber);
    } catch (error) {
      captureCommitPhaseError(fiber, fiber.return, error);
    }

    resetCurrentFiber();
    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitBeforeMutationEffectsOnFiber(finishedWork) {
  var current = finishedWork.alternate;
  var flags = finishedWork.flags;

  if ((flags & Snapshot) !== NoFlags) {
    setCurrentFiber(finishedWork);

    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          break;
        }

      case ClassComponent:
        {
          if (current !== null) {
            var prevProps = current.memoizedProps;
            var prevState = current.memoizedState;
            var instance = finishedWork.stateNode; // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.

            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }
              }
            }

            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);

            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);

                error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentNameFromFiber(finishedWork));
              }
            }

            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
          }

          break;
        }

      case HostRoot:
        {
          {
            var root = finishedWork.stateNode;
            clearContainer(root.containerInfo);
          }

          break;
        }

      case HostComponent:
      case HostText:
      case HostPortal:
      case IncompleteClassComponent:
        // Nothing to do for these component types
        break;

      default:
        {
          throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
        }
    }

    resetCurrentFiber();
  }
}

function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & flags) === flags) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;

        if (destroy !== undefined) {
          {
            if ((flags & Passive$1) !== NoFlags$1) {
              markComponentPassiveEffectUnmountStarted(finishedWork);
            } else if ((flags & Layout) !== NoFlags$1) {
              markComponentLayoutEffectUnmountStarted(finishedWork);
            }
          }

          {
            if ((flags & Insertion) !== NoFlags$1) {
              setIsRunningInsertionEffect(true);
            }
          }

          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);

          {
            if ((flags & Insertion) !== NoFlags$1) {
              setIsRunningInsertionEffect(false);
            }
          }

          {
            if ((flags & Passive$1) !== NoFlags$1) {
              markComponentPassiveEffectUnmountStopped();
            } else if ((flags & Layout) !== NoFlags$1) {
              markComponentLayoutEffectUnmountStopped();
            }
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitHookEffectListMount(flags, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;

    do {
      if ((effect.tag & flags) === flags) {
        {
          if ((flags & Passive$1) !== NoFlags$1) {
            markComponentPassiveEffectMountStarted(finishedWork);
          } else if ((flags & Layout) !== NoFlags$1) {
            markComponentLayoutEffectMountStarted(finishedWork);
          }
        } // Mount


        var create = effect.create;

        {
          if ((flags & Insertion) !== NoFlags$1) {
            setIsRunningInsertionEffect(true);
          }
        }

        effect.destroy = create();

        {
          if ((flags & Insertion) !== NoFlags$1) {
            setIsRunningInsertionEffect(false);
          }
        }

        {
          if ((flags & Passive$1) !== NoFlags$1) {
            markComponentPassiveEffectMountStopped();
          } else if ((flags & Layout) !== NoFlags$1) {
            markComponentLayoutEffectMountStopped();
          }
        }

        {
          var destroy = effect.destroy;

          if (destroy !== undefined && typeof destroy !== 'function') {
            var hookName = void 0;

            if ((effect.tag & Layout) !== NoFlags) {
              hookName = 'useLayoutEffect';
            } else if ((effect.tag & Insertion) !== NoFlags) {
              hookName = 'useInsertionEffect';
            } else {
              hookName = 'useEffect';
            }

            var addendum = void 0;

            if (destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + hookName + '(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + destroy;
            }

            error('%s must not return anything besides a function, ' + 'which is used for clean-up.%s', hookName, addendum);
          }
        }
      }

      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveEffectDurations(finishedRoot, finishedWork) {
  {
    // Only Profilers with work in their subtree will have an Update effect scheduled.
    if ((finishedWork.flags & Update) !== NoFlags) {
      switch (finishedWork.tag) {
        case Profiler:
          {
            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
            var _finishedWork$memoize = finishedWork.memoizedProps,
                id = _finishedWork$memoize.id,
                onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
            // It does not get reset until the start of the next commit phase.

            var commitTime = getCommitTime();
            var phase = finishedWork.alternate === null ? 'mount' : 'update';

            {
              if (isCurrentUpdateNested()) {
                phase = 'nested-update';
              }
            }

            if (typeof onPostCommit === 'function') {
              onPostCommit(id, phase, passiveEffectDuration, commitTime);
            } // Bubble times to the next nearest ancestor Profiler.
            // After we process that Profiler, we'll bubble further up.


            var parentFiber = finishedWork.return;

            outer: while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root = parentFiber.stateNode;
                  root.passiveEffectDuration += passiveEffectDuration;
                  break outer;

                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  parentStateNode.passiveEffectDuration += passiveEffectDuration;
                  break outer;
              }

              parentFiber = parentFiber.return;
            }

            break;
          }
      }
    }
  }
}

function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
  if ((finishedWork.flags & LayoutMask) !== NoFlags) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          if ( !offscreenSubtreeWasHidden) {
            // At this point layout effects have already been destroyed (during mutation phase).
            // This is done to prevent sibling component effects from interfering with each other,
            // e.g. a destroy function in one component should never override a ref set
            // by a create function in another component during the same commit.
            if ( finishedWork.mode & ProfileMode) {
              try {
                startLayoutEffectTimer();
                commitHookEffectListMount(Layout | HasEffect, finishedWork);
              } finally {
                recordLayoutEffectDuration(finishedWork);
              }
            } else {
              commitHookEffectListMount(Layout | HasEffect, finishedWork);
            }
          }

          break;
        }

      case ClassComponent:
        {
          var instance = finishedWork.stateNode;

          if (finishedWork.flags & Update) {
            if (!offscreenSubtreeWasHidden) {
              if (current === null) {
                // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.
                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                  }
                }

                if ( finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    instance.componentDidMount();
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                } else {
                  instance.componentDidMount();
                }
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                var prevState = current.memoizedState; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                  }
                }

                if ( finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                } else {
                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                }
              }
            }
          } // TODO: I think this is now always non-null by the time it reaches the
          // commit phase. Consider removing the type check.


          var updateQueue = finishedWork.updateQueue;

          if (updateQueue !== null) {
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                if (instance.props !== finishedWork.memoizedProps) {
                  error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }

                if (instance.state !== finishedWork.memoizedState) {
                  error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentNameFromFiber(finishedWork) || 'instance');
                }
              }
            } // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.


            commitUpdateQueue(finishedWork, updateQueue, instance);
          }

          break;
        }

      case HostRoot:
        {
          // TODO: I think this is now always non-null by the time it reaches the
          // commit phase. Consider removing the type check.
          var _updateQueue = finishedWork.updateQueue;

          if (_updateQueue !== null) {
            var _instance = null;

            if (finishedWork.child !== null) {
              switch (finishedWork.child.tag) {
                case HostComponent:
                  _instance = getPublicInstance(finishedWork.child.stateNode);
                  break;

                case ClassComponent:
                  _instance = finishedWork.child.stateNode;
                  break;
              }
            }

            commitUpdateQueue(finishedWork, _updateQueue, _instance);
          }

          break;
        }

      case HostComponent:
        {
          var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
          // (eg DOM renderer may schedule auto-focus for inputs and form controls).
          // These effects should only be committed when components are first mounted,
          // aka when there is no current/alternate.

          if (current === null && finishedWork.flags & Update) {
            var type = finishedWork.type;
            var props = finishedWork.memoizedProps;
            commitMount(_instance2, type, props);
          }

          break;
        }

      case HostText:
        {
          // We have no life-cycles associated with text.
          break;
        }

      case HostPortal:
        {
          // We have no life-cycles associated with portals.
          break;
        }

      case Profiler:
        {
          {
            var _finishedWork$memoize2 = finishedWork.memoizedProps,
                onCommit = _finishedWork$memoize2.onCommit,
                onRender = _finishedWork$memoize2.onRender;
            var effectDuration = finishedWork.stateNode.effectDuration;
            var commitTime = getCommitTime();
            var phase = current === null ? 'mount' : 'update';

            {
              if (isCurrentUpdateNested()) {
                phase = 'nested-update';
              }
            }

            if (typeof onRender === 'function') {
              onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
            }

            {
              if (typeof onCommit === 'function') {
                onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
              } // Schedule a passive effect for this Profiler to call onPostCommit hooks.
              // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
              // because the effect is also where times bubble to parent Profilers.


              enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
              // Do not reset these values until the next render so DevTools has a chance to read them first.

              var parentFiber = finishedWork.return;

              outer: while (parentFiber !== null) {
                switch (parentFiber.tag) {
                  case HostRoot:
                    var root = parentFiber.stateNode;
                    root.effectDuration += effectDuration;
                    break outer;

                  case Profiler:
                    var parentStateNode = parentFiber.stateNode;
                    parentStateNode.effectDuration += effectDuration;
                    break outer;
                }

                parentFiber = parentFiber.return;
              }
            }
          }

          break;
        }

      case SuspenseComponent:
        {
          commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
          break;
        }

      case SuspenseListComponent:
      case IncompleteClassComponent:
      case ScopeComponent:
      case OffscreenComponent:
      case LegacyHiddenComponent:
      case TracingMarkerComponent:
        {
          break;
        }

      default:
        throw new Error('This unit of work tag should not have side-effects. This error is ' + 'likely caused by a bug in React. Please file an issue.');
    }
  }

  if ( !offscreenSubtreeWasHidden) {
    {
      if (finishedWork.flags & Ref) {
        commitAttachRef(finishedWork);
      }
    }
  }
}

function reappearLayoutEffectsOnFiber(node) {
  // Turn on layout effects in a tree that previously disappeared.
  // TODO (Offscreen) Check: flags & LayoutStatic
  switch (node.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( node.mode & ProfileMode) {
          try {
            startLayoutEffectTimer();
            safelyCallCommitHookLayoutEffectListMount(node, node.return);
          } finally {
            recordLayoutEffectDuration(node);
          }
        } else {
          safelyCallCommitHookLayoutEffectListMount(node, node.return);
        }

        break;
      }

    case ClassComponent:
      {
        var instance = node.stateNode;

        if (typeof instance.componentDidMount === 'function') {
          safelyCallComponentDidMount(node, node.return, instance);
        }

        safelyAttachRef(node, node.return);
        break;
      }

    case HostComponent:
      {
        safelyAttachRef(node, node.return);
        break;
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  // Only hide or unhide the top-most host nodes.
  var hostSubtreeRoot = null;

  {
    // We only have the top Fiber that was inserted but we need to recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;

    while (true) {
      if (node.tag === HostComponent) {
        if (hostSubtreeRoot === null) {
          hostSubtreeRoot = node;

          try {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      } else if (node.tag === HostText) {
        if (hostSubtreeRoot === null) {
          try {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ; else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) {
        return;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }

        if (hostSubtreeRoot === node) {
          hostSubtreeRoot = null;
        }

        node = node.return;
      }

      if (hostSubtreeRoot === node) {
        hostSubtreeRoot = null;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;

  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse;

    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;

      default:
        instanceToUse = instance;
    } // Moved outside to ensure DCE works with this flag

    if (typeof ref === 'function') {
      var retVal;

      if ( finishedWork.mode & ProfileMode) {
        try {
          startLayoutEffectTimer();
          retVal = ref(instanceToUse);
        } finally {
          recordLayoutEffectDuration(finishedWork);
        }
      } else {
        retVal = ref(instanceToUse);
      }

      {
        if (typeof retVal === 'function') {
          error('Unexpected return value from a callback ref in %s. ' + 'A callback ref should not return a function.', getComponentNameFromFiber(finishedWork));
        }
      }
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentNameFromFiber(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function detachFiberMutation(fiber) {
  // Cut off the return pointer to disconnect it from the tree.
  // This enables us to detect and warn against state updates on an unmounted component.
  // It also prevents events from bubbling from within disconnected components.
  //
  // Ideally, we should also clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child.
  // This child itself will be GC:ed when the parent updates the next time.
  //
  // Note that we can't clear child or sibling pointers yet.
  // They're needed for passive effects and for findDOMNode.
  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
  //
  // Don't reset the alternate yet, either. We need that so we can detach the
  // alternate's fields in the passive phase. Clearing the return pointer is
  // sufficient for findDOMNode semantics.
  var alternate = fiber.alternate;

  if (alternate !== null) {
    alternate.return = null;
  }

  fiber.return = null;
}

function detachFiberAfterEffects(fiber) {
  var alternate = fiber.alternate;

  if (alternate !== null) {
    fiber.alternate = null;
    detachFiberAfterEffects(alternate);
  } // Note: Defensively using negation instead of < in case
  // `deletedTreeCleanUpLevel` is undefined.


  {
    // Clear cyclical Fiber fields. This level alone is designed to roughly
    // approximate the planned Fiber refactor. In that world, `setState` will be
    // bound to a special "instance" object instead of a Fiber. The Instance
    // object will not have any of these fields. It will only be connected to
    // the fiber tree via a single link at the root. So if this level alone is
    // sufficient to fix memory issues, that bodes well for our plans.
    fiber.child = null;
    fiber.deletions = null;
    fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
    // tree, which has its own pointers to children, parents, and siblings.
    // The other host nodes also point back to fibers, so we should detach that
    // one, too.

    if (fiber.tag === HostComponent) {
      var hostInstance = fiber.stateNode;

      if (hostInstance !== null) {
        detachDeletedInstance(hostInstance);
      }
    }

    fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
    // already disconnect the `return` pointer at the root of the deleted
    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not
    // cyclical — it's only cyclical when combined with `child`, `sibling`, and
    // `alternate`. But we'll clear it in the next level anyway, just in case.

    {
      fiber._debugOwner = null;
    }

    {
      // Theoretically, nothing in here should be necessary, because we already
      // disconnected the fiber from the tree. So even if something leaks this
      // particular fiber, it won't leak anything else
      //
      // The purpose of this branch is to be super aggressive so we can measure
      // if there's any difference in memory impact. If there is, that could
      // indicate a React leak we don't know about.
      fiber.return = null;
      fiber.dependencies = null;
      fiber.memoizedProps = null;
      fiber.memoizedState = null;
      fiber.pendingProps = null;
      fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.

      fiber.updateQueue = null;
    }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;

  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }

    parent = parent.return;
  }

  throw new Error('Expected to find a host parent. This error is likely caused by a bug ' + 'in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  // TODO: Find a more efficient way to do this.
  var node = fiber;

  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;

    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.flags & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      } // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.


      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    } // Check if this host node is stable or about to be placed.


    if (!(node.flags & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {


  var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

  switch (parentFiber.tag) {
    case HostComponent:
      {
        var parent = parentFiber.stateNode;

        if (parentFiber.flags & ContentReset) {
          // Reset the text content of the parent before doing any insertions
          resetTextContent(parent); // Clear ContentReset from the effect tag

          parentFiber.flags &= ~ContentReset;
        }

        var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.

        insertOrAppendPlacementNode(finishedWork, before, parent);
        break;
      }

    case HostRoot:
    case HostPortal:
      {
        var _parent = parentFiber.stateNode.containerInfo;

        var _before = getHostSibling(finishedWork);

        insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
        break;
      }
    // eslint-disable-next-line-no-fallthrough

    default:
      throw new Error('Invalid host parent fiber. This error is likely caused by a bug ' + 'in React. Please file an issue.');
  }
}

function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost) {
    var stateNode = node.stateNode;

    if (before) {
      insertInContainerBefore(parent, stateNode, before);
    } else {
      appendChildToContainer(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNodeIntoContainer(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
}

function insertOrAppendPlacementNode(node, before, parent) {
  var tag = node.tag;
  var isHost = tag === HostComponent || tag === HostText;

  if (isHost) {
    var stateNode = node.stateNode;

    if (before) {
      insertBefore(parent, stateNode, before);
    } else {
      appendChild(parent, stateNode);
    }
  } else if (tag === HostPortal) ; else {
    var child = node.child;

    if (child !== null) {
      insertOrAppendPlacementNode(child, before, parent);
      var sibling = child.sibling;

      while (sibling !== null) {
        insertOrAppendPlacementNode(sibling, before, parent);
        sibling = sibling.sibling;
      }
    }
  }
} // These are tracked on the stack as we recursively traverse a
// deleted subtree.
// TODO: Update these during the whole mutation phase, not just during
// a deletion.


var hostParent = null;
var hostParentIsContainer = false;

function commitDeletionEffects(root, returnFiber, deletedFiber) {
  {
    // We only have the top Fiber that was deleted but we need to recurse down its
    // children to find all the terminal nodes.
    // Recursively delete all host nodes from the parent, detach refs, clean
    // up mounted layout effects, and call componentWillUnmount.
    // We only need to remove the topmost host child in each branch. But then we
    // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
    // could split this into two separate traversals functions, where the second
    // one doesn't include any removeChild logic. This is maybe the same
    // function as "disappearLayoutEffects" (or whatever that turns into after
    // the layout phase is refactored to use recursion).
    // Before starting, find the nearest host parent on the stack so we know
    // which instance/container to remove the children from.
    // TODO: Instead of searching up the fiber return path on every deletion, we
    // can track the nearest host component on the JS stack as we traverse the
    // tree during the commit phase. This would make insertions faster, too.
    var parent = returnFiber;

    findParent: while (parent !== null) {
      switch (parent.tag) {
        case HostComponent:
          {
            hostParent = parent.stateNode;
            hostParentIsContainer = false;
            break findParent;
          }

        case HostRoot:
          {
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break findParent;
          }

        case HostPortal:
          {
            hostParent = parent.stateNode.containerInfo;
            hostParentIsContainer = true;
            break findParent;
          }
      }

      parent = parent.return;
    }

    if (hostParent === null) {
      throw new Error('Expected to find a host parent. This error is likely caused by ' + 'a bug in React. Please file an issue.');
    }

    commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
    hostParent = null;
    hostParentIsContainer = false;
  }

  detachFiberMutation(deletedFiber);
}

function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
  // TODO: Use a static flag to skip trees that don't have unmount effects
  var child = parent.child;

  while (child !== null) {
    commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
    child = child.sibling;
  }
}

function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
  onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
  // into their subtree. There are simpler cases in the inner switch
  // that don't modify the stack.

  switch (deletedFiber.tag) {
    case HostComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          safelyDetachRef(deletedFiber, nearestMountedAncestor);
        } // Intentional fallthrough to next branch

      }
    // eslint-disable-next-line-no-fallthrough

    case HostText:
      {
        // We only need to remove the nearest host child. Set the host parent
        // to `null` on the stack to indicate that nested children don't
        // need to be removed.
        {
          var prevHostParent = hostParent;
          var prevHostParentIsContainer = hostParentIsContainer;
          hostParent = null;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          hostParent = prevHostParent;
          hostParentIsContainer = prevHostParentIsContainer;

          if (hostParent !== null) {
            // Now that all the child effects have unmounted, we can remove the
            // node from the tree.
            if (hostParentIsContainer) {
              removeChildFromContainer(hostParent, deletedFiber.stateNode);
            } else {
              removeChild(hostParent, deletedFiber.stateNode);
            }
          }
        }

        return;
      }

    case DehydratedFragment:
      {
        // Delete the dehydrated suspense boundary and all of its content.


        {
          if (hostParent !== null) {
            if (hostParentIsContainer) {
              clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
            } else {
              clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
            }
          }
        }

        return;
      }

    case HostPortal:
      {
        {
          // When we go into a portal, it becomes the parent to remove from.
          var _prevHostParent = hostParent;
          var _prevHostParentIsContainer = hostParentIsContainer;
          hostParent = deletedFiber.stateNode.containerInfo;
          hostParentIsContainer = true;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          hostParent = _prevHostParent;
          hostParentIsContainer = _prevHostParentIsContainer;
        }

        return;
      }

    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          var updateQueue = deletedFiber.updateQueue;

          if (updateQueue !== null) {
            var lastEffect = updateQueue.lastEffect;

            if (lastEffect !== null) {
              var firstEffect = lastEffect.next;
              var effect = firstEffect;

              do {
                var _effect = effect,
                    destroy = _effect.destroy,
                    tag = _effect.tag;

                if (destroy !== undefined) {
                  if ((tag & Insertion) !== NoFlags$1) {
                    safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                  } else if ((tag & Layout) !== NoFlags$1) {
                    {
                      markComponentLayoutEffectUnmountStarted(deletedFiber);
                    }

                    if ( deletedFiber.mode & ProfileMode) {
                      startLayoutEffectTimer();
                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                      recordLayoutEffectDuration(deletedFiber);
                    } else {
                      safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                    }

                    {
                      markComponentLayoutEffectUnmountStopped();
                    }
                  }
                }

                effect = effect.next;
              } while (effect !== firstEffect);
            }
          }
        }

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case ClassComponent:
      {
        if (!offscreenSubtreeWasHidden) {
          safelyDetachRef(deletedFiber, nearestMountedAncestor);
          var instance = deletedFiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
          }
        }

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case ScopeComponent:
      {

        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }

    case OffscreenComponent:
      {
        if ( // TODO: Remove this dead flag
         deletedFiber.mode & ConcurrentMode) {
          // If this offscreen component is hidden, we already unmounted it. Before
          // deleting the children, track that it's already unmounted so that we
          // don't attempt to unmount the effects again.
          // TODO: If the tree is hidden, in most cases we should be able to skip
          // over the nested children entirely. An exception is we haven't yet found
          // the topmost host node to delete, which we already track on the stack.
          // But the other case is portals, which need to be detached no matter how
          // deeply they are nested. We should use a subtree flag to track whether a
          // subtree includes a nested portal.
          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        } else {
          recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        }

        break;
      }

    default:
      {
        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
        return;
      }
  }
}

function commitSuspenseCallback(finishedWork) {
  // TODO: Move this to passive phase
  var newState = finishedWork.memoizedState;
}

function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {

  var newState = finishedWork.memoizedState;

  if (newState === null) {
    var current = finishedWork.alternate;

    if (current !== null) {
      var prevState = current.memoizedState;

      if (prevState !== null) {
        var suspenseInstance = prevState.dehydrated;

        if (suspenseInstance !== null) {
          commitHydratedSuspenseInstance(suspenseInstance);
        }
      }
    }
  }
}

function attachSuspenseRetryListeners(finishedWork) {
  // If this boundary just timed out, then it will have a set of wakeables.
  // For each wakeable, attach a listener so that when it resolves, React
  // attempts to re-render the boundary in the primary (pre-timeout) state.
  var wakeables = finishedWork.updateQueue;

  if (wakeables !== null) {
    finishedWork.updateQueue = null;
    var retryCache = finishedWork.stateNode;

    if (retryCache === null) {
      retryCache = finishedWork.stateNode = new PossiblyWeakSet();
    }

    wakeables.forEach(function (wakeable) {
      // Memoize using the boundary fiber to prevent redundant listeners.
      var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);

      if (!retryCache.has(wakeable)) {
        retryCache.add(wakeable);

        {
          if (isDevToolsPresent) {
            if (inProgressLanes !== null && inProgressRoot !== null) {
              // If we have pending work still, associate the original updaters with it.
              restorePendingUpdaters(inProgressRoot, inProgressLanes);
            } else {
              throw Error('Expected finished root and lanes to be set. This is a bug in React.');
            }
          }
        }

        wakeable.then(retry, retry);
      }
    });
  }
} // This function detects when a Suspense boundary goes from visible to hidden.
function commitMutationEffects(root, finishedWork, committedLanes) {
  inProgressLanes = committedLanes;
  inProgressRoot = root;
  setCurrentFiber(finishedWork);
  commitMutationEffectsOnFiber(finishedWork, root);
  setCurrentFiber(finishedWork);
  inProgressLanes = null;
  inProgressRoot = null;
}

function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
  // Deletions effects can be scheduled on any fiber type. They need to happen
  // before the children effects hae fired.
  var deletions = parentFiber.deletions;

  if (deletions !== null) {
    for (var i = 0; i < deletions.length; i++) {
      var childToDelete = deletions[i];

      try {
        commitDeletionEffects(root, parentFiber, childToDelete);
      } catch (error) {
        captureCommitPhaseError(childToDelete, parentFiber, error);
      }
    }
  }

  var prevDebugFiber = getCurrentFiber();

  if (parentFiber.subtreeFlags & MutationMask) {
    var child = parentFiber.child;

    while (child !== null) {
      setCurrentFiber(child);
      commitMutationEffectsOnFiber(child, root);
      child = child.sibling;
    }
  }

  setCurrentFiber(prevDebugFiber);
}

function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
  var current = finishedWork.alternate;
  var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
  // because the fiber tag is more specific. An exception is any flag related
  // to reconcilation, because those can be set on all fiber types.

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          try {
            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
            commitHookEffectListMount(Insertion | HasEffect, finishedWork);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          } // Layout effects are destroyed during the mutation phase so that all
          // destroy functions for all fibers are called before any create functions.
          // This prevents sibling component effects from interfering with each other,
          // e.g. a destroy function in one component should never override a ref set
          // by a create function in another component during the same commit.


          if ( finishedWork.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }

            recordLayoutEffectDuration(finishedWork);
          } else {
            try {
              commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
        }

        return;
      }

    case ClassComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Ref) {
          if (current !== null) {
            safelyDetachRef(current, current.return);
          }
        }

        return;
      }

    case HostComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Ref) {
          if (current !== null) {
            safelyDetachRef(current, current.return);
          }
        }

        {
          // TODO: ContentReset gets cleared by the children during the commit
          // phase. This is a refactor hazard because it means we must read
          // flags the flags after `commitReconciliationEffects` has already run;
          // the order matters. We should refactor so that ContentReset does not
          // rely on mutating the flag during commit. Like by setting a flag
          // during the render phase instead.
          if (finishedWork.flags & ContentReset) {
            var instance = finishedWork.stateNode;

            try {
              resetTextContent(instance);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }

          if (flags & Update) {
            var _instance4 = finishedWork.stateNode;

            if (_instance4 != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current !== null ? current.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                try {
                  commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                } catch (error) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
              }
            }
          }
        }

        return;
      }

    case HostText:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          {
            if (finishedWork.stateNode === null) {
              throw new Error('This should have a text node initialized. This error is likely ' + 'caused by a bug in React. Please file an issue.');
            }

            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current !== null ? current.memoizedProps : newText;

            try {
              commitTextUpdate(textInstance, oldText, newText);
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
        }

        return;
      }

    case HostRoot:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          {
            if (current !== null) {
              var prevRootState = current.memoizedState;

              if (prevRootState.isDehydrated) {
                try {
                  commitHydratedContainer(root.containerInfo);
                } catch (error) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
              }
            }
          }
        }

        return;
      }

    case HostPortal:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        return;
      }

    case SuspenseComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        var offscreenFiber = finishedWork.child;

        if (offscreenFiber.flags & Visibility) {
          var offscreenInstance = offscreenFiber.stateNode;
          var newState = offscreenFiber.memoizedState;
          var isHidden = newState !== null; // Track the current state on the Offscreen instance so we can
          // read it during an event

          offscreenInstance.isHidden = isHidden;

          if (isHidden) {
            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;

            if (!wasHidden) {
              // TODO: Move to passive phase
              markCommitTimeOfFallback();
            }
          }
        }

        if (flags & Update) {
          try {
            commitSuspenseCallback(finishedWork);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }

          attachSuspenseRetryListeners(finishedWork);
        }

        return;
      }

    case OffscreenComponent:
      {
        var _wasHidden = current !== null && current.memoizedState !== null;

        if ( // TODO: Remove this dead flag
         finishedWork.mode & ConcurrentMode) {
          // Before committing the children, track on the stack whether this
          // offscreen subtree was already hidden, so that we don't unmount the
          // effects again.
          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
          recursivelyTraverseMutationEffects(root, finishedWork);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        } else {
          recursivelyTraverseMutationEffects(root, finishedWork);
        }

        commitReconciliationEffects(finishedWork);

        if (flags & Visibility) {
          var _offscreenInstance = finishedWork.stateNode;
          var _newState = finishedWork.memoizedState;

          var _isHidden = _newState !== null;

          var offscreenBoundary = finishedWork; // Track the current state on the Offscreen instance so we can
          // read it during an event

          _offscreenInstance.isHidden = _isHidden;

          {
            if (_isHidden) {
              if (!_wasHidden) {
                if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                  nextEffect = offscreenBoundary;
                  var offscreenChild = offscreenBoundary.child;

                  while (offscreenChild !== null) {
                    nextEffect = offscreenChild;
                    disappearLayoutEffects_begin(offscreenChild);
                    offscreenChild = offscreenChild.sibling;
                  }
                }
              }
            }
          }

          {
            // TODO: This needs to run whenever there's an insertion or update
            // inside a hidden Offscreen tree.
            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
          }
        }

        return;
      }

    case SuspenseListComponent:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);

        if (flags & Update) {
          attachSuspenseRetryListeners(finishedWork);
        }

        return;
      }

    case ScopeComponent:
      {

        return;
      }

    default:
      {
        recursivelyTraverseMutationEffects(root, finishedWork);
        commitReconciliationEffects(finishedWork);
        return;
      }
  }
}

function commitReconciliationEffects(finishedWork) {
  // Placement effects (insertions, reorders) can be scheduled on any fiber
  // type. They needs to happen after the children effects have fired, but
  // before the effects on this fiber have fired.
  var flags = finishedWork.flags;

  if (flags & Placement) {
    try {
      commitPlacement(finishedWork);
    } catch (error) {
      captureCommitPhaseError(finishedWork, finishedWork.return, error);
    } // Clear the "placement" from effect tag so that we know that this is
    // inserted, before any life-cycles like componentDidMount gets called.
    // TODO: findDOMNode doesn't rely on this any more but isMounted does
    // and isMounted is deprecated anyway so we should be able to kill this.


    finishedWork.flags &= ~Placement;
  }

  if (flags & Hydrating) {
    finishedWork.flags &= ~Hydrating;
  }
}

function commitLayoutEffects(finishedWork, root, committedLanes) {
  inProgressLanes = committedLanes;
  inProgressRoot = root;
  nextEffect = finishedWork;
  commitLayoutEffects_begin(finishedWork, root, committedLanes);
  inProgressLanes = null;
  inProgressRoot = null;
}

function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
  // Suspense layout effects semantics don't change for legacy roots.
  var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;

  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if ( fiber.tag === OffscreenComponent && isModernRoot) {
      // Keep track of the current Offscreen stack's state.
      var isHidden = fiber.memoizedState !== null;
      var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;

      if (newOffscreenSubtreeIsHidden) {
        // The Offscreen tree is hidden. Skip over its layout effects.
        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        continue;
      } else {
        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
        var current = fiber.alternate;
        var wasHidden = current !== null && current.memoizedState !== null;
        var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.

        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;

        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
          // This is the root of a reappearing boundary. Turn its layout effects
          // back on.
          nextEffect = fiber;
          reappearLayoutEffects_begin(fiber);
        }

        var child = firstChild;

        while (child !== null) {
          nextEffect = child;
          commitLayoutEffects_begin(child, // New root; bubble back up to here and stop.
          root, committedLanes);
          child = child.sibling;
        } // Restore Offscreen state and resume in our-progress traversal.


        nextEffect = fiber;
        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        continue;
      }
    }

    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
    }
  }
}

function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & LayoutMask) !== NoFlags) {
      var current = fiber.alternate;
      setCurrentFiber(fiber);

      try {
        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
      } catch (error) {
        captureCommitPhaseError(fiber, fiber.return, error);
      }

      resetCurrentFiber();
    }

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function disappearLayoutEffects_begin(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)

    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ( fiber.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              commitHookEffectListUnmount(Layout, fiber, fiber.return);
            } finally {
              recordLayoutEffectDuration(fiber);
            }
          } else {
            commitHookEffectListUnmount(Layout, fiber, fiber.return);
          }

          break;
        }

      case ClassComponent:
        {
          // TODO (Offscreen) Check: flags & RefStatic
          safelyDetachRef(fiber, fiber.return);
          var instance = fiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(fiber, fiber.return, instance);
          }

          break;
        }

      case HostComponent:
        {
          safelyDetachRef(fiber, fiber.return);
          break;
        }

      case OffscreenComponent:
        {
          // Check if this is a
          var isHidden = fiber.memoizedState !== null;

          if (isHidden) {
            // Nested Offscreen tree is already hidden. Don't disappear
            // its effects.
            disappearLayoutEffects_complete(subtreeRoot);
            continue;
          }

          break;
        }
    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic


    if (firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      disappearLayoutEffects_complete(subtreeRoot);
    }
  }
}

function disappearLayoutEffects_complete(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function reappearLayoutEffects_begin(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if (fiber.tag === OffscreenComponent) {
      var isHidden = fiber.memoizedState !== null;

      if (isHidden) {
        // Nested Offscreen tree is still hidden. Don't re-appear its effects.
        reappearLayoutEffects_complete(subtreeRoot);
        continue;
      }
    } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic


    if (firstChild !== null) {
      // This node may have been reused from a previous render, so we can't
      // assume its return pointer is correct.
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      reappearLayoutEffects_complete(subtreeRoot);
    }
  }
}

function reappearLayoutEffects_complete(subtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic

    setCurrentFiber(fiber);

    try {
      reappearLayoutEffectsOnFiber(fiber);
    } catch (error) {
      captureCommitPhaseError(fiber, fiber.return, error);
    }

    resetCurrentFiber();

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      // This node may have been reused from a previous render, so we can't
      // assume its return pointer is correct.
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
  nextEffect = finishedWork;
  commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
}

function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var firstChild = fiber.child;

    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
      firstChild.return = fiber;
      nextEffect = firstChild;
    } else {
      commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
    }
  }
}

function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & Passive) !== NoFlags) {
      setCurrentFiber(fiber);

      try {
        commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
      } catch (error) {
        captureCommitPhaseError(fiber, fiber.return, error);
      }

      resetCurrentFiber();
    }

    if (fiber === subtreeRoot) {
      nextEffect = null;
      return;
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( finishedWork.mode & ProfileMode) {
          startPassiveEffectTimer();

          try {
            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
          } finally {
            recordPassiveEffectDuration(finishedWork);
          }
        } else {
          commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
        }

        break;
      }
  }
}

function commitPassiveUnmountEffects(firstChild) {
  nextEffect = firstChild;
  commitPassiveUnmountEffects_begin();
}

function commitPassiveUnmountEffects_begin() {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var child = fiber.child;

    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
      var deletions = fiber.deletions;

      if (deletions !== null) {
        for (var i = 0; i < deletions.length; i++) {
          var fiberToDelete = deletions[i];
          nextEffect = fiberToDelete;
          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
        }

        {
          // A fiber was deleted from this parent fiber, but it's still part of
          // the previous (alternate) parent fiber's list of children. Because
          // children are a linked list, an earlier sibling that's still alive
          // will be connected to the deleted fiber via its `alternate`:
          //
          //   live fiber
          //   --alternate--> previous live fiber
          //   --sibling--> deleted fiber
          //
          // We can't disconnect `alternate` on nodes that haven't been deleted
          // yet, but we can disconnect the `sibling` and `child` pointers.
          var previousFiber = fiber.alternate;

          if (previousFiber !== null) {
            var detachedChild = previousFiber.child;

            if (detachedChild !== null) {
              previousFiber.child = null;

              do {
                var detachedSibling = detachedChild.sibling;
                detachedChild.sibling = null;
                detachedChild = detachedSibling;
              } while (detachedChild !== null);
            }
          }
        }

        nextEffect = fiber;
      }
    }

    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitPassiveUnmountEffects_complete();
    }
  }
}

function commitPassiveUnmountEffects_complete() {
  while (nextEffect !== null) {
    var fiber = nextEffect;

    if ((fiber.flags & Passive) !== NoFlags) {
      setCurrentFiber(fiber);
      commitPassiveUnmountOnFiber(fiber);
      resetCurrentFiber();
    }

    var sibling = fiber.sibling;

    if (sibling !== null) {
      sibling.return = fiber.return;
      nextEffect = sibling;
      return;
    }

    nextEffect = fiber.return;
  }
}

function commitPassiveUnmountOnFiber(finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( finishedWork.mode & ProfileMode) {
          startPassiveEffectTimer();
          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
          recordPassiveEffectDuration(finishedWork);
        } else {
          commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
        }

        break;
      }
  }
}

function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
  while (nextEffect !== null) {
    var fiber = nextEffect; // Deletion effects fire in parent -> child order
    // TODO: Check if fiber has a PassiveStatic flag

    setCurrentFiber(fiber);
    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
    resetCurrentFiber();
    var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)

    if (child !== null) {
      child.return = fiber;
      nextEffect = child;
    } else {
      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
    }
  }
}

function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
  while (nextEffect !== null) {
    var fiber = nextEffect;
    var sibling = fiber.sibling;
    var returnFiber = fiber.return;

    {
      // Recursively traverse the entire deleted tree and clean up fiber fields.
      // This is more aggressive than ideal, and the long term goal is to only
      // have to detach the deleted tree at the root.
      detachFiberAfterEffects(fiber);

      if (fiber === deletedSubtreeRoot) {
        nextEffect = null;
        return;
      }
    }

    if (sibling !== null) {
      sibling.return = returnFiber;
      nextEffect = sibling;
      return;
    }

    nextEffect = returnFiber;
  }
}

function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
  switch (current.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        if ( current.mode & ProfileMode) {
          startPassiveEffectTimer();
          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
          recordPassiveEffectDuration(current);
        } else {
          commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
        }

        break;
      }
  }
} // TODO: Reuse reappearLayoutEffects traversal here?


function invokeLayoutEffectMountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListMount(Layout | HasEffect, fiber);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }

      case ClassComponent:
        {
          var instance = fiber.stateNode;

          try {
            instance.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }
    }
  }
}

function invokePassiveEffectMountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListMount(Passive$1 | HasEffect, fiber);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }
    }
  }
}

function invokeLayoutEffectUnmountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }

          break;
        }

      case ClassComponent:
        {
          var instance = fiber.stateNode;

          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(fiber, fiber.return, instance);
          }

          break;
        }
    }
  }
}

function invokePassiveEffectUnmountInDEV(fiber) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    switch (fiber.tag) {
      case FunctionComponent:
      case ForwardRef:
      case SimpleMemoComponent:
        {
          try {
            commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
          } catch (error) {
            captureCommitPhaseError(fiber, fiber.return, error);
          }
        }
    }
  }
}

var COMPONENT_TYPE = 0;
var HAS_PSEUDO_CLASS_TYPE = 1;
var ROLE_TYPE = 2;
var TEST_NAME_TYPE = 3;
var TEXT_TYPE = 4;

if (typeof Symbol === 'function' && Symbol.for) {
  var symbolFor = Symbol.for;
  COMPONENT_TYPE = symbolFor('selector.component');
  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');
  ROLE_TYPE = symbolFor('selector.role');
  TEST_NAME_TYPE = symbolFor('selector.test_id');
  TEXT_TYPE = symbolFor('selector.text');
}
var commitHooks = [];
function onCommitRoot$1() {
  {
    commitHooks.forEach(function (commitHook) {
      return commitHook();
    });
  }
}

var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
function isLegacyActEnvironment(fiber) {
  {
    // Legacy mode. We preserve the behavior of React 17's act. It assumes an
    // act environment whenever `jest` is defined, but you can still turn off
    // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
    // to false.
    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest

    var jestIsDefined = typeof jest !== 'undefined';
    return  jestIsDefined && isReactActEnvironmentGlobal !== false;
  }
}
function isConcurrentActEnvironment() {
  {
    var isReactActEnvironmentGlobal = // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
    typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;

    if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
      // TODO: Include link to relevant documentation page.
      error('The current testing environment is not configured to support ' + 'act(...)');
    }

    return isReactActEnvironmentGlobal;
  }
}

var ceil = Math.ceil;
var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,
    ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
    ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig,
    ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
var NoContext =
/*             */
0;
var BatchedContext =
/*               */
1;
var RenderContext =
/*                */
2;
var CommitContext =
/*                */
4;
var RootInProgress = 0;
var RootFatalErrored = 1;
var RootErrored = 2;
var RootSuspended = 3;
var RootSuspendedWithDelay = 4;
var RootCompleted = 5;
var RootDidNotComplete = 6; // Describes where we are in the React execution stack

var executionContext = NoContext; // The root we're working on

var workInProgressRoot = null; // The fiber we're working on

var workInProgress = null; // The lanes we're rendering

var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
// This is a superset of the lanes we started working on at the root. The only
// case where it's different from `workInProgressRootRenderLanes` is when we
// enter a subtree that is hidden and needs to be unhidden: Suspense and
// Offscreen component.
//
// Most things in the work loop should deal with workInProgressRootRenderLanes.
// Most things in begin/complete phases should deal with subtreeRenderLanes.

var subtreeRenderLanes = NoLanes;
var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.

var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown

var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
// slightly different than `renderLanes` because `renderLanes` can change as you
// enter and exit an Offscreen tree. This value is the combination of all render
// lanes for the entire render phase.

var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
// includes unprocessed updates, not work in bailed out children.

var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.

var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).

var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.

var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
// We will log them once the tree commits.

var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
// model where we don't commit new loading states in too quick succession.

var globalMostRecentFallbackTime = 0;
var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
// more and prefer CPU suspense heuristics instead.

var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
// suspense heuristics and opt out of rendering more content.

var RENDER_TIMEOUT_MS = 500;
var workInProgressTransitions = null;

function resetRenderTimer() {
  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
}

function getRenderTargetTime() {
  return workInProgressRootRenderTargetTime;
}
var hasUncaughtError = false;
var firstUncaughtError = null;
var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
var rootDoesHavePassiveEffects = false;
var rootWithPendingPassiveEffects = null;
var pendingPassiveEffectsLanes = NoLanes;
var pendingPassiveProfilerEffects = [];
var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates

var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var rootWithNestedUpdates = null;
var isFlushingPassiveEffects = false;
var didScheduleUpdateDuringPassiveEffects = false;
var NESTED_PASSIVE_UPDATE_LIMIT = 50;
var nestedPassiveUpdateCount = 0;
var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
// event times as simultaneous, even if the actual clock time has advanced
// between the first and second call.

var currentEventTime = NoTimestamp;
var currentEventTransitionLane = NoLanes;
var isRunningInsertionEffect = false;
function getWorkInProgressRoot() {
  return workInProgressRoot;
}
function requestEventTime() {
  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    // We're inside React, so it's fine to read the actual time.
    return now();
  } // We're not inside React, so we may be in the middle of a browser event.


  if (currentEventTime !== NoTimestamp) {
    // Use the same start time for all updates until we enter React again.
    return currentEventTime;
  } // This is the first update since React yielded. Compute a new start time.


  currentEventTime = now();
  return currentEventTime;
}
function requestUpdateLane(fiber) {
  // Special cases
  var mode = fiber.mode;

  if ((mode & ConcurrentMode) === NoMode) {
    return SyncLane;
  } else if ( (executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
    // This is a render phase update. These are not officially supported. The
    // old behavior is to give this the same "thread" (lanes) as
    // whatever is currently rendering. So if you call `setState` on a component
    // that happens later in the same render, it will flush. Ideally, we want to
    // remove the special case and treat them as if they came from an
    // interleaved event. Regardless, this pattern is not officially supported.
    // This behavior is only a fallback. The flag only exists until we can roll
    // out the setState warning, since existing code might accidentally rely on
    // the current behavior.
    return pickArbitraryLane(workInProgressRootRenderLanes);
  }

  var isTransition = requestCurrentTransition() !== NoTransition;

  if (isTransition) {
    if ( ReactCurrentBatchConfig$3.transition !== null) {
      var transition = ReactCurrentBatchConfig$3.transition;

      if (!transition._updatedFibers) {
        transition._updatedFibers = new Set();
      }

      transition._updatedFibers.add(fiber);
    } // The algorithm for assigning an update to a lane should be stable for all
    // updates at the same priority within the same event. To do this, the
    // inputs to the algorithm must be the same.
    //
    // The trick we use is to cache the first of each of these inputs within an
    // event. Then reset the cached values once we can be sure the event is
    // over. Our heuristic for that is whenever we enter a concurrent work loop.


    if (currentEventTransitionLane === NoLane) {
      // All transitions within the same event are assigned the same lane.
      currentEventTransitionLane = claimNextTransitionLane();
    }

    return currentEventTransitionLane;
  } // Updates originating inside certain React methods, like flushSync, have
  // their priority set by tracking it with a context variable.
  //
  // The opaque type returned by the host config is internally a lane, so we can
  // use that directly.
  // TODO: Move this type conversion to the event priority module.


  var updateLane = getCurrentUpdatePriority();

  if (updateLane !== NoLane) {
    return updateLane;
  } // This update originated outside React. Ask the host environment for an
  // appropriate priority, based on the type of event.
  //
  // The opaque type returned by the host config is internally a lane, so we can
  // use that directly.
  // TODO: Move this type conversion to the event priority module.


  var eventLane = getCurrentEventPriority();
  return eventLane;
}

function requestRetryLane(fiber) {
  // This is a fork of `requestUpdateLane` designed specifically for Suspense
  // "retries" — a special update that attempts to flip a Suspense boundary
  // from its placeholder state to its primary/resolved state.
  // Special cases
  var mode = fiber.mode;

  if ((mode & ConcurrentMode) === NoMode) {
    return SyncLane;
  }

  return claimNextRetryLane();
}

function scheduleUpdateOnFiber(root, fiber, lane, eventTime) {
  checkForNestedUpdates();

  {
    if (isRunningInsertionEffect) {
      error('useInsertionEffect must not schedule updates.');
    }
  }

  {
    if (isFlushingPassiveEffects) {
      didScheduleUpdateDuringPassiveEffects = true;
    }
  } // Mark that the root has a pending update.


  markRootUpdated(root, lane, eventTime);

  if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) {
    // This update was dispatched during the render phase. This is a mistake
    // if the update originates from user space (with the exception of local
    // hook updates, which are handled differently and don't reach this
    // function), but there are some internal React features that use this as
    // an implementation detail, like selective hydration.
    warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
  } else {
    // This is a normal update, scheduled from outside the render phase. For
    // example, during an input event.
    {
      if (isDevToolsPresent) {
        addFiberToLanesMap(root, fiber, lane);
      }
    }

    warnIfUpdatesNotWrappedWithActDEV(fiber);

    if (root === workInProgressRoot) {
      // Received an update to a tree that's in the middle of rendering. Mark
      // that there was an interleaved update work on this root. Unless the
      // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
      // phase update. In that case, we don't treat render phase updates as if
      // they were interleaved, for backwards compat reasons.
      if ( (executionContext & RenderContext) === NoContext) {
        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
      }

      if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
        // The root already suspended with a delay, which means this render
        // definitely won't finish. Since we have a new update, let's mark it as
        // suspended now, right before marking the incoming update. This has the
        // effect of interrupting the current render and switching to the update.
        // TODO: Make sure this doesn't override pings that happen while we've
        // already started rendering.
        markRootSuspended$1(root, workInProgressRootRenderLanes);
      }
    }

    ensureRootIsScheduled(root, eventTime);

    if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
    !( ReactCurrentActQueue$1.isBatchingLegacy)) {
      // Flush the synchronous work now, unless we're already working or inside
      // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
      // scheduleCallbackForFiber to preserve the ability to schedule a callback
      // without immediately flushing it. We only do this for user-initiated
      // updates, to preserve historical behavior of legacy mode.
      resetRenderTimer();
      flushSyncCallbacksOnlyInLegacyMode();
    }
  }
}
function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
  // This is a special fork of scheduleUpdateOnFiber that is only used to
  // schedule the initial hydration of a root that has just been created. Most
  // of the stuff in scheduleUpdateOnFiber can be skipped.
  //
  // The main reason for this separate path, though, is to distinguish the
  // initial children from subsequent updates. In fully client-rendered roots
  // (createRoot instead of hydrateRoot), all top-level renders are modeled as
  // updates, but hydration roots are special because the initial render must
  // match what was rendered on the server.
  var current = root.current;
  current.lanes = lane;
  markRootUpdated(root, lane, eventTime);
  ensureRootIsScheduled(root, eventTime);
}
function isUnsafeClassRenderPhaseUpdate(fiber) {
  // Check if this is a render phase update. Only called by class components,
  // which special (deprecated) behavior for UNSAFE_componentWillReceive props.
  return (// TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
    // decided not to enable it.
     (executionContext & RenderContext) !== NoContext
  );
} // Use this function to schedule a task for a root. There's only one task per
// root; if a task was already scheduled, we'll check to make sure the priority
// of the existing task is the same as the priority of the next level that the
// root has work on. This function is called on every update, and right before
// exiting a task.

function ensureRootIsScheduled(root, currentTime) {
  var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
  // expired so we know to work on those next.

  markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.

  var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (nextLanes === NoLanes) {
    // Special case: There's nothing to work on.
    if (existingCallbackNode !== null) {
      cancelCallback$1(existingCallbackNode);
    }

    root.callbackNode = null;
    root.callbackPriority = NoLane;
    return;
  } // We use the highest priority lane to represent the priority of the callback.


  var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.

  var existingCallbackPriority = root.callbackPriority;

  if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
  // Scheduler task, rather than an `act` task, cancel it and re-scheduled
  // on the `act` queue.
  !( ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
    {
      // If we're going to re-use an existing task, it needs to exist.
      // Assume that discrete update microtasks are non-cancellable and null.
      // TODO: Temporary until we confirm this warning is not fired.
      if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
        error('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');
      }
    } // The priority hasn't changed. We can reuse the existing task. Exit.


    return;
  }

  if (existingCallbackNode != null) {
    // Cancel the existing callback. We'll schedule a new one below.
    cancelCallback$1(existingCallbackNode);
  } // Schedule a new callback.


  var newCallbackNode;

  if (newCallbackPriority === SyncLane) {
    // Special case: Sync React callbacks are scheduled on a special
    // internal queue
    if (root.tag === LegacyRoot) {
      if ( ReactCurrentActQueue$1.isBatchingLegacy !== null) {
        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
      }

      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
    } else {
      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
    }

    {
      // Flush the queue in a microtask.
      if ( ReactCurrentActQueue$1.current !== null) {
        // Inside `act`, use our internal `act` queue so that these get flushed
        // at the end of the current scope even when using the sync version
        // of `act`.
        ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
      } else {
        scheduleMicrotask(function () {
          // In Safari, appending an iframe forces microtasks to run.
          // https://github.com/facebook/react/issues/22459
          // We don't support running callbacks in the middle of render
          // or commit so we need to check against that.
          if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
            // Note that this would still prematurely flush the callbacks
            // if this happens outside render or commit phase (e.g. in an event).
            flushSyncCallbacks();
          }
        });
      }
    }

    newCallbackNode = null;
  } else {
    var schedulerPriorityLevel;

    switch (lanesToEventPriority(nextLanes)) {
      case DiscreteEventPriority:
        schedulerPriorityLevel = ImmediatePriority;
        break;

      case ContinuousEventPriority:
        schedulerPriorityLevel = UserBlockingPriority;
        break;

      case DefaultEventPriority:
        schedulerPriorityLevel = NormalPriority;
        break;

      case IdleEventPriority:
        schedulerPriorityLevel = IdlePriority;
        break;

      default:
        schedulerPriorityLevel = NormalPriority;
        break;
    }

    newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
  }

  root.callbackPriority = newCallbackPriority;
  root.callbackNode = newCallbackNode;
} // This is the entry point for every concurrent task, i.e. anything that
// goes through Scheduler.


function performConcurrentWorkOnRoot(root, didTimeout) {
  {
    resetNestedUpdateFlag();
  } // Since we know we're in a React event, we can clear the current
  // event time. The next update will compute a new event time.


  currentEventTime = NoTimestamp;
  currentEventTransitionLane = NoLanes;

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  } // Flush any pending passive effects before deciding which lanes to work on,
  // in case they schedule additional work.


  var originalCallbackNode = root.callbackNode;
  var didFlushPassiveEffects = flushPassiveEffects();

  if (didFlushPassiveEffects) {
    // Something in the passive effect phase may have canceled the current task.
    // Check if the task node for this root was changed.
    if (root.callbackNode !== originalCallbackNode) {
      // The current task was canceled. Exit. We don't need to call
      // `ensureRootIsScheduled` because the check above implies either that
      // there's a new task, or that there's no remaining work on this root.
      return null;
    }
  } // Determine the next lanes to work on, using the fields stored
  // on the root.


  var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

  if (lanes === NoLanes) {
    // Defensive coding. This is never expected to happen.
    return null;
  } // We disable time-slicing in some cases: if the work has been CPU-bound
  // for too long ("expired" work, to prevent starvation), or we're in
  // sync-updates-by-default mode.
  // TODO: We only check `didTimeout` defensively, to account for a Scheduler
  // bug we're still investigating. Once the bug in Scheduler is fixed,
  // we can remove this, since we track expiration ourselves.


  var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && ( !didTimeout);
  var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);

  if (exitStatus !== RootInProgress) {
    if (exitStatus === RootErrored) {
      // If something threw an error, try rendering one more time. We'll
      // render synchronously to block concurrent data mutations, and we'll
      // includes all pending updates are included. If it still fails after
      // the second attempt, we'll give up and commit the resulting tree.
      var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

      if (errorRetryLanes !== NoLanes) {
        lanes = errorRetryLanes;
        exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
      }
    }

    if (exitStatus === RootFatalErrored) {
      var fatalError = workInProgressRootFatalError;
      prepareFreshStack(root, NoLanes);
      markRootSuspended$1(root, lanes);
      ensureRootIsScheduled(root, now());
      throw fatalError;
    }

    if (exitStatus === RootDidNotComplete) {
      // The render unwound without completing the tree. This happens in special
      // cases where need to exit the current render without producing a
      // consistent tree or committing.
      //
      // This should only happen during a concurrent render, not a discrete or
      // synchronous update. We should have already checked for this when we
      // unwound the stack.
      markRootSuspended$1(root, lanes);
    } else {
      // The render completed.
      // Check if this render may have yielded to a concurrent event, and if so,
      // confirm that any newly rendered stores are consistent.
      // TODO: It's possible that even a concurrent render may never have yielded
      // to the main thread, if it was fast enough, or if it expired. We could
      // skip the consistency check in that case, too.
      var renderWasConcurrent = !includesBlockingLane(root, lanes);
      var finishedWork = root.current.alternate;

      if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
        // A store was mutated in an interleaved event. Render again,
        // synchronously, to block further mutations.
        exitStatus = renderRootSync(root, lanes); // We need to check again if something threw

        if (exitStatus === RootErrored) {
          var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

          if (_errorRetryLanes !== NoLanes) {
            lanes = _errorRetryLanes;
            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
            // concurrent events.
          }
        }

        if (exitStatus === RootFatalErrored) {
          var _fatalError = workInProgressRootFatalError;
          prepareFreshStack(root, NoLanes);
          markRootSuspended$1(root, lanes);
          ensureRootIsScheduled(root, now());
          throw _fatalError;
        }
      } // We now have a consistent tree. The next step is either to commit it,
      // or, if something suspended, wait to commit it after a timeout.


      root.finishedWork = finishedWork;
      root.finishedLanes = lanes;
      finishConcurrentRender(root, exitStatus, lanes);
    }
  }

  ensureRootIsScheduled(root, now());

  if (root.callbackNode === originalCallbackNode) {
    // The task node scheduled for this root is the same one that's
    // currently executed. Need to return a continuation.
    return performConcurrentWorkOnRoot.bind(null, root);
  }

  return null;
}

function recoverFromConcurrentError(root, errorRetryLanes) {
  // If an error occurred during hydration, discard server response and fall
  // back to client side render.
  // Before rendering again, save the errors from the previous attempt.
  var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;

  if (isRootDehydrated(root)) {
    // The shell failed to hydrate. Set a flag to force a client rendering
    // during the next attempt. To do this, we call prepareFreshStack now
    // to create the root work-in-progress fiber. This is a bit weird in terms
    // of factoring, because it relies on renderRootSync not calling
    // prepareFreshStack again in the call below, which happens because the
    // root and lanes haven't changed.
    //
    // TODO: I think what we should do is set ForceClientRender inside
    // throwException, like we do for nested Suspense boundaries. The reason
    // it's here instead is so we can switch to the synchronous work loop, too.
    // Something to consider for a future refactor.
    var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
    rootWorkInProgress.flags |= ForceClientRender;

    {
      errorHydratingContainer(root.containerInfo);
    }
  }

  var exitStatus = renderRootSync(root, errorRetryLanes);

  if (exitStatus !== RootErrored) {
    // Successfully finished rendering on retry
    // The errors from the failed first attempt have been recovered. Add
    // them to the collection of recoverable errors. We'll log them in the
    // commit phase.
    var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
    workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
    // from the first attempt, to preserve the causal sequence.

    if (errorsFromSecondAttempt !== null) {
      queueRecoverableErrors(errorsFromSecondAttempt);
    }
  }

  return exitStatus;
}

function queueRecoverableErrors(errors) {
  if (workInProgressRootRecoverableErrors === null) {
    workInProgressRootRecoverableErrors = errors;
  } else {
    workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
  }
}

function finishConcurrentRender(root, exitStatus, lanes) {
  switch (exitStatus) {
    case RootInProgress:
    case RootFatalErrored:
      {
        throw new Error('Root did not complete. This is a bug in React.');
      }
    // Flow knows about invariant, so it complains if I add a break
    // statement, but eslint doesn't know about invariant, so it complains
    // if I do. eslint-disable-next-line no-fallthrough

    case RootErrored:
      {
        // We should have already attempted to retry this tree. If we reached
        // this point, it errored again. Commit it.
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootSuspended:
      {
        markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
        // should immediately commit it or wait a bit.

        if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
        !shouldForceFlushFallbacksInDEV()) {
          // This render only included retries, no updates. Throttle committing
          // retries so that we don't show too many loading states too quickly.
          var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

          if (msUntilTimeout > 10) {
            var nextLanes = getNextLanes(root, NoLanes);

            if (nextLanes !== NoLanes) {
              // There's additional work on this root.
              break;
            }

            var suspendedLanes = root.suspendedLanes;

            if (!isSubsetOfLanes(suspendedLanes, lanes)) {
              // We should prefer to render the fallback of at the last
              // suspended level. Ping the last suspended level to try
              // rendering it again.
              // FIXME: What if the suspended lanes are Idle? Should not restart.
              var eventTime = requestEventTime();
              markRootPinged(root, suspendedLanes);
              break;
            } // The render is suspended, it hasn't timed out, and there's no
            // lower priority work to do. Instead of committing the fallback
            // immediately, wait for more data to arrive.


            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
            break;
          }
        } // The work expired. Commit immediately.


        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootSuspendedWithDelay:
      {
        markRootSuspended$1(root, lanes);

        if (includesOnlyTransitions(lanes)) {
          // This is a transition, so we should exit without committing a
          // placeholder and without scheduling a timeout. Delay indefinitely
          // until we receive more data.
          break;
        }

        if (!shouldForceFlushFallbacksInDEV()) {
          // This is not a transition, but we did trigger an avoided state.
          // Schedule a placeholder to display after a short delay, using the Just
          // Noticeable Difference.
          // TODO: Is the JND optimization worth the added complexity? If this is
          // the only reason we track the event time, then probably not.
          // Consider removing.
          var mostRecentEventTime = getMostRecentEventTime(root, lanes);
          var eventTimeMs = mostRecentEventTime;
          var timeElapsedMs = now() - eventTimeMs;

          var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.


          if (_msUntilTimeout > 10) {
            // Instead of committing the fallback immediately, wait for more data
            // to arrive.
            root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
            break;
          }
        } // Commit the placeholder.


        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    case RootCompleted:
      {
        // The work completed. Ready to commit.
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
        break;
      }

    default:
      {
        throw new Error('Unknown root exit status.');
      }
  }
}

function isRenderConsistentWithExternalStores(finishedWork) {
  // Search the rendered tree for external store reads, and check whether the
  // stores were mutated in a concurrent event. Intentionally using an iterative
  // loop instead of recursion so we can exit early.
  var node = finishedWork;

  while (true) {
    if (node.flags & StoreConsistency) {
      var updateQueue = node.updateQueue;

      if (updateQueue !== null) {
        var checks = updateQueue.stores;

        if (checks !== null) {
          for (var i = 0; i < checks.length; i++) {
            var check = checks[i];
            var getSnapshot = check.getSnapshot;
            var renderedValue = check.value;

            try {
              if (!objectIs(getSnapshot(), renderedValue)) {
                // Found an inconsistent store.
                return false;
              }
            } catch (error) {
              // If `getSnapshot` throws, return `false`. This will schedule
              // a re-render, and the error will be rethrown during render.
              return false;
            }
          }
        }
      }
    }

    var child = node.child;

    if (node.subtreeFlags & StoreConsistency && child !== null) {
      child.return = node;
      node = child;
      continue;
    }

    if (node === finishedWork) {
      return true;
    }

    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return true;
      }

      node = node.return;
    }

    node.sibling.return = node.return;
    node = node.sibling;
  } // Flow doesn't know this is unreachable, but eslint does
  // eslint-disable-next-line no-unreachable


  return true;
}

function markRootSuspended$1(root, suspendedLanes) {
  // When suspending, we should always exclude lanes that were pinged or (more
  // rarely, since we try to avoid it) updated during the render phase.
  // TODO: Lol maybe there's a better way to factor this besides this
  // obnoxiously named function :)
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
  markRootSuspended(root, suspendedLanes);
} // This is the entry point for synchronous tasks that don't go
// through Scheduler


function performSyncWorkOnRoot(root) {
  {
    syncNestedUpdateFlag();
  }

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  }

  flushPassiveEffects();
  var lanes = getNextLanes(root, NoLanes);

  if (!includesSomeLane(lanes, SyncLane)) {
    // There's no remaining sync work left.
    ensureRootIsScheduled(root, now());
    return null;
  }

  var exitStatus = renderRootSync(root, lanes);

  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
    // If something threw an error, try rendering one more time. We'll render
    // synchronously to block concurrent data mutations, and we'll includes
    // all pending updates are included. If it still fails after the second
    // attempt, we'll give up and commit the resulting tree.
    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);

    if (errorRetryLanes !== NoLanes) {
      lanes = errorRetryLanes;
      exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
    }
  }

  if (exitStatus === RootFatalErrored) {
    var fatalError = workInProgressRootFatalError;
    prepareFreshStack(root, NoLanes);
    markRootSuspended$1(root, lanes);
    ensureRootIsScheduled(root, now());
    throw fatalError;
  }

  if (exitStatus === RootDidNotComplete) {
    throw new Error('Root did not complete. This is a bug in React.');
  } // We now have a consistent tree. Because this is a sync render, we
  // will commit it even if something suspended.


  var finishedWork = root.current.alternate;
  root.finishedWork = finishedWork;
  root.finishedLanes = lanes;
  commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
  // pending level.

  ensureRootIsScheduled(root, now());
  return null;
}

function flushRoot(root, lanes) {
  if (lanes !== NoLanes) {
    markRootEntangled(root, mergeLanes(lanes, SyncLane));
    ensureRootIsScheduled(root, now());

    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
      resetRenderTimer();
      flushSyncCallbacks();
    }
  }
}
function batchedUpdates$1(fn, a) {
  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;

  try {
    return fn(a);
  } finally {
    executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
    // most batchedUpdates-like method.

    if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
    !( ReactCurrentActQueue$1.isBatchingLegacy)) {
      resetRenderTimer();
      flushSyncCallbacksOnlyInLegacyMode();
    }
  }
}
function discreteUpdates(fn, a, b, c, d) {
  var previousPriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig$3.transition;

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);
    return fn(a, b, c, d);
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;

    if (executionContext === NoContext) {
      resetRenderTimer();
    }
  }
} // Overload the definition to the two valid signatures.
// Warning, this opts-out of checking the function body.

// eslint-disable-next-line no-redeclare
function flushSync(fn) {
  // In legacy mode, we flush pending passive effects at the beginning of the
  // next event, not at the end of the previous one.
  if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
    flushPassiveEffects();
  }

  var prevExecutionContext = executionContext;
  executionContext |= BatchedContext;
  var prevTransition = ReactCurrentBatchConfig$3.transition;
  var previousPriority = getCurrentUpdatePriority();

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);

    if (fn) {
      return fn();
    } else {
      return undefined;
    }
  } finally {
    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;
    executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
    // Note that this will happen even if batchedUpdates is higher up
    // the stack.

    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
      flushSyncCallbacks();
    }
  }
}
function isAlreadyRendering() {
  // Used by the renderer to print a warning if certain APIs are called from
  // the wrong context.
  return  (executionContext & (RenderContext | CommitContext)) !== NoContext;
}
function pushRenderLanes(fiber, lanes) {
  push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
  workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
}
function popRenderLanes(fiber) {
  subtreeRenderLanes = subtreeRenderLanesCursor.current;
  pop(subtreeRenderLanesCursor, fiber);
}

function prepareFreshStack(root, lanes) {
  root.finishedWork = null;
  root.finishedLanes = NoLanes;
  var timeoutHandle = root.timeoutHandle;

  if (timeoutHandle !== noTimeout) {
    // The root previous suspended and scheduled a timeout to commit a fallback
    // state. Now that we have additional work, cancel the timeout.
    root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

    cancelTimeout(timeoutHandle);
  }

  if (workInProgress !== null) {
    var interruptedWork = workInProgress.return;

    while (interruptedWork !== null) {
      var current = interruptedWork.alternate;
      unwindInterruptedWork(current, interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  workInProgressRoot = root;
  var rootWorkInProgress = createWorkInProgress(root.current, null);
  workInProgress = rootWorkInProgress;
  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
  workInProgressRootExitStatus = RootInProgress;
  workInProgressRootFatalError = null;
  workInProgressRootSkippedLanes = NoLanes;
  workInProgressRootInterleavedUpdatedLanes = NoLanes;
  workInProgressRootPingedLanes = NoLanes;
  workInProgressRootConcurrentErrors = null;
  workInProgressRootRecoverableErrors = null;
  finishQueueingConcurrentUpdates();

  {
    ReactStrictModeWarnings.discardPendingWarnings();
  }

  return rootWorkInProgress;
}

function handleError(root, thrownValue) {
  do {
    var erroredWork = workInProgress;

    try {
      // Reset module-level state that was set during the render phase.
      resetContextDependencies();
      resetHooksAfterThrow();
      resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
      // separate issue. Write a regression test using string refs.

      ReactCurrentOwner$2.current = null;

      if (erroredWork === null || erroredWork.return === null) {
        // Expected to be working on a non-root fiber. This is a fatal error
        // because there's no ancestor that can handle it; the root is
        // supposed to capture all errors that weren't caught by an error
        // boundary.
        workInProgressRootExitStatus = RootFatalErrored;
        workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
        // sibling, or the parent if there are no siblings. But since the root
        // has no siblings nor a parent, we set it to null. Usually this is
        // handled by `completeUnitOfWork` or `unwindWork`, but since we're
        // intentionally not calling those, we need set it here.
        // TODO: Consider calling `unwindWork` to pop the contexts.

        workInProgress = null;
        return;
      }

      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
        // Record the time spent rendering before an error was thrown. This
        // avoids inaccurate Profiler durations in the case of a
        // suspended render.
        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
      }

      if (enableSchedulingProfiler) {
        markComponentRenderStopped();

        if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
          var wakeable = thrownValue;
          markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
        } else {
          markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
        }
      }

      throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
      completeUnitOfWork(erroredWork);
    } catch (yetAnotherThrownValue) {
      // Something in the return path also threw.
      thrownValue = yetAnotherThrownValue;

      if (workInProgress === erroredWork && erroredWork !== null) {
        // If this boundary has already errored, then we had trouble processing
        // the error. Bubble it to the next boundary.
        erroredWork = erroredWork.return;
        workInProgress = erroredWork;
      } else {
        erroredWork = workInProgress;
      }

      continue;
    } // Return to the normal work loop.


    return;
  } while (true);
}

function pushDispatcher() {
  var prevDispatcher = ReactCurrentDispatcher$2.current;
  ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;

  if (prevDispatcher === null) {
    // The React isomorphic package does not include a default dispatcher.
    // Instead the first renderer will lazily attach one, in order to give
    // nicer error messages.
    return ContextOnlyDispatcher;
  } else {
    return prevDispatcher;
  }
}

function popDispatcher(prevDispatcher) {
  ReactCurrentDispatcher$2.current = prevDispatcher;
}

function markCommitTimeOfFallback() {
  globalMostRecentFallbackTime = now();
}
function markSkippedUpdateLanes(lane) {
  workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
}
function renderDidSuspend() {
  if (workInProgressRootExitStatus === RootInProgress) {
    workInProgressRootExitStatus = RootSuspended;
  }
}
function renderDidSuspendDelayIfPossible() {
  if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
    workInProgressRootExitStatus = RootSuspendedWithDelay;
  } // Check if there are updates that we skipped tree that might have unblocked
  // this render.


  if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
    // Mark the current render as suspended so that we switch to working on
    // the updates that were skipped. Usually we only suspend at the end of
    // the render phase.
    // TODO: We should probably always mark the root as suspended immediately
    // (inside this function), since by suspending at the end of the render
    // phase introduces a potential mistake where we suspend lanes that were
    // pinged or updated while we were rendering.
    markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
  }
}
function renderDidError(error) {
  if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
    workInProgressRootExitStatus = RootErrored;
  }

  if (workInProgressRootConcurrentErrors === null) {
    workInProgressRootConcurrentErrors = [error];
  } else {
    workInProgressRootConcurrentErrors.push(error);
  }
} // Called during render to determine if anything has suspended.
// Returns false if we're not sure.

function renderHasNotSuspendedYet() {
  // If something errored or completed, we can't really be sure,
  // so those are false.
  return workInProgressRootExitStatus === RootInProgress;
}

function renderRootSync(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    {
      if (isDevToolsPresent) {
        var memoizedUpdaters = root.memoizedUpdaters;

        if (memoizedUpdaters.size > 0) {
          restorePendingUpdaters(root, workInProgressRootRenderLanes);
          memoizedUpdaters.clear();
        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
        // If we bailout on this work, we'll move them back (like above).
        // It's important to move them now in case the work spawns more work at the same priority with different updaters.
        // That way we can keep the current update and future updates separate.


        movePendingFibersToMemoized(root, lanes);
      }
    }

    workInProgressTransitions = getTransitionsForLanes();
    prepareFreshStack(root, lanes);
  }

  {
    markRenderStarted(lanes);
  }

  do {
    try {
      workLoopSync();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();
  executionContext = prevExecutionContext;
  popDispatcher(prevDispatcher);

  if (workInProgress !== null) {
    // This is a sync render, so we should have finished the whole tree.
    throw new Error('Cannot commit an incomplete root. This error is likely caused by a ' + 'bug in React. Please file an issue.');
  }

  {
    markRenderStopped();
  } // Set this to null to indicate there's no in-progress render.


  workInProgressRoot = null;
  workInProgressRootRenderLanes = NoLanes;
  return workInProgressRootExitStatus;
} // The work loop is an extremely hot path. Tell Closure not to inline it.

/** @noinline */


function workLoopSync() {
  // Already timed out, so perform work without checking if we need to yield.
  while (workInProgress !== null) {
    performUnitOfWork(workInProgress);
  }
}

function renderRootConcurrent(root, lanes) {
  var prevExecutionContext = executionContext;
  executionContext |= RenderContext;
  var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
  // and prepare a fresh one. Otherwise we'll continue where we left off.

  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
    {
      if (isDevToolsPresent) {
        var memoizedUpdaters = root.memoizedUpdaters;

        if (memoizedUpdaters.size > 0) {
          restorePendingUpdaters(root, workInProgressRootRenderLanes);
          memoizedUpdaters.clear();
        } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
        // If we bailout on this work, we'll move them back (like above).
        // It's important to move them now in case the work spawns more work at the same priority with different updaters.
        // That way we can keep the current update and future updates separate.


        movePendingFibersToMemoized(root, lanes);
      }
    }

    workInProgressTransitions = getTransitionsForLanes();
    resetRenderTimer();
    prepareFreshStack(root, lanes);
  }

  {
    markRenderStarted(lanes);
  }

  do {
    try {
      workLoopConcurrent();
      break;
    } catch (thrownValue) {
      handleError(root, thrownValue);
    }
  } while (true);

  resetContextDependencies();
  popDispatcher(prevDispatcher);
  executionContext = prevExecutionContext;


  if (workInProgress !== null) {
    // Still work remaining.
    {
      markRenderYielded();
    }

    return RootInProgress;
  } else {
    // Completed the tree.
    {
      markRenderStopped();
    } // Set this to null to indicate there's no in-progress render.


    workInProgressRoot = null;
    workInProgressRootRenderLanes = NoLanes; // Return the final exit status.

    return workInProgressRootExitStatus;
  }
}
/** @noinline */


function workLoopConcurrent() {
  // Perform work until Scheduler asks us to yield
  while (workInProgress !== null && !shouldYield()) {
    performUnitOfWork(workInProgress);
  }
}

function performUnitOfWork(unitOfWork) {
  // The current, flushed, state of this fiber is the alternate. Ideally
  // nothing should rely on this, but relying on it here means that we don't
  // need an additional field on the work in progress.
  var current = unitOfWork.alternate;
  setCurrentFiber(unitOfWork);
  var next;

  if ( (unitOfWork.mode & ProfileMode) !== NoMode) {
    startProfilerTimer(unitOfWork);
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
  } else {
    next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
  }

  resetCurrentFiber();
  unitOfWork.memoizedProps = unitOfWork.pendingProps;

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    completeUnitOfWork(unitOfWork);
  } else {
    workInProgress = next;
  }

  ReactCurrentOwner$2.current = null;
}

function completeUnitOfWork(unitOfWork) {
  // Attempt to complete the current unit of work, then move to the next
  // sibling. If there are no more siblings, return to the parent fiber.
  var completedWork = unitOfWork;

  do {
    // The current, flushed, state of this fiber is the alternate. Ideally
    // nothing should rely on this, but relying on it here means that we don't
    // need an additional field on the work in progress.
    var current = completedWork.alternate;
    var returnFiber = completedWork.return; // Check if the work completed or if something threw.

    if ((completedWork.flags & Incomplete) === NoFlags) {
      setCurrentFiber(completedWork);
      var next = void 0;

      if ( (completedWork.mode & ProfileMode) === NoMode) {
        next = completeWork(current, completedWork, subtreeRenderLanes);
      } else {
        startProfilerTimer(completedWork);
        next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.

        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
      }

      resetCurrentFiber();

      if (next !== null) {
        // Completing this fiber spawned new work. Work on that next.
        workInProgress = next;
        return;
      }
    } else {
      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.


      if (_next !== null) {
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        _next.flags &= HostEffectMask;
        workInProgress = _next;
        return;
      }

      if ( (completedWork.mode & ProfileMode) !== NoMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.

        var actualDuration = completedWork.actualDuration;
        var child = completedWork.child;

        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its subtree flags.
        returnFiber.flags |= Incomplete;
        returnFiber.subtreeFlags = NoFlags;
        returnFiber.deletions = null;
      } else {
        // We've unwound all the way to the root.
        workInProgressRootExitStatus = RootDidNotComplete;
        workInProgress = null;
        return;
      }
    }

    var siblingFiber = completedWork.sibling;

    if (siblingFiber !== null) {
      // If there is more work to do in this returnFiber, do that next.
      workInProgress = siblingFiber;
      return;
    } // Otherwise, return to the parent


    completedWork = returnFiber; // Update the next thing we're working on in case something throws.

    workInProgress = completedWork;
  } while (completedWork !== null); // We've reached the root.


  if (workInProgressRootExitStatus === RootInProgress) {
    workInProgressRootExitStatus = RootCompleted;
  }
}

function commitRoot(root, recoverableErrors, transitions) {
  // TODO: This no longer makes any sense. We already wrap the mutation and
  // layout phases. Should be able to remove.
  var previousUpdateLanePriority = getCurrentUpdatePriority();
  var prevTransition = ReactCurrentBatchConfig$3.transition;

  try {
    ReactCurrentBatchConfig$3.transition = null;
    setCurrentUpdatePriority(DiscreteEventPriority);
    commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
  } finally {
    ReactCurrentBatchConfig$3.transition = prevTransition;
    setCurrentUpdatePriority(previousUpdateLanePriority);
  }

  return null;
}

function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
  do {
    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
    // means `flushPassiveEffects` will sometimes result in additional
    // passive effects. So we need to keep flushing in a loop until there are
    // no more pending effects.
    // TODO: Might be better if `flushPassiveEffects` did not automatically
    // flush synchronous work at the end, to avoid factoring hazards like this.
    flushPassiveEffects();
  } while (rootWithPendingPassiveEffects !== null);

  flushRenderPhaseStrictModeWarningsInDEV();

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Should not already be working.');
  }

  var finishedWork = root.finishedWork;
  var lanes = root.finishedLanes;

  {
    markCommitStarted(lanes);
  }

  if (finishedWork === null) {

    {
      markCommitStopped();
    }

    return null;
  } else {
    {
      if (lanes === NoLanes) {
        error('root.finishedLanes should not be empty during a commit. This is a ' + 'bug in React.');
      }
    }
  }

  root.finishedWork = null;
  root.finishedLanes = NoLanes;

  if (finishedWork === root.current) {
    throw new Error('Cannot commit the same tree as before. This error is likely caused by ' + 'a bug in React. Please file an issue.');
  } // commitRoot never returns a continuation; it always finishes synchronously.
  // So we can clear these now to allow a new callback to be scheduled.


  root.callbackNode = null;
  root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
  // pending time is whatever is left on the root fiber.

  var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
  markRootFinished(root, remainingLanes);

  if (root === workInProgressRoot) {
    // We can reset these now that they are finished.
    workInProgressRoot = null;
    workInProgress = null;
    workInProgressRootRenderLanes = NoLanes;
  } // If there are pending passive effects, schedule a callback to process them.
  // Do this as early as possible, so it is queued before anything else that
  // might get scheduled in the commit phase. (See #16714.)
  // TODO: Delete all other places that schedule the passive effect callback
  // They're redundant.


  if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
    if (!rootDoesHavePassiveEffects) {
      rootDoesHavePassiveEffects = true;
      // to store it in pendingPassiveTransitions until they get processed
      // We need to pass this through as an argument to commitRoot
      // because workInProgressTransitions might have changed between
      // the previous render and commit if we throttle the commit
      // with setTimeout

      pendingPassiveTransitions = transitions;
      scheduleCallback$1(NormalPriority, function () {
        flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
        // *after* passive effects fire to avoid freeing a cache pool that may
        // be referenced by a node in the tree (HostRoot, Cache boundary etc)

        return null;
      });
    }
  } // Check if there are any effects in the whole tree.
  // TODO: This is left over from the effect list implementation, where we had
  // to check for the existence of `firstEffect` to satisfy Flow. I think the
  // only other reason this optimization exists is because it affects profiling.
  // Reconsider whether this is necessary.


  var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
  var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;

  if (subtreeHasEffects || rootHasEffect) {
    var prevTransition = ReactCurrentBatchConfig$3.transition;
    ReactCurrentBatchConfig$3.transition = null;
    var previousPriority = getCurrentUpdatePriority();
    setCurrentUpdatePriority(DiscreteEventPriority);
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext; // Reset this to null before calling lifecycles

    ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
    // of the effect list for each phase: all mutation effects come before all
    // layout effects, and so on.
    // The first phase a "before mutation" phase. We use this phase to read the
    // state of the host tree right before we mutate it. This is where
    // getSnapshotBeforeUpdate is called.

    var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);

    {
      // Mark the current commit time to be shared by all Profilers in this
      // batch. This enables them to be grouped later.
      recordCommitTime();
    }


    commitMutationEffects(root, finishedWork, lanes);

    resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
    // the mutation phase, so that the previous tree is still current during
    // componentWillUnmount, but before the layout phase, so that the finished
    // work is current during componentDidMount/Update.

    root.current = finishedWork; // The next phase is the layout phase, where we call effects that read

    {
      markLayoutEffectsStarted(lanes);
    }

    commitLayoutEffects(finishedWork, root, lanes);

    {
      markLayoutEffectsStopped();
    }
    // opportunity to paint.


    requestPaint();
    executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.

    setCurrentUpdatePriority(previousPriority);
    ReactCurrentBatchConfig$3.transition = prevTransition;
  } else {
    // No effects.
    root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
    // no effects.
    // TODO: Maybe there's a better way to report this.

    {
      recordCommitTime();
    }
  }

  var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

  if (rootDoesHavePassiveEffects) {
    // This commit has passive effects. Stash a reference to them. But don't
    // schedule a callback until after flushing layout work.
    rootDoesHavePassiveEffects = false;
    rootWithPendingPassiveEffects = root;
    pendingPassiveEffectsLanes = lanes;
  } else {

    {
      nestedPassiveUpdateCount = 0;
      rootWithPassiveNestedUpdates = null;
    }
  } // Read this again, since an effect might have updated it


  remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
  // TODO: This is part of the `componentDidCatch` implementation. Its purpose
  // is to detect whether something might have called setState inside
  // `componentDidCatch`. The mechanism is known to be flawed because `setState`
  // inside `componentDidCatch` is itself flawed — that's why we recommend
  // `getDerivedStateFromError` instead. However, it could be improved by
  // checking if remainingLanes includes Sync work, instead of whether there's
  // any work remaining at all (which would also include stuff like Suspense
  // retries or transitions). It's been like this for a while, though, so fixing
  // it probably isn't that urgent.

  if (remainingLanes === NoLanes) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }

  {
    if (!rootDidHavePassiveEffects) {
      commitDoubleInvokeEffectsInDEV(root.current, false);
    }
  }

  onCommitRoot(finishedWork.stateNode, renderPriorityLevel);

  {
    if (isDevToolsPresent) {
      root.memoizedUpdaters.clear();
    }
  }

  {
    onCommitRoot$1();
  } // Always call this before exiting `commitRoot`, to ensure that any
  // additional work on this root is scheduled.


  ensureRootIsScheduled(root, now());

  if (recoverableErrors !== null) {
    // There were errors during this render, but recovered from them without
    // needing to surface it to the UI. We log them here.
    var onRecoverableError = root.onRecoverableError;

    for (var i = 0; i < recoverableErrors.length; i++) {
      var recoverableError = recoverableErrors[i];
      var componentStack = recoverableError.stack;
      var digest = recoverableError.digest;
      onRecoverableError(recoverableError.value, {
        componentStack: componentStack,
        digest: digest
      });
    }
  }

  if (hasUncaughtError) {
    hasUncaughtError = false;
    var error$1 = firstUncaughtError;
    firstUncaughtError = null;
    throw error$1;
  } // If the passive effects are the result of a discrete render, flush them
  // synchronously at the end of the current task so that the result is
  // immediately observable. Otherwise, we assume that they are not
  // order-dependent and do not need to be observed by external systems, so we
  // can wait until after paint.
  // TODO: We can optimize this by not scheduling the callback earlier. Since we
  // currently schedule the callback in multiple places, will wait until those
  // are consolidated.


  if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) {
    flushPassiveEffects();
  } // Read this again, since a passive effect might have updated it


  remainingLanes = root.pendingLanes;

  if (includesSomeLane(remainingLanes, SyncLane)) {
    {
      markNestedUpdateScheduled();
    } // Count the number of times the root synchronously re-renders without
    // finishing. If there are too many, it indicates an infinite update loop.


    if (root === rootWithNestedUpdates) {
      nestedUpdateCount++;
    } else {
      nestedUpdateCount = 0;
      rootWithNestedUpdates = root;
    }
  } else {
    nestedUpdateCount = 0;
  } // If layout work was scheduled, flush it now.


  flushSyncCallbacks();

  {
    markCommitStopped();
  }

  return null;
}

function flushPassiveEffects() {
  // Returns whether passive effects were flushed.
  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
  // probably just combine the two functions. I believe they were only separate
  // in the first place because we used to wrap it with
  // `Scheduler.runWithPriority`, which accepts a function. But now we track the
  // priority within React itself, so we can mutate the variable directly.
  if (rootWithPendingPassiveEffects !== null) {
    var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
    var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
    var prevTransition = ReactCurrentBatchConfig$3.transition;
    var previousPriority = getCurrentUpdatePriority();

    try {
      ReactCurrentBatchConfig$3.transition = null;
      setCurrentUpdatePriority(priority);
      return flushPassiveEffectsImpl();
    } finally {
      setCurrentUpdatePriority(previousPriority);
      ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
    }
  }

  return false;
}
function enqueuePendingPassiveProfilerEffect(fiber) {
  {
    pendingPassiveProfilerEffects.push(fiber);

    if (!rootDoesHavePassiveEffects) {
      rootDoesHavePassiveEffects = true;
      scheduleCallback$1(NormalPriority, function () {
        flushPassiveEffects();
        return null;
      });
    }
  }
}

function flushPassiveEffectsImpl() {
  if (rootWithPendingPassiveEffects === null) {
    return false;
  } // Cache and clear the transitions flag


  var transitions = pendingPassiveTransitions;
  pendingPassiveTransitions = null;
  var root = rootWithPendingPassiveEffects;
  var lanes = pendingPassiveEffectsLanes;
  rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
  // Figure out why and fix it. It's not causing any known issues (probably
  // because it's only used for profiling), but it's a refactor hazard.

  pendingPassiveEffectsLanes = NoLanes;

  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
    throw new Error('Cannot flush passive effects while already rendering.');
  }

  {
    isFlushingPassiveEffects = true;
    didScheduleUpdateDuringPassiveEffects = false;
  }

  {
    markPassiveEffectsStarted(lanes);
  }

  var prevExecutionContext = executionContext;
  executionContext |= CommitContext;
  commitPassiveUnmountEffects(root.current);
  commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects

  {
    var profilerEffects = pendingPassiveProfilerEffects;
    pendingPassiveProfilerEffects = [];

    for (var i = 0; i < profilerEffects.length; i++) {
      var _fiber = profilerEffects[i];
      commitPassiveEffectDurations(root, _fiber);
    }
  }

  {
    markPassiveEffectsStopped();
  }

  {
    commitDoubleInvokeEffectsInDEV(root.current, true);
  }

  executionContext = prevExecutionContext;
  flushSyncCallbacks();

  {
    // If additional passive effects were scheduled, increment a counter. If this
    // exceeds the limit, we'll fire a warning.
    if (didScheduleUpdateDuringPassiveEffects) {
      if (root === rootWithPassiveNestedUpdates) {
        nestedPassiveUpdateCount++;
      } else {
        nestedPassiveUpdateCount = 0;
        rootWithPassiveNestedUpdates = root;
      }
    } else {
      nestedPassiveUpdateCount = 0;
    }

    isFlushingPassiveEffects = false;
    didScheduleUpdateDuringPassiveEffects = false;
  } // TODO: Move to commitPassiveMountEffects


  onPostCommitRoot(root);

  {
    var stateNode = root.current.stateNode;
    stateNode.effectDuration = 0;
    stateNode.passiveEffectDuration = 0;
  }

  return true;
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}
function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function prepareToThrowUncaughtError(error) {
  if (!hasUncaughtError) {
    hasUncaughtError = true;
    firstUncaughtError = error;
  }
}

var onUncaughtError = prepareToThrowUncaughtError;

function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
  var errorInfo = createCapturedValueAtFiber(error, sourceFiber);
  var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
  var root = enqueueUpdate(rootFiber, update, SyncLane);
  var eventTime = requestEventTime();

  if (root !== null) {
    markRootUpdated(root, SyncLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
  }
}

function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
  {
    reportUncaughtErrorInDEV(error$1);
    setIsRunningInsertionEffect(false);
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
    return;
  }

  var fiber = null;

  {
    fiber = nearestMountedAncestor;
  }

  while (fiber !== null) {
    if (fiber.tag === HostRoot) {
      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
      return;
    } else if (fiber.tag === ClassComponent) {
      var ctor = fiber.type;
      var instance = fiber.stateNode;

      if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
        var root = enqueueUpdate(fiber, update, SyncLane);
        var eventTime = requestEventTime();

        if (root !== null) {
          markRootUpdated(root, SyncLane, eventTime);
          ensureRootIsScheduled(root, eventTime);
        }

        return;
      }
    }

    fiber = fiber.return;
  }

  {
    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
    // will fire for errors that are thrown by destroy functions inside deleted
    // trees. What it should instead do is propagate the error to the parent of
    // the deleted tree. In the meantime, do not add this warning to the
    // allowlist; this is only for our internal use.
    error('Internal React error: Attempted to capture a commit phase error ' + 'inside a detached tree. This indicates a bug in React. Likely ' + 'causes include deleting the same fiber more than once, committing an ' + 'already-finished tree, or an inconsistent return pointer.\n\n' + 'Error message:\n\n%s', error$1);
  }
}
function pingSuspendedRoot(root, wakeable, pingedLanes) {
  var pingCache = root.pingCache;

  if (pingCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(wakeable);
  }

  var eventTime = requestEventTime();
  markRootPinged(root, pingedLanes);
  warnIfSuspenseResolutionNotWrappedWithActDEV(root);

  if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
    // Received a ping at the same priority level at which we're currently
    // rendering. We might want to restart this render. This should mirror
    // the logic of whether or not a root suspends once it completes.
    // TODO: If we're rendering sync either due to Sync, Batched or expired,
    // we should probably never restart.
    // If we're suspended with delay, or if it's a retry, we'll always suspend
    // so we can always restart.
    if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
      // Restart from the root.
      prepareFreshStack(root, NoLanes);
    } else {
      // Even though we can't restart right now, we might get an
      // opportunity later. So we mark this render as having a ping.
      workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
    }
  }

  ensureRootIsScheduled(root, eventTime);
}

function retryTimedOutBoundary(boundaryFiber, retryLane) {
  // The boundary fiber (a Suspense component or SuspenseList component)
  // previously was rendered in its fallback state. One of the promises that
  // suspended it has resolved, which means at least part of the tree was
  // likely unblocked. Try rendering again, at a new lanes.
  if (retryLane === NoLane) {
    // TODO: Assign this to `suspenseState.retryLane`? to avoid
    // unnecessary entanglement?
    retryLane = requestRetryLane(boundaryFiber);
  } // TODO: Special case idle priority?


  var eventTime = requestEventTime();
  var root = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);

  if (root !== null) {
    markRootUpdated(root, retryLane, eventTime);
    ensureRootIsScheduled(root, eventTime);
  }
}

function retryDehydratedSuspenseBoundary(boundaryFiber) {
  var suspenseState = boundaryFiber.memoizedState;
  var retryLane = NoLane;

  if (suspenseState !== null) {
    retryLane = suspenseState.retryLane;
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
}
function resolveRetryWakeable(boundaryFiber, wakeable) {
  var retryLane = NoLane; // Default

  var retryCache;

  switch (boundaryFiber.tag) {
    case SuspenseComponent:
      retryCache = boundaryFiber.stateNode;
      var suspenseState = boundaryFiber.memoizedState;

      if (suspenseState !== null) {
        retryLane = suspenseState.retryLane;
      }

      break;

    case SuspenseListComponent:
      retryCache = boundaryFiber.stateNode;
      break;

    default:
      throw new Error('Pinged unknown suspense boundary type. ' + 'This is probably a bug in React.');
  }

  if (retryCache !== null) {
    // The wakeable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(wakeable);
  }

  retryTimedOutBoundary(boundaryFiber, retryLane);
} // Computes the next Just Noticeable Difference (JND) boundary.
// The theory is that a person can't tell the difference between small differences in time.
// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
// difference in the experience. However, waiting for longer might mean that we can avoid
// showing an intermediate loading state. The longer we have already waited, the harder it
// is to tell small differences in time. Therefore, the longer we've already waited,
// the longer we can wait additionally. At some point we have to give up though.
// We pick a train model where the next boundary commits at a consistent schedule.
// These particular numbers are vague estimates. We expect to adjust them based on research.

function jnd(timeElapsed) {
  return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
}

function checkForNestedUpdates() {
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    nestedUpdateCount = 0;
    rootWithNestedUpdates = null;
    throw new Error('Maximum update depth exceeded. This can happen when a component ' + 'repeatedly calls setState inside componentWillUpdate or ' + 'componentDidUpdate. React limits the number of nested updates to ' + 'prevent infinite loops.');
  }

  {
    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
      nestedPassiveUpdateCount = 0;
      rootWithPassiveNestedUpdates = null;

      error('Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
    }
  }
}

function flushRenderPhaseStrictModeWarningsInDEV() {
  {
    ReactStrictModeWarnings.flushLegacyContextWarning();

    {
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
  }
}

function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
  {
    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
    // Maybe not a big deal since this is DEV only behavior.
    setCurrentFiber(fiber);
    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);

    if (hasPassiveEffects) {
      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
    }

    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);

    if (hasPassiveEffects) {
      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
    }

    resetCurrentFiber();
  }
}

function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
  {
    // We don't need to re-check StrictEffectsMode here.
    // This function is only called if that check has already passed.
    var current = firstChild;
    var subtreeRoot = null;

    while (current !== null) {
      var primarySubtreeFlag = current.subtreeFlags & fiberFlags;

      if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) {
        current = current.child;
      } else {
        if ((current.flags & fiberFlags) !== NoFlags) {
          invokeEffectFn(current);
        }

        if (current.sibling !== null) {
          current = current.sibling;
        } else {
          current = subtreeRoot = current.return;
        }
      }
    }
  }
}

var didWarnStateUpdateForNotYetMountedComponent = null;
function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
  {
    if ((executionContext & RenderContext) !== NoContext) {
      // We let the other warning about render phase updates deal with this one.
      return;
    }

    if (!(fiber.mode & ConcurrentMode)) {
      return;
    }

    var tag = fiber.tag;

    if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
      // Only warn for user-defined components, not internal ones like Suspense.
      return;
    } // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.


    var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';

    if (didWarnStateUpdateForNotYetMountedComponent !== null) {
      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
        return;
      }

      didWarnStateUpdateForNotYetMountedComponent.add(componentName);
    } else {
      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
    }

    var previousFiber = current;

    try {
      setCurrentFiber(fiber);

      error("Can't perform a React state update on a component that hasn't mounted yet. " + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');
    } finally {
      if (previousFiber) {
        setCurrentFiber(fiber);
      } else {
        resetCurrentFiber();
      }
    }
  }
}
var beginWork$1;

{
  var dummyFiber = null;

  beginWork$1 = function (current, unitOfWork, lanes) {
    // If a component throws an error, we replay it again in a synchronously
    // dispatched event, so that the debugger will treat it as an uncaught
    // error See ReactErrorUtils for more information.
    // Before entering the begin phase, copy the work-in-progress onto a dummy
    // fiber. If beginWork throws, we'll use this to reset the state.
    var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

    try {
      return beginWork(current, unitOfWork, lanes);
    } catch (originalError) {
      if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
        // Don't replay promises.
        // Don't replay errors if we are hydrating and have already suspended or handled an error
        throw originalError;
      } // Keep this code in sync with handleError; any changes here must have
      // corresponding changes there.


      resetContextDependencies();
      resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
      // same fiber again.
      // Unwind the failed stack frame

      unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.

      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

      if ( unitOfWork.mode & ProfileMode) {
        // Reset the profiler timer.
        startProfilerTimer(unitOfWork);
      } // Run beginWork again.


      invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);

      if (hasCaughtError()) {
        var replayError = clearCaughtError();

        if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) {
          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
          originalError._suppressLogging = true;
        }
      } // We always throw the original error in case the second render pass is not idempotent.
      // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.


      throw originalError;
    }
  };
}

var didWarnAboutUpdateInRender = false;
var didWarnAboutUpdateInRenderForAnotherComponent;

{
  didWarnAboutUpdateInRenderForAnotherComponent = new Set();
}

function warnAboutRenderPhaseUpdatesInDEV(fiber) {
  {
    if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
      switch (fiber.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.

            var dedupeKey = renderingComponentName;

            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
              didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
              var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';

              error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);
            }

            break;
          }

        case ClassComponent:
          {
            if (!didWarnAboutUpdateInRender) {
              error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');

              didWarnAboutUpdateInRender = true;
            }

            break;
          }
      }
    }
  }
}

function restorePendingUpdaters(root, lanes) {
  {
    if (isDevToolsPresent) {
      var memoizedUpdaters = root.memoizedUpdaters;
      memoizedUpdaters.forEach(function (schedulingFiber) {
        addFiberToLanesMap(root, schedulingFiber, lanes);
      }); // This function intentionally does not clear memoized updaters.
      // Those may still be relevant to the current commit
      // and a future one (e.g. Suspense).
    }
  }
}
var fakeActCallbackNode = {};

function scheduleCallback$1(priorityLevel, callback) {
  {
    // If we're currently inside an `act` scope, bypass Scheduler and push to
    // the `act` queue instead.
    var actQueue = ReactCurrentActQueue$1.current;

    if (actQueue !== null) {
      actQueue.push(callback);
      return fakeActCallbackNode;
    } else {
      return scheduleCallback(priorityLevel, callback);
    }
  }
}

function cancelCallback$1(callbackNode) {
  if ( callbackNode === fakeActCallbackNode) {
    return;
  } // In production, always call Scheduler. This function will be stripped out.


  return cancelCallback(callbackNode);
}

function shouldForceFlushFallbacksInDEV() {
  // Never force flush in production. This function should get stripped out.
  return  ReactCurrentActQueue$1.current !== null;
}

function warnIfUpdatesNotWrappedWithActDEV(fiber) {
  {
    if (fiber.mode & ConcurrentMode) {
      if (!isConcurrentActEnvironment()) {
        // Not in an act environment. No need to warn.
        return;
      }
    } else {
      // Legacy mode has additional cases where we suppress a warning.
      if (!isLegacyActEnvironment()) {
        // Not in an act environment. No need to warn.
        return;
      }

      if (executionContext !== NoContext) {
        // Legacy mode doesn't warn if the update is batched, i.e.
        // batchedUpdates or flushSync.
        return;
      }

      if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
        // For backwards compatibility with pre-hooks code, legacy mode only
        // warns for updates that originate from a hook.
        return;
      }
    }

    if (ReactCurrentActQueue$1.current === null) {
      var previousFiber = current;

      try {
        setCurrentFiber(fiber);

        error('An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentNameFromFiber(fiber));
      } finally {
        if (previousFiber) {
          setCurrentFiber(fiber);
        } else {
          resetCurrentFiber();
        }
      }
    }
  }
}

function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
  {
    if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
      error('A suspended resource finished loading inside a test, but the event ' + 'was not wrapped in act(...).\n\n' + 'When testing, code that resolves suspended data should be wrapped ' + 'into act(...):\n\n' + 'act(() => {\n' + '  /* finish loading suspended data */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act');
    }
  }
}

function setIsRunningInsertionEffect(isRunning) {
  {
    isRunningInsertionEffect = isRunning;
  }
}

/* eslint-disable react-internal/prod-error-codes */
var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

var failedBoundaries = null;
var setRefreshHandler = function (handler) {
  {
    resolveFamily = handler;
  }
};
function resolveFunctionForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function resolveClassForHotReloading(type) {
  // No implementation differences.
  return resolveFunctionForHotReloading(type);
}
function resolveForwardRefForHotReloading(type) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return type;
    }

    var family = resolveFamily(type);

    if (family === undefined) {
      // Check if we're dealing with a real forwardRef. Don't want to crash early.
      if (type !== null && type !== undefined && typeof type.render === 'function') {
        // ForwardRef is special because its resolved .type is an object,
        // but it's possible that we only have its inner render function in the map.
        // If that inner render function is different, we'll build a new forwardRef type.
        var currentRender = resolveFunctionForHotReloading(type.render);

        if (type.render !== currentRender) {
          var syntheticType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: currentRender
          };

          if (type.displayName !== undefined) {
            syntheticType.displayName = type.displayName;
          }

          return syntheticType;
        }
      }

      return type;
    } // Use the latest known implementation.


    return family.current;
  }
}
function isCompatibleFamilyForHotReloading(fiber, element) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return false;
    }

    var prevType = fiber.elementType;
    var nextType = element.type; // If we got here, we know types aren't === equal.

    var needsCompareFamilies = false;
    var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

    switch (fiber.tag) {
      case ClassComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          }

          break;
        }

      case FunctionComponent:
        {
          if (typeof nextType === 'function') {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            // We don't know the inner type yet.
            // We're going to assume that the lazy inner type is stable,
            // and so it is sufficient to avoid reconciling it away.
            // We're not going to unwrap or actually use the new lazy type.
            needsCompareFamilies = true;
          }

          break;
        }

      case ForwardRef:
        {
          if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      case MemoComponent:
      case SimpleMemoComponent:
        {
          if ($$typeofNextType === REACT_MEMO_TYPE) {
            // TODO: if it was but can no longer be simple,
            // we shouldn't set this.
            needsCompareFamilies = true;
          } else if ($$typeofNextType === REACT_LAZY_TYPE) {
            needsCompareFamilies = true;
          }

          break;
        }

      default:
        return false;
    } // Check if both types have a family and it's the same one.


    if (needsCompareFamilies) {
      // Note: memo() and forwardRef() we'll compare outer rather than inner type.
      // This means both of them need to be registered to preserve state.
      // If we unwrapped and compared the inner types for wrappers instead,
      // then we would risk falsely saying two separate memo(Foo)
      // calls are equivalent because they wrap the same Foo function.
      var prevFamily = resolveFamily(prevType);

      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
        return true;
      }
    }

    return false;
  }
}
function markFailedErrorBoundaryForHotReloading(fiber) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    if (typeof WeakSet !== 'function') {
      return;
    }

    if (failedBoundaries === null) {
      failedBoundaries = new WeakSet();
    }

    failedBoundaries.add(fiber);
  }
}
var scheduleRefresh = function (root, update) {
  {
    if (resolveFamily === null) {
      // Hot reloading is disabled.
      return;
    }

    var staleFamilies = update.staleFamilies,
        updatedFamilies = update.updatedFamilies;
    flushPassiveEffects();
    flushSync(function () {
      scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
    });
  }
};
var scheduleRoot = function (root, element) {
  {
    if (root.context !== emptyContextObject) {
      // Super edge case: root has a legacy _renderSubtree context
      // but we don't know the parentComponent so we can't pass it.
      // Just ignore. We'll delete this with _renderSubtree code path later.
      return;
    }

    flushPassiveEffects();
    flushSync(function () {
      updateContainer(element, root, null, null);
    });
  }
};

function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
  {
    var alternate = fiber.alternate,
        child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    if (resolveFamily === null) {
      throw new Error('Expected resolveFamily to be set during hot reload.');
    }

    var needsRender = false;
    var needsRemount = false;

    if (candidateType !== null) {
      var family = resolveFamily(candidateType);

      if (family !== undefined) {
        if (staleFamilies.has(family)) {
          needsRemount = true;
        } else if (updatedFamilies.has(family)) {
          if (tag === ClassComponent) {
            needsRemount = true;
          } else {
            needsRender = true;
          }
        }
      }
    }

    if (failedBoundaries !== null) {
      if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
        needsRemount = true;
      }
    }

    if (needsRemount) {
      fiber._debugNeedsRemount = true;
    }

    if (needsRemount || needsRender) {
      var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (_root !== null) {
        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
      }
    }

    if (child !== null && !needsRemount) {
      scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
    }

    if (sibling !== null) {
      scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
  }
}

var findHostInstancesForRefresh = function (root, families) {
  {
    var hostInstances = new Set();
    var types = new Set(families.map(function (family) {
      return family.current;
    }));
    findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
    return hostInstances;
  }
};

function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
  {
    var child = fiber.child,
        sibling = fiber.sibling,
        tag = fiber.tag,
        type = fiber.type;
    var candidateType = null;

    switch (tag) {
      case FunctionComponent:
      case SimpleMemoComponent:
      case ClassComponent:
        candidateType = type;
        break;

      case ForwardRef:
        candidateType = type.render;
        break;
    }

    var didMatch = false;

    if (candidateType !== null) {
      if (types.has(candidateType)) {
        didMatch = true;
      }
    }

    if (didMatch) {
      // We have a match. This only drills down to the closest host components.
      // There's no need to search deeper because for the purpose of giving
      // visual feedback, "flashing" outermost parent rectangles is sufficient.
      findHostInstancesForFiberShallowly(fiber, hostInstances);
    } else {
      // If there's no match, maybe there will be one further down in the child tree.
      if (child !== null) {
        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
      }
    }

    if (sibling !== null) {
      findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
  }
}

function findHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

    if (foundHostInstances) {
      return;
    } // If we didn't find any host children, fallback to closest host parent.


    var node = fiber;

    while (true) {
      switch (node.tag) {
        case HostComponent:
          hostInstances.add(node.stateNode);
          return;

        case HostPortal:
          hostInstances.add(node.stateNode.containerInfo);
          return;

        case HostRoot:
          hostInstances.add(node.stateNode.containerInfo);
          return;
      }

      if (node.return === null) {
        throw new Error('Expected to reach root first.');
      }

      node = node.return;
    }
  }
}

function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
  {
    var node = fiber;
    var foundHostInstances = false;

    while (true) {
      if (node.tag === HostComponent) {
        // We got a match.
        foundHostInstances = true;
        hostInstances.add(node.stateNode); // There may still be more, so keep searching.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === fiber) {
        return foundHostInstances;
      }

      while (node.sibling === null) {
        if (node.return === null || node.return === fiber) {
          return foundHostInstances;
        }

        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  return false;
}

var hasBadMapPolyfill;

{
  hasBadMapPolyfill = false;

  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */

    new Map([[nonExtensibleObject, null]]);
    new Set([nonExtensibleObject]);
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null; // Fiber

  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.dependencies = null;
  this.mode = mode; // Effects

  this.flags = NoFlags;
  this.subtreeFlags = NoFlags;
  this.deletions = null;
  this.lanes = NoLanes;
  this.childLanes = NoLanes;
  this.alternate = null;

  {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).

    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    // This isn't directly used but is handy for debugging internals:
    this._debugSource = null;
    this._debugOwner = null;
    this._debugNeedsRemount = false;
    this._debugHookTypes = null;

    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
} // This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.


var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct$1(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
}
function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;

    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }

    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }

  return IndeterminateComponent;
} // This is used to create an alternate fiber to do work on.

function createWorkInProgress(current, pendingProps) {
  var workInProgress = current.alternate;

  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // We already have an alternate.
    // Reset the effect tag.

    workInProgress.flags = NoFlags; // The effects are no longer valid.

    workInProgress.subtreeFlags = NoFlags;
    workInProgress.deletions = null;

    {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  } // Reset all effects except static ones.
  // Static effects are not specific to a render.


  workInProgress.flags = current.flags & StaticMask;
  workInProgress.childLanes = current.childLanes;
  workInProgress.lanes = current.lanes;
  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
  // it cannot be shared with the current fiber.

  var currentDependencies = current.dependencies;
  workInProgress.dependencies = currentDependencies === null ? null : {
    lanes: currentDependencies.lanes,
    firstContext: currentDependencies.firstContext
  }; // These will be overridden during the parent's reconciliation

  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  {
    workInProgress._debugNeedsRemount = current._debugNeedsRemount;

    switch (workInProgress.tag) {
      case IndeterminateComponent:
      case FunctionComponent:
      case SimpleMemoComponent:
        workInProgress.type = resolveFunctionForHotReloading(current.type);
        break;

      case ClassComponent:
        workInProgress.type = resolveClassForHotReloading(current.type);
        break;

      case ForwardRef:
        workInProgress.type = resolveForwardRefForHotReloading(current.type);
        break;
    }
  }

  return workInProgress;
} // Used to reuse a Fiber for a second pass.

function resetWorkInProgress(workInProgress, renderLanes) {
  // This resets the Fiber to what createFiber or createWorkInProgress would
  // have set the values to before during the first pass. Ideally this wouldn't
  // be necessary but unfortunately many code paths reads from the workInProgress
  // when they should be reading from current and writing to workInProgress.
  // We assume pendingProps, index, key, ref, return are still untouched to
  // avoid doing another reconciliation.
  // Reset the effect flags but keep any Placement tags, since that's something
  // that child fiber is setting, not the reconciliation.
  workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.

  var current = workInProgress.alternate;

  if (current === null) {
    // Reset to createFiber's initial values.
    workInProgress.childLanes = NoLanes;
    workInProgress.lanes = renderLanes;
    workInProgress.child = null;
    workInProgress.subtreeFlags = NoFlags;
    workInProgress.memoizedProps = null;
    workInProgress.memoizedState = null;
    workInProgress.updateQueue = null;
    workInProgress.dependencies = null;
    workInProgress.stateNode = null;

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = 0;
      workInProgress.treeBaseDuration = 0;
    }
  } else {
    // Reset to the cloned values that createWorkInProgress would've.
    workInProgress.childLanes = current.childLanes;
    workInProgress.lanes = current.lanes;
    workInProgress.child = current.child;
    workInProgress.subtreeFlags = NoFlags;
    workInProgress.deletions = null;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.

    workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
    // it cannot be shared with the current fiber.

    var currentDependencies = current.dependencies;
    workInProgress.dependencies = currentDependencies === null ? null : {
      lanes: currentDependencies.lanes,
      firstContext: currentDependencies.firstContext
    };

    {
      // Note: We don't reset the actualTime counts. It's useful to accumulate
      // actual time across multiple render passes.
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
    }
  }

  return workInProgress;
}
function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
  var mode;

  if (tag === ConcurrentRoot) {
    mode = ConcurrentMode;

    if (isStrictMode === true) {
      mode |= StrictLegacyMode;

      {
        mode |= StrictEffectsMode;
      }
    }
  } else {
    mode = NoMode;
  }

  if ( isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}
function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, lanes) {
  var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

  var resolvedType = type;

  if (typeof type === 'function') {
    if (shouldConstruct$1(type)) {
      fiberTag = ClassComponent;

      {
        resolvedType = resolveClassForHotReloading(resolvedType);
      }
    } else {
      {
        resolvedType = resolveFunctionForHotReloading(resolvedType);
      }
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, lanes, key);

      case REACT_STRICT_MODE_TYPE:
        fiberTag = Mode;
        mode |= StrictLegacyMode;

        if ( (mode & ConcurrentMode) !== NoMode) {
          // Strict effects should never run on legacy roots
          mode |= StrictEffectsMode;
        }

        break;

      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, lanes, key);

      case REACT_SUSPENSE_LIST_TYPE:
        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);

      case REACT_OFFSCREEN_TYPE:
        return createFiberFromOffscreen(pendingProps, mode, lanes, key);

      case REACT_LEGACY_HIDDEN_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_SCOPE_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_CACHE_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_TRACING_MARKER_TYPE:

      // eslint-disable-next-line no-fallthrough

      case REACT_DEBUG_TRACING_MODE_TYPE:

      // eslint-disable-next-line no-fallthrough

      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;

              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;

              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;

                {
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                }

                break getTag;

              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;

              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;
            }
          }

          var info = '';

          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }

            var ownerName = owner ? getComponentNameFromFiber(owner) : null;

            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }

          throw new Error('Element type is invalid: expected a string (for built-in ' + 'components) or a class/function (for composite components) ' + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
    }
  }

  var fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.lanes = lanes;

  {
    fiber._debugOwner = owner;
  }

  return fiber;
}
function createFiberFromElement(element, mode, lanes) {
  var owner = null;

  {
    owner = element._owner;
  }

  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  return fiber;
}
function createFiberFromFragment(elements, mode, lanes, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.lanes = lanes;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, lanes, key) {
  {
    if (typeof pendingProps.id !== 'string') {
      error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.lanes = lanes;

  {
    fiber.stateNode = {
      effectDuration: 0,
      passiveEffectDuration: 0
    };
  }

  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
  fiber.elementType = REACT_SUSPENSE_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
  var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
  var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
  fiber.elementType = REACT_OFFSCREEN_TYPE;
  fiber.lanes = lanes;
  var primaryChildInstance = {
    isHidden: false
  };
  fiber.stateNode = primaryChildInstance;
  return fiber;
}
function createFiberFromText(content, mode, lanes) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.lanes = lanes;
  return fiber;
}
function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoMode);
  fiber.elementType = 'DELETED';
  return fiber;
}
function createFiberFromDehydratedFragment(dehydratedNode) {
  var fiber = createFiber(DehydratedFragment, null, null, NoMode);
  fiber.stateNode = dehydratedNode;
  return fiber;
}
function createFiberFromPortal(portal, mode, lanes) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.lanes = lanes;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null,
    // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
} // Used for stashing WIP properties to replay failed work in DEV.

function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoMode);
  } // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.


  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.dependencies = source.dependencies;
  target.mode = source.mode;
  target.flags = source.flags;
  target.subtreeFlags = source.subtreeFlags;
  target.deletions = source.deletions;
  target.lanes = source.lanes;
  target.childLanes = source.childLanes;
  target.alternate = source.alternate;

  {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }

  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugNeedsRemount = source._debugNeedsRemount;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
  this.tag = tag;
  this.containerInfo = containerInfo;
  this.pendingChildren = null;
  this.current = null;
  this.pingCache = null;
  this.finishedWork = null;
  this.timeoutHandle = noTimeout;
  this.context = null;
  this.pendingContext = null;
  this.callbackNode = null;
  this.callbackPriority = NoLane;
  this.eventTimes = createLaneMap(NoLanes);
  this.expirationTimes = createLaneMap(NoTimestamp);
  this.pendingLanes = NoLanes;
  this.suspendedLanes = NoLanes;
  this.pingedLanes = NoLanes;
  this.expiredLanes = NoLanes;
  this.mutableReadLanes = NoLanes;
  this.finishedLanes = NoLanes;
  this.entangledLanes = NoLanes;
  this.entanglements = createLaneMap(NoLanes);
  this.identifierPrefix = identifierPrefix;
  this.onRecoverableError = onRecoverableError;

  {
    this.mutableSourceEagerHydrationData = null;
  }

  {
    this.effectDuration = 0;
    this.passiveEffectDuration = 0;
  }

  {
    this.memoizedUpdaters = new Set();
    var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];

    for (var _i = 0; _i < TotalLanes; _i++) {
      pendingUpdatersLaneMap.push(new Set());
    }
  }

  {
    switch (tag) {
      case ConcurrentRoot:
        this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';
        break;

      case LegacyRoot:
        this._debugRootType = hydrate ? 'hydrate()' : 'render()';
        break;
    }
  }
}

function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // TODO: We have several of these arguments that are conceptually part of the
// host config, but because they are passed in at runtime, we have to thread
// them through the root constructor. Perhaps we should put them all into a
// single type, like a DynamicHostConfig that is defined by the renderer.
identifierPrefix, onRecoverableError, transitionCallbacks) {
  var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
  // stateNode is any.


  var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
  root.current = uninitializedFiber;
  uninitializedFiber.stateNode = root;

  {
    var _initialState = {
      element: initialChildren,
      isDehydrated: hydrate,
      cache: null,
      // not enabled yet
      transitions: null,
      pendingSuspenseBoundaries: null
    };
    uninitializedFiber.memoizedState = _initialState;
  }

  initializeUpdateQueue(uninitializedFiber);
  return root;
}

var ReactVersion = '18.2.0';

function createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  {
    checkKeyStringCoercion(key);
  }

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

var didWarnAboutNestedUpdates;
var didWarnAboutFindNodeInStrictMode;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;

    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);

    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        throw new Error('Unable to find node on an unmounted component.');
      } else {
        var keys = Object.keys(component).join(',');
        throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
      }
    }

    var hostFiber = findCurrentHostFiber(fiber);

    if (hostFiber === null) {
      return null;
    }

    if (hostFiber.mode & StrictLegacyMode) {
      var componentName = getComponentNameFromFiber(fiber) || 'Component';

      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        var previousFiber = current;

        try {
          setCurrentFiber(hostFiber);

          if (fiber.mode & StrictLegacyMode) {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          } else {
            error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
          }
        } finally {
          // Ideally this should reset to previous but this shouldn't be called in
          // render and there's another warning for that anyway.
          if (previousFiber) {
            setCurrentFiber(previousFiber);
          } else {
            resetCurrentFiber();
          }
        }
      }
    }

    return hostFiber.stateNode;
  }
}

function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
  var hydrate = false;
  var initialChildren = null;
  return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
}
function createHydrationContainer(initialChildren, // TODO: Remove `callback` when we delete legacy mode.
callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
  var hydrate = true;
  var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor

  root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
  // a regular update because the initial render must match was was rendered
  // on the server.
  // NOTE: This update intentionally doesn't have a payload. We're only using
  // the update to schedule work on the root fiber (and, for legacy roots, to
  // enqueue the callback if one is provided).

  var current = root.current;
  var eventTime = requestEventTime();
  var lane = requestUpdateLane(current);
  var update = createUpdate(eventTime, lane);
  update.callback = callback !== undefined && callback !== null ? callback : null;
  enqueueUpdate(current, update, lane);
  scheduleInitialHydrationOnRoot(root, lane, eventTime);
  return root;
}
function updateContainer(element, container, parentComponent, callback) {
  {
    onScheduleRoot(container, element);
  }

  var current$1 = container.current;
  var eventTime = requestEventTime();
  var lane = requestUpdateLane(current$1);

  {
    markRenderScheduled(lane);
  }

  var context = getContextForSubtree(parentComponent);

  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  {
    if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;

      error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentNameFromFiber(current) || 'Unknown');
    }
  }

  var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
  // being called "element".

  update.payload = {
    element: element
  };
  callback = callback === undefined ? null : callback;

  if (callback !== null) {
    {
      if (typeof callback !== 'function') {
        error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
      }
    }

    update.callback = callback;
  }

  var root = enqueueUpdate(current$1, update, lane);

  if (root !== null) {
    scheduleUpdateOnFiber(root, current$1, lane, eventTime);
    entangleTransitions(root, current$1, lane);
  }

  return lane;
}
function getPublicRootInstance(container) {
  var containerFiber = container.current;

  if (!containerFiber.child) {
    return null;
  }

  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);

    default:
      return containerFiber.child.stateNode;
  }
}
function attemptSynchronousHydration$1(fiber) {
  switch (fiber.tag) {
    case HostRoot:
      {
        var root = fiber.stateNode;

        if (isRootDehydrated(root)) {
          // Flush the first scheduled "update".
          var lanes = getHighestPriorityPendingLanes(root);
          flushRoot(root, lanes);
        }

        break;
      }

    case SuspenseComponent:
      {
        flushSync(function () {
          var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

          if (root !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root, fiber, SyncLane, eventTime);
          }
        }); // If we're still blocked after this, we need to increase
        // the priority of any promises resolving within this
        // boundary so that they next attempt also has higher pri.

        var retryLane = SyncLane;
        markRetryLaneIfNotHydrated(fiber, retryLane);
        break;
      }
  }
}

function markRetryLaneImpl(fiber, retryLane) {
  var suspenseState = fiber.memoizedState;

  if (suspenseState !== null && suspenseState.dehydrated !== null) {
    suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
  }
} // Increases the priority of thenables when they resolve within this boundary.


function markRetryLaneIfNotHydrated(fiber, retryLane) {
  markRetryLaneImpl(fiber, retryLane);
  var alternate = fiber.alternate;

  if (alternate) {
    markRetryLaneImpl(alternate, retryLane);
  }
}
function attemptContinuousHydration$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority and they should not suspend on I/O,
    // since you have to wrap anything that might suspend in
    // Suspense.
    return;
  }

  var lane = SelectiveHydrationLane;
  var root = enqueueConcurrentRenderForLane(fiber, lane);

  if (root !== null) {
    var eventTime = requestEventTime();
    scheduleUpdateOnFiber(root, fiber, lane, eventTime);
  }

  markRetryLaneIfNotHydrated(fiber, lane);
}
function attemptHydrationAtCurrentPriority$1(fiber) {
  if (fiber.tag !== SuspenseComponent) {
    // We ignore HostRoots here because we can't increase
    // their priority other than synchronously flush it.
    return;
  }

  var lane = requestUpdateLane(fiber);
  var root = enqueueConcurrentRenderForLane(fiber, lane);

  if (root !== null) {
    var eventTime = requestEventTime();
    scheduleUpdateOnFiber(root, fiber, lane, eventTime);
  }

  markRetryLaneIfNotHydrated(fiber, lane);
}
function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

var shouldErrorImpl = function (fiber) {
  return null;
};

function shouldError(fiber) {
  return shouldErrorImpl(fiber);
}

var shouldSuspendImpl = function (fiber) {
  return false;
};

function shouldSuspend(fiber) {
  return shouldSuspendImpl(fiber);
}
var overrideHookState = null;
var overrideHookStateDeletePath = null;
var overrideHookStateRenamePath = null;
var overrideProps = null;
var overridePropsDeletePath = null;
var overridePropsRenamePath = null;
var scheduleUpdate = null;
var setErrorHandler = null;
var setSuspenseHandler = null;

{
  var copyWithDeleteImpl = function (obj, path, index) {
    var key = path[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj);

    if (index + 1 === path.length) {
      if (isArray(updated)) {
        updated.splice(key, 1);
      } else {
        delete updated[key];
      }

      return updated;
    } // $FlowFixMe number or string is fine here


    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
    return updated;
  };

  var copyWithDelete = function (obj, path) {
    return copyWithDeleteImpl(obj, path, 0);
  };

  var copyWithRenameImpl = function (obj, oldPath, newPath, index) {
    var oldKey = oldPath[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj);

    if (index + 1 === oldPath.length) {
      var newKey = newPath[index]; // $FlowFixMe number or string is fine here

      updated[newKey] = updated[oldKey];

      if (isArray(updated)) {
        updated.splice(oldKey, 1);
      } else {
        delete updated[oldKey];
      }
    } else {
      // $FlowFixMe number or string is fine here
      updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here
      obj[oldKey], oldPath, newPath, index + 1);
    }

    return updated;
  };

  var copyWithRename = function (obj, oldPath, newPath) {
    if (oldPath.length !== newPath.length) {
      warn('copyWithRename() expects paths of the same length');

      return;
    } else {
      for (var i = 0; i < newPath.length - 1; i++) {
        if (oldPath[i] !== newPath[i]) {
          warn('copyWithRename() expects paths to be the same except for the deepest key');

          return;
        }
      }
    }

    return copyWithRenameImpl(obj, oldPath, newPath, 0);
  };

  var copyWithSetImpl = function (obj, path, index, value) {
    if (index >= path.length) {
      return value;
    }

    var key = path[index];
    var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here

    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  var findHook = function (fiber, id) {
    // For now, the "id" of stateful hooks is just the stateful hook index.
    // This may change in the future with e.g. nested hooks.
    var currentHook = fiber.memoizedState;

    while (currentHook !== null && id > 0) {
      currentHook = currentHook.next;
      id--;
    }

    return currentHook;
  }; // Support DevTools editable values for useState and useReducer.


  overrideHookState = function (fiber, id, path, value) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithSet(hook.memoizedState, path, value);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  };

  overrideHookStateDeletePath = function (fiber, id, path) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithDelete(hook.memoizedState, path);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  };

  overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
    var hook = findHook(fiber, id);

    if (hook !== null) {
      var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
      hook.memoizedState = newState;
      hook.baseState = newState; // We aren't actually adding an update to the queue,
      // because there is no update we can add for useReducer hooks that won't trigger an error.
      // (There's no appropriate action type for DevTools overrides.)
      // As a result though, React will see the scheduled update as a noop and bailout.
      // Shallow cloning props works as a workaround for now to bypass the bailout check.

      fiber.memoizedProps = assign({}, fiber.memoizedProps);
      var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

      if (root !== null) {
        scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
      }
    }
  }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


  overrideProps = function (fiber, path, value) {
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  overridePropsDeletePath = function (fiber, path) {
    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  overridePropsRenamePath = function (fiber, oldPath, newPath) {
    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);

    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }

    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  scheduleUpdate = function (fiber) {
    var root = enqueueConcurrentRenderForLane(fiber, SyncLane);

    if (root !== null) {
      scheduleUpdateOnFiber(root, fiber, SyncLane, NoTimestamp);
    }
  };

  setErrorHandler = function (newShouldErrorImpl) {
    shouldErrorImpl = newShouldErrorImpl;
  };

  setSuspenseHandler = function (newShouldSuspendImpl) {
    shouldSuspendImpl = newShouldSuspendImpl;
  };
}

function findHostInstanceByFiber(fiber) {
  var hostFiber = findCurrentHostFiber(fiber);

  if (hostFiber === null) {
    return null;
  }

  return hostFiber.stateNode;
}

function emptyFindFiberByHostInstance(instance) {
  return null;
}

function getCurrentFiberForDevTools() {
  return current;
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
  return injectInternals({
    bundleType: devToolsConfig.bundleType,
    version: devToolsConfig.version,
    rendererPackageName: devToolsConfig.rendererPackageName,
    rendererConfig: devToolsConfig.rendererConfig,
    overrideHookState: overrideHookState,
    overrideHookStateDeletePath: overrideHookStateDeletePath,
    overrideHookStateRenamePath: overrideHookStateRenamePath,
    overrideProps: overrideProps,
    overridePropsDeletePath: overridePropsDeletePath,
    overridePropsRenamePath: overridePropsRenamePath,
    setErrorHandler: setErrorHandler,
    setSuspenseHandler: setSuspenseHandler,
    scheduleUpdate: scheduleUpdate,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: findHostInstanceByFiber,
    findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
    // React Refresh
    findHostInstancesForRefresh:  findHostInstancesForRefresh ,
    scheduleRefresh:  scheduleRefresh ,
    scheduleRoot:  scheduleRoot ,
    setRefreshHandler:  setRefreshHandler ,
    // Enables DevTools to append owner stacks to error messages in DEV mode.
    getCurrentFiber:  getCurrentFiberForDevTools ,
    // Enables DevTools to detect reconciler version rather than renderer version
    // which may not match for third party renderers.
    reconcilerVersion: ReactVersion
  });
}

/* global reportError */

var defaultOnRecoverableError = typeof reportError === 'function' ? // In modern browsers, reportError will dispatch an error event,
// emulating an uncaught JavaScript error.
reportError : function (error) {
  // In older browsers and test environments, fallback to console.error.
  // eslint-disable-next-line react-internal/no-production-logging
  console['error'](error);
};

function ReactDOMRoot(internalRoot) {
  this._internalRoot = internalRoot;
}

ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function (children) {
  var root = this._internalRoot;

  if (root === null) {
    throw new Error('Cannot update an unmounted root.');
  }

  {
    if (typeof arguments[1] === 'function') {
      error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    } else if (isValidContainer(arguments[1])) {
      error('You passed a container to the second argument of root.render(...). ' + "You don't need to pass it again since you already passed it to create the root.");
    } else if (typeof arguments[1] !== 'undefined') {
      error('You passed a second argument to root.render(...) but it only accepts ' + 'one argument.');
    }

    var container = root.containerInfo;

    if (container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(root.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + "root.unmount() to empty a root's container.");
        }
      }
    }
  }

  updateContainer(children, root, null, null);
};

ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function () {
  {
    if (typeof arguments[0] === 'function') {
      error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
    }
  }

  var root = this._internalRoot;

  if (root !== null) {
    this._internalRoot = null;
    var container = root.containerInfo;

    {
      if (isAlreadyRendering()) {
        error('Attempted to synchronously unmount a root while React was already ' + 'rendering. React cannot finish unmounting the root until the ' + 'current render has completed, which may lead to a race condition.');
      }
    }

    flushSync(function () {
      updateContainer(null, root, null, null);
    });
    unmarkContainerAsRoot(container);
  }
};

function createRoot(container, options) {
  if (!isValidContainer(container)) {
    throw new Error('createRoot(...): Target container is not a DOM element.');
  }

  warnIfReactDOMContainerInDEV(container);
  var isStrictMode = false;
  var concurrentUpdatesByDefaultOverride = false;
  var identifierPrefix = '';
  var onRecoverableError = defaultOnRecoverableError;
  var transitionCallbacks = null;

  if (options !== null && options !== undefined) {
    {
      if (options.hydrate) {
        warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');
      } else {
        if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) {
          error('You passed a JSX element to createRoot. You probably meant to ' + 'call root.render instead. ' + 'Example usage:\n\n' + '  let root = createRoot(domContainer);\n' + '  root.render(<App />);');
        }
      }
    }

    if (options.unstable_strictMode === true) {
      isStrictMode = true;
    }

    if (options.identifierPrefix !== undefined) {
      identifierPrefix = options.identifierPrefix;
    }

    if (options.onRecoverableError !== undefined) {
      onRecoverableError = options.onRecoverableError;
    }

    if (options.transitionCallbacks !== undefined) {
      transitionCallbacks = options.transitionCallbacks;
    }
  }

  var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
  markContainerAsRoot(root.current, container);
  var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
  listenToAllSupportedEvents(rootContainerElement);
  return new ReactDOMRoot(root);
}

function ReactDOMHydrationRoot(internalRoot) {
  this._internalRoot = internalRoot;
}

function scheduleHydration(target) {
  if (target) {
    queueExplicitHydrationTarget(target);
  }
}

ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
function hydrateRoot(container, initialChildren, options) {
  if (!isValidContainer(container)) {
    throw new Error('hydrateRoot(...): Target container is not a DOM element.');
  }

  warnIfReactDOMContainerInDEV(container);

  {
    if (initialChildren === undefined) {
      error('Must provide initial children as second argument to hydrateRoot. ' + 'Example usage: hydrateRoot(domContainer, <App />)');
    }
  } // For now we reuse the whole bag of options since they contain
  // the hydration callbacks.


  var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option

  var mutableSources = options != null && options.hydratedSources || null;
  var isStrictMode = false;
  var concurrentUpdatesByDefaultOverride = false;
  var identifierPrefix = '';
  var onRecoverableError = defaultOnRecoverableError;

  if (options !== null && options !== undefined) {
    if (options.unstable_strictMode === true) {
      isStrictMode = true;
    }

    if (options.identifierPrefix !== undefined) {
      identifierPrefix = options.identifierPrefix;
    }

    if (options.onRecoverableError !== undefined) {
      onRecoverableError = options.onRecoverableError;
    }
  }

  var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
  markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.

  listenToAllSupportedEvents(container);

  if (mutableSources) {
    for (var i = 0; i < mutableSources.length; i++) {
      var mutableSource = mutableSources[i];
      registerMutableSourceForHydration(root, mutableSource);
    }
  }

  return new ReactDOMHydrationRoot(root);
}
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers  ));
} // TODO: Remove this function which also includes comment nodes.
// We only use it in places that are currently more relaxed.

function isValidContainerLegacy(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function warnIfReactDOMContainerInDEV(container) {
  {
    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('createRoot(): Creating roots directly with document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try using a container element created ' + 'for your app.');
    }

    if (isContainerMarkedAsRoot(container)) {
      if (container._reactRootContainer) {
        error('You are calling ReactDOMClient.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');
      } else {
        error('You are calling ReactDOMClient.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');
      }
    }
  }
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
var topLevelUpdateWarnings;

{
  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);

      if (hostInstance) {
        if (hostInstance.parentNode !== container) {
          error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
        }
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));

    if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
      error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');
    }

    if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
      error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
    }
  };
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function noopOnRecoverableError() {// This isn't reachable because onRecoverableError isn't called in the
  // legacy API.
}

function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
  if (isHydrationContainer) {
    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(root);
        originalCallback.call(instance);
      };
    }

    var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, // hydrationCallbacks
    false, // isStrictMode
    false, // concurrentUpdatesByDefaultOverride,
    '', // identifierPrefix
    noopOnRecoverableError);
    container._reactRootContainer = root;
    markContainerAsRoot(root.current, container);
    var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
    listenToAllSupportedEvents(rootContainerElement);
    flushSync();
    return root;
  } else {
    // First clear any existing content.
    var rootSibling;

    while (rootSibling = container.lastChild) {
      container.removeChild(rootSibling);
    }

    if (typeof callback === 'function') {
      var _originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(_root);

        _originalCallback.call(instance);
      };
    }

    var _root = createContainer(container, LegacyRoot, null, // hydrationCallbacks
    false, // isStrictMode
    false, // concurrentUpdatesByDefaultOverride,
    '', // identifierPrefix
    noopOnRecoverableError);

    container._reactRootContainer = _root;
    markContainerAsRoot(_root.current, container);

    var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;

    listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.

    flushSync(function () {
      updateContainer(initialChildren, _root, parentComponent, callback);
    });
    return _root;
  }
}

function warnOnInvalidCallback$1(callback, callerName) {
  {
    if (callback !== null && typeof callback !== 'function') {
      error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  }
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
    warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
  }

  var maybeRoot = container._reactRootContainer;
  var root;

  if (!maybeRoot) {
    // Initial mount
    root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
  } else {
    root = maybeRoot;

    if (typeof callback === 'function') {
      var originalCallback = callback;

      callback = function () {
        var instance = getPublicRootInstance(root);
        originalCallback.call(instance);
      };
    } // Update


    updateContainer(children, root, parentComponent, callback);
  }

  return getPublicRootInstance(root);
}

function findDOMNode(componentOrElement) {
  {
    var owner = ReactCurrentOwner$3.current;

    if (owner !== null && owner.stateNode !== null) {
      var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;

      if (!warnedAboutRefsInRender) {
        error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentNameFromType(owner.type) || 'A component');
      }

      owner.stateNode._warnedAboutRefsInRender = true;
    }
  }

  if (componentOrElement == null) {
    return null;
  }

  if (componentOrElement.nodeType === ELEMENT_NODE) {
    return componentOrElement;
  }

  {
    return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
  }
}
function hydrate(element, container, callback) {
  {
    error('ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + "if it's running React 17. Learn " + 'more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(container)) {
    throw new Error('Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call hydrateRoot(container, element)?');
    }
  } // TODO: throw or warn if we couldn't hydrate?


  return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
}
function render(element, container, callback) {
  {
    error('ReactDOM.render is no longer supported in React 18. Use createRoot ' + 'instead. Until you switch to the new API, your app will behave as ' + "if it's running React 17. Learn " + 'more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(container)) {
    throw new Error('Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
    }
  }

  return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
}
function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  {
    error('ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported ' + 'in React 18. Consider using a portal instead. Until you switch to ' + "the createRoot API, your app will behave as if it's running React " + '17. Learn more: https://reactjs.org/link/switch-to-createroot');
  }

  if (!isValidContainerLegacy(containerNode)) {
    throw new Error('Target container is not a DOM element.');
  }

  if (parentComponent == null || !has(parentComponent)) {
    throw new Error('parentComponent must be a valid React Component');
  }

  return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
}
function unmountComponentAtNode(container) {
  if (!isValidContainerLegacy(container)) {
    throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');
  }

  {
    var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

    if (isModernRoot) {
      error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?');
    }
  }

  if (container._reactRootContainer) {
    {
      var rootEl = getReactRootElementInContainer(container);
      var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);

      if (renderedByDifferentReact) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }
    } // Unmount should not be batched.


    flushSync(function () {
      legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
        // $FlowFixMe This should probably use `delete container._reactRootContainer`
        container._reactRootContainer = null;
        unmarkContainerAsRoot(container);
      });
    }); // If you call unmountComponentAtNode twice in quick succession, you'll
    // get `true` twice. That's probably fine?

    return true;
  } else {
    {
      var _rootEl = getReactRootElementInContainer(container);

      var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.

      var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;

      if (hasNonRootReactChild) {
        error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }
    }

    return false;
  }
}

setAttemptSynchronousHydration(attemptSynchronousHydration$1);
setAttemptContinuousHydration(attemptContinuousHydration$1);
setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
setGetCurrentUpdatePriority(getCurrentUpdatePriority);
setAttemptHydrationAtPriority(runWithPriority);

{
  if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
  }
}

setRestoreImplementation(restoreControlledState$3);
setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);

function createPortal$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!isValidContainer(container)) {
    throw new Error('Target container is not a DOM element.');
  } // TODO: pass ReactDOM portal implementation as third argument
  // $FlowFixMe The Flow type is opaque but there's no way to actually create it.


  return createPortal(children, container, null, key);
}

function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
  return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
}

var Internals = {
  usingClientEntryPoint: false,
  // Keep in sync with ReactTestUtils.js.
  // This is an array for better minification.
  Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
};

function createRoot$1(container, options) {
  {
    if (!Internals.usingClientEntryPoint && !false) {
      error('You are importing createRoot from "react-dom" which is not supported. ' + 'You should instead import it from "react-dom/client".');
    }
  }

  return createRoot(container, options);
}

function hydrateRoot$1(container, initialChildren, options) {
  {
    if (!Internals.usingClientEntryPoint && !false) {
      error('You are importing hydrateRoot from "react-dom" which is not supported. ' + 'You should instead import it from "react-dom/client".');
    }
  }

  return hydrateRoot(container, initialChildren, options);
} // Overload the definition to the two valid signatures.
// Warning, this opts-out of checking the function body.


// eslint-disable-next-line no-redeclare
function flushSync$1(fn) {
  {
    if (isAlreadyRendering()) {
      error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');
    }
  }

  return flushSync(fn);
}
var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType:  1 ,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

      if (/^(https?|file):$/.test(protocol)) {
        // eslint-disable-next-line react-internal/no-production-logging
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}

exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
exports.createPortal = createPortal$1;
exports.createRoot = createRoot$1;
exports.findDOMNode = findDOMNode;
exports.flushSync = flushSync$1;
exports.hydrate = hydrate;
exports.hydrateRoot = hydrateRoot$1;
exports.render = render;
exports.unmountComponentAtNode = unmountComponentAtNode;
exports.unstable_batchedUpdates = batchedUpdates$1;
exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var ReactVersion = '18.2.0';

// ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.
var REACT_ELEMENT_TYPE = Symbol.for('react.element');
var REACT_PORTAL_TYPE = Symbol.for('react.portal');
var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
var REACT_CONTEXT_TYPE = Symbol.for('react.context');
var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
var REACT_MEMO_TYPE = Symbol.for('react.memo');
var REACT_LAZY_TYPE = Symbol.for('react.lazy');
var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */
var ReactCurrentBatchConfig = {
  transition: null
};

var ReactCurrentActQueue = {
  current: null,
  // Used to reproduce behavior of `batchedUpdates` in legacy mode.
  isBatchingLegacy: false,
  didScheduleLegacyUpdate: false
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var ReactDebugCurrentFrame = {};
var currentExtraStackFrame = null;
function setExtraStackFrame(stack) {
  {
    currentExtraStackFrame = stack;
  }
}

{
  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
    {
      currentExtraStackFrame = stack;
    }
  }; // Stack implementation injected by the current renderer.


  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = ''; // Add an extra top frame while an element is being validated

    if (currentExtraStackFrame) {
      stack += currentExtraStackFrame;
    } // Delegate to the injected renderer-specific implementation


    var impl = ReactDebugCurrentFrame.getCurrentStack;

    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

// -----------------------------------------------------------------------------

var enableScopeAPI = false; // Experimental Create Event Handle API.
var enableCacheElement = false;
var enableTransitionTracing = false; // No known bugs, but needs performance testing

var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
// stuff. Intended to enable React core members to more easily debug scheduling
// issues in DEV builds.

var enableDebugTracing = false; // Track which Fiber(s) schedule render work.

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentBatchConfig: ReactCurrentBatchConfig,
  ReactCurrentOwner: ReactCurrentOwner
};

{
  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
}

// by calls to these methods by a Babel plugin.
//
// In PROD (or in packages without access to React internals),
// they are left as they are instead.

function warn(format) {
  {
    {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      printWarning('warn', format, args);
    }
  }
}
function error(format) {
  {
    {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      printWarning('error', format, args);
    }
  }
}

function printWarning(level, format, args) {
  // When changing this logic, you might want to also
  // update consoleWithStackDev.www.js as well.
  {
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();

    if (stack !== '') {
      format += '%s';
      args = args.concat([stack]);
    } // eslint-disable-next-line react-internal/safe-string-coercion


    var argsWithFormat = args.map(function (item) {
      return String(item);
    }); // Careful: RN currently depends on this prefix

    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
    // breaks IE9: https://github.com/facebook/react/issues/13610
    // eslint-disable-next-line react-internal/no-production-logging

    Function.prototype.apply.call(console[level], console, argsWithFormat);
  }
}

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + "." + callerName;

    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }

    error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);

    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}
/**
 * This is the abstract API for an update queue.
 */


var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var assign = Object.assign;

var emptyObject = {};

{
  Object.freeze(emptyObject);
}
/**
 * Base class helpers for the updating state of a component.
 */


function Component(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
  // renderer.

  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};
/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */

Component.prototype.setState = function (partialState, callback) {
  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {
    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');
  }

  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};
/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */


Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};
/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */


{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };

  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);

        return undefined;
      }
    });
  };

  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}

ComponentDummy.prototype = Component.prototype;
/**
 * Convenience component with default shallow equality check for sCU.
 */

function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context; // If a component has string refs, we will assign a different object later.

  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };

  {
    Object.seal(refObject);
  }

  return refObject;
}

var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare

function isArray(a) {
  return isArrayImpl(a);
}

/*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */
// $FlowFixMe only called in DEV, so void return is not possible.
function typeName(value) {
  {
    // toStringTag is needed for namespaced types like Temporal.Instant
    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
    return type;
  }
} // $FlowFixMe only called in DEV, so void return is not possible.


function willCoercionThrow(value) {
  {
    try {
      testStringCoercion(value);
      return false;
    } catch (e) {
      return true;
    }
  }
}

function testStringCoercion(value) {
  // If you ended up here by following an exception call stack, here's what's
  // happened: you supplied an object or symbol value to React (as a prop, key,
  // DOM attribute, CSS property, string ref, etc.) and when React tried to
  // coerce it to a string using `'' + value`, an exception was thrown.
  //
  // The most common types that will cause this exception are `Symbol` instances
  // and Temporal objects like `Temporal.Instant`. But any object that has a
  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
  // exception. (Library authors do this to prevent users from using built-in
  // numeric operators like `+` or comparison operators like `>=` because custom
  // methods are needed to perform accurate arithmetic or comparison.)
  //
  // To fix the problem, coerce this object or symbol value to a string before
  // passing it to React. The most reliable way is usually `String(value)`.
  //
  // To find which value is throwing, check the browser or debugger console.
  // Before this exception was thrown, there should be `console.error` output
  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
  // problem and how that type was used: key, atrribute, input value prop, etc.
  // In most cases, this console output also shows the component and its
  // ancestor components where the exception happened.
  //
  // eslint-disable-next-line react-internal/safe-string-coercion
  return '' + value;
}
function checkKeyStringCoercion(value) {
  {
    if (willCoercionThrow(value)) {
      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));

      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
    }
  }
}

function getWrappedName(outerType, innerType, wrapperName) {
  var displayName = outerType.displayName;

  if (displayName) {
    return displayName;
  }

  var functionName = innerType.displayName || innerType.name || '';
  return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
} // Keep in sync with react-reconciler/getComponentNameFromFiber


function getContextName(type) {
  return type.displayName || 'Context';
} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.


function getComponentNameFromType(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }

  {
    if (typeof type.tag === 'number') {
      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }

  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }

  if (typeof type === 'string') {
    return type;
  }

  switch (type) {
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        var context = type;
        return getContextName(context) + '.Consumer';

      case REACT_PROVIDER_TYPE:
        var provider = type;
        return getContextName(provider._context) + '.Provider';

      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');

      case REACT_MEMO_TYPE:
        var outerName = type.displayName || null;

        if (outerName !== null) {
          return outerName;
        }

        return getComponentNameFromType(type.type) || 'Memo';

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            return getComponentNameFromType(init(payload));
          } catch (x) {
            return null;
          }
        }

      // eslint-disable-next-line no-fallthrough
    }
  }

  return null;
}

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};
var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;

{
  didWarnAboutStringRefs = {};
}

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }

  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;

        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;

        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
      }
    }
  };

  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

function warnIfStringRefCannotBeAutoConverted(config) {
  {
    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);

      if (!didWarnAboutStringRefs[componentName]) {
        error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);

        didWarnAboutStringRefs[componentName] = true;
      }
    }
  }
}
/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */


var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,
    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,
    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.

    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    }); // self and source are DEV only properties.

    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    }); // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.

    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });

    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};
/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */

function createElement(type, config, children) {
  var propName; // Reserved names are extracted

  var props = {};
  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;

      {
        warnIfStringRefCannotBeAutoConverted(config);
      }
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }

    props.children = childArray;
  } // Resolve default props


  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;

    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }

  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }

      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }

  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}
function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
  return newElement;
}
/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */

function cloneElement(element, config, children) {
  if (element === null || element === undefined) {
    throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
  }

  var propName; // Original props are copied

  var props = assign({}, element.props); // Reserved names are extracted

  var key = element.key;
  var ref = element.ref; // Self is preserved since the owner is preserved.

  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.

  var source = element._source; // Owner will be preserved, unless ref is overridden

  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }

    if (hasValidKey(config)) {
      {
        checkKeyStringCoercion(config.key);
      }

      key = '' + config.key;
    } // Remaining properties override existing props


    var defaultProps;

    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }

    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  } // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.


  var childrenLength = arguments.length - 2;

  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);

    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }

    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}
/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */

function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';
/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = key.replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });
  return '$' + escapedString;
}
/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */


var didWarnAboutMaps = false;
var userProvidedKeyEscapeRegex = /\/+/g;

function escapeUserProvidedKey(text) {
  return text.replace(userProvidedKeyEscapeRegex, '$&/');
}
/**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */


function getElementKey(element, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof element === 'object' && element !== null && element.key != null) {
    // Explicit key
    {
      checkKeyStringCoercion(element.key);
    }

    return escape('' + element.key);
  } // Implicit key determined by the index in the set


  return index.toString(36);
}

function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;

      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }

    }
  }

  if (invokeCallback) {
    var _child = children;
    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows:

    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

    if (isArray(mappedChild)) {
      var escapedChildKey = '';

      if (childKey != null) {
        escapedChildKey = escapeUserProvidedKey(childKey) + '/';
      }

      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
        return c;
      });
    } else if (mappedChild != null) {
      if (isValidElement(mappedChild)) {
        {
          // The `if` statement here prevents auto-disabling of the safe
          // coercion ESLint rule, so we must manually disable it below.
          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
            checkKeyStringCoercion(mappedChild.key);
          }
        }

        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
        // eslint-disable-next-line react-internal/safe-string-coercion
        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
      }

      array.push(mappedChild);
    }

    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.

  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getElementKey(child, i);
      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
    }
  } else {
    var iteratorFn = getIteratorFn(children);

    if (typeof iteratorFn === 'function') {
      var iterableChildren = children;

      {
        // Warn about using Maps as children
        if (iteratorFn === iterableChildren.entries) {
          if (!didWarnAboutMaps) {
            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
          }

          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(iterableChildren);
      var step;
      var ii = 0;

      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getElementKey(child, ii++);
        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
      }
    } else if (type === 'object') {
      // eslint-disable-next-line react-internal/safe-string-coercion
      var childrenString = String(children);
      throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
  }

  return subtreeCount;
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var result = [];
  var count = 0;
  mapIntoArray(children, result, '', '', function (child) {
    return func.call(context, child, count++);
  });
  return result;
}
/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */


function countChildren(children) {
  var n = 0;
  mapChildren(children, function () {
    n++; // Don't return anything
  });
  return n;
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  mapChildren(children, function () {
    forEachFunc.apply(this, arguments); // Don't return anything.
  }, forEachContext);
}
/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */


function toArray(children) {
  return mapChildren(children, function (child) {
    return child;
  }) || [];
}
/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */


function onlyChild(children) {
  if (!isValidElement(children)) {
    throw new Error('React.Children.only expected to receive a single React element child.');
  }

  return children;
}

function createContext(defaultValue) {
  // TODO: Second argument used to be an optional `calculateChangedBits`
  // function. Warn to reserve for future use?
  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null,
    // Add these to use same hidden class in VM as ServerContext
    _defaultValue: null,
    _globalName: null
  };
  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };
  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;
  var hasWarnedAboutDisplayNameOnConsumer = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context
    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;

            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }

          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;

            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }

          return context.Consumer;
        }
      },
      displayName: {
        get: function () {
          return context.displayName;
        },
        set: function (displayName) {
          if (!hasWarnedAboutDisplayNameOnConsumer) {
            warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);

            hasWarnedAboutDisplayNameOnConsumer = true;
          }
        }
      }
    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

var Uninitialized = -1;
var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function lazyInitializer(payload) {
  if (payload._status === Uninitialized) {
    var ctor = payload._result;
    var thenable = ctor(); // Transition to the next state.
    // This might throw either because it's missing or throws. If so, we treat it
    // as still uninitialized and try again next time. Which is the same as what
    // happens if the ctor or any wrappers processing the ctor throws. This might
    // end up fixing it if the resolution was a concurrency bug.

    thenable.then(function (moduleObject) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var resolved = payload;
        resolved._status = Resolved;
        resolved._result = moduleObject;
      }
    }, function (error) {
      if (payload._status === Pending || payload._status === Uninitialized) {
        // Transition to the next state.
        var rejected = payload;
        rejected._status = Rejected;
        rejected._result = error;
      }
    });

    if (payload._status === Uninitialized) {
      // In case, we're still uninitialized, then we're waiting for the thenable
      // to resolve. Set it as pending in the meantime.
      var pending = payload;
      pending._status = Pending;
      pending._result = thenable;
    }
  }

  if (payload._status === Resolved) {
    var moduleObject = payload._result;

    {
      if (moduleObject === undefined) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))\n\n" + 'Did you accidentally put curly braces around the import?', moduleObject);
      }
    }

    {
      if (!('default' in moduleObject)) {
        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
        'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
      }
    }

    return moduleObject.default;
  } else {
    throw payload._result;
  }
}

function lazy(ctor) {
  var payload = {
    // We use these fields to store the result.
    _status: Uninitialized,
    _result: ctor
  };
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _payload: payload,
    _init: lazyInitializer
  };

  {
    // In production, this would just set it on the object.
    var defaultProps;
    var propTypes; // $FlowFixMe

    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          defaultProps = newDefaultProps; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');

          propTypes = newPropTypes; // Match production behavior more closely:
          // $FlowFixMe

          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      if (render.length !== 0 && render.length !== 2) {
        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
      }
    }

    if (render != null) {
      if (render.defaultProps != null || render.propTypes != null) {
        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
      }
    }
  }

  var elementType = {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.forwardRef((props, ref) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!render.name && !render.displayName) {
          render.displayName = name;
        }
      }
    });
  }

  return elementType;
}

var REACT_MODULE_REFERENCE;

{
  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
}

function isValidElementType(type) {
  if (typeof type === 'string' || typeof type === 'function') {
    return true;
  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {
    return true;
  }

  if (typeof type === 'object' && type !== null) {
    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
    // types supported by any Flight configuration anywhere since
    // we don't know which Flight build this will end up being used
    // with.
    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {
      return true;
    }
  }

  return false;
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }

  var elementType = {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };

  {
    var ownName;
    Object.defineProperty(elementType, 'displayName', {
      enumerable: false,
      configurable: true,
      get: function () {
        return ownName;
      },
      set: function (name) {
        ownName = name; // The inner component shouldn't inherit this display name in most cases,
        // because the component may be used elsewhere.
        // But it's nice for anonymous functions to inherit the name,
        // so that our component-stack generation logic will display their frames.
        // An anonymous function generally suggests a pattern like:
        //   React.memo((props) => {...});
        // This kind of inner function is not used elsewhere so the side effect is okay.

        if (!type.name && !type.displayName) {
          type.displayName = name;
        }
      }
    });
  }

  return elementType;
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;

  {
    if (dispatcher === null) {
      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\n' + '2. You might be breaking the Rules of Hooks\n' + '3. You might have more than one copy of React in the same app\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');
    }
  } // Will result in a null access error if accessed outside render phase. We
  // intentionally don't throw our own error because this is in a hot path.
  // Also helps ensure this is inlined.


  return dispatcher;
}
function useContext(Context) {
  var dispatcher = resolveDispatcher();

  {
    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.

      if (realContext.Consumer === Context) {
        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }

  return dispatcher.useContext(Context);
}
function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}
function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}
function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}
function useEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, deps);
}
function useInsertionEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useInsertionEffect(create, deps);
}
function useLayoutEffect(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, deps);
}
function useCallback(callback, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, deps);
}
function useMemo(create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, deps);
}
function useImperativeHandle(ref, create, deps) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, deps);
}
function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}
function useTransition() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useTransition();
}
function useDeferredValue(value) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useDeferredValue(value);
}
function useId() {
  var dispatcher = resolveDispatcher();
  return dispatcher.useId();
}
function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
}

// Helpers to patch console.logs to avoid logging during side-effect free
// replaying on render function. This currently only patches the object
// lazily which won't cover if the log function was extracted eagerly.
// We could also eagerly patch the method.
var disabledDepth = 0;
var prevLog;
var prevInfo;
var prevWarn;
var prevError;
var prevGroup;
var prevGroupCollapsed;
var prevGroupEnd;

function disabledLog() {}

disabledLog.__reactDisabledLog = true;
function disableLogs() {
  {
    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      prevLog = console.log;
      prevInfo = console.info;
      prevWarn = console.warn;
      prevError = console.error;
      prevGroup = console.group;
      prevGroupCollapsed = console.groupCollapsed;
      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

      var props = {
        configurable: true,
        enumerable: true,
        value: disabledLog,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        info: props,
        log: props,
        warn: props,
        error: props,
        group: props,
        groupCollapsed: props,
        groupEnd: props
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    disabledDepth++;
  }
}
function reenableLogs() {
  {
    disabledDepth--;

    if (disabledDepth === 0) {
      /* eslint-disable react-internal/no-production-logging */
      var props = {
        configurable: true,
        enumerable: true,
        writable: true
      }; // $FlowFixMe Flow thinks console is immutable.

      Object.defineProperties(console, {
        log: assign({}, props, {
          value: prevLog
        }),
        info: assign({}, props, {
          value: prevInfo
        }),
        warn: assign({}, props, {
          value: prevWarn
        }),
        error: assign({}, props, {
          value: prevError
        }),
        group: assign({}, props, {
          value: prevGroup
        }),
        groupCollapsed: assign({}, props, {
          value: prevGroupCollapsed
        }),
        groupEnd: assign({}, props, {
          value: prevGroupEnd
        })
      });
      /* eslint-enable react-internal/no-production-logging */
    }

    if (disabledDepth < 0) {
      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
    }
  }
}

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
var prefix;
function describeBuiltInComponentFrame(name, source, ownerFn) {
  {
    if (prefix === undefined) {
      // Extract the VM specific prefix used by each line.
      try {
        throw Error();
      } catch (x) {
        var match = x.stack.trim().match(/\n( *(at )?)/);
        prefix = match && match[1] || '';
      }
    } // We use the prefix to ensure our stacks line up with native stack frames.


    return '\n' + prefix + name;
  }
}
var reentry = false;
var componentFrameCache;

{
  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
  componentFrameCache = new PossiblyWeakMap();
}

function describeNativeComponentFrame(fn, construct) {
  // If something asked for a stack inside a fake render, it should get ignored.
  if ( !fn || reentry) {
    return '';
  }

  {
    var frame = componentFrameCache.get(fn);

    if (frame !== undefined) {
      return frame;
    }
  }

  var control;
  reentry = true;
  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

  Error.prepareStackTrace = undefined;
  var previousDispatcher;

  {
    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
    // for warnings.

    ReactCurrentDispatcher$1.current = null;
    disableLogs();
  }

  try {
    // This should throw.
    if (construct) {
      // Something should be setting the props in the constructor.
      var Fake = function () {
        throw Error();
      }; // $FlowFixMe


      Object.defineProperty(Fake.prototype, 'props', {
        set: function () {
          // We use a throwing setter instead of frozen or non-writable props
          // because that won't throw in a non-strict mode function.
          throw Error();
        }
      });

      if (typeof Reflect === 'object' && Reflect.construct) {
        // We construct a different control for this case to include any extra
        // frames added by the construct call.
        try {
          Reflect.construct(Fake, []);
        } catch (x) {
          control = x;
        }

        Reflect.construct(fn, [], Fake);
      } else {
        try {
          Fake.call();
        } catch (x) {
          control = x;
        }

        fn.call(Fake.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (x) {
        control = x;
      }

      fn();
    }
  } catch (sample) {
    // This is inlined manually because closure doesn't do it for us.
    if (sample && control && typeof sample.stack === 'string') {
      // This extracts the first frame from the sample that isn't also in the control.
      // Skipping one frame that we assume is the frame that calls the two.
      var sampleLines = sample.stack.split('\n');
      var controlLines = control.stack.split('\n');
      var s = sampleLines.length - 1;
      var c = controlLines.length - 1;

      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
        // We expect at least one stack frame to be shared.
        // Typically this will be the root most one. However, stack frames may be
        // cut off due to maximum stack limits. In this case, one maybe cut off
        // earlier than the other. We assume that the sample is longer or the same
        // and there for cut off earlier. So we should find the root most frame in
        // the sample somewhere in the control.
        c--;
      }

      for (; s >= 1 && c >= 0; s--, c--) {
        // Next we find the first one that isn't the same which should be the
        // frame that called our sample function and the control.
        if (sampleLines[s] !== controlLines[c]) {
          // In V8, the first line is describing the message but other VMs don't.
          // If we're about to return the first line, and the control is also on the same
          // line, that's a pretty good indicator that our sample threw at same line as
          // the control. I.e. before we entered the sample frame. So we ignore this result.
          // This can happen if you passed a class to function component, or non-function.
          if (s !== 1 || c !== 1) {
            do {
              s--;
              c--; // We may still have similar intermediate frames from the construct call.
              // The next one that isn't the same should be our match though.

              if (c < 0 || sampleLines[s] !== controlLines[c]) {
                // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                // but we have a user-provided "displayName"
                // splice it in to make the stack more readable.


                if (fn.displayName && _frame.includes('<anonymous>')) {
                  _frame = _frame.replace('<anonymous>', fn.displayName);
                }

                {
                  if (typeof fn === 'function') {
                    componentFrameCache.set(fn, _frame);
                  }
                } // Return the line we found.


                return _frame;
              }
            } while (s >= 1 && c >= 0);
          }

          break;
        }
      }
    }
  } finally {
    reentry = false;

    {
      ReactCurrentDispatcher$1.current = previousDispatcher;
      reenableLogs();
    }

    Error.prepareStackTrace = previousPrepareStackTrace;
  } // Fallback to just using the name if we couldn't make it throw.


  var name = fn ? fn.displayName || fn.name : '';
  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';

  {
    if (typeof fn === 'function') {
      componentFrameCache.set(fn, syntheticFrame);
    }
  }

  return syntheticFrame;
}
function describeFunctionComponentFrame(fn, source, ownerFn) {
  {
    return describeNativeComponentFrame(fn, false);
  }
}

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {

  if (type == null) {
    return '';
  }

  if (typeof type === 'function') {
    {
      return describeNativeComponentFrame(type, shouldConstruct(type));
    }
  }

  if (typeof type === 'string') {
    return describeBuiltInComponentFrame(type);
  }

  switch (type) {
    case REACT_SUSPENSE_TYPE:
      return describeBuiltInComponentFrame('Suspense');

    case REACT_SUSPENSE_LIST_TYPE:
      return describeBuiltInComponentFrame('SuspenseList');
  }

  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_FORWARD_REF_TYPE:
        return describeFunctionComponentFrame(type.render);

      case REACT_MEMO_TYPE:
        // Memo may contain any component type so we recursively resolve it.
        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

      case REACT_LAZY_TYPE:
        {
          var lazyComponent = type;
          var payload = lazyComponent._payload;
          var init = lazyComponent._init;

          try {
            // Lazy may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
          } catch (x) {}
        }
    }
  }

  return '';
}

var loggedTypeFailures = {};
var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

function setCurrentlyValidatingElement(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
    } else {
      ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
  }
}

function checkPropTypes(typeSpecs, values, location, componentName, element) {
  {
    // $FlowFixMe This is okay but Flow doesn't know it.
    var has = Function.call.bind(hasOwnProperty);

    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            // eslint-disable-next-line react-internal/prod-error-codes
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
        } catch (ex) {
          error$1 = ex;
        }

        if (error$1 && !(error$1 instanceof Error)) {
          setCurrentlyValidatingElement(element);

          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);

          setCurrentlyValidatingElement(null);
        }

        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error$1.message] = true;
          setCurrentlyValidatingElement(element);

          error('Failed %s type: %s', location, error$1.message);

          setCurrentlyValidatingElement(null);
        }
      }
    }
  }
}

function setCurrentlyValidatingElement$1(element) {
  {
    if (element) {
      var owner = element._owner;
      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
      setExtraStackFrame(stack);
    } else {
      setExtraStackFrame(null);
    }
  }
}

var propTypesMisspellWarningShown;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentNameFromType(ReactCurrentOwner.current.type);

    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }

  return '';
}

function getSourceInfoErrorAddendum(source) {
  if (source !== undefined) {
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }

  return '';
}

function getSourceInfoErrorAddendumForProps(elementProps) {
  if (elementProps !== null && elementProps !== undefined) {
    return getSourceInfoErrorAddendum(elementProps.__source);
  }

  return '';
}
/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */


var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

    if (parentName) {
      info = "\n\nCheck the top-level render call using <" + parentName + ">.";
    }
  }

  return info;
}
/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */


function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }

  element._store.validated = true;
  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }

  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.

  var childOwner = '';

  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
  }

  {
    setCurrentlyValidatingElement$1(element);

    error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);

    setCurrentlyValidatingElement$1(null);
  }
}
/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */


function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }

  if (isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];

      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);

    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;

        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}
/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */


function validatePropTypes(element) {
  {
    var type = element.type;

    if (type === null || type === undefined || typeof type === 'string') {
      return;
    }

    var propTypes;

    if (typeof type === 'function') {
      propTypes = type.propTypes;
    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
    // Inner props are checked in the reconciler.
    type.$$typeof === REACT_MEMO_TYPE)) {
      propTypes = type.propTypes;
    } else {
      return;
    }

    if (propTypes) {
      // Intentionally inside to avoid triggering lazy initializers:
      var name = getComponentNameFromType(type);
      checkPropTypes(propTypes, element.props, 'prop', name, element);
    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

      var _name = getComponentNameFromType(type);

      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
    }

    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
    }
  }
}
/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */


function validateFragmentProps(fragment) {
  {
    var keys = Object.keys(fragment.props);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];

      if (key !== 'children' && key !== 'key') {
        setCurrentlyValidatingElement$1(fragment);

        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);

        setCurrentlyValidatingElement$1(null);
        break;
      }
    }

    if (fragment.ref !== null) {
      setCurrentlyValidatingElement$1(fragment);

      error('Invalid attribute `ref` supplied to `React.Fragment`.');

      setCurrentlyValidatingElement$1(null);
    }
  }
}
function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.

  if (!validType) {
    var info = '';

    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendumForProps(props);

    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString;

    if (type === null) {
      typeString = 'null';
    } else if (isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    {
      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
    }
  }

  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.

  if (element == null) {
    return element;
  } // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)


  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}
var didWarnAboutDeprecatedCreateFactory = false;
function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;

  {
    if (!didWarnAboutDeprecatedCreateFactory) {
      didWarnAboutDeprecatedCreateFactory = true;

      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
    } // Legacy hook: remove it


    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');

        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}
function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);

  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }

  validatePropTypes(newElement);
  return newElement;
}

function startTransition(scope, options) {
  var prevTransition = ReactCurrentBatchConfig.transition;
  ReactCurrentBatchConfig.transition = {};
  var currentTransition = ReactCurrentBatchConfig.transition;

  {
    ReactCurrentBatchConfig.transition._updatedFibers = new Set();
  }

  try {
    scope();
  } finally {
    ReactCurrentBatchConfig.transition = prevTransition;

    {
      if (prevTransition === null && currentTransition._updatedFibers) {
        var updatedFibersCount = currentTransition._updatedFibers.size;

        if (updatedFibersCount > 10) {
          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');
        }

        currentTransition._updatedFibers.clear();
      }
    }
  }
}

var didWarnAboutMessageChannel = false;
var enqueueTaskImpl = null;
function enqueueTask(task) {
  if (enqueueTaskImpl === null) {
    try {
      // read require off the module object to get around the bundlers.
      // we don't want them to detect a require and bundle a Node polyfill.
      var requireString = ('require' + Math.random()).slice(0, 7);
      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
      // version of setImmediate, bypassing fake timers if any.

      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
    } catch (_err) {
      // we're in a browser
      // we can't use regular timers because they may still be faked
      // so we try MessageChannel+postMessage instead
      enqueueTaskImpl = function (callback) {
        {
          if (didWarnAboutMessageChannel === false) {
            didWarnAboutMessageChannel = true;

            if (typeof MessageChannel === 'undefined') {
              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');
            }
          }
        }

        var channel = new MessageChannel();
        channel.port1.onmessage = callback;
        channel.port2.postMessage(undefined);
      };
    }
  }

  return enqueueTaskImpl(task);
}

var actScopeDepth = 0;
var didWarnNoAwaitAct = false;
function act(callback) {
  {
    // `act` calls can be nested, so we track the depth. This represents the
    // number of `act` scopes on the stack.
    var prevActScopeDepth = actScopeDepth;
    actScopeDepth++;

    if (ReactCurrentActQueue.current === null) {
      // This is the outermost `act` scope. Initialize the queue. The reconciler
      // will detect the queue and use it instead of Scheduler.
      ReactCurrentActQueue.current = [];
    }

    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
    var result;

    try {
      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
      // set to `true` while the given callback is executed, not for updates
      // triggered during an async event, because this is how the legacy
      // implementation of `act` behaved.
      ReactCurrentActQueue.isBatchingLegacy = true;
      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
      // which flushed updates immediately after the scope function exits, even
      // if it's an async function.

      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
        var queue = ReactCurrentActQueue.current;

        if (queue !== null) {
          ReactCurrentActQueue.didScheduleLegacyUpdate = false;
          flushActQueue(queue);
        }
      }
    } catch (error) {
      popActScope(prevActScopeDepth);
      throw error;
    } finally {
      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
    }

    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
      // for it to resolve before exiting the current scope.

      var wasAwaited = false;
      var thenable = {
        then: function (resolve, reject) {
          wasAwaited = true;
          thenableResult.then(function (returnValue) {
            popActScope(prevActScopeDepth);

            if (actScopeDepth === 0) {
              // We've exited the outermost act scope. Recursively flush the
              // queue until there's no remaining work.
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }, function (error) {
            // The callback threw an error.
            popActScope(prevActScopeDepth);
            reject(error);
          });
        }
      };

      {
        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {
          // eslint-disable-next-line no-undef
          Promise.resolve().then(function () {}).then(function () {
            if (!wasAwaited) {
              didWarnNoAwaitAct = true;

              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');
            }
          });
        }
      }

      return thenable;
    } else {
      var returnValue = result; // The callback is not an async function. Exit the current scope
      // immediately, without awaiting.

      popActScope(prevActScopeDepth);

      if (actScopeDepth === 0) {
        // Exiting the outermost act scope. Flush the queue.
        var _queue = ReactCurrentActQueue.current;

        if (_queue !== null) {
          flushActQueue(_queue);
          ReactCurrentActQueue.current = null;
        } // Return a thenable. If the user awaits it, we'll flush again in
        // case additional work was scheduled by a microtask.


        var _thenable = {
          then: function (resolve, reject) {
            // Confirm we haven't re-entered another `act` scope, in case
            // the user does something weird like await the thenable
            // multiple times.
            if (ReactCurrentActQueue.current === null) {
              // Recursively flush the queue until there's no remaining work.
              ReactCurrentActQueue.current = [];
              recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            } else {
              resolve(returnValue);
            }
          }
        };
        return _thenable;
      } else {
        // Since we're inside a nested `act` scope, the returned thenable
        // immediately resolves. The outer scope will flush the queue.
        var _thenable2 = {
          then: function (resolve, reject) {
            resolve(returnValue);
          }
        };
        return _thenable2;
      }
    }
  }
}

function popActScope(prevActScopeDepth) {
  {
    if (prevActScopeDepth !== actScopeDepth - 1) {
      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');
    }

    actScopeDepth = prevActScopeDepth;
  }
}

function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
  {
    var queue = ReactCurrentActQueue.current;

    if (queue !== null) {
      try {
        flushActQueue(queue);
        enqueueTask(function () {
          if (queue.length === 0) {
            // No additional work was scheduled. Finish.
            ReactCurrentActQueue.current = null;
            resolve(returnValue);
          } else {
            // Keep flushing work until there's none left.
            recursivelyFlushAsyncActWork(returnValue, resolve, reject);
          }
        });
      } catch (error) {
        reject(error);
      }
    } else {
      resolve(returnValue);
    }
  }
}

var isFlushing = false;

function flushActQueue(queue) {
  {
    if (!isFlushing) {
      // Prevent re-entrance.
      isFlushing = true;
      var i = 0;

      try {
        for (; i < queue.length; i++) {
          var callback = queue[i];

          do {
            callback = callback(true);
          } while (callback !== null);
        }

        queue.length = 0;
      } catch (error) {
        // If something throws, leave the remaining callbacks on the queue.
        queue = queue.slice(i + 1);
        throw error;
      } finally {
        isFlushing = false;
      }
    }
  }
}

var createElement$1 =  createElementWithValidation ;
var cloneElement$1 =  cloneElementWithValidation ;
var createFactory =  createFactoryWithValidation ;
var Children = {
  map: mapChildren,
  forEach: forEachChildren,
  count: countChildren,
  toArray: toArray,
  only: onlyChild
};

exports.Children = Children;
exports.Component = Component;
exports.Fragment = REACT_FRAGMENT_TYPE;
exports.Profiler = REACT_PROFILER_TYPE;
exports.PureComponent = PureComponent;
exports.StrictMode = REACT_STRICT_MODE_TYPE;
exports.Suspense = REACT_SUSPENSE_TYPE;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
exports.cloneElement = cloneElement$1;
exports.createContext = createContext;
exports.createElement = createElement$1;
exports.createFactory = createFactory;
exports.createRef = createRef;
exports.forwardRef = forwardRef;
exports.isValidElement = isValidElement;
exports.lazy = lazy;
exports.memo = memo;
exports.startTransition = startTransition;
exports.unstable_act = act;
exports.useCallback = useCallback;
exports.useContext = useContext;
exports.useDebugValue = useDebugValue;
exports.useDeferredValue = useDeferredValue;
exports.useEffect = useEffect;
exports.useId = useId;
exports.useImperativeHandle = useImperativeHandle;
exports.useInsertionEffect = useInsertionEffect;
exports.useLayoutEffect = useLayoutEffect;
exports.useMemo = useMemo;
exports.useReducer = useReducer;
exports.useRef = useRef;
exports.useState = useState;
exports.useSyncExternalStore = useSyncExternalStore;
exports.useTransition = useTransition;
exports.version = ReactVersion;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (true) {
  (function() {

          'use strict';

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
}
          var enableSchedulerDebugging = false;
var enableProfiling = false;
var frameYieldMs = 5;

function push(heap, node) {
  var index = heap.length;
  heap.push(node);
  siftUp(heap, node, index);
}
function peek(heap) {
  return heap.length === 0 ? null : heap[0];
}
function pop(heap) {
  if (heap.length === 0) {
    return null;
  }

  var first = heap[0];
  var last = heap.pop();

  if (last !== first) {
    heap[0] = last;
    siftDown(heap, last, 0);
  }

  return first;
}

function siftUp(heap, node, i) {
  var index = i;

  while (index > 0) {
    var parentIndex = index - 1 >>> 1;
    var parent = heap[parentIndex];

    if (compare(parent, node) > 0) {
      // The parent is larger. Swap positions.
      heap[parentIndex] = node;
      heap[index] = parent;
      index = parentIndex;
    } else {
      // The parent is smaller. Exit.
      return;
    }
  }
}

function siftDown(heap, node, i) {
  var index = i;
  var length = heap.length;
  var halfLength = length >>> 1;

  while (index < halfLength) {
    var leftIndex = (index + 1) * 2 - 1;
    var left = heap[leftIndex];
    var rightIndex = leftIndex + 1;
    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

    if (compare(left, node) < 0) {
      if (rightIndex < length && compare(right, left) < 0) {
        heap[index] = right;
        heap[rightIndex] = node;
        index = rightIndex;
      } else {
        heap[index] = left;
        heap[leftIndex] = node;
        index = leftIndex;
      }
    } else if (rightIndex < length && compare(right, node) < 0) {
      heap[index] = right;
      heap[rightIndex] = node;
      index = rightIndex;
    } else {
      // Neither child is smaller. Exit.
      return;
    }
  }
}

function compare(a, b) {
  // Compare sort index first, then task id.
  var diff = a.sortIndex - b.sortIndex;
  return diff !== 0 ? diff : a.id - b.id;
}

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

function markTaskErrored(task, ms) {
}

/* eslint-disable no-var */

var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

if (hasPerformanceNow) {
  var localPerformance = performance;

  exports.unstable_now = function () {
    return localPerformance.now();
  };
} else {
  var localDate = Date;
  var initialTime = localDate.now();

  exports.unstable_now = function () {
    return localDate.now() - initialTime;
  };
} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111


var maxSigned31BitInt = 1073741823; // Times out immediately

var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

var taskQueue = [];
var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
var currentTask = null;
var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.

var isPerformingWork = false;
var isHostCallbackScheduled = false;
var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.

var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom

var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;

function advanceTimers(currentTime) {
  // Check for tasks that are no longer delayed and add them to the queue.
  var timer = peek(timerQueue);

  while (timer !== null) {
    if (timer.callback === null) {
      // Timer was cancelled.
      pop(timerQueue);
    } else if (timer.startTime <= currentTime) {
      // Timer fired. Transfer to the task queue.
      pop(timerQueue);
      timer.sortIndex = timer.expirationTime;
      push(taskQueue, timer);
    } else {
      // Remaining timers are pending.
      return;
    }

    timer = peek(timerQueue);
  }
}

function handleTimeout(currentTime) {
  isHostTimeoutScheduled = false;
  advanceTimers(currentTime);

  if (!isHostCallbackScheduled) {
    if (peek(taskQueue) !== null) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    } else {
      var firstTimer = peek(timerQueue);

      if (firstTimer !== null) {
        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
      }
    }
  }
}

function flushWork(hasTimeRemaining, initialTime) {


  isHostCallbackScheduled = false;

  if (isHostTimeoutScheduled) {
    // We scheduled a timeout but it's no longer needed. Cancel it.
    isHostTimeoutScheduled = false;
    cancelHostTimeout();
  }

  isPerformingWork = true;
  var previousPriorityLevel = currentPriorityLevel;

  try {
    if (enableProfiling) {
      try {
        return workLoop(hasTimeRemaining, initialTime);
      } catch (error) {
        if (currentTask !== null) {
          var currentTime = exports.unstable_now();
          markTaskErrored(currentTask, currentTime);
          currentTask.isQueued = false;
        }

        throw error;
      }
    } else {
      // No catch in prod code path.
      return workLoop(hasTimeRemaining, initialTime);
    }
  } finally {
    currentTask = null;
    currentPriorityLevel = previousPriorityLevel;
    isPerformingWork = false;
  }
}

function workLoop(hasTimeRemaining, initialTime) {
  var currentTime = initialTime;
  advanceTimers(currentTime);
  currentTask = peek(taskQueue);

  while (currentTask !== null && !(enableSchedulerDebugging )) {
    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
      // This currentTask hasn't expired, and we've reached the deadline.
      break;
    }

    var callback = currentTask.callback;

    if (typeof callback === 'function') {
      currentTask.callback = null;
      currentPriorityLevel = currentTask.priorityLevel;
      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;

      var continuationCallback = callback(didUserCallbackTimeout);
      currentTime = exports.unstable_now();

      if (typeof continuationCallback === 'function') {
        currentTask.callback = continuationCallback;
      } else {

        if (currentTask === peek(taskQueue)) {
          pop(taskQueue);
        }
      }

      advanceTimers(currentTime);
    } else {
      pop(taskQueue);
    }

    currentTask = peek(taskQueue);
  } // Return whether there's additional work


  if (currentTask !== null) {
    return true;
  } else {
    var firstTimer = peek(timerQueue);

    if (firstTimer !== null) {
      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
    }

    return false;
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;

    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_next(eventHandler) {
  var priorityLevel;

  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;

    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  currentPriorityLevel = priorityLevel;

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    currentPriorityLevel = parentPriorityLevel;

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
    }
  };
}

function unstable_scheduleCallback(priorityLevel, callback, options) {
  var currentTime = exports.unstable_now();
  var startTime;

  if (typeof options === 'object' && options !== null) {
    var delay = options.delay;

    if (typeof delay === 'number' && delay > 0) {
      startTime = currentTime + delay;
    } else {
      startTime = currentTime;
    }
  } else {
    startTime = currentTime;
  }

  var timeout;

  switch (priorityLevel) {
    case ImmediatePriority:
      timeout = IMMEDIATE_PRIORITY_TIMEOUT;
      break;

    case UserBlockingPriority:
      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
      break;

    case IdlePriority:
      timeout = IDLE_PRIORITY_TIMEOUT;
      break;

    case LowPriority:
      timeout = LOW_PRIORITY_TIMEOUT;
      break;

    case NormalPriority:
    default:
      timeout = NORMAL_PRIORITY_TIMEOUT;
      break;
  }

  var expirationTime = startTime + timeout;
  var newTask = {
    id: taskIdCounter++,
    callback: callback,
    priorityLevel: priorityLevel,
    startTime: startTime,
    expirationTime: expirationTime,
    sortIndex: -1
  };

  if (startTime > currentTime) {
    // This is a delayed task.
    newTask.sortIndex = startTime;
    push(timerQueue, newTask);

    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
      // All tasks are delayed, and this is the task with the earliest delay.
      if (isHostTimeoutScheduled) {
        // Cancel an existing timeout.
        cancelHostTimeout();
      } else {
        isHostTimeoutScheduled = true;
      } // Schedule a timeout.


      requestHostTimeout(handleTimeout, startTime - currentTime);
    }
  } else {
    newTask.sortIndex = expirationTime;
    push(taskQueue, newTask);
    // wait until the next time we yield.


    if (!isHostCallbackScheduled && !isPerformingWork) {
      isHostCallbackScheduled = true;
      requestHostCallback(flushWork);
    }
  }

  return newTask;
}

function unstable_pauseExecution() {
}

function unstable_continueExecution() {

  if (!isHostCallbackScheduled && !isPerformingWork) {
    isHostCallbackScheduled = true;
    requestHostCallback(flushWork);
  }
}

function unstable_getFirstCallbackNode() {
  return peek(taskQueue);
}

function unstable_cancelCallback(task) {
  // remove from the queue because you can't remove arbitrary nodes from an
  // array based heap, only the first one.)


  task.callback = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

var isMessageLoopRunning = false;
var scheduledHostCallback = null;
var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
// thread, like user events. By default, it yields multiple times per frame.
// It does not attempt to align with frame boundaries, since most tasks don't
// need to be frame aligned; for those that do, use requestAnimationFrame.

var frameInterval = frameYieldMs;
var startTime = -1;

function shouldYieldToHost() {
  var timeElapsed = exports.unstable_now() - startTime;

  if (timeElapsed < frameInterval) {
    // The main thread has only been blocked for a really short amount of time;
    // smaller than a single frame. Don't yield yet.
    return false;
  } // The main thread has been blocked for a non-negligible amount of time. We


  return true;
}

function requestPaint() {

}

function forceFrameRate(fps) {
  if (fps < 0 || fps > 125) {
    // Using console['error'] to evade Babel and ESLint
    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
    return;
  }

  if (fps > 0) {
    frameInterval = Math.floor(1000 / fps);
  } else {
    // reset the framerate
    frameInterval = frameYieldMs;
  }
}

var performWorkUntilDeadline = function () {
  if (scheduledHostCallback !== null) {
    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
    // has been blocked.

    startTime = currentTime;
    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
    // error can be observed.
    //
    // Intentionally not using a try-catch, since that makes some debugging
    // techniques harder. Instead, if `scheduledHostCallback` errors, then
    // `hasMoreWork` will remain true, and we'll continue the work loop.

    var hasMoreWork = true;

    try {
      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
    } finally {
      if (hasMoreWork) {
        // If there's more work, schedule the next message event at the end
        // of the preceding one.
        schedulePerformWorkUntilDeadline();
      } else {
        isMessageLoopRunning = false;
        scheduledHostCallback = null;
      }
    }
  } else {
    isMessageLoopRunning = false;
  } // Yielding to the browser will give it a chance to paint, so we can
};

var schedulePerformWorkUntilDeadline;

if (typeof localSetImmediate === 'function') {
  // Node.js and old IE.
  // There's a few reasons for why we prefer setImmediate.
  //
  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
  // (Even though this is a DOM fork of the Scheduler, you could get here
  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
  // https://github.com/facebook/react/issues/20756
  //
  // But also, it runs earlier which is the semantic we want.
  // If other browsers ever implement it, it's better to use it.
  // Although both of these would be inferior to native scheduling.
  schedulePerformWorkUntilDeadline = function () {
    localSetImmediate(performWorkUntilDeadline);
  };
} else if (typeof MessageChannel !== 'undefined') {
  // DOM and Worker environments.
  // We prefer MessageChannel because of the 4ms setTimeout clamping.
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = performWorkUntilDeadline;

  schedulePerformWorkUntilDeadline = function () {
    port.postMessage(null);
  };
} else {
  // We should only fallback here in non-browser environments.
  schedulePerformWorkUntilDeadline = function () {
    localSetTimeout(performWorkUntilDeadline, 0);
  };
}

function requestHostCallback(callback) {
  scheduledHostCallback = callback;

  if (!isMessageLoopRunning) {
    isMessageLoopRunning = true;
    schedulePerformWorkUntilDeadline();
  }
}

function requestHostTimeout(callback, ms) {
  taskTimeoutID = localSetTimeout(function () {
    callback(exports.unstable_now());
  }, ms);
}

function cancelHostTimeout() {
  localClearTimeout(taskTimeoutID);
  taskTimeoutID = -1;
}

var unstable_requestPaint = requestPaint;
var unstable_Profiling =  null;

exports.unstable_IdlePriority = IdlePriority;
exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_Profiling = unstable_Profiling;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_forceFrameRate = forceFrameRate;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
exports.unstable_next = unstable_next;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_requestPaint = unstable_requestPaint;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_shouldYield = shouldYieldToHost;
exports.unstable_wrapCallback = unstable_wrapCallback;
          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===
    'function'
) {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
}
        
  })();
}


/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}


/***/ }),

/***/ "./node_modules/sweetalert2/dist/sweetalert2.all.js":
/*!**********************************************************!*\
  !*** ./node_modules/sweetalert2/dist/sweetalert2.all.js ***!
  \**********************************************************/
/***/ (function(module) {

/*!
* sweetalert2 v11.10.1
* Released under the MIT License.
*/
(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  function _iterableToArrayLimit(r, l) {
    var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
    if (null != t) {
      var e,
        n,
        i,
        u,
        a = [],
        f = !0,
        o = !1;
      try {
        if (i = (t = t.call(r)).next, 0 === l) {
          if (Object(t) !== t) return;
          f = !1;
        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
      } catch (r) {
        o = !0, n = r;
      } finally {
        try {
          if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
        } finally {
          if (o) throw n;
        }
      }
      return a;
    }
  }
  function _typeof(o) {
    "@babel/helpers - typeof";

    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
      return typeof o;
    } : function (o) {
      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, _typeof(o);
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false
    });
    return Constructor;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    Object.defineProperty(subClass, "prototype", {
      writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }
  function _construct(Parent, args, Class) {
    if (_isNativeReflectConstruct()) {
      _construct = Reflect.construct.bind();
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }
    return _construct.apply(null, arguments);
  }
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    } else if (call !== void 0) {
      throw new TypeError("Derived constructors may only return object or undefined");
    }
    return _assertThisInitialized(self);
  }
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
        result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    };
  }
  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = _getPrototypeOf(object);
      if (object === null) break;
    }
    return object;
  }
  function _get() {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get.bind();
    } else {
      _get = function _get(target, property, receiver) {
        var base = _superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);
        if (desc.get) {
          return desc.get.call(arguments.length < 3 ? target : receiver);
        }
        return desc.value;
      };
    }
    return _get.apply(this, arguments);
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
  function _classPrivateFieldGet(receiver, privateMap) {
    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
    return _classApplyDescriptorGet(receiver, descriptor);
  }
  function _classPrivateFieldSet(receiver, privateMap, value) {
    var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
    _classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
  function _classExtractFieldDescriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
  }
  function _classApplyDescriptorGet(receiver, descriptor) {
    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }
    return descriptor.value;
  }
  function _classApplyDescriptorSet(receiver, descriptor, value) {
    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        throw new TypeError("attempted to set read only private field");
      }
      descriptor.value = value;
    }
  }
  function _checkPrivateRedeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
      throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
  }
  function _classPrivateFieldInitSpec(obj, privateMap, value) {
    _checkPrivateRedeclaration(obj, privateMap);
    privateMap.set(obj, value);
  }

  var RESTORE_FOCUS_TIMEOUT = 100;

  /** @type {GlobalState} */
  var globalState = {};
  var focusPreviousActiveElement = function focusPreviousActiveElement() {
    if (globalState.previousActiveElement instanceof HTMLElement) {
      globalState.previousActiveElement.focus();
      globalState.previousActiveElement = null;
    } else if (document.body) {
      document.body.focus();
    }
  };

  /**
   * Restore previous active (focused) element
   *
   * @param {boolean} returnFocus
   * @returns {Promise<void>}
   */
  var restoreActiveElement = function restoreActiveElement(returnFocus) {
    return new Promise(function (resolve) {
      if (!returnFocus) {
        return resolve();
      }
      var x = window.scrollX;
      var y = window.scrollY;
      globalState.restoreFocusTimeout = setTimeout(function () {
        focusPreviousActiveElement();
        resolve();
      }, RESTORE_FOCUS_TIMEOUT); // issues/900

      window.scrollTo(x, y);
    });
  };

  var swalPrefix = 'swal2-';

  /**
   * @typedef
   * { | 'container'
   *   | 'shown'
   *   | 'height-auto'
   *   | 'iosfix'
   *   | 'popup'
   *   | 'modal'
   *   | 'no-backdrop'
   *   | 'no-transition'
   *   | 'toast'
   *   | 'toast-shown'
   *   | 'show'
   *   | 'hide'
   *   | 'close'
   *   | 'title'
   *   | 'html-container'
   *   | 'actions'
   *   | 'confirm'
   *   | 'deny'
   *   | 'cancel'
   *   | 'default-outline'
   *   | 'footer'
   *   | 'icon'
   *   | 'icon-content'
   *   | 'image'
   *   | 'input'
   *   | 'file'
   *   | 'range'
   *   | 'select'
   *   | 'radio'
   *   | 'checkbox'
   *   | 'label'
   *   | 'textarea'
   *   | 'inputerror'
   *   | 'input-label'
   *   | 'validation-message'
   *   | 'progress-steps'
   *   | 'active-progress-step'
   *   | 'progress-step'
   *   | 'progress-step-line'
   *   | 'loader'
   *   | 'loading'
   *   | 'styled'
   *   | 'top'
   *   | 'top-start'
   *   | 'top-end'
   *   | 'top-left'
   *   | 'top-right'
   *   | 'center'
   *   | 'center-start'
   *   | 'center-end'
   *   | 'center-left'
   *   | 'center-right'
   *   | 'bottom'
   *   | 'bottom-start'
   *   | 'bottom-end'
   *   | 'bottom-left'
   *   | 'bottom-right'
   *   | 'grow-row'
   *   | 'grow-column'
   *   | 'grow-fullscreen'
   *   | 'rtl'
   *   | 'timer-progress-bar'
   *   | 'timer-progress-bar-container'
   *   | 'scrollbar-measure'
   *   | 'icon-success'
   *   | 'icon-warning'
   *   | 'icon-info'
   *   | 'icon-question'
   *   | 'icon-error'
   * } SwalClass
   * @typedef {Record<SwalClass, string>} SwalClasses
   */

  /**
   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon
   * @typedef {Record<SwalIcon, string>} SwalIcons
   */

  /** @type {SwalClass[]} */
  var classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error'];
  var swalClasses = classNames.reduce(function (acc, className) {
    acc[className] = swalPrefix + className;
    return acc;
  }, /** @type {SwalClasses} */{});

  /** @type {SwalIcon[]} */
  var icons = ['success', 'warning', 'info', 'question', 'error'];
  var iconTypes = icons.reduce(function (acc, icon) {
    acc[icon] = swalPrefix + icon;
    return acc;
  }, /** @type {SwalIcons} */{});

  var consolePrefix = 'SweetAlert2:';

  /**
   * Capitalize the first letter of a string
   *
   * @param {string} str
   * @returns {string}
   */
  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  };

  /**
   * Standardize console warnings
   *
   * @param {string | string[]} message
   */
  var warn = function warn(message) {
    console.warn("".concat(consolePrefix, " ").concat(_typeof(message) === 'object' ? message.join(' ') : message));
  };

  /**
   * Standardize console errors
   *
   * @param {string} message
   */
  var error = function error(message) {
    console.error("".concat(consolePrefix, " ").concat(message));
  };

  /**
   * Private global state for `warnOnce`
   *
   * @type {string[]}
   * @private
   */
  var previousWarnOnceMessages = [];

  /**
   * Show a console warning, but only if it hasn't already been shown
   *
   * @param {string} message
   */
  var warnOnce = function warnOnce(message) {
    if (!previousWarnOnceMessages.includes(message)) {
      previousWarnOnceMessages.push(message);
      warn(message);
    }
  };

  /**
   * Show a one-time console warning about deprecated params/methods
   *
   * @param {string} deprecatedParam
   * @param {string} useInstead
   */
  var warnAboutDeprecation = function warnAboutDeprecation(deprecatedParam, useInstead) {
    warnOnce("\"".concat(deprecatedParam, "\" is deprecated and will be removed in the next major release. Please use \"").concat(useInstead, "\" instead."));
  };

  /**
   * If `arg` is a function, call it (with no arguments or context) and return the result.
   * Otherwise, just pass the value through
   *
   * @param {Function | any} arg
   * @returns {any}
   */
  var callIfFunction = function callIfFunction(arg) {
    return typeof arg === 'function' ? arg() : arg;
  };

  /**
   * @param {any} arg
   * @returns {boolean}
   */
  var hasToPromiseFn = function hasToPromiseFn(arg) {
    return arg && typeof arg.toPromise === 'function';
  };

  /**
   * @param {any} arg
   * @returns {Promise<any>}
   */
  var asPromise = function asPromise(arg) {
    return hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);
  };

  /**
   * @param {any} arg
   * @returns {boolean}
   */
  var isPromise = function isPromise(arg) {
    return arg && Promise.resolve(arg) === arg;
  };

  /**
   * Gets the popup container which contains the backdrop and the popup itself.
   *
   * @returns {HTMLElement | null}
   */
  var getContainer = function getContainer() {
    return document.body.querySelector(".".concat(swalClasses.container));
  };

  /**
   * @param {string} selectorString
   * @returns {HTMLElement | null}
   */
  var elementBySelector = function elementBySelector(selectorString) {
    var container = getContainer();
    return container ? container.querySelector(selectorString) : null;
  };

  /**
   * @param {string} className
   * @returns {HTMLElement | null}
   */
  var elementByClass = function elementByClass(className) {
    return elementBySelector(".".concat(className));
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getPopup = function getPopup() {
    return elementByClass(swalClasses.popup);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getIcon = function getIcon() {
    return elementByClass(swalClasses.icon);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getIconContent = function getIconContent() {
    return elementByClass(swalClasses['icon-content']);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getTitle = function getTitle() {
    return elementByClass(swalClasses.title);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getHtmlContainer = function getHtmlContainer() {
    return elementByClass(swalClasses['html-container']);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getImage = function getImage() {
    return elementByClass(swalClasses.image);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getProgressSteps = function getProgressSteps() {
    return elementByClass(swalClasses['progress-steps']);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getValidationMessage = function getValidationMessage() {
    return elementByClass(swalClasses['validation-message']);
  };

  /**
   * @returns {HTMLButtonElement | null}
   */
  var getConfirmButton = function getConfirmButton() {
    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.confirm))
    );
  };

  /**
   * @returns {HTMLButtonElement | null}
   */
  var getCancelButton = function getCancelButton() {
    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.cancel))
    );
  };

  /**
   * @returns {HTMLButtonElement | null}
   */
  var getDenyButton = function getDenyButton() {
    return (/** @type {HTMLButtonElement} */elementBySelector(".".concat(swalClasses.actions, " .").concat(swalClasses.deny))
    );
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getInputLabel = function getInputLabel() {
    return elementByClass(swalClasses['input-label']);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getLoader = function getLoader() {
    return elementBySelector(".".concat(swalClasses.loader));
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getActions = function getActions() {
    return elementByClass(swalClasses.actions);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getFooter = function getFooter() {
    return elementByClass(swalClasses.footer);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getTimerProgressBar = function getTimerProgressBar() {
    return elementByClass(swalClasses['timer-progress-bar']);
  };

  /**
   * @returns {HTMLElement | null}
   */
  var getCloseButton = function getCloseButton() {
    return elementByClass(swalClasses.close);
  };

  // https://github.com/jkup/focusable/blob/master/index.js
  var focusable = "\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n";
  /**
   * @returns {HTMLElement[]}
   */
  var getFocusableElements = function getFocusableElements() {
    var popup = getPopup();
    if (!popup) {
      return [];
    }
    /** @type {NodeListOf<HTMLElement>} */
    var focusableElementsWithTabindex = popup.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])');
    var focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)
    // sort according to tabindex
    .sort(function (a, b) {
      var tabindexA = parseInt(a.getAttribute('tabindex') || '0');
      var tabindexB = parseInt(b.getAttribute('tabindex') || '0');
      if (tabindexA > tabindexB) {
        return 1;
      } else if (tabindexA < tabindexB) {
        return -1;
      }
      return 0;
    });

    /** @type {NodeListOf<HTMLElement>} */
    var otherFocusableElements = popup.querySelectorAll(focusable);
    var otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(function (el) {
      return el.getAttribute('tabindex') !== '-1';
    });
    return _toConsumableArray(new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))).filter(function (el) {
      return isVisible$1(el);
    });
  };

  /**
   * @returns {boolean}
   */
  var isModal = function isModal() {
    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);
  };

  /**
   * @returns {boolean}
   */
  var isToast = function isToast() {
    var popup = getPopup();
    if (!popup) {
      return false;
    }
    return hasClass(popup, swalClasses.toast);
  };

  /**
   * @returns {boolean}
   */
  var isLoading = function isLoading() {
    var popup = getPopup();
    if (!popup) {
      return false;
    }
    return popup.hasAttribute('data-loading');
  };

  /**
   * Securely set innerHTML of an element
   * https://github.com/sweetalert2/sweetalert2/issues/1926
   *
   * @param {HTMLElement} elem
   * @param {string} html
   */
  var setInnerHtml = function setInnerHtml(elem, html) {
    elem.textContent = '';
    if (html) {
      var parser = new DOMParser();
      var parsed = parser.parseFromString(html, "text/html");
      var head = parsed.querySelector('head');
      head && Array.from(head.childNodes).forEach(function (child) {
        elem.appendChild(child);
      });
      var body = parsed.querySelector('body');
      body && Array.from(body.childNodes).forEach(function (child) {
        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {
          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507
        } else {
          elem.appendChild(child);
        }
      });
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {string} className
   * @returns {boolean}
   */
  var hasClass = function hasClass(elem, className) {
    if (!className) {
      return false;
    }
    var classList = className.split(/\s+/);
    for (var i = 0; i < classList.length; i++) {
      if (!elem.classList.contains(classList[i])) {
        return false;
      }
    }
    return true;
  };

  /**
   * @param {HTMLElement} elem
   * @param {SweetAlertOptions} params
   */
  var removeCustomClasses = function removeCustomClasses(elem, params) {
    Array.from(elem.classList).forEach(function (className) {
      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass || {}).includes(className)) {
        elem.classList.remove(className);
      }
    });
  };

  /**
   * @param {HTMLElement} elem
   * @param {SweetAlertOptions} params
   * @param {string} className
   */
  var applyCustomClass = function applyCustomClass(elem, params, className) {
    removeCustomClasses(elem, params);
    if (params.customClass && params.customClass[className]) {
      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {
        warn("Invalid type of customClass.".concat(className, "! Expected string or iterable object, got \"").concat(_typeof(params.customClass[className]), "\""));
        return;
      }
      addClass(elem, params.customClass[className]);
    }
  };

  /**
   * @param {HTMLElement} popup
   * @param {import('./renderers/renderInput').InputClass | SweetAlertInput} inputClass
   * @returns {HTMLInputElement | null}
   */
  var getInput$1 = function getInput(popup, inputClass) {
    if (!inputClass) {
      return null;
    }
    switch (inputClass) {
      case 'select':
      case 'textarea':
      case 'file':
        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses[inputClass]));
      case 'checkbox':
        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.checkbox, " input"));
      case 'radio':
        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.radio, " input:checked")) || popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.radio, " input:first-child"));
      case 'range':
        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.range, " input"));
      default:
        return popup.querySelector(".".concat(swalClasses.popup, " > .").concat(swalClasses.input));
    }
  };

  /**
   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input
   */
  var focusInput = function focusInput(input) {
    input.focus();

    // place cursor at end of text in text input
    if (input.type !== 'file') {
      // http://stackoverflow.com/a/2345915
      var val = input.value;
      input.value = '';
      input.value = val;
    }
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   * @param {boolean} condition
   */
  var toggleClass = function toggleClass(target, classList, condition) {
    if (!target || !classList) {
      return;
    }
    if (typeof classList === 'string') {
      classList = classList.split(/\s+/).filter(Boolean);
    }
    classList.forEach(function (className) {
      if (Array.isArray(target)) {
        target.forEach(function (elem) {
          condition ? elem.classList.add(className) : elem.classList.remove(className);
        });
      } else {
        condition ? target.classList.add(className) : target.classList.remove(className);
      }
    });
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   */
  var addClass = function addClass(target, classList) {
    toggleClass(target, classList, true);
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   */
  var removeClass = function removeClass(target, classList) {
    toggleClass(target, classList, false);
  };

  /**
   * Get direct child of an element by class name
   *
   * @param {HTMLElement} elem
   * @param {string} className
   * @returns {HTMLElement | undefined}
   */
  var getDirectChildByClass = function getDirectChildByClass(elem, className) {
    var children = Array.from(elem.children);
    for (var i = 0; i < children.length; i++) {
      var child = children[i];
      if (child instanceof HTMLElement && hasClass(child, className)) {
        return child;
      }
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {string} property
   * @param {*} value
   */
  var applyNumericalStyle = function applyNumericalStyle(elem, property, value) {
    if (value === "".concat(parseInt(value))) {
      value = parseInt(value);
    }
    if (value || parseInt(value) === 0) {
      elem.style[property] = typeof value === 'number' ? "".concat(value, "px") : value;
    } else {
      elem.style.removeProperty(property);
    }
  };

  /**
   * @param {HTMLElement | null} elem
   * @param {string} display
   */
  var show = function show(elem) {
    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';
    elem && (elem.style.display = display);
  };

  /**
   * @param {HTMLElement | null} elem
   */
  var hide = function hide(elem) {
    elem && (elem.style.display = 'none');
  };

  /**
   * @param {HTMLElement | null} elem
   * @param {string} display
   */
  var showWhenInnerHtmlPresent = function showWhenInnerHtmlPresent(elem) {
    var display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'block';
    if (!elem) {
      return;
    }
    new MutationObserver(function () {
      toggle(elem, elem.innerHTML, display);
    }).observe(elem, {
      childList: true,
      subtree: true
    });
  };

  /**
   * @param {HTMLElement} parent
   * @param {string} selector
   * @param {string} property
   * @param {string} value
   */
  var setStyle = function setStyle(parent, selector, property, value) {
    /** @type {HTMLElement} */
    var el = parent.querySelector(selector);
    if (el) {
      el.style[property] = value;
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {any} condition
   * @param {string} display
   */
  var toggle = function toggle(elem, condition) {
    var display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';
    condition ? show(elem, display) : hide(elem);
  };

  /**
   * borrowed from jquery $(elem).is(':visible') implementation
   *
   * @param {HTMLElement | null} elem
   * @returns {boolean}
   */
  var isVisible$1 = function isVisible(elem) {
    return !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));
  };

  /**
   * @returns {boolean}
   */
  var allButtonsAreHidden = function allButtonsAreHidden() {
    return !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());
  };

  /**
   * @param {HTMLElement} elem
   * @returns {boolean}
   */
  var isScrollable = function isScrollable(elem) {
    return !!(elem.scrollHeight > elem.clientHeight);
  };

  /**
   * borrowed from https://stackoverflow.com/a/46352119
   *
   * @param {HTMLElement} elem
   * @returns {boolean}
   */
  var hasCssAnimation = function hasCssAnimation(elem) {
    var style = window.getComputedStyle(elem);
    var animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');
    var transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');
    return animDuration > 0 || transDuration > 0;
  };

  /**
   * @param {number} timer
   * @param {boolean} reset
   */
  var animateTimerProgressBar = function animateTimerProgressBar(timer) {
    var reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var timerProgressBar = getTimerProgressBar();
    if (!timerProgressBar) {
      return;
    }
    if (isVisible$1(timerProgressBar)) {
      if (reset) {
        timerProgressBar.style.transition = 'none';
        timerProgressBar.style.width = '100%';
      }
      setTimeout(function () {
        timerProgressBar.style.transition = "width ".concat(timer / 1000, "s linear");
        timerProgressBar.style.width = '0%';
      }, 10);
    }
  };
  var stopTimerProgressBar = function stopTimerProgressBar() {
    var timerProgressBar = getTimerProgressBar();
    if (!timerProgressBar) {
      return;
    }
    var timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    timerProgressBar.style.removeProperty('transition');
    timerProgressBar.style.width = '100%';
    var timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    var timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;
    timerProgressBar.style.width = "".concat(timerProgressBarPercent, "%");
  };

  /**
   * Detect Node env
   *
   * @returns {boolean}
   */
  var isNodeEnv = function isNodeEnv() {
    return typeof window === 'undefined' || typeof document === 'undefined';
  };

  var sweetHTML = "\n <div aria-labelledby=\"".concat(swalClasses.title, "\" aria-describedby=\"").concat(swalClasses['html-container'], "\" class=\"").concat(swalClasses.popup, "\" tabindex=\"-1\">\n   <button type=\"button\" class=\"").concat(swalClasses.close, "\"></button>\n   <ul class=\"").concat(swalClasses['progress-steps'], "\"></ul>\n   <div class=\"").concat(swalClasses.icon, "\"></div>\n   <img class=\"").concat(swalClasses.image, "\" />\n   <h2 class=\"").concat(swalClasses.title, "\" id=\"").concat(swalClasses.title, "\"></h2>\n   <div class=\"").concat(swalClasses['html-container'], "\" id=\"").concat(swalClasses['html-container'], "\"></div>\n   <input class=\"").concat(swalClasses.input, "\" id=\"").concat(swalClasses.input, "\" />\n   <input type=\"file\" class=\"").concat(swalClasses.file, "\" />\n   <div class=\"").concat(swalClasses.range, "\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"").concat(swalClasses.select, "\" id=\"").concat(swalClasses.select, "\"></select>\n   <div class=\"").concat(swalClasses.radio, "\"></div>\n   <label class=\"").concat(swalClasses.checkbox, "\">\n     <input type=\"checkbox\" id=\"").concat(swalClasses.checkbox, "\" />\n     <span class=\"").concat(swalClasses.label, "\"></span>\n   </label>\n   <textarea class=\"").concat(swalClasses.textarea, "\" id=\"").concat(swalClasses.textarea, "\"></textarea>\n   <div class=\"").concat(swalClasses['validation-message'], "\" id=\"").concat(swalClasses['validation-message'], "\"></div>\n   <div class=\"").concat(swalClasses.actions, "\">\n     <div class=\"").concat(swalClasses.loader, "\"></div>\n     <button type=\"button\" class=\"").concat(swalClasses.confirm, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.deny, "\"></button>\n     <button type=\"button\" class=\"").concat(swalClasses.cancel, "\"></button>\n   </div>\n   <div class=\"").concat(swalClasses.footer, "\"></div>\n   <div class=\"").concat(swalClasses['timer-progress-bar-container'], "\">\n     <div class=\"").concat(swalClasses['timer-progress-bar'], "\"></div>\n   </div>\n </div>\n").replace(/(^|\n)\s*/g, '');

  /**
   * @returns {boolean}
   */
  var resetOldContainer = function resetOldContainer() {
    var oldContainer = getContainer();
    if (!oldContainer) {
      return false;
    }
    oldContainer.remove();
    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);
    return true;
  };
  var resetValidationMessage$1 = function resetValidationMessage() {
    globalState.currentInstance.resetValidationMessage();
  };
  var addInputChangeListeners = function addInputChangeListeners() {
    var popup = getPopup();
    var input = getDirectChildByClass(popup, swalClasses.input);
    var file = getDirectChildByClass(popup, swalClasses.file);
    /** @type {HTMLInputElement} */
    var range = popup.querySelector(".".concat(swalClasses.range, " input"));
    /** @type {HTMLOutputElement} */
    var rangeOutput = popup.querySelector(".".concat(swalClasses.range, " output"));
    var select = getDirectChildByClass(popup, swalClasses.select);
    /** @type {HTMLInputElement} */
    var checkbox = popup.querySelector(".".concat(swalClasses.checkbox, " input"));
    var textarea = getDirectChildByClass(popup, swalClasses.textarea);
    input.oninput = resetValidationMessage$1;
    file.onchange = resetValidationMessage$1;
    select.onchange = resetValidationMessage$1;
    checkbox.onchange = resetValidationMessage$1;
    textarea.oninput = resetValidationMessage$1;
    range.oninput = function () {
      resetValidationMessage$1();
      rangeOutput.value = range.value;
    };
    range.onchange = function () {
      resetValidationMessage$1();
      rangeOutput.value = range.value;
    };
  };

  /**
   * @param {string | HTMLElement} target
   * @returns {HTMLElement}
   */
  var getTarget = function getTarget(target) {
    return typeof target === 'string' ? document.querySelector(target) : target;
  };

  /**
   * @param {SweetAlertOptions} params
   */
  var setupAccessibility = function setupAccessibility(params) {
    var popup = getPopup();
    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');
    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');
    if (!params.toast) {
      popup.setAttribute('aria-modal', 'true');
    }
  };

  /**
   * @param {HTMLElement} targetElement
   */
  var setupRTL = function setupRTL(targetElement) {
    if (window.getComputedStyle(targetElement).direction === 'rtl') {
      addClass(getContainer(), swalClasses.rtl);
    }
  };

  /**
   * Add modal + backdrop + no-war message for Russians to DOM
   *
   * @param {SweetAlertOptions} params
   */
  var init = function init(params) {
    // Clean up the old popup container if it exists
    var oldContainerExisted = resetOldContainer();
    if (isNodeEnv()) {
      error('SweetAlert2 requires document to initialize');
      return;
    }
    var container = document.createElement('div');
    container.className = swalClasses.container;
    if (oldContainerExisted) {
      addClass(container, swalClasses['no-transition']);
    }
    setInnerHtml(container, sweetHTML);
    var targetElement = getTarget(params.target);
    targetElement.appendChild(container);
    setupAccessibility(params);
    setupRTL(targetElement);
    addInputChangeListeners();
  };

  /**
   * @param {HTMLElement | object | string} param
   * @param {HTMLElement} target
   */
  var parseHtmlToContainer = function parseHtmlToContainer(param, target) {
    // DOM element
    if (param instanceof HTMLElement) {
      target.appendChild(param);
    }

    // Object
    else if (_typeof(param) === 'object') {
      handleObject(param, target);
    }

    // Plain string
    else if (param) {
      setInnerHtml(target, param);
    }
  };

  /**
   * @param {any} param
   * @param {HTMLElement} target
   */
  var handleObject = function handleObject(param, target) {
    // JQuery element(s)
    if (param.jquery) {
      handleJqueryElem(target, param);
    }

    // For other objects use their string representation
    else {
      setInnerHtml(target, param.toString());
    }
  };

  /**
   * @param {HTMLElement} target
   * @param {any} elem
   */
  var handleJqueryElem = function handleJqueryElem(target, elem) {
    target.textContent = '';
    if (0 in elem) {
      for (var i = 0; (i in elem); i++) {
        target.appendChild(elem[i].cloneNode(true));
      }
    } else {
      target.appendChild(elem.cloneNode(true));
    }
  };

  /**
   * @returns {'webkitAnimationEnd' | 'animationend' | false}
   */
  var animationEndEvent = function () {
    // Prevent run in Node env
    if (isNodeEnv()) {
      return false;
    }
    var testEl = document.createElement('div');

    // Chrome, Safari and Opera
    if (typeof testEl.style.webkitAnimation !== 'undefined') {
      return 'webkitAnimationEnd';
    }

    // Standard syntax
    if (typeof testEl.style.animation !== 'undefined') {
      return 'animationend';
    }
    return false;
  }();

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderActions = function renderActions(instance, params) {
    var actions = getActions();
    var loader = getLoader();
    if (!actions || !loader) {
      return;
    }

    // Actions (buttons) wrapper
    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {
      hide(actions);
    } else {
      show(actions);
    }

    // Custom class
    applyCustomClass(actions, params, 'actions');

    // Render all the buttons
    renderButtons(actions, loader, params);

    // Loader
    setInnerHtml(loader, params.loaderHtml || '');
    applyCustomClass(loader, params, 'loader');
  };

  /**
   * @param {HTMLElement} actions
   * @param {HTMLElement} loader
   * @param {SweetAlertOptions} params
   */
  function renderButtons(actions, loader, params) {
    var confirmButton = getConfirmButton();
    var denyButton = getDenyButton();
    var cancelButton = getCancelButton();
    if (!confirmButton || !denyButton || !cancelButton) {
      return;
    }

    // Render buttons
    renderButton(confirmButton, 'confirm', params);
    renderButton(denyButton, 'deny', params);
    renderButton(cancelButton, 'cancel', params);
    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);
    if (params.reverseButtons) {
      if (params.toast) {
        actions.insertBefore(cancelButton, confirmButton);
        actions.insertBefore(denyButton, confirmButton);
      } else {
        actions.insertBefore(cancelButton, loader);
        actions.insertBefore(denyButton, loader);
        actions.insertBefore(confirmButton, loader);
      }
    }
  }

  /**
   * @param {HTMLElement} confirmButton
   * @param {HTMLElement} denyButton
   * @param {HTMLElement} cancelButton
   * @param {SweetAlertOptions} params
   */
  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {
    if (!params.buttonsStyling) {
      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);
      return;
    }
    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);

    // Buttons background colors
    if (params.confirmButtonColor) {
      confirmButton.style.backgroundColor = params.confirmButtonColor;
      addClass(confirmButton, swalClasses['default-outline']);
    }
    if (params.denyButtonColor) {
      denyButton.style.backgroundColor = params.denyButtonColor;
      addClass(denyButton, swalClasses['default-outline']);
    }
    if (params.cancelButtonColor) {
      cancelButton.style.backgroundColor = params.cancelButtonColor;
      addClass(cancelButton, swalClasses['default-outline']);
    }
  }

  /**
   * @param {HTMLElement} button
   * @param {'confirm' | 'deny' | 'cancel'} buttonType
   * @param {SweetAlertOptions} params
   */
  function renderButton(button, buttonType, params) {
    var buttonName = /** @type {'Confirm' | 'Deny' | 'Cancel'} */capitalizeFirstLetter(buttonType);
    toggle(button, params["show".concat(buttonName, "Button")], 'inline-block');
    setInnerHtml(button, params["".concat(buttonType, "ButtonText")] || ''); // Set caption text
    button.setAttribute('aria-label', params["".concat(buttonType, "ButtonAriaLabel")] || ''); // ARIA label

    // Add buttons custom classes
    button.className = swalClasses[buttonType];
    applyCustomClass(button, params, "".concat(buttonType, "Button"));
  }

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderCloseButton = function renderCloseButton(instance, params) {
    var closeButton = getCloseButton();
    if (!closeButton) {
      return;
    }
    setInnerHtml(closeButton, params.closeButtonHtml || '');

    // Custom class
    applyCustomClass(closeButton, params, 'closeButton');
    toggle(closeButton, params.showCloseButton);
    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderContainer = function renderContainer(instance, params) {
    var container = getContainer();
    if (!container) {
      return;
    }
    handleBackdropParam(container, params.backdrop);
    handlePositionParam(container, params.position);
    handleGrowParam(container, params.grow);

    // Custom class
    applyCustomClass(container, params, 'container');
  };

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['backdrop']} backdrop
   */
  function handleBackdropParam(container, backdrop) {
    if (typeof backdrop === 'string') {
      container.style.background = backdrop;
    } else if (!backdrop) {
      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);
    }
  }

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['position']} position
   */
  function handlePositionParam(container, position) {
    if (!position) {
      return;
    }
    if (position in swalClasses) {
      addClass(container, swalClasses[position]);
    } else {
      warn('The "position" parameter is not valid, defaulting to "center"');
      addClass(container, swalClasses.center);
    }
  }

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['grow']} grow
   */
  function handleGrowParam(container, grow) {
    if (!grow) {
      return;
    }
    addClass(container, swalClasses["grow-".concat(grow)]);
  }

  /**
   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

  var privateProps = {
    innerParams: new WeakMap(),
    domCache: new WeakMap()
  };

  /** @type {InputClass[]} */
  var inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderInput = function renderInput(instance, params) {
    var popup = getPopup();
    if (!popup) {
      return;
    }
    var innerParams = privateProps.innerParams.get(instance);
    var rerender = !innerParams || params.input !== innerParams.input;
    inputClasses.forEach(function (inputClass) {
      var inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);
      if (!inputContainer) {
        return;
      }

      // set attributes
      setAttributes(inputClass, params.inputAttributes);

      // set class
      inputContainer.className = swalClasses[inputClass];
      if (rerender) {
        hide(inputContainer);
      }
    });
    if (params.input) {
      if (rerender) {
        showInput(params);
      }
      // set custom class
      setCustomClass(params);
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  var showInput = function showInput(params) {
    if (!params.input) {
      return;
    }
    if (!renderInputType[params.input]) {
      error("Unexpected type of input! Expected ".concat(Object.keys(renderInputType).join(' | '), ", got \"").concat(params.input, "\""));
      return;
    }
    var inputContainer = getInputContainer(params.input);
    var input = renderInputType[params.input](inputContainer, params);
    show(inputContainer);

    // input autofocus
    if (params.inputAutoFocus) {
      setTimeout(function () {
        focusInput(input);
      });
    }
  };

  /**
   * @param {HTMLInputElement} input
   */
  var removeAttributes = function removeAttributes(input) {
    for (var i = 0; i < input.attributes.length; i++) {
      var attrName = input.attributes[i].name;
      if (!['id', 'type', 'value', 'style'].includes(attrName)) {
        input.removeAttribute(attrName);
      }
    }
  };

  /**
   * @param {InputClass} inputClass
   * @param {SweetAlertOptions['inputAttributes']} inputAttributes
   */
  var setAttributes = function setAttributes(inputClass, inputAttributes) {
    var input = getInput$1(getPopup(), inputClass);
    if (!input) {
      return;
    }
    removeAttributes(input);
    for (var attr in inputAttributes) {
      input.setAttribute(attr, inputAttributes[attr]);
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  var setCustomClass = function setCustomClass(params) {
    var inputContainer = getInputContainer(params.input);
    if (_typeof(params.customClass) === 'object') {
      addClass(inputContainer, params.customClass.input);
    }
  };

  /**
   * @param {HTMLInputElement | HTMLTextAreaElement} input
   * @param {SweetAlertOptions} params
   */
  var setInputPlaceholder = function setInputPlaceholder(input, params) {
    if (!input.placeholder || params.inputPlaceholder) {
      input.placeholder = params.inputPlaceholder;
    }
  };

  /**
   * @param {Input} input
   * @param {Input} prependTo
   * @param {SweetAlertOptions} params
   */
  var setInputLabel = function setInputLabel(input, prependTo, params) {
    if (params.inputLabel) {
      var label = document.createElement('label');
      var labelClass = swalClasses['input-label'];
      label.setAttribute('for', input.id);
      label.className = labelClass;
      if (_typeof(params.customClass) === 'object') {
        addClass(label, params.customClass.inputLabel);
      }
      label.innerText = params.inputLabel;
      prependTo.insertAdjacentElement('beforebegin', label);
    }
  };

  /**
   * @param {SweetAlertOptions['input']} inputType
   * @returns {HTMLElement}
   */
  var getInputContainer = function getInputContainer(inputType) {
    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);
  };

  /**
   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input
   * @param {SweetAlertOptions['inputValue']} inputValue
   */
  var checkAndSetInputValue = function checkAndSetInputValue(input, inputValue) {
    if (['string', 'number'].includes(_typeof(inputValue))) {
      input.value = "".concat(inputValue);
    } else if (!isPromise(inputValue)) {
      warn("Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"".concat(_typeof(inputValue), "\""));
    }
  };

  /** @type {Record<SweetAlertInput, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */
  var renderInputType = {};

  /**
   * @param {HTMLInputElement} input
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = renderInputType.search = renderInputType.date = renderInputType['datetime-local'] = renderInputType.time = renderInputType.week = renderInputType.month = function (input, params) {
    checkAndSetInputValue(input, params.inputValue);
    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    input.type = params.input;
    return input;
  };

  /**
   * @param {HTMLInputElement} input
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.file = function (input, params) {
    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    return input;
  };

  /**
   * @param {HTMLInputElement} range
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.range = function (range, params) {
    var rangeInput = range.querySelector('input');
    var rangeOutput = range.querySelector('output');
    checkAndSetInputValue(rangeInput, params.inputValue);
    rangeInput.type = params.input;
    checkAndSetInputValue(rangeOutput, params.inputValue);
    setInputLabel(rangeInput, range, params);
    return range;
  };

  /**
   * @param {HTMLSelectElement} select
   * @param {SweetAlertOptions} params
   * @returns {HTMLSelectElement}
   */
  renderInputType.select = function (select, params) {
    select.textContent = '';
    if (params.inputPlaceholder) {
      var placeholder = document.createElement('option');
      setInnerHtml(placeholder, params.inputPlaceholder);
      placeholder.value = '';
      placeholder.disabled = true;
      placeholder.selected = true;
      select.appendChild(placeholder);
    }
    setInputLabel(select, select, params);
    return select;
  };

  /**
   * @param {HTMLInputElement} radio
   * @returns {HTMLInputElement}
   */
  renderInputType.radio = function (radio) {
    radio.textContent = '';
    return radio;
  };

  /**
   * @param {HTMLLabelElement} checkboxContainer
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.checkbox = function (checkboxContainer, params) {
    var checkbox = getInput$1(getPopup(), 'checkbox');
    checkbox.value = '1';
    checkbox.checked = Boolean(params.inputValue);
    var label = checkboxContainer.querySelector('span');
    setInnerHtml(label, params.inputPlaceholder);
    return checkbox;
  };

  /**
   * @param {HTMLTextAreaElement} textarea
   * @param {SweetAlertOptions} params
   * @returns {HTMLTextAreaElement}
   */
  renderInputType.textarea = function (textarea, params) {
    checkAndSetInputValue(textarea, params.inputValue);
    setInputPlaceholder(textarea, params);
    setInputLabel(textarea, textarea, params);

    /**
     * @param {HTMLElement} el
     * @returns {number}
     */
    var getMargin = function getMargin(el) {
      return parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);
    };

    // https://github.com/sweetalert2/sweetalert2/issues/2291
    setTimeout(function () {
      // https://github.com/sweetalert2/sweetalert2/issues/1699
      if ('MutationObserver' in window) {
        var initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);
        var textareaResizeHandler = function textareaResizeHandler() {
          // check if texarea is still in document (i.e. popup wasn't closed in the meantime)
          if (!document.body.contains(textarea)) {
            return;
          }
          var textareaWidth = textarea.offsetWidth + getMargin(textarea);
          if (textareaWidth > initialPopupWidth) {
            getPopup().style.width = "".concat(textareaWidth, "px");
          } else {
            applyNumericalStyle(getPopup(), 'width', params.width);
          }
        };
        new MutationObserver(textareaResizeHandler).observe(textarea, {
          attributes: true,
          attributeFilter: ['style']
        });
      }
    });
    return textarea;
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderContent = function renderContent(instance, params) {
    var htmlContainer = getHtmlContainer();
    if (!htmlContainer) {
      return;
    }
    showWhenInnerHtmlPresent(htmlContainer);
    applyCustomClass(htmlContainer, params, 'htmlContainer');

    // Content as HTML
    if (params.html) {
      parseHtmlToContainer(params.html, htmlContainer);
      show(htmlContainer, 'block');
    }

    // Content as plain text
    else if (params.text) {
      htmlContainer.textContent = params.text;
      show(htmlContainer, 'block');
    }

    // No content
    else {
      hide(htmlContainer);
    }
    renderInput(instance, params);
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderFooter = function renderFooter(instance, params) {
    var footer = getFooter();
    if (!footer) {
      return;
    }
    showWhenInnerHtmlPresent(footer);
    toggle(footer, params.footer, 'block');
    if (params.footer) {
      parseHtmlToContainer(params.footer, footer);
    }

    // Custom class
    applyCustomClass(footer, params, 'footer');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderIcon = function renderIcon(instance, params) {
    var innerParams = privateProps.innerParams.get(instance);
    var icon = getIcon();
    if (!icon) {
      return;
    }

    // if the given icon already rendered, apply the styling without re-rendering the icon
    if (innerParams && params.icon === innerParams.icon) {
      // Custom or default content
      setContent(icon, params);
      applyStyles(icon, params);
      return;
    }
    if (!params.icon && !params.iconHtml) {
      hide(icon);
      return;
    }
    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {
      error("Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"".concat(params.icon, "\""));
      hide(icon);
      return;
    }
    show(icon);

    // Custom or default content
    setContent(icon, params);
    applyStyles(icon, params);

    // Animate icon
    addClass(icon, params.showClass && params.showClass.icon);
  };

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  var applyStyles = function applyStyles(icon, params) {
    for (var _i = 0, _Object$entries = Object.entries(iconTypes); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),
        iconType = _Object$entries$_i[0],
        iconClassName = _Object$entries$_i[1];
      if (params.icon !== iconType) {
        removeClass(icon, iconClassName);
      }
    }
    addClass(icon, params.icon && iconTypes[params.icon]);

    // Icon color
    setColor(icon, params);

    // Success icon background color
    adjustSuccessIconBackgroundColor();

    // Custom class
    applyCustomClass(icon, params, 'icon');
  };

  // Adjust success icon background color to match the popup background color
  var adjustSuccessIconBackgroundColor = function adjustSuccessIconBackgroundColor() {
    var popup = getPopup();
    if (!popup) {
      return;
    }
    var popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');
    /** @type {NodeListOf<HTMLElement>} */
    var successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');
    for (var i = 0; i < successIconParts.length; i++) {
      successIconParts[i].style.backgroundColor = popupBackgroundColor;
    }
  };
  var successIconHtml = "\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n";
  var errorIconHtml = "\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n";

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  var setContent = function setContent(icon, params) {
    if (!params.icon && !params.iconHtml) {
      return;
    }
    var oldContent = icon.innerHTML;
    var newContent = '';
    if (params.iconHtml) {
      newContent = iconContent(params.iconHtml);
    } else if (params.icon === 'success') {
      newContent = successIconHtml;
      oldContent = oldContent.replace(/ style=".*?"/g, ''); // undo adjustSuccessIconBackgroundColor()
    } else if (params.icon === 'error') {
      newContent = errorIconHtml;
    } else if (params.icon) {
      var defaultIconHtml = {
        question: '?',
        warning: '!',
        info: 'i'
      };
      newContent = iconContent(defaultIconHtml[params.icon]);
    }
    if (oldContent.trim() !== newContent.trim()) {
      setInnerHtml(icon, newContent);
    }
  };

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  var setColor = function setColor(icon, params) {
    if (!params.iconColor) {
      return;
    }
    icon.style.color = params.iconColor;
    icon.style.borderColor = params.iconColor;
    for (var _i2 = 0, _arr = ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']; _i2 < _arr.length; _i2++) {
      var sel = _arr[_i2];
      setStyle(icon, sel, 'backgroundColor', params.iconColor);
    }
    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);
  };

  /**
   * @param {string} content
   * @returns {string}
   */
  var iconContent = function iconContent(content) {
    return "<div class=\"".concat(swalClasses['icon-content'], "\">").concat(content, "</div>");
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderImage = function renderImage(instance, params) {
    var image = getImage();
    if (!image) {
      return;
    }
    if (!params.imageUrl) {
      hide(image);
      return;
    }
    show(image, '');

    // Src, alt
    image.setAttribute('src', params.imageUrl);
    image.setAttribute('alt', params.imageAlt || '');

    // Width, height
    applyNumericalStyle(image, 'width', params.imageWidth);
    applyNumericalStyle(image, 'height', params.imageHeight);

    // Class
    image.className = swalClasses.image;
    applyCustomClass(image, params, 'image');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderPopup = function renderPopup(instance, params) {
    var container = getContainer();
    var popup = getPopup();
    if (!container || !popup) {
      return;
    }

    // Width
    // https://github.com/sweetalert2/sweetalert2/issues/2170
    if (params.toast) {
      applyNumericalStyle(container, 'width', params.width);
      popup.style.width = '100%';
      var loader = getLoader();
      loader && popup.insertBefore(loader, getIcon());
    } else {
      applyNumericalStyle(popup, 'width', params.width);
    }

    // Padding
    applyNumericalStyle(popup, 'padding', params.padding);

    // Color
    if (params.color) {
      popup.style.color = params.color;
    }

    // Background
    if (params.background) {
      popup.style.background = params.background;
    }
    hide(getValidationMessage());

    // Classes
    addClasses$1(popup, params);
  };

  /**
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} params
   */
  var addClasses$1 = function addClasses(popup, params) {
    var showClass = params.showClass || {};
    // Default Class + showClass when updating Swal.update({})
    popup.className = "".concat(swalClasses.popup, " ").concat(isVisible$1(popup) ? showClass.popup : '');
    if (params.toast) {
      addClass([document.documentElement, document.body], swalClasses['toast-shown']);
      addClass(popup, swalClasses.toast);
    } else {
      addClass(popup, swalClasses.modal);
    }

    // Custom class
    applyCustomClass(popup, params, 'popup');
    if (typeof params.customClass === 'string') {
      addClass(popup, params.customClass);
    }

    // Icon class (#1842)
    if (params.icon) {
      addClass(popup, swalClasses["icon-".concat(params.icon)]);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderProgressSteps = function renderProgressSteps(instance, params) {
    var progressStepsContainer = getProgressSteps();
    if (!progressStepsContainer) {
      return;
    }
    var progressSteps = params.progressSteps,
      currentProgressStep = params.currentProgressStep;
    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {
      hide(progressStepsContainer);
      return;
    }
    show(progressStepsContainer);
    progressStepsContainer.textContent = '';
    if (currentProgressStep >= progressSteps.length) {
      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');
    }
    progressSteps.forEach(function (step, index) {
      var stepEl = createStepElement(step);
      progressStepsContainer.appendChild(stepEl);
      if (index === currentProgressStep) {
        addClass(stepEl, swalClasses['active-progress-step']);
      }
      if (index !== progressSteps.length - 1) {
        var lineEl = createLineElement(params);
        progressStepsContainer.appendChild(lineEl);
      }
    });
  };

  /**
   * @param {string} step
   * @returns {HTMLLIElement}
   */
  var createStepElement = function createStepElement(step) {
    var stepEl = document.createElement('li');
    addClass(stepEl, swalClasses['progress-step']);
    setInnerHtml(stepEl, step);
    return stepEl;
  };

  /**
   * @param {SweetAlertOptions} params
   * @returns {HTMLLIElement}
   */
  var createLineElement = function createLineElement(params) {
    var lineEl = document.createElement('li');
    addClass(lineEl, swalClasses['progress-step-line']);
    if (params.progressStepsDistance) {
      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);
    }
    return lineEl;
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var renderTitle = function renderTitle(instance, params) {
    var title = getTitle();
    if (!title) {
      return;
    }
    showWhenInnerHtmlPresent(title);
    toggle(title, params.title || params.titleText, 'block');
    if (params.title) {
      parseHtmlToContainer(params.title, title);
    }
    if (params.titleText) {
      title.innerText = params.titleText;
    }

    // Custom class
    applyCustomClass(title, params, 'title');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var render = function render(instance, params) {
    renderPopup(instance, params);
    renderContainer(instance, params);
    renderProgressSteps(instance, params);
    renderIcon(instance, params);
    renderImage(instance, params);
    renderTitle(instance, params);
    renderCloseButton(instance, params);
    renderContent(instance, params);
    renderActions(instance, params);
    renderFooter(instance, params);
    var popup = getPopup();
    if (typeof params.didRender === 'function' && popup) {
      params.didRender(popup);
    }
  };

  /*
   * Global function to determine if SweetAlert2 popup is shown
   */
  var isVisible = function isVisible() {
    return isVisible$1(getPopup());
  };

  /*
   * Global function to click 'Confirm' button
   */
  var clickConfirm = function clickConfirm() {
    var _dom$getConfirmButton;
    return (_dom$getConfirmButton = getConfirmButton()) === null || _dom$getConfirmButton === void 0 ? void 0 : _dom$getConfirmButton.click();
  };

  /*
   * Global function to click 'Deny' button
   */
  var clickDeny = function clickDeny() {
    var _dom$getDenyButton;
    return (_dom$getDenyButton = getDenyButton()) === null || _dom$getDenyButton === void 0 ? void 0 : _dom$getDenyButton.click();
  };

  /*
   * Global function to click 'Cancel' button
   */
  var clickCancel = function clickCancel() {
    var _dom$getCancelButton;
    return (_dom$getCancelButton = getCancelButton()) === null || _dom$getCancelButton === void 0 ? void 0 : _dom$getCancelButton.click();
  };

  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */

  /** @type {Record<DismissReason, DismissReason>} */
  var DismissReason = Object.freeze({
    cancel: 'cancel',
    backdrop: 'backdrop',
    close: 'close',
    esc: 'esc',
    timer: 'timer'
  });

  /**
   * @param {GlobalState} globalState
   */
  var removeKeydownHandler = function removeKeydownHandler(globalState) {
    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = false;
    }
  };

  /**
   * @param {GlobalState} globalState
   * @param {SweetAlertOptions} innerParams
   * @param {*} dismissWith
   */
  var addKeydownHandler = function addKeydownHandler(globalState, innerParams, dismissWith) {
    removeKeydownHandler(globalState);
    if (!innerParams.toast) {
      globalState.keydownHandler = function (e) {
        return keydownHandler(innerParams, e, dismissWith);
      };
      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();
      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;
      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = true;
    }
  };

  /**
   * @param {number} index
   * @param {number} increment
   */
  var setFocus = function setFocus(index, increment) {
    var _dom$getPopup;
    var focusableElements = getFocusableElements();
    // search for visible elements and select the next possible match
    if (focusableElements.length) {
      index = index + increment;

      // rollover to first item
      if (index === focusableElements.length) {
        index = 0;

        // go to last item
      } else if (index === -1) {
        index = focusableElements.length - 1;
      }
      focusableElements[index].focus();
      return;
    }
    // no visible focusable elements, focus the popup
    (_dom$getPopup = getPopup()) === null || _dom$getPopup === void 0 || _dom$getPopup.focus();
  };
  var arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];
  var arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {KeyboardEvent} event
   * @param {Function} dismissWith
   */
  var keydownHandler = function keydownHandler(innerParams, event, dismissWith) {
    if (!innerParams) {
      return; // This instance has already been destroyed
    }

    // Ignore keydown during IME composition
    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition
    // https://github.com/sweetalert2/sweetalert2/issues/720
    // https://github.com/sweetalert2/sweetalert2/issues/2406
    if (event.isComposing || event.keyCode === 229) {
      return;
    }
    if (innerParams.stopKeydownPropagation) {
      event.stopPropagation();
    }

    // ENTER
    if (event.key === 'Enter') {
      handleEnter(event, innerParams);
    }

    // TAB
    else if (event.key === 'Tab') {
      handleTab(event);
    }

    // ARROWS - switch focus between buttons
    else if ([].concat(arrowKeysNextButton, arrowKeysPreviousButton).includes(event.key)) {
      handleArrows(event.key);
    }

    // ESC
    else if (event.key === 'Escape') {
      handleEsc(event, innerParams, dismissWith);
    }
  };

  /**
   * @param {KeyboardEvent} event
   * @param {SweetAlertOptions} innerParams
   */
  var handleEnter = function handleEnter(event, innerParams) {
    // https://github.com/sweetalert2/sweetalert2/issues/2386
    if (!callIfFunction(innerParams.allowEnterKey)) {
      return;
    }
    var input = getInput$1(getPopup(), innerParams.input);
    if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {
      if (['textarea', 'file'].includes(innerParams.input)) {
        return; // do not submit
      }

      clickConfirm();
      event.preventDefault();
    }
  };

  /**
   * @param {KeyboardEvent} event
   */
  var handleTab = function handleTab(event) {
    var targetElement = event.target;
    var focusableElements = getFocusableElements();
    var btnIndex = -1;
    for (var i = 0; i < focusableElements.length; i++) {
      if (targetElement === focusableElements[i]) {
        btnIndex = i;
        break;
      }
    }

    // Cycle to the next button
    if (!event.shiftKey) {
      setFocus(btnIndex, 1);
    }

    // Cycle to the prev button
    else {
      setFocus(btnIndex, -1);
    }
    event.stopPropagation();
    event.preventDefault();
  };

  /**
   * @param {string} key
   */
  var handleArrows = function handleArrows(key) {
    var actions = getActions();
    var confirmButton = getConfirmButton();
    var denyButton = getDenyButton();
    var cancelButton = getCancelButton();
    if (!actions || !confirmButton || !denyButton || !cancelButton) {
      return;
    }
    /** @type HTMLElement[] */
    var buttons = [confirmButton, denyButton, cancelButton];
    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {
      return;
    }
    var sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';
    var buttonToFocus = document.activeElement;
    if (!buttonToFocus) {
      return;
    }
    for (var i = 0; i < actions.children.length; i++) {
      buttonToFocus = buttonToFocus[sibling];
      if (!buttonToFocus) {
        return;
      }
      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {
        break;
      }
    }
    if (buttonToFocus instanceof HTMLButtonElement) {
      buttonToFocus.focus();
    }
  };

  /**
   * @param {KeyboardEvent} event
   * @param {SweetAlertOptions} innerParams
   * @param {Function} dismissWith
   */
  var handleEsc = function handleEsc(event, innerParams, dismissWith) {
    if (callIfFunction(innerParams.allowEscapeKey)) {
      event.preventDefault();
      dismissWith(DismissReason.esc);
    }
  };

  /**
   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

  var privateMethods = {
    swalPromiseResolve: new WeakMap(),
    swalPromiseReject: new WeakMap()
  };

  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/
  // Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
  // elements not within the active modal dialog will not be surfaced if a user opens a screen
  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

  var setAriaHidden = function setAriaHidden() {
    var bodyChildren = Array.from(document.body.children);
    bodyChildren.forEach(function (el) {
      if (el === getContainer() || el.contains(getContainer())) {
        return;
      }
      if (el.hasAttribute('aria-hidden')) {
        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');
      }
      el.setAttribute('aria-hidden', 'true');
    });
  };
  var unsetAriaHidden = function unsetAriaHidden() {
    var bodyChildren = Array.from(document.body.children);
    bodyChildren.forEach(function (el) {
      if (el.hasAttribute('data-previous-aria-hidden')) {
        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');
        el.removeAttribute('data-previous-aria-hidden');
      } else {
        el.removeAttribute('aria-hidden');
      }
    });
  };

  // @ts-ignore
  var isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent; // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394

  /**
   * Fix iOS scrolling
   * http://stackoverflow.com/q/39626302
   */
  var iOSfix = function iOSfix() {
    if (isSafariOrIOS && !hasClass(document.body, swalClasses.iosfix)) {
      var offset = document.body.scrollTop;
      document.body.style.top = "".concat(offset * -1, "px");
      addClass(document.body, swalClasses.iosfix);
      lockBodyScroll();
    }
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1246
   */
  var lockBodyScroll = function lockBodyScroll() {
    var container = getContainer();
    if (!container) {
      return;
    }
    /** @type {boolean} */
    var preventTouchMove;
    /**
     * @param {TouchEvent} event
     */
    container.ontouchstart = function (event) {
      preventTouchMove = shouldPreventTouchMove(event);
    };
    /**
     * @param {TouchEvent} event
     */
    container.ontouchmove = function (event) {
      if (preventTouchMove) {
        event.preventDefault();
        event.stopPropagation();
      }
    };
  };

  /**
   * @param {TouchEvent} event
   * @returns {boolean}
   */
  var shouldPreventTouchMove = function shouldPreventTouchMove(event) {
    var target = event.target;
    var container = getContainer();
    var htmlContainer = getHtmlContainer();
    if (!container || !htmlContainer) {
      return false;
    }
    if (isStylus(event) || isZoom(event)) {
      return false;
    }
    if (target === container) {
      return true;
    }
    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&
    // #1603
    target.tagName !== 'TEXTAREA' &&
    // #2266
    !(isScrollable(htmlContainer) &&
    // #1944
    htmlContainer.contains(target))) {
      return true;
    }
    return false;
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1786
   *
   * @param {*} event
   * @returns {boolean}
   */
  var isStylus = function isStylus(event) {
    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1891
   *
   * @param {TouchEvent} event
   * @returns {boolean}
   */
  var isZoom = function isZoom(event) {
    return event.touches && event.touches.length > 1;
  };
  var undoIOSfix = function undoIOSfix() {
    if (hasClass(document.body, swalClasses.iosfix)) {
      var offset = parseInt(document.body.style.top, 10);
      removeClass(document.body, swalClasses.iosfix);
      document.body.style.top = '';
      document.body.scrollTop = offset * -1;
    }
  };

  /**
   * Measure scrollbar width for padding body during modal show/hide
   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js
   *
   * @returns {number}
   */
  var measureScrollbar = function measureScrollbar() {
    var scrollDiv = document.createElement('div');
    scrollDiv.className = swalClasses['scrollbar-measure'];
    document.body.appendChild(scrollDiv);
    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    return scrollbarWidth;
  };

  /**
   * Remember state in cases where opening and handling a modal will fiddle with it.
   * @type {number | null}
   */
  var previousBodyPadding = null;

  /**
   * @param {string} initialBodyOverflow
   */
  var replaceScrollbarWithPadding = function replaceScrollbarWithPadding(initialBodyOverflow) {
    // for queues, do not do this more than once
    if (previousBodyPadding !== null) {
      return;
    }
    // if the body has overflow
    if (document.body.scrollHeight > window.innerHeight || initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663
    ) {
      // add padding so the content doesn't shift after removal of scrollbar
      previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));
      document.body.style.paddingRight = "".concat(previousBodyPadding + measureScrollbar(), "px");
    }
  };
  var undoReplaceScrollbarWithPadding = function undoReplaceScrollbarWithPadding() {
    if (previousBodyPadding !== null) {
      document.body.style.paddingRight = "".concat(previousBodyPadding, "px");
      previousBodyPadding = null;
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} container
   * @param {boolean} returnFocus
   * @param {Function} didClose
   */
  function removePopupAndResetState(instance, container, returnFocus, didClose) {
    if (isToast()) {
      triggerDidCloseAndDispose(instance, didClose);
    } else {
      restoreActiveElement(returnFocus).then(function () {
        return triggerDidCloseAndDispose(instance, didClose);
      });
      removeKeydownHandler(globalState);
    }

    // workaround for https://github.com/sweetalert2/sweetalert2/issues/2088
    // for some reason removing the container in Safari will scroll the document to bottom
    if (isSafariOrIOS) {
      container.setAttribute('style', 'display:none !important');
      container.removeAttribute('class');
      container.innerHTML = '';
    } else {
      container.remove();
    }
    if (isModal()) {
      undoReplaceScrollbarWithPadding();
      undoIOSfix();
      unsetAriaHidden();
    }
    removeBodyClasses();
  }

  /**
   * Remove SweetAlert2 classes from body
   */
  function removeBodyClasses() {
    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);
  }

  /**
   * Instance method to close sweetAlert
   *
   * @param {any} resolveValue
   */
  function close(resolveValue) {
    resolveValue = prepareResolveValue(resolveValue);
    var swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);
    var didClose = triggerClosePopup(this);
    if (this.isAwaitingPromise) {
      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335
      if (!resolveValue.isDismissed) {
        handleAwaitingPromise(this);
        swalPromiseResolve(resolveValue);
      }
    } else if (didClose) {
      // Resolve Swal promise
      swalPromiseResolve(resolveValue);
    }
  }
  var triggerClosePopup = function triggerClosePopup(instance) {
    var popup = getPopup();
    if (!popup) {
      return false;
    }
    var innerParams = privateProps.innerParams.get(instance);
    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
      return false;
    }
    removeClass(popup, innerParams.showClass.popup);
    addClass(popup, innerParams.hideClass.popup);
    var backdrop = getContainer();
    removeClass(backdrop, innerParams.showClass.backdrop);
    addClass(backdrop, innerParams.hideClass.backdrop);
    handlePopupAnimation(instance, popup, innerParams);
    return true;
  };

  /**
   * @param {any} error
   */
  function rejectPromise(error) {
    var rejectPromise = privateMethods.swalPromiseReject.get(this);
    handleAwaitingPromise(this);
    if (rejectPromise) {
      // Reject Swal promise
      rejectPromise(error);
    }
  }

  /**
   * @param {SweetAlert} instance
   */
  var handleAwaitingPromise = function handleAwaitingPromise(instance) {
    if (instance.isAwaitingPromise) {
      delete instance.isAwaitingPromise;
      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335
      if (!privateProps.innerParams.get(instance)) {
        instance._destroy();
      }
    }
  };

  /**
   * @param {any} resolveValue
   * @returns {SweetAlertResult}
   */
  var prepareResolveValue = function prepareResolveValue(resolveValue) {
    // When user calls Swal.close()
    if (typeof resolveValue === 'undefined') {
      return {
        isConfirmed: false,
        isDenied: false,
        isDismissed: true
      };
    }
    return Object.assign({
      isConfirmed: false,
      isDenied: false,
      isDismissed: false
    }, resolveValue);
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} innerParams
   */
  var handlePopupAnimation = function handlePopupAnimation(instance, popup, innerParams) {
    var container = getContainer();
    // If animation is supported, animate
    var animationIsSupported = animationEndEvent && hasCssAnimation(popup);
    if (typeof innerParams.willClose === 'function') {
      innerParams.willClose(popup);
    }
    if (animationIsSupported) {
      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);
    } else {
      // Otherwise, remove immediately
      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} popup
   * @param {HTMLElement} container
   * @param {boolean} returnFocus
   * @param {Function} didClose
   */
  var animatePopup = function animatePopup(instance, popup, container, returnFocus, didClose) {
    if (!animationEndEvent) {
      return;
    }
    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);
    popup.addEventListener(animationEndEvent, function (e) {
      if (e.target === popup) {
        globalState.swalCloseEventFinishedCallback();
        delete globalState.swalCloseEventFinishedCallback;
      }
    });
  };

  /**
   * @param {SweetAlert} instance
   * @param {Function} didClose
   */
  var triggerDidCloseAndDispose = function triggerDidCloseAndDispose(instance, didClose) {
    setTimeout(function () {
      if (typeof didClose === 'function') {
        didClose.bind(instance.params)();
      }
      // instance might have been destroyed already
      if (instance._destroy) {
        instance._destroy();
      }
    });
  };

  /**
   * Shows loader (spinner), this is useful with AJAX requests.
   * By default the loader be shown instead of the "Confirm" button.
   *
   * @param {HTMLButtonElement | null} [buttonToReplace]
   */
  var showLoading = function showLoading(buttonToReplace) {
    var popup = getPopup();
    if (!popup) {
      new Swal(); // eslint-disable-line no-new
    }

    popup = getPopup();
    if (!popup) {
      return;
    }
    var loader = getLoader();
    if (isToast()) {
      hide(getIcon());
    } else {
      replaceButton(popup, buttonToReplace);
    }
    show(loader);
    popup.setAttribute('data-loading', 'true');
    popup.setAttribute('aria-busy', 'true');
    popup.focus();
  };

  /**
   * @param {HTMLElement} popup
   * @param {HTMLButtonElement | null} [buttonToReplace]
   */
  var replaceButton = function replaceButton(popup, buttonToReplace) {
    var actions = getActions();
    var loader = getLoader();
    if (!actions || !loader) {
      return;
    }
    if (!buttonToReplace && isVisible$1(getConfirmButton())) {
      buttonToReplace = getConfirmButton();
    }
    show(actions);
    if (buttonToReplace) {
      hide(buttonToReplace);
      loader.setAttribute('data-button-to-replace', buttonToReplace.className);
      actions.insertBefore(loader, buttonToReplace);
    }
    addClass([popup, actions], swalClasses.loading);
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var handleInputOptionsAndValue = function handleInputOptionsAndValue(instance, params) {
    if (params.input === 'select' || params.input === 'radio') {
      handleInputOptions(instance, params);
    } else if (['text', 'email', 'number', 'tel', 'textarea'].some(function (i) {
      return i === params.input;
    }) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {
      showLoading(getConfirmButton());
      handleInputValue(instance, params);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} innerParams
   * @returns {SweetAlertInputValue}
   */
  var getInputValue = function getInputValue(instance, innerParams) {
    var input = instance.getInput();
    if (!input) {
      return null;
    }
    switch (innerParams.input) {
      case 'checkbox':
        return getCheckboxValue(input);
      case 'radio':
        return getRadioValue(input);
      case 'file':
        return getFileValue(input);
      default:
        return innerParams.inputAutoTrim ? input.value.trim() : input.value;
    }
  };

  /**
   * @param {HTMLInputElement} input
   * @returns {number}
   */
  var getCheckboxValue = function getCheckboxValue(input) {
    return input.checked ? 1 : 0;
  };

  /**
   * @param {HTMLInputElement} input
   * @returns {string | null}
   */
  var getRadioValue = function getRadioValue(input) {
    return input.checked ? input.value : null;
  };

  /**
   * @param {HTMLInputElement} input
   * @returns {FileList | File | null}
   */
  var getFileValue = function getFileValue(input) {
    return input.files && input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var handleInputOptions = function handleInputOptions(instance, params) {
    var popup = getPopup();
    if (!popup) {
      return;
    }
    /**
     * @param {Record<string, any>} inputOptions
     */
    var processInputOptions = function processInputOptions(inputOptions) {
      if (params.input === 'select') {
        populateSelectOptions(popup, formatInputOptions(inputOptions), params);
      } else if (params.input === 'radio') {
        populateRadioOptions(popup, formatInputOptions(inputOptions), params);
      }
    };
    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {
      showLoading(getConfirmButton());
      asPromise(params.inputOptions).then(function (inputOptions) {
        instance.hideLoading();
        processInputOptions(inputOptions);
      });
    } else if (_typeof(params.inputOptions) === 'object') {
      processInputOptions(params.inputOptions);
    } else {
      error("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(_typeof(params.inputOptions)));
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  var handleInputValue = function handleInputValue(instance, params) {
    var input = instance.getInput();
    if (!input) {
      return;
    }
    hide(input);
    asPromise(params.inputValue).then(function (inputValue) {
      input.value = params.input === 'number' ? "".concat(parseFloat(inputValue) || 0) : "".concat(inputValue);
      show(input);
      input.focus();
      instance.hideLoading();
    })["catch"](function (err) {
      error("Error in inputValue promise: ".concat(err));
      input.value = '';
      show(input);
      input.focus();
      instance.hideLoading();
    });
  };

  /**
   * @param {HTMLElement} popup
   * @param {InputOptionFlattened[]} inputOptions
   * @param {SweetAlertOptions} params
   */
  function populateSelectOptions(popup, inputOptions, params) {
    var select = getDirectChildByClass(popup, swalClasses.select);
    if (!select) {
      return;
    }
    /**
     * @param {HTMLElement} parent
     * @param {string} optionLabel
     * @param {string} optionValue
     */
    var renderOption = function renderOption(parent, optionLabel, optionValue) {
      var option = document.createElement('option');
      option.value = optionValue;
      setInnerHtml(option, optionLabel);
      option.selected = isSelected(optionValue, params.inputValue);
      parent.appendChild(option);
    };
    inputOptions.forEach(function (inputOption) {
      var optionValue = inputOption[0];
      var optionLabel = inputOption[1];
      // <optgroup> spec:
      // https://www.w3.org/TR/html401/interact/forms.html#h-17.6
      // "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
      // check whether this is a <optgroup>
      if (Array.isArray(optionLabel)) {
        // if it is an array, then it is an <optgroup>
        var optgroup = document.createElement('optgroup');
        optgroup.label = optionValue;
        optgroup.disabled = false; // not configurable for now
        select.appendChild(optgroup);
        optionLabel.forEach(function (o) {
          return renderOption(optgroup, o[1], o[0]);
        });
      } else {
        // case of <option>
        renderOption(select, optionLabel, optionValue);
      }
    });
    select.focus();
  }

  /**
   * @param {HTMLElement} popup
   * @param {InputOptionFlattened[]} inputOptions
   * @param {SweetAlertOptions} params
   */
  function populateRadioOptions(popup, inputOptions, params) {
    var radio = getDirectChildByClass(popup, swalClasses.radio);
    if (!radio) {
      return;
    }
    inputOptions.forEach(function (inputOption) {
      var radioValue = inputOption[0];
      var radioLabel = inputOption[1];
      var radioInput = document.createElement('input');
      var radioLabelElement = document.createElement('label');
      radioInput.type = 'radio';
      radioInput.name = swalClasses.radio;
      radioInput.value = radioValue;
      if (isSelected(radioValue, params.inputValue)) {
        radioInput.checked = true;
      }
      var label = document.createElement('span');
      setInnerHtml(label, radioLabel);
      label.className = swalClasses.label;
      radioLabelElement.appendChild(radioInput);
      radioLabelElement.appendChild(label);
      radio.appendChild(radioLabelElement);
    });
    var radios = radio.querySelectorAll('input');
    if (radios.length) {
      radios[0].focus();
    }
  }

  /**
   * Converts `inputOptions` into an array of `[value, label]`s
   *
   * @param {Record<string, any>} inputOptions
   * @typedef {string[]} InputOptionFlattened
   * @returns {InputOptionFlattened[]}
   */
  var formatInputOptions = function formatInputOptions(inputOptions) {
    /** @type {InputOptionFlattened[]} */
    var result = [];
    if (inputOptions instanceof Map) {
      inputOptions.forEach(function (value, key) {
        var valueFormatted = value;
        if (_typeof(valueFormatted) === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }
        result.push([key, valueFormatted]);
      });
    } else {
      Object.keys(inputOptions).forEach(function (key) {
        var valueFormatted = inputOptions[key];
        if (_typeof(valueFormatted) === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }
        result.push([key, valueFormatted]);
      });
    }
    return result;
  };

  /**
   * @param {string} optionValue
   * @param {SweetAlertInputValue} inputValue
   * @returns {boolean}
   */
  var isSelected = function isSelected(optionValue, inputValue) {
    return !!inputValue && inputValue.toString() === optionValue.toString();
  };

  var _this = undefined;

  /**
   * @param {SweetAlert} instance
   */
  var handleConfirmButtonClick = function handleConfirmButtonClick(instance) {
    var innerParams = privateProps.innerParams.get(instance);
    instance.disableButtons();
    if (innerParams.input) {
      handleConfirmOrDenyWithInput(instance, 'confirm');
    } else {
      confirm(instance, true);
    }
  };

  /**
   * @param {SweetAlert} instance
   */
  var handleDenyButtonClick = function handleDenyButtonClick(instance) {
    var innerParams = privateProps.innerParams.get(instance);
    instance.disableButtons();
    if (innerParams.returnInputValueOnDeny) {
      handleConfirmOrDenyWithInput(instance, 'deny');
    } else {
      deny(instance, false);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {Function} dismissWith
   */
  var handleCancelButtonClick = function handleCancelButtonClick(instance, dismissWith) {
    instance.disableButtons();
    dismissWith(DismissReason.cancel);
  };

  /**
   * @param {SweetAlert} instance
   * @param {'confirm' | 'deny'} type
   */
  var handleConfirmOrDenyWithInput = function handleConfirmOrDenyWithInput(instance, type) {
    var innerParams = privateProps.innerParams.get(instance);
    if (!innerParams.input) {
      error("The \"input\" parameter is needed to be set when using returnInputValueOn".concat(capitalizeFirstLetter(type)));
      return;
    }
    var input = instance.getInput();
    var inputValue = getInputValue(instance, innerParams);
    if (innerParams.inputValidator) {
      handleInputValidator(instance, inputValue, type);
    } else if (input && !input.checkValidity()) {
      instance.enableButtons();
      instance.showValidationMessage(innerParams.validationMessage);
    } else if (type === 'deny') {
      deny(instance, inputValue);
    } else {
      confirm(instance, inputValue);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertInputValue} inputValue
   * @param {'confirm' | 'deny'} type
   */
  var handleInputValidator = function handleInputValidator(instance, inputValue, type) {
    var innerParams = privateProps.innerParams.get(instance);
    instance.disableInput();
    var validationPromise = Promise.resolve().then(function () {
      return asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage));
    });
    validationPromise.then(function (validationMessage) {
      instance.enableButtons();
      instance.enableInput();
      if (validationMessage) {
        instance.showValidationMessage(validationMessage);
      } else if (type === 'deny') {
        deny(instance, inputValue);
      } else {
        confirm(instance, inputValue);
      }
    });
  };

  /**
   * @param {SweetAlert} instance
   * @param {any} value
   */
  var deny = function deny(instance, value) {
    var innerParams = privateProps.innerParams.get(instance || _this);
    if (innerParams.showLoaderOnDeny) {
      showLoading(getDenyButton());
    }
    if (innerParams.preDeny) {
      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received
      var preDenyPromise = Promise.resolve().then(function () {
        return asPromise(innerParams.preDeny(value, innerParams.validationMessage));
      });
      preDenyPromise.then(function (preDenyValue) {
        if (preDenyValue === false) {
          instance.hideLoading();
          handleAwaitingPromise(instance);
        } else {
          instance.close({
            isDenied: true,
            value: typeof preDenyValue === 'undefined' ? value : preDenyValue
          });
        }
      })["catch"](function (error) {
        return rejectWith(instance || _this, error);
      });
    } else {
      instance.close({
        isDenied: true,
        value: value
      });
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {any} value
   */
  var succeedWith = function succeedWith(instance, value) {
    instance.close({
      isConfirmed: true,
      value: value
    });
  };

  /**
   *
   * @param {SweetAlert} instance
   * @param {string} error
   */
  var rejectWith = function rejectWith(instance, error) {
    instance.rejectPromise(error);
  };

  /**
   *
   * @param {SweetAlert} instance
   * @param {any} value
   */
  var confirm = function confirm(instance, value) {
    var innerParams = privateProps.innerParams.get(instance || _this);
    if (innerParams.showLoaderOnConfirm) {
      showLoading();
    }
    if (innerParams.preConfirm) {
      instance.resetValidationMessage();
      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received
      var preConfirmPromise = Promise.resolve().then(function () {
        return asPromise(innerParams.preConfirm(value, innerParams.validationMessage));
      });
      preConfirmPromise.then(function (preConfirmValue) {
        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {
          instance.hideLoading();
          handleAwaitingPromise(instance);
        } else {
          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);
        }
      })["catch"](function (error) {
        return rejectWith(instance || _this, error);
      });
    } else {
      succeedWith(instance, value);
    }
  };

  /**
   * Hides loader and shows back the button which was hidden by .showLoading()
   */
  function hideLoading() {
    // do nothing if popup is closed
    var innerParams = privateProps.innerParams.get(this);
    if (!innerParams) {
      return;
    }
    var domCache = privateProps.domCache.get(this);
    hide(domCache.loader);
    if (isToast()) {
      if (innerParams.icon) {
        show(getIcon());
      }
    } else {
      showRelatedButton(domCache);
    }
    removeClass([domCache.popup, domCache.actions], swalClasses.loading);
    domCache.popup.removeAttribute('aria-busy');
    domCache.popup.removeAttribute('data-loading');
    domCache.confirmButton.disabled = false;
    domCache.denyButton.disabled = false;
    domCache.cancelButton.disabled = false;
  }
  var showRelatedButton = function showRelatedButton(domCache) {
    var buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));
    if (buttonToReplace.length) {
      show(buttonToReplace[0], 'inline-block');
    } else if (allButtonsAreHidden()) {
      hide(domCache.actions);
    }
  };

  /**
   * Gets the input DOM node, this method works with input parameter.
   *
   * @returns {HTMLInputElement | null}
   */
  function getInput() {
    var innerParams = privateProps.innerParams.get(this);
    var domCache = privateProps.domCache.get(this);
    if (!domCache) {
      return null;
    }
    return getInput$1(domCache.popup, innerParams.input);
  }

  /**
   * @param {SweetAlert} instance
   * @param {string[]} buttons
   * @param {boolean} disabled
   */
  function setButtonsDisabled(instance, buttons, disabled) {
    var domCache = privateProps.domCache.get(instance);
    buttons.forEach(function (button) {
      domCache[button].disabled = disabled;
    });
  }

  /**
   * @param {HTMLInputElement | null} input
   * @param {boolean} disabled
   */
  function setInputDisabled(input, disabled) {
    var popup = getPopup();
    if (!popup || !input) {
      return;
    }
    if (input.type === 'radio') {
      /** @type {NodeListOf<HTMLInputElement>} */
      var radios = popup.querySelectorAll("[name=\"".concat(swalClasses.radio, "\"]"));
      for (var i = 0; i < radios.length; i++) {
        radios[i].disabled = disabled;
      }
    } else {
      input.disabled = disabled;
    }
  }

  /**
   * Enable all the buttons
   * @this {SweetAlert}
   */
  function enableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);
  }

  /**
   * Disable all the buttons
   * @this {SweetAlert}
   */
  function disableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);
  }

  /**
   * Enable the input field
   * @this {SweetAlert}
   */
  function enableInput() {
    setInputDisabled(this.getInput(), false);
  }

  /**
   * Disable the input field
   * @this {SweetAlert}
   */
  function disableInput() {
    setInputDisabled(this.getInput(), true);
  }

  /**
   * Show block with validation message
   *
   * @param {string} error
   * @this {SweetAlert}
   */
  function showValidationMessage(error) {
    var domCache = privateProps.domCache.get(this);
    var params = privateProps.innerParams.get(this);
    setInnerHtml(domCache.validationMessage, error);
    domCache.validationMessage.className = swalClasses['validation-message'];
    if (params.customClass && params.customClass.validationMessage) {
      addClass(domCache.validationMessage, params.customClass.validationMessage);
    }
    show(domCache.validationMessage);
    var input = this.getInput();
    if (input) {
      input.setAttribute('aria-invalid', 'true');
      input.setAttribute('aria-describedby', swalClasses['validation-message']);
      focusInput(input);
      addClass(input, swalClasses.inputerror);
    }
  }

  /**
   * Hide block with validation message
   *
   * @this {SweetAlert}
   */
  function resetValidationMessage() {
    var domCache = privateProps.domCache.get(this);
    if (domCache.validationMessage) {
      hide(domCache.validationMessage);
    }
    var input = this.getInput();
    if (input) {
      input.removeAttribute('aria-invalid');
      input.removeAttribute('aria-describedby');
      removeClass(input, swalClasses.inputerror);
    }
  }

  var defaultParams = {
    title: '',
    titleText: '',
    text: '',
    html: '',
    footer: '',
    icon: undefined,
    iconColor: undefined,
    iconHtml: undefined,
    template: undefined,
    toast: false,
    animation: true,
    showClass: {
      popup: 'swal2-show',
      backdrop: 'swal2-backdrop-show',
      icon: 'swal2-icon-show'
    },
    hideClass: {
      popup: 'swal2-hide',
      backdrop: 'swal2-backdrop-hide',
      icon: 'swal2-icon-hide'
    },
    customClass: {},
    target: 'body',
    color: undefined,
    backdrop: true,
    heightAuto: true,
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
    stopKeydownPropagation: true,
    keydownListenerCapture: false,
    showConfirmButton: true,
    showDenyButton: false,
    showCancelButton: false,
    preConfirm: undefined,
    preDeny: undefined,
    confirmButtonText: 'OK',
    confirmButtonAriaLabel: '',
    confirmButtonColor: undefined,
    denyButtonText: 'No',
    denyButtonAriaLabel: '',
    denyButtonColor: undefined,
    cancelButtonText: 'Cancel',
    cancelButtonAriaLabel: '',
    cancelButtonColor: undefined,
    buttonsStyling: true,
    reverseButtons: false,
    focusConfirm: true,
    focusDeny: false,
    focusCancel: false,
    returnFocus: true,
    showCloseButton: false,
    closeButtonHtml: '&times;',
    closeButtonAriaLabel: 'Close this dialog',
    loaderHtml: '',
    showLoaderOnConfirm: false,
    showLoaderOnDeny: false,
    imageUrl: undefined,
    imageWidth: undefined,
    imageHeight: undefined,
    imageAlt: '',
    timer: undefined,
    timerProgressBar: false,
    width: undefined,
    padding: undefined,
    background: undefined,
    input: undefined,
    inputPlaceholder: '',
    inputLabel: '',
    inputValue: '',
    inputOptions: {},
    inputAutoFocus: true,
    inputAutoTrim: true,
    inputAttributes: {},
    inputValidator: undefined,
    returnInputValueOnDeny: false,
    validationMessage: undefined,
    grow: false,
    position: 'center',
    progressSteps: [],
    currentProgressStep: undefined,
    progressStepsDistance: undefined,
    willOpen: undefined,
    didOpen: undefined,
    didRender: undefined,
    willClose: undefined,
    didClose: undefined,
    didDestroy: undefined,
    scrollbarPadding: true
  };
  var updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];

  /** @type {Record<string, string>} */
  var deprecatedParams = {};
  var toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];

  /**
   * Is valid parameter
   *
   * @param {string} paramName
   * @returns {boolean}
   */
  var isValidParameter = function isValidParameter(paramName) {
    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);
  };

  /**
   * Is valid parameter for Swal.update() method
   *
   * @param {string} paramName
   * @returns {boolean}
   */
  var isUpdatableParameter = function isUpdatableParameter(paramName) {
    return updatableParams.indexOf(paramName) !== -1;
  };

  /**
   * Is deprecated parameter
   *
   * @param {string} paramName
   * @returns {string | undefined}
   */
  var isDeprecatedParameter = function isDeprecatedParameter(paramName) {
    return deprecatedParams[paramName];
  };

  /**
   * @param {string} param
   */
  var checkIfParamIsValid = function checkIfParamIsValid(param) {
    if (!isValidParameter(param)) {
      warn("Unknown parameter \"".concat(param, "\""));
    }
  };

  /**
   * @param {string} param
   */
  var checkIfToastParamIsValid = function checkIfToastParamIsValid(param) {
    if (toastIncompatibleParams.includes(param)) {
      warn("The parameter \"".concat(param, "\" is incompatible with toasts"));
    }
  };

  /**
   * @param {string} param
   */
  var checkIfParamIsDeprecated = function checkIfParamIsDeprecated(param) {
    var isDeprecated = isDeprecatedParameter(param);
    if (isDeprecated) {
      warnAboutDeprecation(param, isDeprecated);
    }
  };

  /**
   * Show relevant warnings for given params
   *
   * @param {SweetAlertOptions} params
   */
  var showWarningsForParams = function showWarningsForParams(params) {
    if (params.backdrop === false && params.allowOutsideClick) {
      warn('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
    }
    for (var param in params) {
      checkIfParamIsValid(param);
      if (params.toast) {
        checkIfToastParamIsValid(param);
      }
      checkIfParamIsDeprecated(param);
    }
  };

  /**
   * Updates popup parameters.
   *
   * @param {SweetAlertOptions} params
   */
  function update(params) {
    var popup = getPopup();
    var innerParams = privateProps.innerParams.get(this);
    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
      warn("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.");
      return;
    }
    var validUpdatableParams = filterValidParams(params);
    var updatedParams = Object.assign({}, innerParams, validUpdatableParams);
    render(this, updatedParams);
    privateProps.innerParams.set(this, updatedParams);
    Object.defineProperties(this, {
      params: {
        value: Object.assign({}, this.params, params),
        writable: false,
        enumerable: true
      }
    });
  }

  /**
   * @param {SweetAlertOptions} params
   * @returns {SweetAlertOptions}
   */
  var filterValidParams = function filterValidParams(params) {
    var validUpdatableParams = {};
    Object.keys(params).forEach(function (param) {
      if (isUpdatableParameter(param)) {
        validUpdatableParams[param] = params[param];
      } else {
        warn("Invalid parameter to update: ".concat(param));
      }
    });
    return validUpdatableParams;
  };

  /**
   * Dispose the current SweetAlert2 instance
   */
  function _destroy() {
    var domCache = privateProps.domCache.get(this);
    var innerParams = privateProps.innerParams.get(this);
    if (!innerParams) {
      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335
      return; // This instance has already been destroyed
    }

    // Check if there is another Swal closing
    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
      globalState.swalCloseEventFinishedCallback();
      delete globalState.swalCloseEventFinishedCallback;
    }
    if (typeof innerParams.didDestroy === 'function') {
      innerParams.didDestroy();
    }
    disposeSwal(this);
  }

  /**
   * @param {SweetAlert} instance
   */
  var disposeSwal = function disposeSwal(instance) {
    disposeWeakMaps(instance);
    // Unset this.params so GC will dispose it (#1569)
    delete instance.params;
    // Unset globalState props so GC will dispose globalState (#1569)
    delete globalState.keydownHandler;
    delete globalState.keydownTarget;
    // Unset currentInstance
    delete globalState.currentInstance;
  };

  /**
   * @param {SweetAlert} instance
   */
  var disposeWeakMaps = function disposeWeakMaps(instance) {
    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335
    if (instance.isAwaitingPromise) {
      unsetWeakMaps(privateProps, instance);
      instance.isAwaitingPromise = true;
    } else {
      unsetWeakMaps(privateMethods, instance);
      unsetWeakMaps(privateProps, instance);
      delete instance.isAwaitingPromise;
      // Unset instance methods
      delete instance.disableButtons;
      delete instance.enableButtons;
      delete instance.getInput;
      delete instance.disableInput;
      delete instance.enableInput;
      delete instance.hideLoading;
      delete instance.disableLoading;
      delete instance.showValidationMessage;
      delete instance.resetValidationMessage;
      delete instance.close;
      delete instance.closePopup;
      delete instance.closeModal;
      delete instance.closeToast;
      delete instance.rejectPromise;
      delete instance.update;
      delete instance._destroy;
    }
  };

  /**
   * @param {object} obj
   * @param {SweetAlert} instance
   */
  var unsetWeakMaps = function unsetWeakMaps(obj, instance) {
    for (var i in obj) {
      obj[i]["delete"](instance);
    }
  };

  var instanceMethods = /*#__PURE__*/Object.freeze({
    __proto__: null,
    _destroy: _destroy,
    close: close,
    closeModal: close,
    closePopup: close,
    closeToast: close,
    disableButtons: disableButtons,
    disableInput: disableInput,
    disableLoading: hideLoading,
    enableButtons: enableButtons,
    enableInput: enableInput,
    getInput: getInput,
    handleAwaitingPromise: handleAwaitingPromise,
    hideLoading: hideLoading,
    rejectPromise: rejectPromise,
    resetValidationMessage: resetValidationMessage,
    showValidationMessage: showValidationMessage,
    update: update
  });

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  var handlePopupClick = function handlePopupClick(innerParams, domCache, dismissWith) {
    if (innerParams.toast) {
      handleToastClick(innerParams, domCache, dismissWith);
    } else {
      // Ignore click events that had mousedown on the popup but mouseup on the container
      // This can happen when the user drags a slider
      handleModalMousedown(domCache);

      // Ignore click events that had mousedown on the container but mouseup on the popup
      handleContainerMousedown(domCache);
      handleModalClick(innerParams, domCache, dismissWith);
    }
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  var handleToastClick = function handleToastClick(innerParams, domCache, dismissWith) {
    // Closing toast by internal click
    domCache.popup.onclick = function () {
      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {
        return;
      }
      dismissWith(DismissReason.close);
    };
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @returns {boolean}
   */
  var isAnyButtonShown = function isAnyButtonShown(innerParams) {
    return !!(innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton);
  };
  var ignoreOutsideClick = false;

  /**
   * @param {DomCache} domCache
   */
  var handleModalMousedown = function handleModalMousedown(domCache) {
    domCache.popup.onmousedown = function () {
      domCache.container.onmouseup = function (e) {
        domCache.container.onmouseup = function () {};
        // We only check if the mouseup target is the container because usually it doesn't
        // have any other direct children aside of the popup
        if (e.target === domCache.container) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  /**
   * @param {DomCache} domCache
   */
  var handleContainerMousedown = function handleContainerMousedown(domCache) {
    domCache.container.onmousedown = function () {
      domCache.popup.onmouseup = function (e) {
        domCache.popup.onmouseup = function () {};
        // We also need to check if the mouseup target is a child of the popup
        if (e.target === domCache.popup || e.target instanceof HTMLElement && domCache.popup.contains(e.target)) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  var handleModalClick = function handleModalClick(innerParams, domCache, dismissWith) {
    domCache.container.onclick = function (e) {
      if (ignoreOutsideClick) {
        ignoreOutsideClick = false;
        return;
      }
      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {
        dismissWith(DismissReason.backdrop);
      }
    };
  };

  var isJqueryElement = function isJqueryElement(elem) {
    return _typeof(elem) === 'object' && elem.jquery;
  };
  var isElement = function isElement(elem) {
    return elem instanceof Element || isJqueryElement(elem);
  };
  var argsToParams = function argsToParams(args) {
    var params = {};
    if (_typeof(args[0]) === 'object' && !isElement(args[0])) {
      Object.assign(params, args[0]);
    } else {
      ['title', 'html', 'icon'].forEach(function (name, index) {
        var arg = args[index];
        if (typeof arg === 'string' || isElement(arg)) {
          params[name] = arg;
        } else if (arg !== undefined) {
          error("Unexpected type of ".concat(name, "! Expected \"string\" or \"Element\", got ").concat(_typeof(arg)));
        }
      });
    }
    return params;
  };

  /**
   * Main method to create a new SweetAlert2 popup
   *
   * @param  {...SweetAlertOptions} args
   * @returns {Promise<SweetAlertResult>}
   */
  function fire() {
    var Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _construct(Swal, args);
  }

  /**
   * Returns an extended version of `Swal` containing `params` as defaults.
   * Useful for reusing Swal configuration.
   *
   * For example:
   *
   * Before:
   * const textPromptOptions = { input: 'text', showCancelButton: true }
   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
   *
   * After:
   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
   * const {value: firstName} = await TextPrompt('What is your first name?')
   * const {value: lastName} = await TextPrompt('What is your last name?')
   *
   * @param {SweetAlertOptions} mixinParams
   * @returns {SweetAlert}
   */
  function mixin(mixinParams) {
    var MixinSwal = /*#__PURE__*/function (_this) {
      _inherits(MixinSwal, _this);
      var _super = _createSuper(MixinSwal);
      function MixinSwal() {
        _classCallCheck(this, MixinSwal);
        return _super.apply(this, arguments);
      }
      _createClass(MixinSwal, [{
        key: "_main",
        value: function _main(params, priorityMixinParams) {
          return _get(_getPrototypeOf(MixinSwal.prototype), "_main", this).call(this, params, Object.assign({}, mixinParams, priorityMixinParams));
        }
      }]);
      return MixinSwal;
    }(this); // @ts-ignore
    return MixinSwal;
  }

  /**
   * If `timer` parameter is set, returns number of milliseconds of timer remained.
   * Otherwise, returns undefined.
   *
   * @returns {number | undefined}
   */
  var getTimerLeft = function getTimerLeft() {
    return globalState.timeout && globalState.timeout.getTimerLeft();
  };

  /**
   * Stop timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  var stopTimer = function stopTimer() {
    if (globalState.timeout) {
      stopTimerProgressBar();
      return globalState.timeout.stop();
    }
  };

  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  var resumeTimer = function resumeTimer() {
    if (globalState.timeout) {
      var remaining = globalState.timeout.start();
      animateTimerProgressBar(remaining);
      return remaining;
    }
  };

  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  var toggleTimer = function toggleTimer() {
    var timer = globalState.timeout;
    return timer && (timer.running ? stopTimer() : resumeTimer());
  };

  /**
   * Increase timer. Returns number of milliseconds of an updated timer.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @param {number} ms
   * @returns {number | undefined}
   */
  var increaseTimer = function increaseTimer(ms) {
    if (globalState.timeout) {
      var remaining = globalState.timeout.increase(ms);
      animateTimerProgressBar(remaining, true);
      return remaining;
    }
  };

  /**
   * Check if timer is running. Returns true if timer is running
   * or false if timer is paused or stopped.
   * If `timer` parameter isn't set, returns undefined
   *
   * @returns {boolean}
   */
  var isTimerRunning = function isTimerRunning() {
    return !!(globalState.timeout && globalState.timeout.isRunning());
  };

  var bodyClickListenerAdded = false;
  var clickHandlers = {};

  /**
   * @param {string} attr
   */
  function bindClickHandler() {
    var attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';
    clickHandlers[attr] = this;
    if (!bodyClickListenerAdded) {
      document.body.addEventListener('click', bodyClickListener);
      bodyClickListenerAdded = true;
    }
  }
  var bodyClickListener = function bodyClickListener(event) {
    for (var el = event.target; el && el !== document; el = el.parentNode) {
      for (var attr in clickHandlers) {
        var template = el.getAttribute(attr);
        if (template) {
          clickHandlers[attr].fire({
            template: template
          });
          return;
        }
      }
    }
  };

  var staticMethods = /*#__PURE__*/Object.freeze({
    __proto__: null,
    argsToParams: argsToParams,
    bindClickHandler: bindClickHandler,
    clickCancel: clickCancel,
    clickConfirm: clickConfirm,
    clickDeny: clickDeny,
    enableLoading: showLoading,
    fire: fire,
    getActions: getActions,
    getCancelButton: getCancelButton,
    getCloseButton: getCloseButton,
    getConfirmButton: getConfirmButton,
    getContainer: getContainer,
    getDenyButton: getDenyButton,
    getFocusableElements: getFocusableElements,
    getFooter: getFooter,
    getHtmlContainer: getHtmlContainer,
    getIcon: getIcon,
    getIconContent: getIconContent,
    getImage: getImage,
    getInputLabel: getInputLabel,
    getLoader: getLoader,
    getPopup: getPopup,
    getProgressSteps: getProgressSteps,
    getTimerLeft: getTimerLeft,
    getTimerProgressBar: getTimerProgressBar,
    getTitle: getTitle,
    getValidationMessage: getValidationMessage,
    increaseTimer: increaseTimer,
    isDeprecatedParameter: isDeprecatedParameter,
    isLoading: isLoading,
    isTimerRunning: isTimerRunning,
    isUpdatableParameter: isUpdatableParameter,
    isValidParameter: isValidParameter,
    isVisible: isVisible,
    mixin: mixin,
    resumeTimer: resumeTimer,
    showLoading: showLoading,
    stopTimer: stopTimer,
    toggleTimer: toggleTimer
  });

  var Timer = /*#__PURE__*/function () {
    /**
     * @param {Function} callback
     * @param {number} delay
     */
    function Timer(callback, delay) {
      _classCallCheck(this, Timer);
      this.callback = callback;
      this.remaining = delay;
      this.running = false;
      this.start();
    }

    /**
     * @returns {number}
     */
    _createClass(Timer, [{
      key: "start",
      value: function start() {
        if (!this.running) {
          this.running = true;
          this.started = new Date();
          this.id = setTimeout(this.callback, this.remaining);
        }
        return this.remaining;
      }

      /**
       * @returns {number}
       */
    }, {
      key: "stop",
      value: function stop() {
        if (this.started && this.running) {
          this.running = false;
          clearTimeout(this.id);
          this.remaining -= new Date().getTime() - this.started.getTime();
        }
        return this.remaining;
      }

      /**
       * @param {number} n
       * @returns {number}
       */
    }, {
      key: "increase",
      value: function increase(n) {
        var running = this.running;
        if (running) {
          this.stop();
        }
        this.remaining += n;
        if (running) {
          this.start();
        }
        return this.remaining;
      }

      /**
       * @returns {number}
       */
    }, {
      key: "getTimerLeft",
      value: function getTimerLeft() {
        if (this.running) {
          this.stop();
          this.start();
        }
        return this.remaining;
      }

      /**
       * @returns {boolean}
       */
    }, {
      key: "isRunning",
      value: function isRunning() {
        return this.running;
      }
    }]);
    return Timer;
  }();

  var swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];

  /**
   * @param {SweetAlertOptions} params
   * @returns {SweetAlertOptions}
   */
  var getTemplateParams = function getTemplateParams(params) {
    /** @type {HTMLTemplateElement} */
    var template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;
    if (!template) {
      return {};
    }
    /** @type {DocumentFragment} */
    var templateContent = template.content;
    showWarningsForElements(templateContent);
    var result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalParams = function getSwalParams(templateContent) {
    var result = {};
    /** @type {HTMLElement[]} */
    var swalParams = Array.from(templateContent.querySelectorAll('swal-param'));
    swalParams.forEach(function (param) {
      showWarningsForAttributes(param, ['name', 'value']);
      var paramName = param.getAttribute('name');
      var value = param.getAttribute('value');
      if (typeof defaultParams[paramName] === 'boolean') {
        result[paramName] = value !== 'false';
      } else if (_typeof(defaultParams[paramName]) === 'object') {
        result[paramName] = JSON.parse(value);
      } else {
        result[paramName] = value;
      }
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalFunctionParams = function getSwalFunctionParams(templateContent) {
    var result = {};
    /** @type {HTMLElement[]} */
    var swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));
    swalFunctions.forEach(function (param) {
      var paramName = param.getAttribute('name');
      var value = param.getAttribute('value');
      result[paramName] = new Function("return ".concat(value))();
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalButtons = function getSwalButtons(templateContent) {
    var result = {};
    /** @type {HTMLElement[]} */
    var swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));
    swalButtons.forEach(function (button) {
      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);
      var type = button.getAttribute('type');
      result["".concat(type, "ButtonText")] = button.innerHTML;
      result["show".concat(capitalizeFirstLetter(type), "Button")] = true;
      if (button.hasAttribute('color')) {
        result["".concat(type, "ButtonColor")] = button.getAttribute('color');
      }
      if (button.hasAttribute('aria-label')) {
        result["".concat(type, "ButtonAriaLabel")] = button.getAttribute('aria-label');
      }
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalImage = function getSwalImage(templateContent) {
    var result = {};
    /** @type {HTMLElement} */
    var image = templateContent.querySelector('swal-image');
    if (image) {
      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);
      if (image.hasAttribute('src')) {
        result.imageUrl = image.getAttribute('src');
      }
      if (image.hasAttribute('width')) {
        result.imageWidth = image.getAttribute('width');
      }
      if (image.hasAttribute('height')) {
        result.imageHeight = image.getAttribute('height');
      }
      if (image.hasAttribute('alt')) {
        result.imageAlt = image.getAttribute('alt');
      }
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalIcon = function getSwalIcon(templateContent) {
    var result = {};
    /** @type {HTMLElement} */
    var icon = templateContent.querySelector('swal-icon');
    if (icon) {
      showWarningsForAttributes(icon, ['type', 'color']);
      if (icon.hasAttribute('type')) {
        /** @type {SweetAlertIcon} */
        // @ts-ignore
        result.icon = icon.getAttribute('type');
      }
      if (icon.hasAttribute('color')) {
        result.iconColor = icon.getAttribute('color');
      }
      result.iconHtml = icon.innerHTML;
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {SweetAlertOptions}
   */
  var getSwalInput = function getSwalInput(templateContent) {
    var result = {};
    /** @type {HTMLElement} */
    var input = templateContent.querySelector('swal-input');
    if (input) {
      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);
      /** @type {SweetAlertInput} */
      // @ts-ignore
      result.input = input.getAttribute('type') || 'text';
      if (input.hasAttribute('label')) {
        result.inputLabel = input.getAttribute('label');
      }
      if (input.hasAttribute('placeholder')) {
        result.inputPlaceholder = input.getAttribute('placeholder');
      }
      if (input.hasAttribute('value')) {
        result.inputValue = input.getAttribute('value');
      }
    }
    /** @type {HTMLElement[]} */
    var inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));
    if (inputOptions.length) {
      result.inputOptions = {};
      inputOptions.forEach(function (option) {
        showWarningsForAttributes(option, ['value']);
        var optionValue = option.getAttribute('value');
        var optionName = option.innerHTML;
        result.inputOptions[optionValue] = optionName;
      });
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @param {string[]} paramNames
   * @returns {SweetAlertOptions}
   */
  var getSwalStringParams = function getSwalStringParams(templateContent, paramNames) {
    var result = {};
    for (var i in paramNames) {
      var paramName = paramNames[i];
      /** @type {HTMLElement} */
      var tag = templateContent.querySelector(paramName);
      if (tag) {
        showWarningsForAttributes(tag, []);
        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();
      }
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   */
  var showWarningsForElements = function showWarningsForElements(templateContent) {
    var allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);
    Array.from(templateContent.children).forEach(function (el) {
      var tagName = el.tagName.toLowerCase();
      if (!allowedElements.includes(tagName)) {
        warn("Unrecognized element <".concat(tagName, ">"));
      }
    });
  };

  /**
   * @param {HTMLElement} el
   * @param {string[]} allowedAttributes
   */
  var showWarningsForAttributes = function showWarningsForAttributes(el, allowedAttributes) {
    Array.from(el.attributes).forEach(function (attribute) {
      if (allowedAttributes.indexOf(attribute.name) === -1) {
        warn(["Unrecognized attribute \"".concat(attribute.name, "\" on <").concat(el.tagName.toLowerCase(), ">."), "".concat(allowedAttributes.length ? "Allowed attributes are: ".concat(allowedAttributes.join(', ')) : 'To set the value, use HTML within the element.')]);
      }
    });
  };

  var SHOW_CLASS_TIMEOUT = 10;

  /**
   * Open popup, add necessary classes and styles, fix scrollbar
   *
   * @param {SweetAlertOptions} params
   */
  var openPopup = function openPopup(params) {
    var container = getContainer();
    var popup = getPopup();
    if (typeof params.willOpen === 'function') {
      params.willOpen(popup);
    }
    var bodyStyles = window.getComputedStyle(document.body);
    var initialBodyOverflow = bodyStyles.overflowY;
    addClasses(container, popup, params);

    // scrolling is 'hidden' until animation is done, after that 'auto'
    setTimeout(function () {
      setScrollingVisibility(container, popup);
    }, SHOW_CLASS_TIMEOUT);
    if (isModal()) {
      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);
      setAriaHidden();
    }
    if (!isToast() && !globalState.previousActiveElement) {
      globalState.previousActiveElement = document.activeElement;
    }
    if (typeof params.didOpen === 'function') {
      setTimeout(function () {
        return params.didOpen(popup);
      });
    }
    removeClass(container, swalClasses['no-transition']);
  };

  /**
   * @param {AnimationEvent} event
   */
  var swalOpenAnimationFinished = function swalOpenAnimationFinished(event) {
    var popup = getPopup();
    if (event.target !== popup || !animationEndEvent) {
      return;
    }
    var container = getContainer();
    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);
    container.style.overflowY = 'auto';
  };

  /**
   * @param {HTMLElement} container
   * @param {HTMLElement} popup
   */
  var setScrollingVisibility = function setScrollingVisibility(container, popup) {
    if (animationEndEvent && hasCssAnimation(popup)) {
      container.style.overflowY = 'hidden';
      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);
    } else {
      container.style.overflowY = 'auto';
    }
  };

  /**
   * @param {HTMLElement} container
   * @param {boolean} scrollbarPadding
   * @param {string} initialBodyOverflow
   */
  var fixScrollContainer = function fixScrollContainer(container, scrollbarPadding, initialBodyOverflow) {
    iOSfix();
    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {
      replaceScrollbarWithPadding(initialBodyOverflow);
    }

    // sweetalert2/issues/1247
    setTimeout(function () {
      container.scrollTop = 0;
    });
  };

  /**
   * @param {HTMLElement} container
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} params
   */
  var addClasses = function addClasses(container, popup, params) {
    addClass(container, params.showClass.backdrop);
    if (params.animation) {
      // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059
      popup.style.setProperty('opacity', '0', 'important');
      show(popup, 'grid');
      setTimeout(function () {
        // Animate popup right after showing it
        addClass(popup, params.showClass.popup);
        // and remove the opacity workaround
        popup.style.removeProperty('opacity');
      }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062
    } else {
      show(popup, 'grid');
    }
    addClass([document.documentElement, document.body], swalClasses.shown);
    if (params.heightAuto && params.backdrop && !params.toast) {
      addClass([document.documentElement, document.body], swalClasses['height-auto']);
    }
  };

  var defaultInputValidators = {
    /**
     * @param {string} string
     * @param {string} [validationMessage]
     * @returns {Promise<string | void>}
     */
    email: function email(string, validationMessage) {
      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');
    },
    /**
     * @param {string} string
     * @param {string} [validationMessage]
     * @returns {Promise<string | void>}
     */
    url: function url(string, validationMessage) {
      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
      return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  function setDefaultInputValidators(params) {
    // Use default `inputValidator` for supported input types if not provided
    if (params.inputValidator) {
      return;
    }
    if (params.input === 'email') {
      params.inputValidator = defaultInputValidators['email'];
    }
    if (params.input === 'url') {
      params.inputValidator = defaultInputValidators['url'];
    }
  }

  /**
   * @param {SweetAlertOptions} params
   */
  function validateCustomTargetElement(params) {
    // Determine if the custom target element is valid
    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {
      warn('Target parameter is not valid, defaulting to "body"');
      params.target = 'body';
    }
  }

  /**
   * Set type, text and actions on popup
   *
   * @param {SweetAlertOptions} params
   */
  function setParameters(params) {
    setDefaultInputValidators(params);

    // showLoaderOnConfirm && preConfirm
    if (params.showLoaderOnConfirm && !params.preConfirm) {
      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\n' + 'https://sweetalert2.github.io/#ajax-request');
    }
    validateCustomTargetElement(params);

    // Replace newlines with <br> in title
    if (typeof params.title === 'string') {
      params.title = params.title.split('\n').join('<br />');
    }
    init(params);
  }

  /** @type {SweetAlert} */
  var currentInstance;
  var _promise = /*#__PURE__*/new WeakMap();
  var SweetAlert = /*#__PURE__*/function () {
    /**
     * @param {...any} args
     * @this {SweetAlert}
     */
    function SweetAlert() {
      _classCallCheck(this, SweetAlert);
      /**
       * @type {Promise<SweetAlertResult>}
       */
      _classPrivateFieldInitSpec(this, _promise, {
        writable: true,
        value: void 0
      });
      // Prevent run in Node env
      if (typeof window === 'undefined') {
        return;
      }
      currentInstance = this;

      // @ts-ignore
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      var outerParams = Object.freeze(this.constructor.argsToParams(args));

      /** @type {Readonly<SweetAlertOptions>} */
      this.params = outerParams;

      /** @type {boolean} */
      this.isAwaitingPromise = false;
      _classPrivateFieldSet(this, _promise, this._main(currentInstance.params));
    }
    _createClass(SweetAlert, [{
      key: "_main",
      value: function _main(userParams) {
        var mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        showWarningsForParams(Object.assign({}, mixinParams, userParams));
        if (globalState.currentInstance) {
          var swalPromiseResolve = privateMethods.swalPromiseResolve.get(globalState.currentInstance);
          var isAwaitingPromise = globalState.currentInstance.isAwaitingPromise;
          globalState.currentInstance._destroy();
          if (!isAwaitingPromise) {
            swalPromiseResolve({
              isDismissed: true
            });
          }
          if (isModal()) {
            unsetAriaHidden();
          }
        }
        globalState.currentInstance = currentInstance;
        var innerParams = prepareParams(userParams, mixinParams);
        setParameters(innerParams);
        Object.freeze(innerParams);

        // clear the previous timer
        if (globalState.timeout) {
          globalState.timeout.stop();
          delete globalState.timeout;
        }

        // clear the restore focus timeout
        clearTimeout(globalState.restoreFocusTimeout);
        var domCache = populateDomCache(currentInstance);
        render(currentInstance, innerParams);
        privateProps.innerParams.set(currentInstance, innerParams);
        return swalPromise(currentInstance, domCache, innerParams);
      }

      // `catch` cannot be the name of a module export, so we define our thenable methods here instead
    }, {
      key: "then",
      value: function then(onFulfilled) {
        return _classPrivateFieldGet(this, _promise).then(onFulfilled);
      }
    }, {
      key: "finally",
      value: function _finally(onFinally) {
        return _classPrivateFieldGet(this, _promise)["finally"](onFinally);
      }
    }]);
    return SweetAlert;
  }();

  /**
   * @param {SweetAlert} instance
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   * @returns {Promise}
   */
  var swalPromise = function swalPromise(instance, domCache, innerParams) {
    return new Promise(function (resolve, reject) {
      // functions to handle all closings/dismissals
      /**
       * @param {DismissReason} dismiss
       */
      var dismissWith = function dismissWith(dismiss) {
        instance.close({
          isDismissed: true,
          dismiss: dismiss
        });
      };
      privateMethods.swalPromiseResolve.set(instance, resolve);
      privateMethods.swalPromiseReject.set(instance, reject);
      domCache.confirmButton.onclick = function () {
        handleConfirmButtonClick(instance);
      };
      domCache.denyButton.onclick = function () {
        handleDenyButtonClick(instance);
      };
      domCache.cancelButton.onclick = function () {
        handleCancelButtonClick(instance, dismissWith);
      };
      domCache.closeButton.onclick = function () {
        dismissWith(DismissReason.close);
      };
      handlePopupClick(innerParams, domCache, dismissWith);
      addKeydownHandler(globalState, innerParams, dismissWith);
      handleInputOptionsAndValue(instance, innerParams);
      openPopup(innerParams);
      setupTimer(globalState, innerParams, dismissWith);
      initFocus(domCache, innerParams);

      // Scroll container to top on open (#1247, #1946)
      setTimeout(function () {
        domCache.container.scrollTop = 0;
      });
    });
  };

  /**
   * @param {SweetAlertOptions} userParams
   * @param {SweetAlertOptions} mixinParams
   * @returns {SweetAlertOptions}
   */
  var prepareParams = function prepareParams(userParams, mixinParams) {
    var templateParams = getTemplateParams(userParams);
    var params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131
    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);
    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);
    if (params.animation === false) {
      params.showClass = {
        backdrop: 'swal2-noanimation'
      };
      params.hideClass = {};
    }
    return params;
  };

  /**
   * @param {SweetAlert} instance
   * @returns {DomCache}
   */
  var populateDomCache = function populateDomCache(instance) {
    var domCache = {
      popup: getPopup(),
      container: getContainer(),
      actions: getActions(),
      confirmButton: getConfirmButton(),
      denyButton: getDenyButton(),
      cancelButton: getCancelButton(),
      loader: getLoader(),
      closeButton: getCloseButton(),
      validationMessage: getValidationMessage(),
      progressSteps: getProgressSteps()
    };
    privateProps.domCache.set(instance, domCache);
    return domCache;
  };

  /**
   * @param {GlobalState} globalState
   * @param {SweetAlertOptions} innerParams
   * @param {Function} dismissWith
   */
  var setupTimer = function setupTimer(globalState, innerParams, dismissWith) {
    var timerProgressBar = getTimerProgressBar();
    hide(timerProgressBar);
    if (innerParams.timer) {
      globalState.timeout = new Timer(function () {
        dismissWith('timer');
        delete globalState.timeout;
      }, innerParams.timer);
      if (innerParams.timerProgressBar) {
        show(timerProgressBar);
        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');
        setTimeout(function () {
          if (globalState.timeout && globalState.timeout.running) {
            // timer can be already stopped or unset at this point
            animateTimerProgressBar(innerParams.timer);
          }
        });
      }
    }
  };

  /**
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   */
  var initFocus = function initFocus(domCache, innerParams) {
    if (innerParams.toast) {
      return;
    }
    if (!callIfFunction(innerParams.allowEnterKey)) {
      blurActiveElement();
      return;
    }
    if (!focusButton(domCache, innerParams)) {
      setFocus(-1, 1);
    }
  };

  /**
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   * @returns {boolean}
   */
  var focusButton = function focusButton(domCache, innerParams) {
    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {
      domCache.denyButton.focus();
      return true;
    }
    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {
      domCache.cancelButton.focus();
      return true;
    }
    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {
      domCache.confirmButton.focus();
      return true;
    }
    return false;
  };
  var blurActiveElement = function blurActiveElement() {
    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {
      document.activeElement.blur();
    }
  };

  // Dear russian users visiting russian sites. Let's have fun.
  if (typeof window !== 'undefined' && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|by|xn--p1ai)$/)) {
    var now = new Date();
    var initiationDate = localStorage.getItem('swal-initiation');
    if (!initiationDate) {
      localStorage.setItem('swal-initiation', "".concat(now));
    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {
      setTimeout(function () {
        document.body.style.pointerEvents = 'none';
        var ukrainianAnthem = document.createElement('audio');
        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';
        ukrainianAnthem.loop = true;
        document.body.appendChild(ukrainianAnthem);
        setTimeout(function () {
          ukrainianAnthem.play()["catch"](function () {
            // ignore
          });
        }, 2500);
      }, 500);
    }
  }

  // Assign instance methods from src/instanceMethods/*.js to prototype
  SweetAlert.prototype.disableButtons = disableButtons;
  SweetAlert.prototype.enableButtons = enableButtons;
  SweetAlert.prototype.getInput = getInput;
  SweetAlert.prototype.disableInput = disableInput;
  SweetAlert.prototype.enableInput = enableInput;
  SweetAlert.prototype.hideLoading = hideLoading;
  SweetAlert.prototype.disableLoading = hideLoading;
  SweetAlert.prototype.showValidationMessage = showValidationMessage;
  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;
  SweetAlert.prototype.close = close;
  SweetAlert.prototype.closePopup = close;
  SweetAlert.prototype.closeModal = close;
  SweetAlert.prototype.closeToast = close;
  SweetAlert.prototype.rejectPromise = rejectPromise;
  SweetAlert.prototype.update = update;
  SweetAlert.prototype._destroy = _destroy;

  // Assign static methods from src/staticMethods/*.js to constructor
  Object.assign(SweetAlert, staticMethods);

  // Proxy to instance methods to constructor, for now, for backwards compatibility
  Object.keys(instanceMethods).forEach(function (key) {
    /**
     * @param {...any} args
     * @returns {any | undefined}
     */
    SweetAlert[key] = function () {
      if (currentInstance && currentInstance[key]) {
        var _currentInstance;
        return (_currentInstance = currentInstance)[key].apply(_currentInstance, arguments);
      }
      return null;
    };
  });
  SweetAlert.DismissReason = DismissReason;
  SweetAlert.version = '11.10.1';

  var Swal = SweetAlert;
  // @ts-ignore
  Swal["default"] = Swal;

  return Swal;

}));
if (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}
"undefined"!=typeof document&&function(e,t){var n=e.createElement("style");if(e.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\"top-start     top            top-end\" \"center-start  center         center-end\" \"bottom-start  bottom-center  bottom-end\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:rgba(0,0,0,.4)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em;text-align:center}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em}div:where(.swal2-container) button:where(.swal2-close){z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) .swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:#fff}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\"!\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#facea8;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#9de0f6;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#c9dae1;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}");

/***/ }),

/***/ "./node_modules/tom-select/dist/js/tom-select.complete.js":
/*!****************************************************************!*\
  !*** ./node_modules/tom-select/dist/js/tom-select.complete.js ***!
  \****************************************************************/
/***/ (function(module) {

/**
* Tom Select v2.3.1
* Licensed under the Apache License, Version 2.0 (the "License");
*/

(function (global, factory) {
	 true ? module.exports = factory() :
	0;
})(this, (function () { 'use strict';

	/**
	 * MicroEvent - to make any js object an event emitter
	 *
	 * - pure javascript - server compatible, browser compatible
	 * - dont rely on the browser doms
	 * - super simple - you get it immediatly, no mistery, no magic involved
	 *
	 * @author Jerome Etienne (https://github.com/jeromeetienne)
	 */

	/**
	 * Execute callback for each event in space separated list of event names
	 *
	 */
	function forEvents(events, callback) {
	  events.split(/\s+/).forEach(event => {
	    callback(event);
	  });
	}
	class MicroEvent {
	  constructor() {
	    this._events = void 0;
	    this._events = {};
	  }
	  on(events, fct) {
	    forEvents(events, event => {
	      const event_array = this._events[event] || [];
	      event_array.push(fct);
	      this._events[event] = event_array;
	    });
	  }
	  off(events, fct) {
	    var n = arguments.length;
	    if (n === 0) {
	      this._events = {};
	      return;
	    }
	    forEvents(events, event => {
	      if (n === 1) {
	        delete this._events[event];
	        return;
	      }
	      const event_array = this._events[event];
	      if (event_array === undefined) return;
	      event_array.splice(event_array.indexOf(fct), 1);
	      this._events[event] = event_array;
	    });
	  }
	  trigger(events, ...args) {
	    var self = this;
	    forEvents(events, event => {
	      const event_array = self._events[event];
	      if (event_array === undefined) return;
	      event_array.forEach(fct => {
	        fct.apply(self, args);
	      });
	    });
	  }
	}

	/**
	 * microplugin.js
	 * Copyright (c) 2013 Brian Reavis & contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 * @author Brian Reavis <brian@thirdroute.com>
	 */

	function MicroPlugin(Interface) {
	  Interface.plugins = {};
	  return class extends Interface {
	    constructor(...args) {
	      super(...args);
	      this.plugins = {
	        names: [],
	        settings: {},
	        requested: {},
	        loaded: {}
	      };
	    }
	    /**
	     * Registers a plugin.
	     *
	     * @param {function} fn
	     */
	    static define(name, fn) {
	      Interface.plugins[name] = {
	        'name': name,
	        'fn': fn
	      };
	    }

	    /**
	     * Initializes the listed plugins (with options).
	     * Acceptable formats:
	     *
	     * List (without options):
	     *   ['a', 'b', 'c']
	     *
	     * List (with options):
	     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]
	     *
	     * Hash (with options):
	     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}
	     *
	     * @param {array|object} plugins
	     */
	    initializePlugins(plugins) {
	      var key, name;
	      const self = this;
	      const queue = [];
	      if (Array.isArray(plugins)) {
	        plugins.forEach(plugin => {
	          if (typeof plugin === 'string') {
	            queue.push(plugin);
	          } else {
	            self.plugins.settings[plugin.name] = plugin.options;
	            queue.push(plugin.name);
	          }
	        });
	      } else if (plugins) {
	        for (key in plugins) {
	          if (plugins.hasOwnProperty(key)) {
	            self.plugins.settings[key] = plugins[key];
	            queue.push(key);
	          }
	        }
	      }
	      while (name = queue.shift()) {
	        self.require(name);
	      }
	    }
	    loadPlugin(name) {
	      var self = this;
	      var plugins = self.plugins;
	      var plugin = Interface.plugins[name];
	      if (!Interface.plugins.hasOwnProperty(name)) {
	        throw new Error('Unable to find "' + name + '" plugin');
	      }
	      plugins.requested[name] = true;
	      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);
	      plugins.names.push(name);
	    }

	    /**
	     * Initializes a plugin.
	     *
	     */
	    require(name) {
	      var self = this;
	      var plugins = self.plugins;
	      if (!self.plugins.loaded.hasOwnProperty(name)) {
	        if (plugins.requested[name]) {
	          throw new Error('Plugin has circular dependency ("' + name + '")');
	        }
	        self.loadPlugin(name);
	      }
	      return plugins.loaded[name];
	    }
	  };
	}

	/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */
	/**
	 * Convert array of strings to a regular expression
	 *	ex ['ab','a'] => (?:ab|a)
	 * 	ex ['a','b'] => [ab]
	 * @param {string[]} chars
	 * @return {string}
	 */
	const arrayToPattern = chars => {
	  chars = chars.filter(Boolean);

	  if (chars.length < 2) {
	    return chars[0] || '';
	  }

	  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';
	};
	/**
	 * @param {string[]} array
	 * @return {string}
	 */

	const sequencePattern = array => {
	  if (!hasDuplicates(array)) {
	    return array.join('');
	  }

	  let pattern = '';
	  let prev_char_count = 0;

	  const prev_pattern = () => {
	    if (prev_char_count > 1) {
	      pattern += '{' + prev_char_count + '}';
	    }
	  };

	  array.forEach((char, i) => {
	    if (char === array[i - 1]) {
	      prev_char_count++;
	      return;
	    }

	    prev_pattern();
	    pattern += char;
	    prev_char_count = 1;
	  });
	  prev_pattern();
	  return pattern;
	};
	/**
	 * Convert array of strings to a regular expression
	 *	ex ['ab','a'] => (?:ab|a)
	 * 	ex ['a','b'] => [ab]
	 * @param {Set<string>} chars
	 * @return {string}
	 */

	const setToPattern = chars => {
	  let array = toArray(chars);
	  return arrayToPattern(array);
	};
	/**
	 *
	 * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values
	 * @param {any[]} array
	 */

	const hasDuplicates = array => {
	  return new Set(array).size !== array.length;
	};
	/**
	 * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error
	 * @param {string} str
	 * @return {string}
	 */

	const escape_regex = str => {
	  return (str + '').replace(/([\$\(\)\*\+\.\?\[\]\^\{\|\}\\])/gu, '\\$1');
	};
	/**
	 * Return the max length of array values
	 * @param {string[]} array
	 *
	 */

	const maxValueLength = array => {
	  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);
	};
	/**
	 * @param {string} str
	 */

	const unicodeLength = str => {
	  return toArray(str).length;
	};
	/**
	 * @param {any} p
	 * @return {any[]}
	 */

	const toArray = p => Array.from(p);

	/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */
	/**
	 * Get all possible combinations of substrings that add up to the given string
	 * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string
	 * @param {string} input
	 * @return {string[][]}
	 */
	const allSubstrings = input => {
	  if (input.length === 1) return [[input]];
	  /** @type {string[][]} */

	  let result = [];
	  const start = input.substring(1);
	  const suba = allSubstrings(start);
	  suba.forEach(function (subresult) {
	    let tmp = subresult.slice(0);
	    tmp[0] = input.charAt(0) + tmp[0];
	    result.push(tmp);
	    tmp = subresult.slice(0);
	    tmp.unshift(input.charAt(0));
	    result.push(tmp);
	  });
	  return result;
	};

	/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */

	/**
	 * @typedef {{[key:string]:string}} TUnicodeMap
	 * @typedef {{[key:string]:Set<string>}} TUnicodeSets
	 * @typedef {[[number,number]]} TCodePoints
	 * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj
	 * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart
	 */
	/** @type {TCodePoints} */

	const code_points = [[0, 65535]];
	const accent_pat = '[\u0300-\u036F\u{b7}\u{2be}\u{2bc}]';
	/** @type {TUnicodeMap} */

	let unicode_map;
	/** @type {RegExp} */

	let multi_char_reg;
	const max_char_length = 3;
	/** @type {TUnicodeMap} */

	const latin_convert = {};
	/** @type {TUnicodeMap} */

	const latin_condensed = {
	  '/': '⁄∕',
	  '0': '߀',
	  "a": "ⱥɐɑ",
	  "aa": "ꜳ",
	  "ae": "æǽǣ",
	  "ao": "ꜵ",
	  "au": "ꜷ",
	  "av": "ꜹꜻ",
	  "ay": "ꜽ",
	  "b": "ƀɓƃ",
	  "c": "ꜿƈȼↄ",
	  "d": "đɗɖᴅƌꮷԁɦ",
	  "e": "ɛǝᴇɇ",
	  "f": "ꝼƒ",
	  "g": "ǥɠꞡᵹꝿɢ",
	  "h": "ħⱨⱶɥ",
	  "i": "ɨı",
	  "j": "ɉȷ",
	  "k": "ƙⱪꝁꝃꝅꞣ",
	  "l": "łƚɫⱡꝉꝇꞁɭ",
	  "m": "ɱɯϻ",
	  "n": "ꞥƞɲꞑᴎлԉ",
	  "o": "øǿɔɵꝋꝍᴑ",
	  "oe": "œ",
	  "oi": "ƣ",
	  "oo": "ꝏ",
	  "ou": "ȣ",
	  "p": "ƥᵽꝑꝓꝕρ",
	  "q": "ꝗꝙɋ",
	  "r": "ɍɽꝛꞧꞃ",
	  "s": "ßȿꞩꞅʂ",
	  "t": "ŧƭʈⱦꞇ",
	  "th": "þ",
	  "tz": "ꜩ",
	  "u": "ʉ",
	  "v": "ʋꝟʌ",
	  "vy": "ꝡ",
	  "w": "ⱳ",
	  "y": "ƴɏỿ",
	  "z": "ƶȥɀⱬꝣ",
	  "hv": "ƕ"
	};

	for (let latin in latin_condensed) {
	  let unicode = latin_condensed[latin] || '';

	  for (let i = 0; i < unicode.length; i++) {
	    let char = unicode.substring(i, i + 1);
	    latin_convert[char] = latin;
	  }
	}

	const convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');
	/**
	 * Initialize the unicode_map from the give code point ranges
	 *
	 * @param {TCodePoints=} _code_points
	 */

	const initialize = _code_points => {
	  if (unicode_map !== undefined) return;
	  unicode_map = generateMap(_code_points || code_points);
	};
	/**
	 * Helper method for normalize a string
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize
	 * @param {string} str
	 * @param {string} form
	 */

	const normalize = (str, form = 'NFKD') => str.normalize(form);
	/**
	 * Remove accents without reordering string
	 * calling str.normalize('NFKD') on \u{594}\u{595}\u{596} becomes \u{596}\u{594}\u{595}
	 * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703
	 * @param {string} str
	 * @return {string}
	 */

	const asciifold = str => {
	  return toArray(str).reduce(
	  /**
	   * @param {string} result
	   * @param {string} char
	   */
	  (result, char) => {
	    return result + _asciifold(char);
	  }, '');
	};
	/**
	 * @param {string} str
	 * @return {string}
	 */

	const _asciifold = str => {
	  str = normalize(str).toLowerCase().replace(convert_pat, (
	  /** @type {string} */
	  char) => {
	    return latin_convert[char] || '';
	  }); //return str;

	  return normalize(str, 'NFC');
	};
	/**
	 * Generate a list of unicode variants from the list of code points
	 * @param {TCodePoints} code_points
	 * @yield {TCodePointObj}
	 */

	function* generator(code_points) {
	  for (const [code_point_min, code_point_max] of code_points) {
	    for (let i = code_point_min; i <= code_point_max; i++) {
	      let composed = String.fromCharCode(i);
	      let folded = asciifold(composed);

	      if (folded == composed.toLowerCase()) {
	        continue;
	      } // skip when folded is a string longer than 3 characters long
	      // bc the resulting regex patterns will be long
	      // eg:
	      // folded صلى الله عليه وسلم length 18 code point 65018
	      // folded جل جلاله length 8 code point 65019


	      if (folded.length > max_char_length) {
	        continue;
	      }

	      if (folded.length == 0) {
	        continue;
	      }

	      yield {
	        folded: folded,
	        composed: composed,
	        code_point: i
	      };
	    }
	  }
	}
	/**
	 * Generate a unicode map from the list of code points
	 * @param {TCodePoints} code_points
	 * @return {TUnicodeSets}
	 */

	const generateSets = code_points => {
	  /** @type {{[key:string]:Set<string>}} */
	  const unicode_sets = {};
	  /**
	   * @param {string} folded
	   * @param {string} to_add
	   */

	  const addMatching = (folded, to_add) => {
	    /** @type {Set<string>} */
	    const folded_set = unicode_sets[folded] || new Set();
	    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');

	    if (to_add.match(patt)) {
	      return;
	    }

	    folded_set.add(escape_regex(to_add));
	    unicode_sets[folded] = folded_set;
	  };

	  for (let value of generator(code_points)) {
	    addMatching(value.folded, value.folded);
	    addMatching(value.folded, value.composed);
	  }

	  return unicode_sets;
	};
	/**
	 * Generate a unicode map from the list of code points
	 * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))
	 *
	 * @param {TCodePoints} code_points
	 * @return {TUnicodeMap}
	 */

	const generateMap = code_points => {
	  /** @type {TUnicodeSets} */
	  const unicode_sets = generateSets(code_points);
	  /** @type {TUnicodeMap} */

	  const unicode_map = {};
	  /** @type {string[]} */

	  let multi_char = [];

	  for (let folded in unicode_sets) {
	    let set = unicode_sets[folded];

	    if (set) {
	      unicode_map[folded] = setToPattern(set);
	    }

	    if (folded.length > 1) {
	      multi_char.push(escape_regex(folded));
	    }
	  }

	  multi_char.sort((a, b) => b.length - a.length);
	  const multi_char_patt = arrayToPattern(multi_char);
	  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');
	  return unicode_map;
	};
	/**
	 * Map each element of an array from it's folded value to all possible unicode matches
	 * @param {string[]} strings
	 * @param {number} min_replacement
	 * @return {string}
	 */

	const mapSequence = (strings, min_replacement = 1) => {
	  let chars_replaced = 0;
	  strings = strings.map(str => {
	    if (unicode_map[str]) {
	      chars_replaced += str.length;
	    }

	    return unicode_map[str] || str;
	  });

	  if (chars_replaced >= min_replacement) {
	    return sequencePattern(strings);
	  }

	  return '';
	};
	/**
	 * Convert a short string and split it into all possible patterns
	 * Keep a pattern only if min_replacement is met
	 *
	 * 'abc'
	 * 		=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]
	 *		=> ['abc-pattern','ab-c-pattern'...]
	 *
	 *
	 * @param {string} str
	 * @param {number} min_replacement
	 * @return {string}
	 */

	const substringsToPattern = (str, min_replacement = 1) => {
	  min_replacement = Math.max(min_replacement, str.length - 1);
	  return arrayToPattern(allSubstrings(str).map(sub_pat => {
	    return mapSequence(sub_pat, min_replacement);
	  }));
	};
	/**
	 * Convert an array of sequences into a pattern
	 * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)
	 *
	 * @param {Sequence[]} sequences
	 * @param {boolean} all
	 */

	const sequencesToPattern = (sequences, all = true) => {
	  let min_replacement = sequences.length > 1 ? 1 : 0;
	  return arrayToPattern(sequences.map(sequence => {
	    let seq = [];
	    const len = all ? sequence.length() : sequence.length() - 1;

	    for (let j = 0; j < len; j++) {
	      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));
	    }

	    return sequencePattern(seq);
	  }));
	};
	/**
	 * Return true if the sequence is already in the sequences
	 * @param {Sequence} needle_seq
	 * @param {Sequence[]} sequences
	 */


	const inSequences = (needle_seq, sequences) => {
	  for (const seq of sequences) {
	    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {
	      continue;
	    }

	    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {
	      continue;
	    }

	    let needle_parts = needle_seq.parts;
	    /**
	     * @param {TSequencePart} part
	     */

	    const filter = part => {
	      for (const needle_part of needle_parts) {
	        if (needle_part.start === part.start && needle_part.substr === part.substr) {
	          return false;
	        }

	        if (part.length == 1 || needle_part.length == 1) {
	          continue;
	        } // check for overlapping parts
	        // a = ['::=','==']
	        // b = ['::','===']
	        // a = ['r','sm']
	        // b = ['rs','m']


	        if (part.start < needle_part.start && part.end > needle_part.start) {
	          return true;
	        }

	        if (needle_part.start < part.start && needle_part.end > part.start) {
	          return true;
	        }
	      }

	      return false;
	    };

	    let filtered = seq.parts.filter(filter);

	    if (filtered.length > 0) {
	      continue;
	    }

	    return true;
	  }

	  return false;
	};

	class Sequence {
	  constructor() {
	    /** @type {TSequencePart[]} */
	    this.parts = [];
	    /** @type {string[]} */

	    this.substrs = [];
	    this.start = 0;
	    this.end = 0;
	  }
	  /**
	   * @param {TSequencePart|undefined} part
	   */


	  add(part) {
	    if (part) {
	      this.parts.push(part);
	      this.substrs.push(part.substr);
	      this.start = Math.min(part.start, this.start);
	      this.end = Math.max(part.end, this.end);
	    }
	  }

	  last() {
	    return this.parts[this.parts.length - 1];
	  }

	  length() {
	    return this.parts.length;
	  }
	  /**
	   * @param {number} position
	   * @param {TSequencePart} last_piece
	   */


	  clone(position, last_piece) {
	    let clone = new Sequence();
	    let parts = JSON.parse(JSON.stringify(this.parts));
	    let last_part = parts.pop();

	    for (const part of parts) {
	      clone.add(part);
	    }

	    let last_substr = last_piece.substr.substring(0, position - last_part.start);
	    let clone_last_len = last_substr.length;
	    clone.add({
	      start: last_part.start,
	      end: last_part.start + clone_last_len,
	      length: clone_last_len,
	      substr: last_substr
	    });
	    return clone;
	  }

	}
	/**
	 * Expand a regular expression pattern to include unicode variants
	 * 	eg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/
	 *
	 * Issue:
	 *  ﺊﺋ [ 'ﺊ = \\u{fe8a}', 'ﺋ = \\u{fe8b}' ]
	 *	becomes:	ئئ [ 'ي = \\u{64a}', 'ٔ = \\u{654}', 'ي = \\u{64a}', 'ٔ = \\u{654}' ]
	 *
	 *	İĲ = IIJ = ⅡJ
	 *
	 * 	1/2/4
	 *
	 * @param {string} str
	 * @return {string|undefined}
	 */


	const getPattern = str => {
	  initialize();
	  str = asciifold(str);
	  let pattern = '';
	  let sequences = [new Sequence()];

	  for (let i = 0; i < str.length; i++) {
	    let substr = str.substring(i);
	    let match = substr.match(multi_char_reg);
	    const char = str.substring(i, i + 1);
	    const match_str = match ? match[0] : null; // loop through sequences
	    // add either the char or multi_match

	    let overlapping = [];
	    let added_types = new Set();

	    for (const sequence of sequences) {
	      const last_piece = sequence.last();

	      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {
	        // if we have a multi match
	        if (match_str) {
	          const len = match_str.length;
	          sequence.add({
	            start: i,
	            end: i + len,
	            length: len,
	            substr: match_str
	          });
	          added_types.add('1');
	        } else {
	          sequence.add({
	            start: i,
	            end: i + 1,
	            length: 1,
	            substr: char
	          });
	          added_types.add('2');
	        }
	      } else if (match_str) {
	        let clone = sequence.clone(i, last_piece);
	        const len = match_str.length;
	        clone.add({
	          start: i,
	          end: i + len,
	          length: len,
	          substr: match_str
	        });
	        overlapping.push(clone);
	      } else {
	        // don't add char
	        // adding would create invalid patterns: 234 => [2,34,4]
	        added_types.add('3');
	      }
	    } // if we have overlapping


	    if (overlapping.length > 0) {
	      // ['ii','iii'] before ['i','i','iii']
	      overlapping = overlapping.sort((a, b) => {
	        return a.length() - b.length();
	      });

	      for (let clone of overlapping) {
	        // don't add if we already have an equivalent sequence
	        if (inSequences(clone, sequences)) {
	          continue;
	        }

	        sequences.push(clone);
	      }

	      continue;
	    } // if we haven't done anything unique
	    // clean up the patterns
	    // helps keep patterns smaller
	    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655


	    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {
	      pattern += sequencesToPattern(sequences, false);
	      let new_seq = new Sequence();
	      const old_seq = sequences[0];

	      if (old_seq) {
	        new_seq.add(old_seq.last());
	      }

	      sequences = [new_seq];
	    }
	  }

	  pattern += sequencesToPattern(sequences, true);
	  return pattern;
	};

	/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */

	/**
	 * A property getter resolving dot-notation
	 * @param  {Object}  obj     The root object to fetch property on
	 * @param  {String}  name    The optionally dotted property name to fetch
	 * @return {Object}          The resolved property value
	 */
	const getAttr = (obj, name) => {
	  if (!obj) return;
	  return obj[name];
	};
	/**
	 * A property getter resolving dot-notation
	 * @param  {Object}  obj     The root object to fetch property on
	 * @param  {String}  name    The optionally dotted property name to fetch
	 * @return {Object}          The resolved property value
	 */

	const getAttrNesting = (obj, name) => {
	  if (!obj) return;
	  var part,
	      names = name.split(".");

	  while ((part = names.shift()) && (obj = obj[part]));

	  return obj;
	};
	/**
	 * Calculates how close of a match the
	 * given value is against a search token.
	 *
	 */

	const scoreValue = (value, token, weight) => {
	  var score, pos;
	  if (!value) return 0;
	  value = value + '';
	  if (token.regex == null) return 0;
	  pos = value.search(token.regex);
	  if (pos === -1) return 0;
	  score = token.string.length / value.length;
	  if (pos === 0) score += 0.5;
	  return score * weight;
	};
	/**
	 * Cast object property to an array if it exists and has a value
	 *
	 */

	const propToArray = (obj, key) => {
	  var value = obj[key];
	  if (typeof value == 'function') return value;

	  if (value && !Array.isArray(value)) {
	    obj[key] = [value];
	  }
	};
	/**
	 * Iterates over arrays and hashes.
	 *
	 * ```
	 * iterate(this.items, function(item, id) {
	 *    // invoked for each item
	 * });
	 * ```
	 *
	 */

	const iterate$1 = (object, callback) => {
	  if (Array.isArray(object)) {
	    object.forEach(callback);
	  } else {
	    for (var key in object) {
	      if (object.hasOwnProperty(key)) {
	        callback(object[key], key);
	      }
	    }
	  }
	};
	const cmp = (a, b) => {
	  if (typeof a === 'number' && typeof b === 'number') {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }

	  a = asciifold(a + '').toLowerCase();
	  b = asciifold(b + '').toLowerCase();
	  if (a > b) return 1;
	  if (b > a) return -1;
	  return 0;
	};

	/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */

	/**
	 * sifter.js
	 * Copyright (c) 2013–2020 Brian Reavis & contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 * @author Brian Reavis <brian@thirdroute.com>
	 */

	class Sifter {
	  // []|{};

	  /**
	   * Textually searches arrays and hashes of objects
	   * by property (or multiple properties). Designed
	   * specifically for autocomplete.
	   *
	   */
	  constructor(items, settings) {
	    this.items = void 0;
	    this.settings = void 0;
	    this.items = items;
	    this.settings = settings || {
	      diacritics: true
	    };
	  }

	  /**
	   * Splits a search string into an array of individual
	   * regexps to be used to match results.
	   *
	   */
	  tokenize(query, respect_word_boundaries, weights) {
	    if (!query || !query.length) return [];
	    const tokens = [];
	    const words = query.split(/\s+/);
	    var field_regex;

	    if (weights) {
	      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\:(.*)$');
	    }

	    words.forEach(word => {
	      let field_match;
	      let field = null;
	      let regex = null; // look for "field:query" tokens

	      if (field_regex && (field_match = word.match(field_regex))) {
	        field = field_match[1];
	        word = field_match[2];
	      }

	      if (word.length > 0) {
	        if (this.settings.diacritics) {
	          regex = getPattern(word) || null;
	        } else {
	          regex = escape_regex(word);
	        }

	        if (regex && respect_word_boundaries) regex = "\\b" + regex;
	      }

	      tokens.push({
	        string: word,
	        regex: regex ? new RegExp(regex, 'iu') : null,
	        field: field
	      });
	    });
	    return tokens;
	  }

	  /**
	   * Returns a function to be used to score individual results.
	   *
	   * Good matches will have a higher score than poor matches.
	   * If an item is not a match, 0 will be returned by the function.
	   *
	   * @returns {T.ScoreFn}
	   */
	  getScoreFunction(query, options) {
	    var search = this.prepareSearch(query, options);
	    return this._getScoreFunction(search);
	  }
	  /**
	   * @returns {T.ScoreFn}
	   *
	   */


	  _getScoreFunction(search) {
	    const tokens = search.tokens,
	          token_count = tokens.length;

	    if (!token_count) {
	      return function () {
	        return 0;
	      };
	    }

	    const fields = search.options.fields,
	          weights = search.weights,
	          field_count = fields.length,
	          getAttrFn = search.getAttrFn;

	    if (!field_count) {
	      return function () {
	        return 1;
	      };
	    }
	    /**
	     * Calculates the score of an object
	     * against the search query.
	     *
	     */


	    const scoreObject = function () {
	      if (field_count === 1) {
	        return function (token, data) {
	          const field = fields[0].field;
	          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);
	        };
	      }

	      return function (token, data) {
	        var sum = 0; // is the token specific to a field?

	        if (token.field) {
	          const value = getAttrFn(data, token.field);

	          if (!token.regex && value) {
	            sum += 1 / field_count;
	          } else {
	            sum += scoreValue(value, token, 1);
	          }
	        } else {
	          iterate$1(weights, (weight, field) => {
	            sum += scoreValue(getAttrFn(data, field), token, weight);
	          });
	        }

	        return sum / field_count;
	      };
	    }();

	    if (token_count === 1) {
	      return function (data) {
	        return scoreObject(tokens[0], data);
	      };
	    }

	    if (search.options.conjunction === 'and') {
	      return function (data) {
	        var score,
	            sum = 0;

	        for (let token of tokens) {
	          score = scoreObject(token, data);
	          if (score <= 0) return 0;
	          sum += score;
	        }

	        return sum / token_count;
	      };
	    } else {
	      return function (data) {
	        var sum = 0;
	        iterate$1(tokens, token => {
	          sum += scoreObject(token, data);
	        });
	        return sum / token_count;
	      };
	    }
	  }

	  /**
	   * Returns a function that can be used to compare two
	   * results, for sorting purposes. If no sorting should
	   * be performed, `null` will be returned.
	   *
	   * @return function(a,b)
	   */
	  getSortFunction(query, options) {
	    var search = this.prepareSearch(query, options);
	    return this._getSortFunction(search);
	  }

	  _getSortFunction(search) {
	    var implicit_score,
	        sort_flds = [];
	    const self = this,
	          options = search.options,
	          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;

	    if (typeof sort == 'function') {
	      return sort.bind(this);
	    }
	    /**
	     * Fetches the specified sort field value
	     * from a search result item.
	     *
	     */


	    const get_field = function get_field(name, result) {
	      if (name === '$score') return result.score;
	      return search.getAttrFn(self.items[result.id], name);
	    }; // parse options


	    if (sort) {
	      for (let s of sort) {
	        if (search.query || s.field !== '$score') {
	          sort_flds.push(s);
	        }
	      }
	    } // the "$score" field is implied to be the primary
	    // sort field, unless it's manually specified


	    if (search.query) {
	      implicit_score = true;

	      for (let fld of sort_flds) {
	        if (fld.field === '$score') {
	          implicit_score = false;
	          break;
	        }
	      }

	      if (implicit_score) {
	        sort_flds.unshift({
	          field: '$score',
	          direction: 'desc'
	        });
	      } // without a search.query, all items will have the same score

	    } else {
	      sort_flds = sort_flds.filter(fld => fld.field !== '$score');
	    } // build function


	    const sort_flds_count = sort_flds.length;

	    if (!sort_flds_count) {
	      return null;
	    }

	    return function (a, b) {
	      var result, field;

	      for (let sort_fld of sort_flds) {
	        field = sort_fld.field;
	        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;
	        result = multiplier * cmp(get_field(field, a), get_field(field, b));
	        if (result) return result;
	      }

	      return 0;
	    };
	  }

	  /**
	   * Parses a search query and returns an object
	   * with tokens and fields ready to be populated
	   * with results.
	   *
	   */
	  prepareSearch(query, optsUser) {
	    const weights = {};
	    var options = Object.assign({}, optsUser);
	    propToArray(options, 'sort');
	    propToArray(options, 'sort_empty'); // convert fields to new format

	    if (options.fields) {
	      propToArray(options, 'fields');
	      const fields = [];
	      options.fields.forEach(field => {
	        if (typeof field == 'string') {
	          field = {
	            field: field,
	            weight: 1
	          };
	        }

	        fields.push(field);
	        weights[field.field] = 'weight' in field ? field.weight : 1;
	      });
	      options.fields = fields;
	    }

	    return {
	      options: options,
	      query: query.toLowerCase().trim(),
	      tokens: this.tokenize(query, options.respect_word_boundaries, weights),
	      total: 0,
	      items: [],
	      weights: weights,
	      getAttrFn: options.nesting ? getAttrNesting : getAttr
	    };
	  }

	  /**
	   * Searches through all items and returns a sorted array of matches.
	   *
	   */
	  search(query, options) {
	    var self = this,
	        score,
	        search;
	    search = this.prepareSearch(query, options);
	    options = search.options;
	    query = search.query; // generate result scoring function

	    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort


	    if (query.length) {
	      iterate$1(self.items, (item, id) => {
	        score = fn_score(item);

	        if (options.filter === false || score > 0) {
	          search.items.push({
	            'score': score,
	            'id': id
	          });
	        }
	      });
	    } else {
	      iterate$1(self.items, (_, id) => {
	        search.items.push({
	          'score': 1,
	          'id': id
	        });
	      });
	    }

	    const fn_sort = self._getSortFunction(search);

	    if (fn_sort) search.items.sort(fn_sort); // apply limits

	    search.total = search.items.length;

	    if (typeof options.limit === 'number') {
	      search.items = search.items.slice(0, options.limit);
	    }

	    return search;
	  }

	}

	/**
	 * Iterates over arrays and hashes.
	 *
	 * ```
	 * iterate(this.items, function(item, id) {
	 *    // invoked for each item
	 * });
	 * ```
	 *
	 */
	const iterate = (object, callback) => {
	  if (Array.isArray(object)) {
	    object.forEach(callback);
	  } else {
	    for (var key in object) {
	      if (object.hasOwnProperty(key)) {
	        callback(object[key], key);
	      }
	    }
	  }
	};

	/**
	 * Return a dom element from either a dom query string, jQuery object, a dom element or html string
	 * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518
	 *
	 * param query should be {}
	 */
	const getDom = query => {
	  if (query.jquery) {
	    return query[0];
	  }
	  if (query instanceof HTMLElement) {
	    return query;
	  }
	  if (isHtmlString(query)) {
	    var tpl = document.createElement('template');
	    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result
	    return tpl.content.firstChild;
	  }
	  return document.querySelector(query);
	};
	const isHtmlString = arg => {
	  if (typeof arg === 'string' && arg.indexOf('<') > -1) {
	    return true;
	  }
	  return false;
	};
	const escapeQuery = query => {
	  return query.replace(/['"\\]/g, '\\$&');
	};

	/**
	 * Dispatch an event
	 *
	 */
	const triggerEvent = (dom_el, event_name) => {
	  var event = document.createEvent('HTMLEvents');
	  event.initEvent(event_name, true, false);
	  dom_el.dispatchEvent(event);
	};

	/**
	 * Apply CSS rules to a dom element
	 *
	 */
	const applyCSS = (dom_el, css) => {
	  Object.assign(dom_el.style, css);
	};

	/**
	 * Add css classes
	 *
	 */
	const addClasses = (elmts, ...classes) => {
	  var norm_classes = classesArray(classes);
	  elmts = castAsArray(elmts);
	  elmts.map(el => {
	    norm_classes.map(cls => {
	      el.classList.add(cls);
	    });
	  });
	};

	/**
	 * Remove css classes
	 *
	 */
	const removeClasses = (elmts, ...classes) => {
	  var norm_classes = classesArray(classes);
	  elmts = castAsArray(elmts);
	  elmts.map(el => {
	    norm_classes.map(cls => {
	      el.classList.remove(cls);
	    });
	  });
	};

	/**
	 * Return arguments
	 *
	 */
	const classesArray = args => {
	  var classes = [];
	  iterate(args, _classes => {
	    if (typeof _classes === 'string') {
	      _classes = _classes.trim().split(/[\11\12\14\15\40]/);
	    }
	    if (Array.isArray(_classes)) {
	      classes = classes.concat(_classes);
	    }
	  });
	  return classes.filter(Boolean);
	};

	/**
	 * Create an array from arg if it's not already an array
	 *
	 */
	const castAsArray = arg => {
	  if (!Array.isArray(arg)) {
	    arg = [arg];
	  }
	  return arg;
	};

	/**
	 * Get the closest node to the evt.target matching the selector
	 * Stops at wrapper
	 *
	 */
	const parentMatch = (target, selector, wrapper) => {
	  if (wrapper && !wrapper.contains(target)) {
	    return;
	  }
	  while (target && target.matches) {
	    if (target.matches(selector)) {
	      return target;
	    }
	    target = target.parentNode;
	  }
	};

	/**
	 * Get the first or last item from an array
	 *
	 * > 0 - right (last)
	 * <= 0 - left (first)
	 *
	 */
	const getTail = (list, direction = 0) => {
	  if (direction > 0) {
	    return list[list.length - 1];
	  }
	  return list[0];
	};

	/**
	 * Return true if an object is empty
	 *
	 */
	const isEmptyObject = obj => {
	  return Object.keys(obj).length === 0;
	};

	/**
	 * Get the index of an element amongst sibling nodes of the same type
	 *
	 */
	const nodeIndex = (el, amongst) => {
	  if (!el) return -1;
	  amongst = amongst || el.nodeName;
	  var i = 0;
	  while (el = el.previousElementSibling) {
	    if (el.matches(amongst)) {
	      i++;
	    }
	  }
	  return i;
	};

	/**
	 * Set attributes of an element
	 *
	 */
	const setAttr = (el, attrs) => {
	  iterate(attrs, (val, attr) => {
	    if (val == null) {
	      el.removeAttribute(attr);
	    } else {
	      el.setAttribute(attr, '' + val);
	    }
	  });
	};

	/**
	 * Replace a node
	 */
	const replaceNode = (existing, replacement) => {
	  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);
	};

	/**
	 * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>
	 * Highlights arbitrary terms in a node.
	 *
	 * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)
	 * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)
	 */

	const highlight = (element, regex) => {
	  if (regex === null) return;

	  // convet string to regex
	  if (typeof regex === 'string') {
	    if (!regex.length) return;
	    regex = new RegExp(regex, 'i');
	  }

	  // Wrap matching part of text node with highlighting <span>, e.g.
	  // Soccer  ->  <span class="highlight">Soc</span>cer  for regex = /soc/i
	  const highlightText = node => {
	    var match = node.data.match(regex);
	    if (match && node.data.length > 0) {
	      var spannode = document.createElement('span');
	      spannode.className = 'highlight';
	      var middlebit = node.splitText(match.index);
	      middlebit.splitText(match[0].length);
	      var middleclone = middlebit.cloneNode(true);
	      spannode.appendChild(middleclone);
	      replaceNode(middlebit, spannode);
	      return 1;
	    }
	    return 0;
	  };

	  // Recurse element node, looking for child text nodes to highlight, unless element
	  // is childless, <script>, <style>, or already highlighted: <span class="hightlight">
	  const highlightChildren = node => {
	    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {
	      Array.from(node.childNodes).forEach(element => {
	        highlightRecursive(element);
	      });
	    }
	  };
	  const highlightRecursive = node => {
	    if (node.nodeType === 3) {
	      return highlightText(node);
	    }
	    highlightChildren(node);
	    return 0;
	  };
	  highlightRecursive(element);
	};

	/**
	 * removeHighlight fn copied from highlight v5 and
	 * edited to remove with(), pass js strict mode, and use without jquery
	 */
	const removeHighlight = el => {
	  var elements = el.querySelectorAll("span.highlight");
	  Array.prototype.forEach.call(elements, function (el) {
	    var parent = el.parentNode;
	    parent.replaceChild(el.firstChild, el);
	    parent.normalize();
	  });
	};

	const KEY_A = 65;
	const KEY_RETURN = 13;
	const KEY_ESC = 27;
	const KEY_LEFT = 37;
	const KEY_UP = 38;
	const KEY_RIGHT = 39;
	const KEY_DOWN = 40;
	const KEY_BACKSPACE = 8;
	const KEY_DELETE = 46;
	const KEY_TAB = 9;
	const IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);
	const KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma

	var defaults = {
	  options: [],
	  optgroups: [],
	  plugins: [],
	  delimiter: ',',
	  splitOn: null,
	  // regexp or string for splitting up values from a paste command
	  persist: true,
	  diacritics: true,
	  create: null,
	  createOnBlur: false,
	  createFilter: null,
	  highlight: true,
	  openOnFocus: true,
	  shouldOpen: null,
	  maxOptions: 50,
	  maxItems: null,
	  hideSelected: null,
	  duplicates: false,
	  addPrecedence: false,
	  selectOnTab: false,
	  preload: null,
	  allowEmptyOption: false,
	  //closeAfterSelect: false,
	  refreshThrottle: 300,
	  loadThrottle: 300,
	  loadingClass: 'loading',
	  dataAttr: null,
	  //'data-data',
	  optgroupField: 'optgroup',
	  valueField: 'value',
	  labelField: 'text',
	  disabledField: 'disabled',
	  optgroupLabelField: 'label',
	  optgroupValueField: 'value',
	  lockOptgroupOrder: false,
	  sortField: '$order',
	  searchField: ['text'],
	  searchConjunction: 'and',
	  mode: null,
	  wrapperClass: 'ts-wrapper',
	  controlClass: 'ts-control',
	  dropdownClass: 'ts-dropdown',
	  dropdownContentClass: 'ts-dropdown-content',
	  itemClass: 'item',
	  optionClass: 'option',
	  dropdownParent: null,
	  controlInput: '<input type="text" autocomplete="off" size="1" />',
	  copyClassesToDropdown: false,
	  placeholder: null,
	  hidePlaceholder: null,
	  shouldLoad: function (query) {
	    return query.length > 0;
	  },
	  /*
	  load                 : null, // function(query, callback) { ... }
	  score                : null, // function(search) { ... }
	  onInitialize         : null, // function() { ... }
	  onChange             : null, // function(value) { ... }
	  onItemAdd            : null, // function(value, $item) { ... }
	  onItemRemove         : null, // function(value) { ... }
	  onClear              : null, // function() { ... }
	  onOptionAdd          : null, // function(value, data) { ... }
	  onOptionRemove       : null, // function(value) { ... }
	  onOptionClear        : null, // function() { ... }
	  onOptionGroupAdd     : null, // function(id, data) { ... }
	  onOptionGroupRemove  : null, // function(id) { ... }
	  onOptionGroupClear   : null, // function() { ... }
	  onDropdownOpen       : null, // function(dropdown) { ... }
	  onDropdownClose      : null, // function(dropdown) { ... }
	  onType               : null, // function(str) { ... }
	  onDelete             : null, // function(values) { ... }
	  */

	  render: {
	    /*
	    item: null,
	    optgroup: null,
	    optgroup_header: null,
	    option: null,
	    option_create: null
	    */
	  }
	};

	/**
	 * Converts a scalar to its best string representation
	 * for hash keys and HTML attribute values.
	 *
	 * Transformations:
	 *   'str'     -> 'str'
	 *   null      -> ''
	 *   undefined -> ''
	 *   true      -> '1'
	 *   false     -> '0'
	 *   0         -> '0'
	 *   1         -> '1'
	 *
	 */
	const hash_key = value => {
	  if (typeof value === 'undefined' || value === null) return null;
	  return get_hash(value);
	};
	const get_hash = value => {
	  if (typeof value === 'boolean') return value ? '1' : '0';
	  return value + '';
	};

	/**
	 * Escapes a string for use within HTML.
	 *
	 */
	const escape_html = str => {
	  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
	};

	/**
	 * use setTimeout if timeout > 0 
	 */
	const timeout = (fn, timeout) => {
	  if (timeout > 0) {
	    return setTimeout(fn, timeout);
	  }
	  fn.call(null);
	  return null;
	};

	/**
	 * Debounce the user provided load function
	 *
	 */
	const loadDebounce = (fn, delay) => {
	  var timeout;
	  return function (value, callback) {
	    var self = this;
	    if (timeout) {
	      self.loading = Math.max(self.loading - 1, 0);
	      clearTimeout(timeout);
	    }
	    timeout = setTimeout(function () {
	      timeout = null;
	      self.loadedSearches[value] = true;
	      fn.call(self, value, callback);
	    }, delay);
	  };
	};

	/**
	 * Debounce all fired events types listed in `types`
	 * while executing the provided `fn`.
	 *
	 */
	const debounce_events = (self, types, fn) => {
	  var type;
	  var trigger = self.trigger;
	  var event_args = {};

	  // override trigger method
	  self.trigger = function () {
	    var type = arguments[0];
	    if (types.indexOf(type) !== -1) {
	      event_args[type] = arguments;
	    } else {
	      return trigger.apply(self, arguments);
	    }
	  };

	  // invoke provided function
	  fn.apply(self, []);
	  self.trigger = trigger;

	  // trigger queued events
	  for (type of types) {
	    if (type in event_args) {
	      trigger.apply(self, event_args[type]);
	    }
	  }
	};

	/**
	 * Determines the current selection within a text input control.
	 * Returns an object containing:
	 *   - start
	 *   - length
	 *
	 * Note: "selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password"
	 * 	- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange
	 */
	const getSelection = input => {
	  return {
	    start: input.selectionStart || 0,
	    length: (input.selectionEnd || 0) - (input.selectionStart || 0)
	  };
	};

	/**
	 * Prevent default
	 *
	 */
	const preventDefault = (evt, stop = false) => {
	  if (evt) {
	    evt.preventDefault();
	    if (stop) {
	      evt.stopPropagation();
	    }
	  }
	};

	/**
	 * Add event helper
	 *
	 */
	const addEvent = (target, type, callback, options) => {
	  target.addEventListener(type, callback, options);
	};

	/**
	 * Return true if the requested key is down
	 * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )
	 * The current evt may not always set ( eg calling advanceSelection() )
	 *
	 */
	const isKeyDown = (key_name, evt) => {
	  if (!evt) {
	    return false;
	  }
	  if (!evt[key_name]) {
	    return false;
	  }
	  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);
	  if (count === 1) {
	    return true;
	  }
	  return false;
	};

	/**
	 * Get the id of an element
	 * If the id attribute is not set, set the attribute with the given id
	 *
	 */
	const getId = (el, id) => {
	  const existing_id = el.getAttribute('id');
	  if (existing_id) {
	    return existing_id;
	  }
	  el.setAttribute('id', id);
	  return id;
	};

	/**
	 * Returns a string with backslashes added before characters that need to be escaped.
	 */
	const addSlashes = str => {
	  return str.replace(/[\\"']/g, '\\$&');
	};

	/**
	 *
	 */
	const append = (parent, node) => {
	  if (node) parent.append(node);
	};

	function getSettings(input, settings_user) {
	  var settings = Object.assign({}, defaults, settings_user);
	  var attr_data = settings.dataAttr;
	  var field_label = settings.labelField;
	  var field_value = settings.valueField;
	  var field_disabled = settings.disabledField;
	  var field_optgroup = settings.optgroupField;
	  var field_optgroup_label = settings.optgroupLabelField;
	  var field_optgroup_value = settings.optgroupValueField;
	  var tag_name = input.tagName.toLowerCase();
	  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');
	  if (!placeholder && !settings.allowEmptyOption) {
	    let option = input.querySelector('option[value=""]');
	    if (option) {
	      placeholder = option.textContent;
	    }
	  }
	  var settings_element = {
	    placeholder: placeholder,
	    options: [],
	    optgroups: [],
	    items: [],
	    maxItems: null
	  };

	  /**
	   * Initialize from a <select> element.
	   *
	   */
	  var init_select = () => {
	    var tagName;
	    var options = settings_element.options;
	    var optionsMap = {};
	    var group_count = 1;
	    let $order = 0;
	    var readData = el => {
	      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap
	      var json = attr_data && data[attr_data];
	      if (typeof json === 'string' && json.length) {
	        data = Object.assign(data, JSON.parse(json));
	      }
	      return data;
	    };
	    var addOption = (option, group) => {
	      var value = hash_key(option.value);
	      if (value == null) return;
	      if (!value && !settings.allowEmptyOption) return;

	      // if the option already exists, it's probably been
	      // duplicated in another optgroup. in this case, push
	      // the current group to the "optgroup" property on the
	      // existing option so that it's rendered in both places.
	      if (optionsMap.hasOwnProperty(value)) {
	        if (group) {
	          var arr = optionsMap[value][field_optgroup];
	          if (!arr) {
	            optionsMap[value][field_optgroup] = group;
	          } else if (!Array.isArray(arr)) {
	            optionsMap[value][field_optgroup] = [arr, group];
	          } else {
	            arr.push(group);
	          }
	        }
	      } else {
	        var option_data = readData(option);
	        option_data[field_label] = option_data[field_label] || option.textContent;
	        option_data[field_value] = option_data[field_value] || value;
	        option_data[field_disabled] = option_data[field_disabled] || option.disabled;
	        option_data[field_optgroup] = option_data[field_optgroup] || group;
	        option_data.$option = option;
	        option_data.$order = option_data.$order || ++$order;
	        optionsMap[value] = option_data;
	        options.push(option_data);
	      }
	      if (option.selected) {
	        settings_element.items.push(value);
	      }
	    };
	    var addGroup = optgroup => {
	      var id, optgroup_data;
	      optgroup_data = readData(optgroup);
	      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';
	      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;
	      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;
	      optgroup_data.$order = optgroup_data.$order || ++$order;
	      settings_element.optgroups.push(optgroup_data);
	      id = optgroup_data[field_optgroup_value];
	      iterate(optgroup.children, option => {
	        addOption(option, id);
	      });
	    };
	    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;
	    iterate(input.children, child => {
	      tagName = child.tagName.toLowerCase();
	      if (tagName === 'optgroup') {
	        addGroup(child);
	      } else if (tagName === 'option') {
	        addOption(child);
	      }
	    });
	  };

	  /**
	   * Initialize from a <input type="text"> element.
	   *
	   */
	  var init_textbox = () => {
	    const data_raw = input.getAttribute(attr_data);
	    if (!data_raw) {
	      var value = input.value.trim() || '';
	      if (!settings.allowEmptyOption && !value.length) return;
	      const values = value.split(settings.delimiter);
	      iterate(values, value => {
	        const option = {};
	        option[field_label] = value;
	        option[field_value] = value;
	        settings_element.options.push(option);
	      });
	      settings_element.items = values;
	    } else {
	      settings_element.options = JSON.parse(data_raw);
	      iterate(settings_element.options, opt => {
	        settings_element.items.push(opt[field_value]);
	      });
	    }
	  };
	  if (tag_name === 'select') {
	    init_select();
	  } else {
	    init_textbox();
	  }
	  return Object.assign({}, defaults, settings_element, settings_user);
	}

	var instance_i = 0;
	class TomSelect extends MicroPlugin(MicroEvent) {
	  constructor(input_arg, user_settings) {
	    super();
	    this.control_input = void 0;
	    this.wrapper = void 0;
	    this.dropdown = void 0;
	    this.control = void 0;
	    this.dropdown_content = void 0;
	    this.focus_node = void 0;
	    this.order = 0;
	    this.settings = void 0;
	    this.input = void 0;
	    this.tabIndex = void 0;
	    this.is_select_tag = void 0;
	    this.rtl = void 0;
	    this.inputId = void 0;
	    this._destroy = void 0;
	    this.sifter = void 0;
	    this.isOpen = false;
	    this.isDisabled = false;
	    this.isReadOnly = false;
	    this.isRequired = void 0;
	    this.isInvalid = false;
	    // @deprecated 1.8
	    this.isValid = true;
	    this.isLocked = false;
	    this.isFocused = false;
	    this.isInputHidden = false;
	    this.isSetup = false;
	    this.ignoreFocus = false;
	    this.ignoreHover = false;
	    this.hasOptions = false;
	    this.currentResults = void 0;
	    this.lastValue = '';
	    this.caretPos = 0;
	    this.loading = 0;
	    this.loadedSearches = {};
	    this.activeOption = null;
	    this.activeItems = [];
	    this.optgroups = {};
	    this.options = {};
	    this.userOptions = {};
	    this.items = [];
	    this.refreshTimeout = null;
	    instance_i++;
	    var dir;
	    var input = getDom(input_arg);
	    if (input.tomselect) {
	      throw new Error('Tom Select already initialized on this element');
	    }
	    input.tomselect = this;

	    // detect rtl environment
	    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);
	    dir = computedStyle.getPropertyValue('direction');

	    // setup default state
	    const settings = getSettings(input, user_settings);
	    this.settings = settings;
	    this.input = input;
	    this.tabIndex = input.tabIndex || 0;
	    this.is_select_tag = input.tagName.toLowerCase() === 'select';
	    this.rtl = /rtl/i.test(dir);
	    this.inputId = getId(input, 'tomselect-' + instance_i);
	    this.isRequired = input.required;

	    // search system
	    this.sifter = new Sifter(this.options, {
	      diacritics: settings.diacritics
	    });

	    // option-dependent defaults
	    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');
	    if (typeof settings.hideSelected !== 'boolean') {
	      settings.hideSelected = settings.mode === 'multi';
	    }
	    if (typeof settings.hidePlaceholder !== 'boolean') {
	      settings.hidePlaceholder = settings.mode !== 'multi';
	    }

	    // set up createFilter callback
	    var filter = settings.createFilter;
	    if (typeof filter !== 'function') {
	      if (typeof filter === 'string') {
	        filter = new RegExp(filter);
	      }
	      if (filter instanceof RegExp) {
	        settings.createFilter = input => filter.test(input);
	      } else {
	        settings.createFilter = value => {
	          return this.settings.duplicates || !this.options[value];
	        };
	      }
	    }
	    this.initializePlugins(settings.plugins);
	    this.setupCallbacks();
	    this.setupTemplates();

	    // Create all elements
	    const wrapper = getDom('<div>');
	    const control = getDom('<div>');
	    const dropdown = this._render('dropdown');
	    const dropdown_content = getDom(`<div role="listbox" tabindex="-1">`);
	    const classes = this.input.getAttribute('class') || '';
	    const inputMode = settings.mode;
	    var control_input;
	    addClasses(wrapper, settings.wrapperClass, classes, inputMode);
	    addClasses(control, settings.controlClass);
	    append(wrapper, control);
	    addClasses(dropdown, settings.dropdownClass, inputMode);
	    if (settings.copyClassesToDropdown) {
	      addClasses(dropdown, classes);
	    }
	    addClasses(dropdown_content, settings.dropdownContentClass);
	    append(dropdown, dropdown_content);
	    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);

	    // default controlInput
	    if (isHtmlString(settings.controlInput)) {
	      control_input = getDom(settings.controlInput);

	      // set attributes
	      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete', 'spellcheck'];
	      iterate$1(attrs, attr => {
	        if (input.getAttribute(attr)) {
	          setAttr(control_input, {
	            [attr]: input.getAttribute(attr)
	          });
	        }
	      });
	      control_input.tabIndex = -1;
	      control.appendChild(control_input);
	      this.focus_node = control_input;

	      // dom element
	    } else if (settings.controlInput) {
	      control_input = getDom(settings.controlInput);
	      this.focus_node = control_input;
	    } else {
	      control_input = getDom('<input/>');
	      this.focus_node = control;
	    }
	    this.wrapper = wrapper;
	    this.dropdown = dropdown;
	    this.dropdown_content = dropdown_content;
	    this.control = control;
	    this.control_input = control_input;
	    this.setup();
	  }

	  /**
	   * set up event bindings.
	   *
	   */
	  setup() {
	    const self = this;
	    const settings = self.settings;
	    const control_input = self.control_input;
	    const dropdown = self.dropdown;
	    const dropdown_content = self.dropdown_content;
	    const wrapper = self.wrapper;
	    const control = self.control;
	    const input = self.input;
	    const focus_node = self.focus_node;
	    const passive_event = {
	      passive: true
	    };
	    const listboxId = self.inputId + '-ts-dropdown';
	    setAttr(dropdown_content, {
	      id: listboxId
	    });
	    setAttr(focus_node, {
	      role: 'combobox',
	      'aria-haspopup': 'listbox',
	      'aria-expanded': 'false',
	      'aria-controls': listboxId
	    });
	    const control_id = getId(focus_node, self.inputId + '-ts-control');
	    const query = "label[for='" + escapeQuery(self.inputId) + "']";
	    const label = document.querySelector(query);
	    const label_click = self.focus.bind(self);
	    if (label) {
	      addEvent(label, 'click', label_click);
	      setAttr(label, {
	        for: control_id
	      });
	      const label_id = getId(label, self.inputId + '-ts-label');
	      setAttr(focus_node, {
	        'aria-labelledby': label_id
	      });
	      setAttr(dropdown_content, {
	        'aria-labelledby': label_id
	      });
	    }
	    wrapper.style.width = input.style.width;
	    if (self.plugins.names.length) {
	      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');
	      addClasses([wrapper, dropdown], classes_plugins);
	    }
	    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {
	      setAttr(input, {
	        multiple: 'multiple'
	      });
	    }
	    if (settings.placeholder) {
	      setAttr(control_input, {
	        placeholder: settings.placeholder
	      });
	    }

	    // if splitOn was not passed in, construct it from the delimiter to allow pasting universally
	    if (!settings.splitOn && settings.delimiter) {
	      settings.splitOn = new RegExp('\\s*' + escape_regex(settings.delimiter) + '+\\s*');
	    }

	    // debounce user defined load() if loadThrottle > 0
	    // after initializePlugins() so plugins can create/modify user defined loaders
	    if (settings.load && settings.loadThrottle) {
	      settings.load = loadDebounce(settings.load, settings.loadThrottle);
	    }
	    addEvent(dropdown, 'mousemove', () => {
	      self.ignoreHover = false;
	    });
	    addEvent(dropdown, 'mouseenter', e => {
	      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);
	      if (target_match) self.onOptionHover(e, target_match);
	    }, {
	      capture: true
	    });

	    // clicking on an option should select it
	    addEvent(dropdown, 'click', evt => {
	      const option = parentMatch(evt.target, '[data-selectable]');
	      if (option) {
	        self.onOptionSelect(evt, option);
	        preventDefault(evt, true);
	      }
	    });
	    addEvent(control, 'click', evt => {
	      var target_match = parentMatch(evt.target, '[data-ts-item]', control);
	      if (target_match && self.onItemSelect(evt, target_match)) {
	        preventDefault(evt, true);
	        return;
	      }

	      // retain focus (see control_input mousedown)
	      if (control_input.value != '') {
	        return;
	      }
	      self.onClick();
	      preventDefault(evt, true);
	    });

	    // keydown on focus_node for arrow_down/arrow_up
	    addEvent(focus_node, 'keydown', e => self.onKeyDown(e));

	    // keypress and input/keyup
	    addEvent(control_input, 'keypress', e => self.onKeyPress(e));
	    addEvent(control_input, 'input', e => self.onInput(e));
	    addEvent(focus_node, 'blur', e => self.onBlur(e));
	    addEvent(focus_node, 'focus', e => self.onFocus(e));
	    addEvent(control_input, 'paste', e => self.onPaste(e));
	    const doc_mousedown = evt => {
	      // blur if target is outside of this instance
	      // dropdown is not always inside wrapper
	      const target = evt.composedPath()[0];
	      if (!wrapper.contains(target) && !dropdown.contains(target)) {
	        if (self.isFocused) {
	          self.blur();
	        }
	        self.inputState();
	        return;
	      }

	      // retain focus by preventing native handling. if the
	      // event target is the input it should not be modified.
	      // otherwise, text selection within the input won't work.
	      // Fixes bug #212 which is no covered by tests
	      if (target == control_input && self.isOpen) {
	        evt.stopPropagation();

	        // clicking anywhere in the control should not blur the control_input (which would close the dropdown)
	      } else {
	        preventDefault(evt, true);
	      }
	    };
	    const win_scroll = () => {
	      if (self.isOpen) {
	        self.positionDropdown();
	      }
	    };
	    addEvent(document, 'mousedown', doc_mousedown);
	    addEvent(window, 'scroll', win_scroll, passive_event);
	    addEvent(window, 'resize', win_scroll, passive_event);
	    this._destroy = () => {
	      document.removeEventListener('mousedown', doc_mousedown);
	      window.removeEventListener('scroll', win_scroll);
	      window.removeEventListener('resize', win_scroll);
	      if (label) label.removeEventListener('click', label_click);
	    };

	    // store original html and tab index so that they can be
	    // restored when the destroy() method is called.
	    this.revertSettings = {
	      innerHTML: input.innerHTML,
	      tabIndex: input.tabIndex
	    };
	    input.tabIndex = -1;
	    input.insertAdjacentElement('afterend', self.wrapper);
	    self.sync(false);
	    settings.items = [];
	    delete settings.optgroups;
	    delete settings.options;
	    addEvent(input, 'invalid', () => {
	      if (self.isValid) {
	        self.isValid = false;
	        self.isInvalid = true;
	        self.refreshState();
	      }
	    });
	    self.updateOriginalInput();
	    self.refreshItems();
	    self.close(false);
	    self.inputState();
	    self.isSetup = true;
	    if (input.disabled) {
	      self.disable();
	    } else if (input.readOnly) {
	      self.setReadOnly(true);
	    } else {
	      self.enable(); //sets tabIndex
	    }

	    self.on('change', this.onChange);
	    addClasses(input, 'tomselected', 'ts-hidden-accessible');
	    self.trigger('initialize');

	    // preload options
	    if (settings.preload === true) {
	      self.preload();
	    }
	  }

	  /**
	   * Register options and optgroups
	   *
	   */
	  setupOptions(options = [], optgroups = []) {
	    // build options table
	    this.addOptions(options);

	    // build optgroup table
	    iterate$1(optgroups, optgroup => {
	      this.registerOptionGroup(optgroup);
	    });
	  }

	  /**
	   * Sets up default rendering functions.
	   */
	  setupTemplates() {
	    var self = this;
	    var field_label = self.settings.labelField;
	    var field_optgroup = self.settings.optgroupLabelField;
	    var templates = {
	      'optgroup': data => {
	        let optgroup = document.createElement('div');
	        optgroup.className = 'optgroup';
	        optgroup.appendChild(data.options);
	        return optgroup;
	      },
	      'optgroup_header': (data, escape) => {
	        return '<div class="optgroup-header">' + escape(data[field_optgroup]) + '</div>';
	      },
	      'option': (data, escape) => {
	        return '<div>' + escape(data[field_label]) + '</div>';
	      },
	      'item': (data, escape) => {
	        return '<div>' + escape(data[field_label]) + '</div>';
	      },
	      'option_create': (data, escape) => {
	        return '<div class="create">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';
	      },
	      'no_results': () => {
	        return '<div class="no-results">No results found</div>';
	      },
	      'loading': () => {
	        return '<div class="spinner"></div>';
	      },
	      'not_loading': () => {},
	      'dropdown': () => {
	        return '<div></div>';
	      }
	    };
	    self.settings.render = Object.assign({}, templates, self.settings.render);
	  }

	  /**
	   * Maps fired events to callbacks provided
	   * in the settings used when creating the control.
	   */
	  setupCallbacks() {
	    var key, fn;
	    var callbacks = {
	      'initialize': 'onInitialize',
	      'change': 'onChange',
	      'item_add': 'onItemAdd',
	      'item_remove': 'onItemRemove',
	      'item_select': 'onItemSelect',
	      'clear': 'onClear',
	      'option_add': 'onOptionAdd',
	      'option_remove': 'onOptionRemove',
	      'option_clear': 'onOptionClear',
	      'optgroup_add': 'onOptionGroupAdd',
	      'optgroup_remove': 'onOptionGroupRemove',
	      'optgroup_clear': 'onOptionGroupClear',
	      'dropdown_open': 'onDropdownOpen',
	      'dropdown_close': 'onDropdownClose',
	      'type': 'onType',
	      'load': 'onLoad',
	      'focus': 'onFocus',
	      'blur': 'onBlur'
	    };
	    for (key in callbacks) {
	      fn = this.settings[callbacks[key]];
	      if (fn) this.on(key, fn);
	    }
	  }

	  /**
	   * Sync the Tom Select instance with the original input or select
	   *
	   */
	  sync(get_settings = true) {
	    const self = this;
	    const settings = get_settings ? getSettings(self.input, {
	      delimiter: self.settings.delimiter
	    }) : self.settings;
	    self.setupOptions(settings.options, settings.optgroups);
	    self.setValue(settings.items || [], true); // silent prevents recursion

	    self.lastQuery = null; // so updated options will be displayed in dropdown
	  }

	  /**
	   * Triggered when the main control element
	   * has a click event.
	   *
	   */
	  onClick() {
	    var self = this;
	    if (self.activeItems.length > 0) {
	      self.clearActiveItems();
	      self.focus();
	      return;
	    }
	    if (self.isFocused && self.isOpen) {
	      self.blur();
	    } else {
	      self.focus();
	    }
	  }

	  /**
	   * @deprecated v1.7
	   *
	   */
	  onMouseDown() {}

	  /**
	   * Triggered when the value of the control has been changed.
	   * This should propagate the event to the original DOM
	   * input / select element.
	   */
	  onChange() {
	    triggerEvent(this.input, 'input');
	    triggerEvent(this.input, 'change');
	  }

	  /**
	   * Triggered on <input> paste.
	   *
	   */
	  onPaste(e) {
	    var self = this;
	    if (self.isInputHidden || self.isLocked) {
	      preventDefault(e);
	      return;
	    }

	    // If a regex or string is included, this will split the pasted
	    // input and create Items for each separate value
	    if (!self.settings.splitOn) {
	      return;
	    }

	    // Wait for pasted text to be recognized in value
	    setTimeout(() => {
	      var pastedText = self.inputValue();
	      if (!pastedText.match(self.settings.splitOn)) {
	        return;
	      }
	      var splitInput = pastedText.trim().split(self.settings.splitOn);
	      iterate$1(splitInput, piece => {
	        const hash = hash_key(piece);
	        if (hash) {
	          if (this.options[piece]) {
	            self.addItem(piece);
	          } else {
	            self.createItem(piece);
	          }
	        }
	      });
	    }, 0);
	  }

	  /**
	   * Triggered on <input> keypress.
	   *
	   */
	  onKeyPress(e) {
	    var self = this;
	    if (self.isLocked) {
	      preventDefault(e);
	      return;
	    }
	    var character = String.fromCharCode(e.keyCode || e.which);
	    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {
	      self.createItem();
	      preventDefault(e);
	      return;
	    }
	  }

	  /**
	   * Triggered on <input> keydown.
	   *
	   */
	  onKeyDown(e) {
	    var self = this;
	    self.ignoreHover = true;
	    if (self.isLocked) {
	      if (e.keyCode !== KEY_TAB) {
	        preventDefault(e);
	      }
	      return;
	    }
	    switch (e.keyCode) {
	      // ctrl+A: select all
	      case KEY_A:
	        if (isKeyDown(KEY_SHORTCUT, e)) {
	          if (self.control_input.value == '') {
	            preventDefault(e);
	            self.selectAll();
	            return;
	          }
	        }
	        break;

	      // esc: close dropdown
	      case KEY_ESC:
	        if (self.isOpen) {
	          preventDefault(e, true);
	          self.close();
	        }
	        self.clearActiveItems();
	        return;

	      // down: open dropdown or move selection down
	      case KEY_DOWN:
	        if (!self.isOpen && self.hasOptions) {
	          self.open();
	        } else if (self.activeOption) {
	          let next = self.getAdjacent(self.activeOption, 1);
	          if (next) self.setActiveOption(next);
	        }
	        preventDefault(e);
	        return;

	      // up: move selection up
	      case KEY_UP:
	        if (self.activeOption) {
	          let prev = self.getAdjacent(self.activeOption, -1);
	          if (prev) self.setActiveOption(prev);
	        }
	        preventDefault(e);
	        return;

	      // return: select active option
	      case KEY_RETURN:
	        if (self.canSelect(self.activeOption)) {
	          self.onOptionSelect(e, self.activeOption);
	          preventDefault(e);

	          // if the option_create=null, the dropdown might be closed
	        } else if (self.settings.create && self.createItem()) {
	          preventDefault(e);

	          // don't submit form when searching for a value
	        } else if (document.activeElement == self.control_input && self.isOpen) {
	          preventDefault(e);
	        }
	        return;

	      // left: modifiy item selection to the left
	      case KEY_LEFT:
	        self.advanceSelection(-1, e);
	        return;

	      // right: modifiy item selection to the right
	      case KEY_RIGHT:
	        self.advanceSelection(1, e);
	        return;

	      // tab: select active option and/or create item
	      case KEY_TAB:
	        if (self.settings.selectOnTab) {
	          if (self.canSelect(self.activeOption)) {
	            self.onOptionSelect(e, self.activeOption);

	            // prevent default [tab] behaviour of jump to the next field
	            // if select isFull, then the dropdown won't be open and [tab] will work normally
	            preventDefault(e);
	          }
	          if (self.settings.create && self.createItem()) {
	            preventDefault(e);
	          }
	        }
	        return;

	      // delete|backspace: delete items
	      case KEY_BACKSPACE:
	      case KEY_DELETE:
	        self.deleteSelection(e);
	        return;
	    }

	    // don't enter text in the control_input when active items are selected
	    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {
	      preventDefault(e);
	    }
	  }

	  /**
	   * Triggered on <input> keyup.
	   *
	   */
	  onInput(e) {
	    if (this.isLocked) {
	      return;
	    }
	    const value = this.inputValue();
	    if (this.lastValue === value) return;
	    this.lastValue = value;
	    if (value == '') {
	      this._onInput();
	      return;
	    }
	    if (this.refreshTimeout) {
	      clearTimeout(this.refreshTimeout);
	    }
	    this.refreshTimeout = timeout(() => {
	      this.refreshTimeout = null;
	      this._onInput();
	    }, this.settings.refreshThrottle);
	  }
	  _onInput() {
	    const value = this.lastValue;
	    if (this.settings.shouldLoad.call(this, value)) {
	      this.load(value);
	    }
	    this.refreshOptions();
	    this.trigger('type', value);
	  }

	  /**
	   * Triggered when the user rolls over
	   * an option in the autocomplete dropdown menu.
	   *
	   */
	  onOptionHover(evt, option) {
	    if (this.ignoreHover) return;
	    this.setActiveOption(option, false);
	  }

	  /**
	   * Triggered on <input> focus.
	   *
	   */
	  onFocus(e) {
	    var self = this;
	    var wasFocused = self.isFocused;
	    if (self.isDisabled || self.isReadOnly) {
	      self.blur();
	      preventDefault(e);
	      return;
	    }
	    if (self.ignoreFocus) return;
	    self.isFocused = true;
	    if (self.settings.preload === 'focus') self.preload();
	    if (!wasFocused) self.trigger('focus');
	    if (!self.activeItems.length) {
	      self.inputState();
	      self.refreshOptions(!!self.settings.openOnFocus);
	    }
	    self.refreshState();
	  }

	  /**
	   * Triggered on <input> blur.
	   *
	   */
	  onBlur(e) {
	    if (document.hasFocus() === false) return;
	    var self = this;
	    if (!self.isFocused) return;
	    self.isFocused = false;
	    self.ignoreFocus = false;
	    var deactivate = () => {
	      self.close();
	      self.setActiveItem();
	      self.setCaret(self.items.length);
	      self.trigger('blur');
	    };
	    if (self.settings.create && self.settings.createOnBlur) {
	      self.createItem(null, deactivate);
	    } else {
	      deactivate();
	    }
	  }

	  /**
	   * Triggered when the user clicks on an option
	   * in the autocomplete dropdown menu.
	   *
	   */
	  onOptionSelect(evt, option) {
	    var value,
	      self = this;

	    // should not be possible to trigger a option under a disabled optgroup
	    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {
	      return;
	    }
	    if (option.classList.contains('create')) {
	      self.createItem(null, () => {
	        if (self.settings.closeAfterSelect) {
	          self.close();
	        }
	      });
	    } else {
	      value = option.dataset.value;
	      if (typeof value !== 'undefined') {
	        self.lastQuery = null;
	        self.addItem(value);
	        if (self.settings.closeAfterSelect) {
	          self.close();
	        }
	        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {
	          self.setActiveOption(option);
	        }
	      }
	    }
	  }

	  /**
	   * Return true if the given option can be selected
	   *
	   */
	  canSelect(option) {
	    if (this.isOpen && option && this.dropdown_content.contains(option)) {
	      return true;
	    }
	    return false;
	  }

	  /**
	   * Triggered when the user clicks on an item
	   * that has been selected.
	   *
	   */
	  onItemSelect(evt, item) {
	    var self = this;
	    if (!self.isLocked && self.settings.mode === 'multi') {
	      preventDefault(evt);
	      self.setActiveItem(item, evt);
	      return true;
	    }
	    return false;
	  }

	  /**
	   * Determines whether or not to invoke
	   * the user-provided option provider / loader
	   *
	   * Note, there is a subtle difference between
	   * this.canLoad() and this.settings.shouldLoad();
	   *
	   *	- settings.shouldLoad() is a user-input validator.
	   *	When false is returned, the not_loading template
	   *	will be added to the dropdown
	   *
	   *	- canLoad() is lower level validator that checks
	   * 	the Tom Select instance. There is no inherent user
	   *	feedback when canLoad returns false
	   *
	   */
	  canLoad(value) {
	    if (!this.settings.load) return false;
	    if (this.loadedSearches.hasOwnProperty(value)) return false;
	    return true;
	  }

	  /**
	   * Invokes the user-provided option provider / loader.
	   *
	   */
	  load(value) {
	    const self = this;
	    if (!self.canLoad(value)) return;
	    addClasses(self.wrapper, self.settings.loadingClass);
	    self.loading++;
	    const callback = self.loadCallback.bind(self);
	    self.settings.load.call(self, value, callback);
	  }

	  /**
	   * Invoked by the user-provided option provider
	   *
	   */
	  loadCallback(options, optgroups) {
	    const self = this;
	    self.loading = Math.max(self.loading - 1, 0);
	    self.lastQuery = null;
	    self.clearActiveOption(); // when new results load, focus should be on first option
	    self.setupOptions(options, optgroups);
	    self.refreshOptions(self.isFocused && !self.isInputHidden);
	    if (!self.loading) {
	      removeClasses(self.wrapper, self.settings.loadingClass);
	    }
	    self.trigger('load', options, optgroups);
	  }
	  preload() {
	    var classList = this.wrapper.classList;
	    if (classList.contains('preloaded')) return;
	    classList.add('preloaded');
	    this.load('');
	  }

	  /**
	   * Sets the input field of the control to the specified value.
	   *
	   */
	  setTextboxValue(value = '') {
	    var input = this.control_input;
	    var changed = input.value !== value;
	    if (changed) {
	      input.value = value;
	      triggerEvent(input, 'update');
	      this.lastValue = value;
	    }
	  }

	  /**
	   * Returns the value of the control. If multiple items
	   * can be selected (e.g. <select multiple>), this returns
	   * an array. If only one item can be selected, this
	   * returns a string.
	   *
	   */
	  getValue() {
	    if (this.is_select_tag && this.input.hasAttribute('multiple')) {
	      return this.items;
	    }
	    return this.items.join(this.settings.delimiter);
	  }

	  /**
	   * Resets the selected items to the given value.
	   *
	   */
	  setValue(value, silent) {
	    var events = silent ? [] : ['change'];
	    debounce_events(this, events, () => {
	      this.clear(silent);
	      this.addItems(value, silent);
	    });
	  }

	  /**
	   * Resets the number of max items to the given value
	   *
	   */
	  setMaxItems(value) {
	    if (value === 0) value = null; //reset to unlimited items.
	    this.settings.maxItems = value;
	    this.refreshState();
	  }

	  /**
	   * Sets the selected item.
	   *
	   */
	  setActiveItem(item, e) {
	    var self = this;
	    var eventName;
	    var i, begin, end, swap;
	    var last;
	    if (self.settings.mode === 'single') return;

	    // clear the active selection
	    if (!item) {
	      self.clearActiveItems();
	      if (self.isFocused) {
	        self.inputState();
	      }
	      return;
	    }

	    // modify selection
	    eventName = e && e.type.toLowerCase();
	    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {
	      last = self.getLastActive();
	      begin = Array.prototype.indexOf.call(self.control.children, last);
	      end = Array.prototype.indexOf.call(self.control.children, item);
	      if (begin > end) {
	        swap = begin;
	        begin = end;
	        end = swap;
	      }
	      for (i = begin; i <= end; i++) {
	        item = self.control.children[i];
	        if (self.activeItems.indexOf(item) === -1) {
	          self.setActiveItemClass(item);
	        }
	      }
	      preventDefault(e);
	    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {
	      if (item.classList.contains('active')) {
	        self.removeActiveItem(item);
	      } else {
	        self.setActiveItemClass(item);
	      }
	    } else {
	      self.clearActiveItems();
	      self.setActiveItemClass(item);
	    }

	    // ensure control has focus
	    self.inputState();
	    if (!self.isFocused) {
	      self.focus();
	    }
	  }

	  /**
	   * Set the active and last-active classes
	   *
	   */
	  setActiveItemClass(item) {
	    const self = this;
	    const last_active = self.control.querySelector('.last-active');
	    if (last_active) removeClasses(last_active, 'last-active');
	    addClasses(item, 'active last-active');
	    self.trigger('item_select', item);
	    if (self.activeItems.indexOf(item) == -1) {
	      self.activeItems.push(item);
	    }
	  }

	  /**
	   * Remove active item
	   *
	   */
	  removeActiveItem(item) {
	    var idx = this.activeItems.indexOf(item);
	    this.activeItems.splice(idx, 1);
	    removeClasses(item, 'active');
	  }

	  /**
	   * Clears all the active items
	   *
	   */
	  clearActiveItems() {
	    removeClasses(this.activeItems, 'active');
	    this.activeItems = [];
	  }

	  /**
	   * Sets the selected item in the dropdown menu
	   * of available options.
	   *
	   */
	  setActiveOption(option, scroll = true) {
	    if (option === this.activeOption) {
	      return;
	    }
	    this.clearActiveOption();
	    if (!option) return;
	    this.activeOption = option;
	    setAttr(this.focus_node, {
	      'aria-activedescendant': option.getAttribute('id')
	    });
	    setAttr(option, {
	      'aria-selected': 'true'
	    });
	    addClasses(option, 'active');
	    if (scroll) this.scrollToOption(option);
	  }

	  /**
	   * Sets the dropdown_content scrollTop to display the option
	   *
	   */
	  scrollToOption(option, behavior) {
	    if (!option) return;
	    const content = this.dropdown_content;
	    const height_menu = content.clientHeight;
	    const scrollTop = content.scrollTop || 0;
	    const height_item = option.offsetHeight;
	    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;
	    if (y + height_item > height_menu + scrollTop) {
	      this.scroll(y - height_menu + height_item, behavior);
	    } else if (y < scrollTop) {
	      this.scroll(y, behavior);
	    }
	  }

	  /**
	   * Scroll the dropdown to the given position
	   *
	   */
	  scroll(scrollTop, behavior) {
	    const content = this.dropdown_content;
	    if (behavior) {
	      content.style.scrollBehavior = behavior;
	    }
	    content.scrollTop = scrollTop;
	    content.style.scrollBehavior = '';
	  }

	  /**
	   * Clears the active option
	   *
	   */
	  clearActiveOption() {
	    if (this.activeOption) {
	      removeClasses(this.activeOption, 'active');
	      setAttr(this.activeOption, {
	        'aria-selected': null
	      });
	    }
	    this.activeOption = null;
	    setAttr(this.focus_node, {
	      'aria-activedescendant': null
	    });
	  }

	  /**
	   * Selects all items (CTRL + A).
	   */
	  selectAll() {
	    const self = this;
	    if (self.settings.mode === 'single') return;
	    const activeItems = self.controlChildren();
	    if (!activeItems.length) return;
	    self.inputState();
	    self.close();
	    self.activeItems = activeItems;
	    iterate$1(activeItems, item => {
	      self.setActiveItemClass(item);
	    });
	  }

	  /**
	   * Determines if the control_input should be in a hidden or visible state
	   *
	   */
	  inputState() {
	    var self = this;
	    if (!self.control.contains(self.control_input)) return;
	    setAttr(self.control_input, {
	      placeholder: self.settings.placeholder
	    });
	    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {
	      self.setTextboxValue();
	      self.isInputHidden = true;
	    } else {
	      if (self.settings.hidePlaceholder && self.items.length > 0) {
	        setAttr(self.control_input, {
	          placeholder: ''
	        });
	      }
	      self.isInputHidden = false;
	    }
	    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);
	  }

	  /**
	   * Get the input value
	   */
	  inputValue() {
	    return this.control_input.value.trim();
	  }

	  /**
	   * Gives the control focus.
	   */
	  focus() {
	    var self = this;
	    if (self.isDisabled || self.isReadOnly) return;
	    self.ignoreFocus = true;
	    if (self.control_input.offsetWidth) {
	      self.control_input.focus();
	    } else {
	      self.focus_node.focus();
	    }
	    setTimeout(() => {
	      self.ignoreFocus = false;
	      self.onFocus();
	    }, 0);
	  }

	  /**
	   * Forces the control out of focus.
	   *
	   */
	  blur() {
	    this.focus_node.blur();
	    this.onBlur();
	  }

	  /**
	   * Returns a function that scores an object
	   * to show how good of a match it is to the
	   * provided query.
	   *
	   * @return {function}
	   */
	  getScoreFunction(query) {
	    return this.sifter.getScoreFunction(query, this.getSearchOptions());
	  }

	  /**
	   * Returns search options for sifter (the system
	   * for scoring and sorting results).
	   *
	   * @see https://github.com/orchidjs/sifter.js
	   * @return {object}
	   */
	  getSearchOptions() {
	    var settings = this.settings;
	    var sort = settings.sortField;
	    if (typeof settings.sortField === 'string') {
	      sort = [{
	        field: settings.sortField
	      }];
	    }
	    return {
	      fields: settings.searchField,
	      conjunction: settings.searchConjunction,
	      sort: sort,
	      nesting: settings.nesting
	    };
	  }

	  /**
	   * Searches through available options and returns
	   * a sorted array of matches.
	   *
	   */
	  search(query) {
	    var result, calculateScore;
	    var self = this;
	    var options = this.getSearchOptions();

	    // validate user-provided result scoring function
	    if (self.settings.score) {
	      calculateScore = self.settings.score.call(self, query);
	      if (typeof calculateScore !== 'function') {
	        throw new Error('Tom Select "score" setting must be a function that returns a function');
	      }
	    }

	    // perform search
	    if (query !== self.lastQuery) {
	      self.lastQuery = query;
	      result = self.sifter.search(query, Object.assign(options, {
	        score: calculateScore
	      }));
	      self.currentResults = result;
	    } else {
	      result = Object.assign({}, self.currentResults);
	    }

	    // filter out selected items
	    if (self.settings.hideSelected) {
	      result.items = result.items.filter(item => {
	        let hashed = hash_key(item.id);
	        return !(hashed && self.items.indexOf(hashed) !== -1);
	      });
	    }
	    return result;
	  }

	  /**
	   * Refreshes the list of available options shown
	   * in the autocomplete dropdown menu.
	   *
	   */
	  refreshOptions(triggerDropdown = true) {
	    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;
	    var create;
	    const groups = {};
	    const groups_order = [];
	    var self = this;
	    var query = self.inputValue();
	    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;
	    var results = self.search(query);
	    var active_option = null;
	    var show_dropdown = self.settings.shouldOpen || false;
	    var dropdown_content = self.dropdown_content;
	    if (same_query) {
	      active_option = self.activeOption;
	      if (active_option) {
	        active_group = active_option.closest('[data-group]');
	      }
	    }

	    // build markup
	    n = results.items.length;
	    if (typeof self.settings.maxOptions === 'number') {
	      n = Math.min(n, self.settings.maxOptions);
	    }
	    if (n > 0) {
	      show_dropdown = true;
	    }

	    // get fragment for group and the position of the group in group_order
	    const getGroupFragment = (optgroup, order) => {
	      let group_order_i = groups[optgroup];
	      if (group_order_i !== undefined) {
	        let order_group = groups_order[group_order_i];
	        if (order_group !== undefined) {
	          return [group_order_i, order_group.fragment];
	        }
	      }
	      let group_fragment = document.createDocumentFragment();
	      group_order_i = groups_order.length;
	      groups_order.push({
	        fragment: group_fragment,
	        order,
	        optgroup
	      });
	      return [group_order_i, group_fragment];
	    };

	    // render and group available options individually
	    for (i = 0; i < n; i++) {
	      // get option dom element
	      let item = results.items[i];
	      if (!item) continue;
	      let opt_value = item.id;
	      let option = self.options[opt_value];
	      if (option === undefined) continue;
	      let opt_hash = get_hash(opt_value);
	      let option_el = self.getOption(opt_hash, true);

	      // toggle 'selected' class
	      if (!self.settings.hideSelected) {
	        option_el.classList.toggle('selected', self.items.includes(opt_hash));
	      }
	      optgroup = option[self.settings.optgroupField] || '';
	      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];
	      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {
	        optgroup = optgroups[j];
	        let order = option.$order;
	        let self_optgroup = self.optgroups[optgroup];
	        if (self_optgroup === undefined) {
	          optgroup = '';
	        } else {
	          order = self_optgroup.$order;
	        }
	        const [group_order_i, group_fragment] = getGroupFragment(optgroup, order);

	        // nodes can only have one parent, so if the option is in mutple groups, we need a clone
	        if (j > 0) {
	          option_el = option_el.cloneNode(true);
	          setAttr(option_el, {
	            id: option.$id + '-clone-' + j,
	            'aria-selected': null
	          });
	          option_el.classList.add('ts-cloned');
	          removeClasses(option_el, 'active');

	          // make sure we keep the activeOption in the same group
	          if (self.activeOption && self.activeOption.dataset.value == opt_value) {
	            if (active_group && active_group.dataset.group === optgroup.toString()) {
	              active_option = option_el;
	            }
	          }
	        }
	        group_fragment.appendChild(option_el);
	        if (optgroup != '') {
	          groups[optgroup] = group_order_i;
	        }
	      }
	    }

	    // sort optgroups
	    if (self.settings.lockOptgroupOrder) {
	      groups_order.sort((a, b) => {
	        return a.order - b.order;
	      });
	    }

	    // render optgroup headers & join groups
	    html = document.createDocumentFragment();
	    iterate$1(groups_order, group_order => {
	      let group_fragment = group_order.fragment;
	      let optgroup = group_order.optgroup;
	      if (!group_fragment || !group_fragment.children.length) return;
	      let group_heading = self.optgroups[optgroup];
	      if (group_heading !== undefined) {
	        let group_options = document.createDocumentFragment();
	        let header = self.render('optgroup_header', group_heading);
	        append(group_options, header);
	        append(group_options, group_fragment);
	        let group_html = self.render('optgroup', {
	          group: group_heading,
	          options: group_options
	        });
	        append(html, group_html);
	      } else {
	        append(html, group_fragment);
	      }
	    });
	    dropdown_content.innerHTML = '';
	    append(dropdown_content, html);

	    // highlight matching terms inline
	    if (self.settings.highlight) {
	      removeHighlight(dropdown_content);
	      if (results.query.length && results.tokens.length) {
	        iterate$1(results.tokens, tok => {
	          highlight(dropdown_content, tok.regex);
	        });
	      }
	    }

	    // helper method for adding templates to dropdown
	    var add_template = template => {
	      let content = self.render(template, {
	        input: query
	      });
	      if (content) {
	        show_dropdown = true;
	        dropdown_content.insertBefore(content, dropdown_content.firstChild);
	      }
	      return content;
	    };

	    // add loading message
	    if (self.loading) {
	      add_template('loading');

	      // invalid query
	    } else if (!self.settings.shouldLoad.call(self, query)) {
	      add_template('not_loading');

	      // add no_results message
	    } else if (results.items.length === 0) {
	      add_template('no_results');
	    }

	    // add create option
	    has_create_option = self.canCreate(query);
	    if (has_create_option) {
	      create = add_template('option_create');
	    }

	    // activate
	    self.hasOptions = results.items.length > 0 || has_create_option;
	    if (show_dropdown) {
	      if (results.items.length > 0) {
	        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {
	          active_option = self.getOption(self.items[0]);
	        }
	        if (!dropdown_content.contains(active_option)) {
	          let active_index = 0;
	          if (create && !self.settings.addPrecedence) {
	            active_index = 1;
	          }
	          active_option = self.selectable()[active_index];
	        }
	      } else if (create) {
	        active_option = create;
	      }
	      if (triggerDropdown && !self.isOpen) {
	        self.open();
	        self.scrollToOption(active_option, 'auto');
	      }
	      self.setActiveOption(active_option);
	    } else {
	      self.clearActiveOption();
	      if (triggerDropdown && self.isOpen) {
	        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value
	      }
	    }
	  }

	  /**
	   * Return list of selectable options
	   *
	   */
	  selectable() {
	    return this.dropdown_content.querySelectorAll('[data-selectable]');
	  }

	  /**
	   * Adds an available option. If it already exists,
	   * nothing will happen. Note: this does not refresh
	   * the options list dropdown (use `refreshOptions`
	   * for that).
	   *
	   * Usage:
	   *
	   *   this.addOption(data)
	   *
	   */
	  addOption(data, user_created = false) {
	    const self = this;

	    // @deprecated 1.7.7
	    // use addOptions( array, user_created ) for adding multiple options
	    if (Array.isArray(data)) {
	      self.addOptions(data, user_created);
	      return false;
	    }
	    const key = hash_key(data[self.settings.valueField]);
	    if (key === null || self.options.hasOwnProperty(key)) {
	      return false;
	    }
	    data.$order = data.$order || ++self.order;
	    data.$id = self.inputId + '-opt-' + data.$order;
	    self.options[key] = data;
	    self.lastQuery = null;
	    if (user_created) {
	      self.userOptions[key] = user_created;
	      self.trigger('option_add', key, data);
	    }
	    return key;
	  }

	  /**
	   * Add multiple options
	   *
	   */
	  addOptions(data, user_created = false) {
	    iterate$1(data, dat => {
	      this.addOption(dat, user_created);
	    });
	  }

	  /**
	   * @deprecated 1.7.7
	   */
	  registerOption(data) {
	    return this.addOption(data);
	  }

	  /**
	   * Registers an option group to the pool of option groups.
	   *
	   * @return {boolean|string}
	   */
	  registerOptionGroup(data) {
	    var key = hash_key(data[this.settings.optgroupValueField]);
	    if (key === null) return false;
	    data.$order = data.$order || ++this.order;
	    this.optgroups[key] = data;
	    return key;
	  }

	  /**
	   * Registers a new optgroup for options
	   * to be bucketed into.
	   *
	   */
	  addOptionGroup(id, data) {
	    var hashed_id;
	    data[this.settings.optgroupValueField] = id;
	    if (hashed_id = this.registerOptionGroup(data)) {
	      this.trigger('optgroup_add', hashed_id, data);
	    }
	  }

	  /**
	   * Removes an existing option group.
	   *
	   */
	  removeOptionGroup(id) {
	    if (this.optgroups.hasOwnProperty(id)) {
	      delete this.optgroups[id];
	      this.clearCache();
	      this.trigger('optgroup_remove', id);
	    }
	  }

	  /**
	   * Clears all existing option groups.
	   */
	  clearOptionGroups() {
	    this.optgroups = {};
	    this.clearCache();
	    this.trigger('optgroup_clear');
	  }

	  /**
	   * Updates an option available for selection. If
	   * it is visible in the selected items or options
	   * dropdown, it will be re-rendered automatically.
	   *
	   */
	  updateOption(value, data) {
	    const self = this;
	    var item_new;
	    var index_item;
	    const value_old = hash_key(value);
	    const value_new = hash_key(data[self.settings.valueField]);

	    // sanity checks
	    if (value_old === null) return;
	    const data_old = self.options[value_old];
	    if (data_old == undefined) return;
	    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');
	    const option = self.getOption(value_old);
	    const item = self.getItem(value_old);
	    data.$order = data.$order || data_old.$order;
	    delete self.options[value_old];

	    // invalidate render cache
	    // don't remove existing node yet, we'll remove it after replacing it
	    self.uncacheValue(value_new);
	    self.options[value_new] = data;

	    // update the option if it's in the dropdown
	    if (option) {
	      if (self.dropdown_content.contains(option)) {
	        const option_new = self._render('option', data);
	        replaceNode(option, option_new);
	        if (self.activeOption === option) {
	          self.setActiveOption(option_new);
	        }
	      }
	      option.remove();
	    }

	    // update the item if we have one
	    if (item) {
	      index_item = self.items.indexOf(value_old);
	      if (index_item !== -1) {
	        self.items.splice(index_item, 1, value_new);
	      }
	      item_new = self._render('item', data);
	      if (item.classList.contains('active')) addClasses(item_new, 'active');
	      replaceNode(item, item_new);
	    }

	    // invalidate last query because we might have updated the sortField
	    self.lastQuery = null;
	  }

	  /**
	   * Removes a single option.
	   *
	   */
	  removeOption(value, silent) {
	    const self = this;
	    value = get_hash(value);
	    self.uncacheValue(value);
	    delete self.userOptions[value];
	    delete self.options[value];
	    self.lastQuery = null;
	    self.trigger('option_remove', value);
	    self.removeItem(value, silent);
	  }

	  /**
	   * Clears all options.
	   */
	  clearOptions(filter) {
	    const boundFilter = (filter || this.clearFilter).bind(this);
	    this.loadedSearches = {};
	    this.userOptions = {};
	    this.clearCache();
	    const selected = {};
	    iterate$1(this.options, (option, key) => {
	      if (boundFilter(option, key)) {
	        selected[key] = option;
	      }
	    });
	    this.options = this.sifter.items = selected;
	    this.lastQuery = null;
	    this.trigger('option_clear');
	  }

	  /**
	   * Used by clearOptions() to decide whether or not an option should be removed
	   * Return true to keep an option, false to remove
	   *
	   */
	  clearFilter(option, value) {
	    if (this.items.indexOf(value) >= 0) {
	      return true;
	    }
	    return false;
	  }

	  /**
	   * Returns the dom element of the option
	   * matching the given value.
	   *
	   */
	  getOption(value, create = false) {
	    const hashed = hash_key(value);
	    if (hashed === null) return null;
	    const option = this.options[hashed];
	    if (option != undefined) {
	      if (option.$div) {
	        return option.$div;
	      }
	      if (create) {
	        return this._render('option', option);
	      }
	    }
	    return null;
	  }

	  /**
	   * Returns the dom element of the next or previous dom element of the same type
	   * Note: adjacent options may not be adjacent DOM elements (optgroups)
	   *
	   */
	  getAdjacent(option, direction, type = 'option') {
	    var self = this,
	      all;
	    if (!option) {
	      return null;
	    }
	    if (type == 'item') {
	      all = self.controlChildren();
	    } else {
	      all = self.dropdown_content.querySelectorAll('[data-selectable]');
	    }
	    for (let i = 0; i < all.length; i++) {
	      if (all[i] != option) {
	        continue;
	      }
	      if (direction > 0) {
	        return all[i + 1];
	      }
	      return all[i - 1];
	    }
	    return null;
	  }

	  /**
	   * Returns the dom element of the item
	   * matching the given value.
	   *
	   */
	  getItem(item) {
	    if (typeof item == 'object') {
	      return item;
	    }
	    var value = hash_key(item);
	    return value !== null ? this.control.querySelector(`[data-value="${addSlashes(value)}"]`) : null;
	  }

	  /**
	   * "Selects" multiple items at once. Adds them to the list
	   * at the current caret position.
	   *
	   */
	  addItems(values, silent) {
	    var self = this;
	    var items = Array.isArray(values) ? values : [values];
	    items = items.filter(x => self.items.indexOf(x) === -1);
	    const last_item = items[items.length - 1];
	    items.forEach(item => {
	      self.isPending = item !== last_item;
	      self.addItem(item, silent);
	    });
	  }

	  /**
	   * "Selects" an item. Adds it to the list
	   * at the current caret position.
	   *
	   */
	  addItem(value, silent) {
	    var events = silent ? [] : ['change', 'dropdown_close'];
	    debounce_events(this, events, () => {
	      var item, wasFull;
	      const self = this;
	      const inputMode = self.settings.mode;
	      const hashed = hash_key(value);
	      if (hashed && self.items.indexOf(hashed) !== -1) {
	        if (inputMode === 'single') {
	          self.close();
	        }
	        if (inputMode === 'single' || !self.settings.duplicates) {
	          return;
	        }
	      }
	      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;
	      if (inputMode === 'single') self.clear(silent);
	      if (inputMode === 'multi' && self.isFull()) return;
	      item = self._render('item', self.options[hashed]);
	      if (self.control.contains(item)) {
	        // duplicates
	        item = item.cloneNode(true);
	      }
	      wasFull = self.isFull();
	      self.items.splice(self.caretPos, 0, hashed);
	      self.insertAtCaret(item);
	      if (self.isSetup) {
	        // update menu / remove the option (if this is not one item being added as part of series)
	        if (!self.isPending && self.settings.hideSelected) {
	          let option = self.getOption(hashed);
	          let next = self.getAdjacent(option, 1);
	          if (next) {
	            self.setActiveOption(next);
	          }
	        }

	        // refreshOptions after setActiveOption(),
	        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value
	        if (!self.isPending && !self.settings.closeAfterSelect) {
	          self.refreshOptions(self.isFocused && inputMode !== 'single');
	        }

	        // hide the menu if the maximum number of items have been selected or no options are left
	        if (self.settings.closeAfterSelect != false && self.isFull()) {
	          self.close();
	        } else if (!self.isPending) {
	          self.positionDropdown();
	        }
	        self.trigger('item_add', hashed, item);
	        if (!self.isPending) {
	          self.updateOriginalInput({
	            silent: silent
	          });
	        }
	      }
	      if (!self.isPending || !wasFull && self.isFull()) {
	        self.inputState();
	        self.refreshState();
	      }
	    });
	  }

	  /**
	   * Removes the selected item matching
	   * the provided value.
	   *
	   */
	  removeItem(item = null, silent) {
	    const self = this;
	    item = self.getItem(item);
	    if (!item) return;
	    var i, idx;
	    const value = item.dataset.value;
	    i = nodeIndex(item);
	    item.remove();
	    if (item.classList.contains('active')) {
	      idx = self.activeItems.indexOf(item);
	      self.activeItems.splice(idx, 1);
	      removeClasses(item, 'active');
	    }
	    self.items.splice(i, 1);
	    self.lastQuery = null;
	    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {
	      self.removeOption(value, silent);
	    }
	    if (i < self.caretPos) {
	      self.setCaret(self.caretPos - 1);
	    }
	    self.updateOriginalInput({
	      silent: silent
	    });
	    self.refreshState();
	    self.positionDropdown();
	    self.trigger('item_remove', value, item);
	  }

	  /**
	   * Invokes the `create` method provided in the
	   * TomSelect options that should provide the data
	   * for the new item, given the user input.
	   *
	   * Once this completes, it will be added
	   * to the item list.
	   *
	   */
	  createItem(input = null, callback = () => {}) {
	    // triggerDropdown parameter @deprecated 2.1.1
	    if (arguments.length === 3) {
	      callback = arguments[2];
	    }
	    if (typeof callback != 'function') {
	      callback = () => {};
	    }
	    var self = this;
	    var caret = self.caretPos;
	    var output;
	    input = input || self.inputValue();
	    if (!self.canCreate(input)) {
	      callback();
	      return false;
	    }
	    self.lock();
	    var created = false;
	    var create = data => {
	      self.unlock();
	      if (!data || typeof data !== 'object') return callback();
	      var value = hash_key(data[self.settings.valueField]);
	      if (typeof value !== 'string') {
	        return callback();
	      }
	      self.setTextboxValue();
	      self.addOption(data, true);
	      self.setCaret(caret);
	      self.addItem(value);
	      callback(data);
	      created = true;
	    };
	    if (typeof self.settings.create === 'function') {
	      output = self.settings.create.call(this, input, create);
	    } else {
	      output = {
	        [self.settings.labelField]: input,
	        [self.settings.valueField]: input
	      };
	    }
	    if (!created) {
	      create(output);
	    }
	    return true;
	  }

	  /**
	   * Re-renders the selected item lists.
	   */
	  refreshItems() {
	    var self = this;
	    self.lastQuery = null;
	    if (self.isSetup) {
	      self.addItems(self.items);
	    }
	    self.updateOriginalInput();
	    self.refreshState();
	  }

	  /**
	   * Updates all state-dependent attributes
	   * and CSS classes.
	   */
	  refreshState() {
	    const self = this;
	    self.refreshValidityState();
	    const isFull = self.isFull();
	    const isLocked = self.isLocked;
	    self.wrapper.classList.toggle('rtl', self.rtl);
	    const wrap_classList = self.wrapper.classList;
	    wrap_classList.toggle('focus', self.isFocused);
	    wrap_classList.toggle('disabled', self.isDisabled);
	    wrap_classList.toggle('readonly', self.isReadOnly);
	    wrap_classList.toggle('required', self.isRequired);
	    wrap_classList.toggle('invalid', !self.isValid);
	    wrap_classList.toggle('locked', isLocked);
	    wrap_classList.toggle('full', isFull);
	    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);
	    wrap_classList.toggle('dropdown-active', self.isOpen);
	    wrap_classList.toggle('has-options', isEmptyObject(self.options));
	    wrap_classList.toggle('has-items', self.items.length > 0);
	  }

	  /**
	   * Update the `required` attribute of both input and control input.
	   *
	   * The `required` property needs to be activated on the control input
	   * for the error to be displayed at the right place. `required` also
	   * needs to be temporarily deactivated on the input since the input is
	   * hidden and can't show errors.
	   */
	  refreshValidityState() {
	    var self = this;
	    if (!self.input.validity) {
	      return;
	    }
	    self.isValid = self.input.validity.valid;
	    self.isInvalid = !self.isValid;
	  }

	  /**
	   * Determines whether or not more items can be added
	   * to the control without exceeding the user-defined maximum.
	   *
	   * @returns {boolean}
	   */
	  isFull() {
	    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;
	  }

	  /**
	   * Refreshes the original <select> or <input>
	   * element to reflect the current state.
	   *
	   */
	  updateOriginalInput(opts = {}) {
	    const self = this;
	    var option, label;
	    const empty_option = self.input.querySelector('option[value=""]');
	    if (self.is_select_tag) {
	      const selected = [];
	      const has_selected = self.input.querySelectorAll('option:checked').length;
	      function AddSelected(option_el, value, label) {
	        if (!option_el) {
	          option_el = getDom('<option value="' + escape_html(value) + '">' + escape_html(label) + '</option>');
	        }

	        // don't move empty option from top of list
	        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293
	        if (option_el != empty_option) {
	          self.input.append(option_el);
	        }
	        selected.push(option_el);

	        // marking empty option as selected can break validation
	        // fixes https://github.com/orchidjs/tom-select/issues/303
	        if (option_el != empty_option || has_selected > 0) {
	          option_el.selected = true;
	        }
	        return option_el;
	      }

	      // unselect all selected options
	      self.input.querySelectorAll('option:checked').forEach(option_el => {
	        option_el.selected = false;
	      });

	      // nothing selected?
	      if (self.items.length == 0 && self.settings.mode == 'single') {
	        AddSelected(empty_option, "", "");

	        // order selected <option> tags for values in self.items
	      } else {
	        self.items.forEach(value => {
	          option = self.options[value];
	          label = option[self.settings.labelField] || '';
	          if (selected.includes(option.$option)) {
	            const reuse_opt = self.input.querySelector(`option[value="${addSlashes(value)}"]:not(:checked)`);
	            AddSelected(reuse_opt, value, label);
	          } else {
	            option.$option = AddSelected(option.$option, value, label);
	          }
	        });
	      }
	    } else {
	      self.input.value = self.getValue();
	    }
	    if (self.isSetup) {
	      if (!opts.silent) {
	        self.trigger('change', self.getValue());
	      }
	    }
	  }

	  /**
	   * Shows the autocomplete dropdown containing
	   * the available options.
	   */
	  open() {
	    var self = this;
	    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;
	    self.isOpen = true;
	    setAttr(self.focus_node, {
	      'aria-expanded': 'true'
	    });
	    self.refreshState();
	    applyCSS(self.dropdown, {
	      visibility: 'hidden',
	      display: 'block'
	    });
	    self.positionDropdown();
	    applyCSS(self.dropdown, {
	      visibility: 'visible',
	      display: 'block'
	    });
	    self.focus();
	    self.trigger('dropdown_open', self.dropdown);
	  }

	  /**
	   * Closes the autocomplete dropdown menu.
	   */
	  close(setTextboxValue = true) {
	    var self = this;
	    var trigger = self.isOpen;
	    if (setTextboxValue) {
	      // before blur() to prevent form onchange event
	      self.setTextboxValue();
	      if (self.settings.mode === 'single' && self.items.length) {
	        self.inputState();
	      }
	    }
	    self.isOpen = false;
	    setAttr(self.focus_node, {
	      'aria-expanded': 'false'
	    });
	    applyCSS(self.dropdown, {
	      display: 'none'
	    });
	    if (self.settings.hideSelected) {
	      self.clearActiveOption();
	    }
	    self.refreshState();
	    if (trigger) self.trigger('dropdown_close', self.dropdown);
	  }

	  /**
	   * Calculates and applies the appropriate
	   * position of the dropdown if dropdownParent = 'body'.
	   * Otherwise, position is determined by css
	   */
	  positionDropdown() {
	    if (this.settings.dropdownParent !== 'body') {
	      return;
	    }
	    var context = this.control;
	    var rect = context.getBoundingClientRect();
	    var top = context.offsetHeight + rect.top + window.scrollY;
	    var left = rect.left + window.scrollX;
	    applyCSS(this.dropdown, {
	      width: rect.width + 'px',
	      top: top + 'px',
	      left: left + 'px'
	    });
	  }

	  /**
	   * Resets / clears all selected items
	   * from the control.
	   *
	   */
	  clear(silent) {
	    var self = this;
	    if (!self.items.length) return;
	    var items = self.controlChildren();
	    iterate$1(items, item => {
	      self.removeItem(item, true);
	    });
	    self.inputState();
	    if (!silent) self.updateOriginalInput();
	    self.trigger('clear');
	  }

	  /**
	   * A helper method for inserting an element
	   * at the current caret position.
	   *
	   */
	  insertAtCaret(el) {
	    const self = this;
	    const caret = self.caretPos;
	    const target = self.control;
	    target.insertBefore(el, target.children[caret] || null);
	    self.setCaret(caret + 1);
	  }

	  /**
	   * Removes the current selected item(s).
	   *
	   */
	  deleteSelection(e) {
	    var direction, selection, caret, tail;
	    var self = this;
	    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;
	    selection = getSelection(self.control_input);

	    // determine items that will be removed
	    const rm_items = [];
	    if (self.activeItems.length) {
	      tail = getTail(self.activeItems, direction);
	      caret = nodeIndex(tail);
	      if (direction > 0) {
	        caret++;
	      }
	      iterate$1(self.activeItems, item => rm_items.push(item));
	    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {
	      const items = self.controlChildren();
	      let rm_item;
	      if (direction < 0 && selection.start === 0 && selection.length === 0) {
	        rm_item = items[self.caretPos - 1];
	      } else if (direction > 0 && selection.start === self.inputValue().length) {
	        rm_item = items[self.caretPos];
	      }
	      if (rm_item !== undefined) {
	        rm_items.push(rm_item);
	      }
	    }
	    if (!self.shouldDelete(rm_items, e)) {
	      return false;
	    }
	    preventDefault(e, true);

	    // perform removal
	    if (typeof caret !== 'undefined') {
	      self.setCaret(caret);
	    }
	    while (rm_items.length) {
	      self.removeItem(rm_items.pop());
	    }
	    self.inputState();
	    self.positionDropdown();
	    self.refreshOptions(false);
	    return true;
	  }

	  /**
	   * Return true if the items should be deleted
	   */
	  shouldDelete(items, evt) {
	    const values = items.map(item => item.dataset.value);

	    // allow the callback to abort
	    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {
	      return false;
	    }
	    return true;
	  }

	  /**
	   * Selects the previous / next item (depending on the `direction` argument).
	   *
	   * > 0 - right
	   * < 0 - left
	   *
	   */
	  advanceSelection(direction, e) {
	    var last_active,
	      adjacent,
	      self = this;
	    if (self.rtl) direction *= -1;
	    if (self.inputValue().length) return;

	    // add or remove to active items
	    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {
	      last_active = self.getLastActive(direction);
	      if (last_active) {
	        if (!last_active.classList.contains('active')) {
	          adjacent = last_active;
	        } else {
	          adjacent = self.getAdjacent(last_active, direction, 'item');
	        }

	        // if no active item, get items adjacent to the control input
	      } else if (direction > 0) {
	        adjacent = self.control_input.nextElementSibling;
	      } else {
	        adjacent = self.control_input.previousElementSibling;
	      }
	      if (adjacent) {
	        if (adjacent.classList.contains('active')) {
	          self.removeActiveItem(last_active);
	        }
	        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active
	      }

	      // move caret to the left or right
	    } else {
	      self.moveCaret(direction);
	    }
	  }
	  moveCaret(direction) {}

	  /**
	   * Get the last active item
	   *
	   */
	  getLastActive(direction) {
	    let last_active = this.control.querySelector('.last-active');
	    if (last_active) {
	      return last_active;
	    }
	    var result = this.control.querySelectorAll('.active');
	    if (result) {
	      return getTail(result, direction);
	    }
	  }

	  /**
	   * Moves the caret to the specified index.
	   *
	   * The input must be moved by leaving it in place and moving the
	   * siblings, due to the fact that focus cannot be restored once lost
	   * on mobile webkit devices
	   *
	   */
	  setCaret(new_pos) {
	    this.caretPos = this.items.length;
	  }

	  /**
	   * Return list of item dom elements
	   *
	   */
	  controlChildren() {
	    return Array.from(this.control.querySelectorAll('[data-ts-item]'));
	  }

	  /**
	   * Disables user input on the control. Used while
	   * items are being asynchronously created.
	   */
	  lock() {
	    this.setLocked(true);
	  }

	  /**
	   * Re-enables user input on the control.
	   */
	  unlock() {
	    this.setLocked(false);
	  }

	  /**
	   * Disable or enable user input on the control
	   */
	  setLocked(lock = this.isReadOnly || this.isDisabled) {
	    this.isLocked = lock;
	    this.refreshState();
	  }

	  /**
	   * Disables user input on the control completely.
	   * While disabled, it cannot receive focus.
	   */
	  disable() {
	    this.setDisabled(true);
	    this.close();
	  }

	  /**
	   * Enables the control so that it can respond
	   * to focus and user input.
	   */
	  enable() {
	    this.setDisabled(false);
	  }
	  setDisabled(disabled) {
	    this.focus_node.tabIndex = disabled ? -1 : this.tabIndex;
	    this.isDisabled = disabled;
	    this.input.disabled = disabled;
	    this.control_input.disabled = disabled;
	    this.setLocked();
	  }
	  setReadOnly(isReadOnly) {
	    this.isReadOnly = isReadOnly;
	    this.input.readOnly = isReadOnly;
	    this.control_input.readOnly = isReadOnly;
	    this.setLocked();
	  }

	  /**
	   * Completely destroys the control and
	   * unbinds all event listeners so that it can
	   * be garbage collected.
	   */
	  destroy() {
	    var self = this;
	    var revertSettings = self.revertSettings;
	    self.trigger('destroy');
	    self.off();
	    self.wrapper.remove();
	    self.dropdown.remove();
	    self.input.innerHTML = revertSettings.innerHTML;
	    self.input.tabIndex = revertSettings.tabIndex;
	    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');
	    self._destroy();
	    delete self.input.tomselect;
	  }

	  /**
	   * A helper method for rendering "item" and
	   * "option" templates, given the data.
	   *
	   */
	  render(templateName, data) {
	    var id, html;
	    const self = this;
	    if (typeof this.settings.render[templateName] !== 'function') {
	      return null;
	    }

	    // render markup
	    html = self.settings.render[templateName].call(this, data, escape_html);
	    if (!html) {
	      return null;
	    }
	    html = getDom(html);

	    // add mandatory attributes
	    if (templateName === 'option' || templateName === 'option_create') {
	      if (data[self.settings.disabledField]) {
	        setAttr(html, {
	          'aria-disabled': 'true'
	        });
	      } else {
	        setAttr(html, {
	          'data-selectable': ''
	        });
	      }
	    } else if (templateName === 'optgroup') {
	      id = data.group[self.settings.optgroupValueField];
	      setAttr(html, {
	        'data-group': id
	      });
	      if (data.group[self.settings.disabledField]) {
	        setAttr(html, {
	          'data-disabled': ''
	        });
	      }
	    }
	    if (templateName === 'option' || templateName === 'item') {
	      const value = get_hash(data[self.settings.valueField]);
	      setAttr(html, {
	        'data-value': value
	      });

	      // make sure we have some classes if a template is overwritten
	      if (templateName === 'item') {
	        addClasses(html, self.settings.itemClass);
	        setAttr(html, {
	          'data-ts-item': ''
	        });
	      } else {
	        addClasses(html, self.settings.optionClass);
	        setAttr(html, {
	          role: 'option',
	          id: data.$id
	        });

	        // update cache
	        data.$div = html;
	        self.options[value] = data;
	      }
	    }
	    return html;
	  }

	  /**
	   * Type guarded rendering
	   *
	   */
	  _render(templateName, data) {
	    const html = this.render(templateName, data);
	    if (html == null) {
	      throw 'HTMLElement expected';
	    }
	    return html;
	  }

	  /**
	   * Clears the render cache for a template. If
	   * no template is given, clears all render
	   * caches.
	   *
	   */
	  clearCache() {
	    iterate$1(this.options, option => {
	      if (option.$div) {
	        option.$div.remove();
	        delete option.$div;
	      }
	    });
	  }

	  /**
	   * Removes a value from item and option caches
	   *
	   */
	  uncacheValue(value) {
	    const option_el = this.getOption(value);
	    if (option_el) option_el.remove();
	  }

	  /**
	   * Determines whether or not to display the
	   * create item prompt, given a user input.
	   *
	   */
	  canCreate(input) {
	    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);
	  }

	  /**
	   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method
	   *
	   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){
	   *
	   * });
	   */
	  hook(when, method, new_fn) {
	    var self = this;
	    var orig_method = self[method];
	    self[method] = function () {
	      var result, result_new;
	      if (when === 'after') {
	        result = orig_method.apply(self, arguments);
	      }
	      result_new = new_fn.apply(self, arguments);
	      if (when === 'instead') {
	        return result_new;
	      }
	      if (when === 'before') {
	        result = orig_method.apply(self, arguments);
	      }
	      return result;
	    };
	  }
	}

	/**
	 * Plugin: "change_listener" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function change_listener () {
	  addEvent(this.input, 'change', () => {
	    this.sync();
	  });
	}

	/**
	 * Plugin: "checkbox_options" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function checkbox_options (userOptions) {
	  var self = this;
	  var orig_onOptionSelect = self.onOptionSelect;
	  self.settings.hideSelected = false;
	  const cbOptions = Object.assign({
	    // so that the user may add different ones as well
	    className: "tomselect-checkbox",
	    // the following default to the historic plugin's values
	    checkedClassNames: undefined,
	    uncheckedClassNames: undefined
	  }, userOptions);
	  var UpdateChecked = function UpdateChecked(checkbox, toCheck) {
	    if (toCheck) {
	      checkbox.checked = true;
	      if (cbOptions.uncheckedClassNames) {
	        checkbox.classList.remove(...cbOptions.uncheckedClassNames);
	      }
	      if (cbOptions.checkedClassNames) {
	        checkbox.classList.add(...cbOptions.checkedClassNames);
	      }
	    } else {
	      checkbox.checked = false;
	      if (cbOptions.checkedClassNames) {
	        checkbox.classList.remove(...cbOptions.checkedClassNames);
	      }
	      if (cbOptions.uncheckedClassNames) {
	        checkbox.classList.add(...cbOptions.uncheckedClassNames);
	      }
	    }
	  };

	  // update the checkbox for an option
	  var UpdateCheckbox = function UpdateCheckbox(option) {
	    setTimeout(() => {
	      var checkbox = option.querySelector('input.' + cbOptions.className);
	      if (checkbox instanceof HTMLInputElement) {
	        UpdateChecked(checkbox, option.classList.contains('selected'));
	      }
	    }, 1);
	  };

	  // add checkbox to option template
	  self.hook('after', 'setupTemplates', () => {
	    var orig_render_option = self.settings.render.option;
	    self.settings.render.option = (data, escape_html) => {
	      var rendered = getDom(orig_render_option.call(self, data, escape_html));
	      var checkbox = document.createElement('input');
	      if (cbOptions.className) {
	        checkbox.classList.add(cbOptions.className);
	      }
	      checkbox.addEventListener('click', function (evt) {
	        preventDefault(evt);
	      });
	      checkbox.type = 'checkbox';
	      const hashed = hash_key(data[self.settings.valueField]);
	      UpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1));
	      rendered.prepend(checkbox);
	      return rendered;
	    };
	  });

	  // uncheck when item removed
	  self.on('item_remove', value => {
	    var option = self.getOption(value);
	    if (option) {
	      // if dropdown hasn't been opened yet, the option won't exist
	      option.classList.remove('selected'); // selected class won't be removed yet
	      UpdateCheckbox(option);
	    }
	  });

	  // check when item added
	  self.on('item_add', value => {
	    var option = self.getOption(value);
	    if (option) {
	      // if dropdown hasn't been opened yet, the option won't exist
	      UpdateCheckbox(option);
	    }
	  });

	  // remove items when selected option is clicked
	  self.hook('instead', 'onOptionSelect', (evt, option) => {
	    if (option.classList.contains('selected')) {
	      option.classList.remove('selected');
	      self.removeItem(option.dataset.value);
	      self.refreshOptions();
	      preventDefault(evt, true);
	      return;
	    }
	    orig_onOptionSelect.call(self, evt, option);
	    UpdateCheckbox(option);
	  });
	}

	/**
	 * Plugin: "dropdown_header" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function clear_button (userOptions) {
	  const self = this;
	  const options = Object.assign({
	    className: 'clear-button',
	    title: 'Clear All',
	    html: data => {
	      return `<div class="${data.className}" title="${data.title}">&#10799;</div>`;
	    }
	  }, userOptions);
	  self.on('initialize', () => {
	    var button = getDom(options.html(options));
	    button.addEventListener('click', evt => {
	      if (self.isLocked) return;
	      self.clear();
	      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {
	        self.addItem('');
	      }
	      evt.preventDefault();
	      evt.stopPropagation();
	    });
	    self.control.appendChild(button);
	  });
	}

	/**
	 * Plugin: "drag_drop" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	const insertAfter = (referenceNode, newNode) => {
	  var _referenceNode$parent;
	  (_referenceNode$parent = referenceNode.parentNode) == null || _referenceNode$parent.insertBefore(newNode, referenceNode.nextSibling);
	};
	const insertBefore = (referenceNode, newNode) => {
	  var _referenceNode$parent2;
	  (_referenceNode$parent2 = referenceNode.parentNode) == null || _referenceNode$parent2.insertBefore(newNode, referenceNode);
	};
	const isBefore = (referenceNode, newNode) => {
	  do {
	    var _newNode;
	    newNode = (_newNode = newNode) == null ? void 0 : _newNode.previousElementSibling;
	    if (referenceNode == newNode) {
	      return true;
	    }
	  } while (newNode && newNode.previousElementSibling);
	  return false;
	};
	function drag_drop () {
	  var self = this;
	  if (self.settings.mode !== 'multi') return;
	  var orig_lock = self.lock;
	  var orig_unlock = self.unlock;
	  let sortable = true;
	  let drag_item;

	  /**
	   * Add draggable attribute to item
	   */
	  self.hook('after', 'setupTemplates', () => {
	    var orig_render_item = self.settings.render.item;
	    self.settings.render.item = (data, escape) => {
	      const item = getDom(orig_render_item.call(self, data, escape));
	      setAttr(item, {
	        'draggable': 'true'
	      });

	      // prevent doc_mousedown (see tom-select.ts)
	      const mousedown = evt => {
	        if (!sortable) preventDefault(evt);
	        evt.stopPropagation();
	      };
	      const dragStart = evt => {
	        drag_item = item;
	        setTimeout(() => {
	          item.classList.add('ts-dragging');
	        }, 0);
	      };
	      const dragOver = evt => {
	        evt.preventDefault();
	        item.classList.add('ts-drag-over');
	        moveitem(item, drag_item);
	      };
	      const dragLeave = () => {
	        item.classList.remove('ts-drag-over');
	      };
	      const moveitem = (targetitem, dragitem) => {
	        if (dragitem === undefined) return;
	        if (isBefore(dragitem, item)) {
	          insertAfter(targetitem, dragitem);
	        } else {
	          insertBefore(targetitem, dragitem);
	        }
	      };
	      const dragend = () => {
	        var _drag_item;
	        document.querySelectorAll('.ts-drag-over').forEach(el => el.classList.remove('ts-drag-over'));
	        (_drag_item = drag_item) == null || _drag_item.classList.remove('ts-dragging');
	        drag_item = undefined;
	        var values = [];
	        self.control.querySelectorAll(`[data-value]`).forEach(el => {
	          if (el.dataset.value) {
	            let value = el.dataset.value;
	            if (value) {
	              values.push(value);
	            }
	          }
	        });
	        self.setValue(values);
	      };
	      addEvent(item, 'mousedown', mousedown);
	      addEvent(item, 'dragstart', dragStart);
	      addEvent(item, 'dragenter', dragOver);
	      addEvent(item, 'dragover', dragOver);
	      addEvent(item, 'dragleave', dragLeave);
	      addEvent(item, 'dragend', dragend);
	      return item;
	    };
	  });
	  self.hook('instead', 'lock', () => {
	    sortable = false;
	    return orig_lock.call(self);
	  });
	  self.hook('instead', 'unlock', () => {
	    sortable = true;
	    return orig_unlock.call(self);
	  });
	}

	/**
	 * Plugin: "dropdown_header" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function dropdown_header (userOptions) {
	  const self = this;
	  const options = Object.assign({
	    title: 'Untitled',
	    headerClass: 'dropdown-header',
	    titleRowClass: 'dropdown-header-title',
	    labelClass: 'dropdown-header-label',
	    closeClass: 'dropdown-header-close',
	    html: data => {
	      return '<div class="' + data.headerClass + '">' + '<div class="' + data.titleRowClass + '">' + '<span class="' + data.labelClass + '">' + data.title + '</span>' + '<a class="' + data.closeClass + '">&times;</a>' + '</div>' + '</div>';
	    }
	  }, userOptions);
	  self.on('initialize', () => {
	    var header = getDom(options.html(options));
	    var close_link = header.querySelector('.' + options.closeClass);
	    if (close_link) {
	      close_link.addEventListener('click', evt => {
	        preventDefault(evt, true);
	        self.close();
	      });
	    }
	    self.dropdown.insertBefore(header, self.dropdown.firstChild);
	  });
	}

	/**
	 * Plugin: "dropdown_input" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function caret_position () {
	  var self = this;

	  /**
	   * Moves the caret to the specified index.
	   *
	   * The input must be moved by leaving it in place and moving the
	   * siblings, due to the fact that focus cannot be restored once lost
	   * on mobile webkit devices
	   *
	   */
	  self.hook('instead', 'setCaret', new_pos => {
	    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {
	      new_pos = self.items.length;
	    } else {
	      new_pos = Math.max(0, Math.min(self.items.length, new_pos));
	      if (new_pos != self.caretPos && !self.isPending) {
	        self.controlChildren().forEach((child, j) => {
	          if (j < new_pos) {
	            self.control_input.insertAdjacentElement('beforebegin', child);
	          } else {
	            self.control.appendChild(child);
	          }
	        });
	      }
	    }
	    self.caretPos = new_pos;
	  });
	  self.hook('instead', 'moveCaret', direction => {
	    if (!self.isFocused) return;

	    // move caret before or after selected items
	    const last_active = self.getLastActive(direction);
	    if (last_active) {
	      const idx = nodeIndex(last_active);
	      self.setCaret(direction > 0 ? idx + 1 : idx);
	      self.setActiveItem();
	      removeClasses(last_active, 'last-active');

	      // move caret left or right of current position
	    } else {
	      self.setCaret(self.caretPos + direction);
	    }
	  });
	}

	/**
	 * Plugin: "dropdown_input" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function dropdown_input () {
	  const self = this;
	  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown

	  self.hook('before', 'setup', () => {
	    self.focus_node = self.control;
	    addClasses(self.control_input, 'dropdown-input');
	    const div = getDom('<div class="dropdown-input-wrap">');
	    div.append(self.control_input);
	    self.dropdown.insertBefore(div, self.dropdown.firstChild);

	    // set a placeholder in the select control
	    const placeholder = getDom('<input class="items-placeholder" tabindex="-1" />');
	    placeholder.placeholder = self.settings.placeholder || '';
	    self.control.append(placeholder);
	  });
	  self.on('initialize', () => {
	    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input
	    self.control_input.addEventListener('keydown', evt => {
	      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{
	      switch (evt.keyCode) {
	        case KEY_ESC:
	          if (self.isOpen) {
	            preventDefault(evt, true);
	            self.close();
	          }
	          self.clearActiveItems();
	          return;
	        case KEY_TAB:
	          self.focus_node.tabIndex = -1;
	          break;
	      }
	      return self.onKeyDown.call(self, evt);
	    });
	    self.on('blur', () => {
	      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;
	    });

	    // give the control_input focus when the dropdown is open
	    self.on('dropdown_open', () => {
	      self.control_input.focus();
	    });

	    // prevent onBlur from closing when focus is on the control_input
	    const orig_onBlur = self.onBlur;
	    self.hook('instead', 'onBlur', evt => {
	      if (evt && evt.relatedTarget == self.control_input) return;
	      return orig_onBlur.call(self);
	    });
	    addEvent(self.control_input, 'blur', () => self.onBlur());

	    // return focus to control to allow further keyboard input
	    self.hook('before', 'close', () => {
	      if (!self.isOpen) return;
	      self.focus_node.focus({
	        preventScroll: true
	      });
	    });
	  });
	}

	/**
	 * Plugin: "input_autogrow" (Tom Select)
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function input_autogrow () {
	  var self = this;
	  self.on('initialize', () => {
	    var test_input = document.createElement('span');
	    var control = self.control_input;
	    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';
	    self.wrapper.appendChild(test_input);
	    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];
	    for (const style_name of transfer_styles) {
	      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576
	      test_input.style[style_name] = control.style[style_name];
	    }

	    /**
	     * Set the control width
	     *
	     */
	    var resize = () => {
	      test_input.textContent = control.value;
	      control.style.width = test_input.clientWidth + 'px';
	    };
	    resize();
	    self.on('update item_add item_remove', resize);
	    addEvent(control, 'input', resize);
	    addEvent(control, 'keyup', resize);
	    addEvent(control, 'blur', resize);
	    addEvent(control, 'update', resize);
	  });
	}

	/**
	 * Plugin: "input_autogrow" (Tom Select)
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function no_backspace_delete () {
	  var self = this;
	  var orig_deleteSelection = self.deleteSelection;
	  this.hook('instead', 'deleteSelection', evt => {
	    if (self.activeItems.length) {
	      return orig_deleteSelection.call(self, evt);
	    }
	    return false;
	  });
	}

	/**
	 * Plugin: "no_active_items" (Tom Select)
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function no_active_items () {
	  this.hook('instead', 'setActiveItem', () => {});
	  this.hook('instead', 'selectAll', () => {});
	}

	/**
	 * Plugin: "optgroup_columns" (Tom Select.js)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function optgroup_columns () {
	  var self = this;
	  var orig_keydown = self.onKeyDown;
	  self.hook('instead', 'onKeyDown', evt => {
	    var index, option, options, optgroup;
	    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {
	      return orig_keydown.call(self, evt);
	    }
	    self.ignoreHover = true;
	    optgroup = parentMatch(self.activeOption, '[data-group]');
	    index = nodeIndex(self.activeOption, '[data-selectable]');
	    if (!optgroup) {
	      return;
	    }
	    if (evt.keyCode === KEY_LEFT) {
	      optgroup = optgroup.previousSibling;
	    } else {
	      optgroup = optgroup.nextSibling;
	    }
	    if (!optgroup) {
	      return;
	    }
	    options = optgroup.querySelectorAll('[data-selectable]');
	    option = options[Math.min(options.length - 1, index)];
	    if (option) {
	      self.setActiveOption(option);
	    }
	  });
	}

	/**
	 * Plugin: "remove_button" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function remove_button (userOptions) {
	  const options = Object.assign({
	    label: '&times;',
	    title: 'Remove',
	    className: 'remove',
	    append: true
	  }, userOptions);

	  //options.className = 'remove-single';
	  var self = this;

	  // override the render method to add remove button to each item
	  if (!options.append) {
	    return;
	  }
	  var html = '<a href="javascript:void(0)" class="' + options.className + '" tabindex="-1" title="' + escape_html(options.title) + '">' + options.label + '</a>';
	  self.hook('after', 'setupTemplates', () => {
	    var orig_render_item = self.settings.render.item;
	    self.settings.render.item = (data, escape) => {
	      var item = getDom(orig_render_item.call(self, data, escape));
	      var close_button = getDom(html);
	      item.appendChild(close_button);
	      addEvent(close_button, 'mousedown', evt => {
	        preventDefault(evt, true);
	      });
	      addEvent(close_button, 'click', evt => {
	        if (self.isLocked) return;

	        // propagating will trigger the dropdown to show for single mode
	        preventDefault(evt, true);
	        if (self.isLocked) return;
	        if (!self.shouldDelete([item], evt)) return;
	        self.removeItem(item);
	        self.refreshOptions(false);
	        self.inputState();
	      });
	      return item;
	    };
	  });
	}

	/**
	 * Plugin: "restore_on_backspace" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function restore_on_backspace (userOptions) {
	  const self = this;
	  const options = Object.assign({
	    text: option => {
	      return option[self.settings.labelField];
	    }
	  }, userOptions);
	  self.on('item_remove', function (value) {
	    if (!self.isFocused) {
	      return;
	    }
	    if (self.control_input.value.trim() === '') {
	      var option = self.options[value];
	      if (option) {
	        self.setTextboxValue(options.text.call(self, option));
	      }
	    }
	  });
	}

	/**
	 * Plugin: "restore_on_backspace" (Tom Select)
	 * Copyright (c) contributors
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
	 * file except in compliance with the License. You may obtain a copy of the License at:
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software distributed under
	 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
	 * ANY KIND, either express or implied. See the License for the specific language
	 * governing permissions and limitations under the License.
	 *
	 */

	function virtual_scroll () {
	  const self = this;
	  const orig_canLoad = self.canLoad;
	  const orig_clearActiveOption = self.clearActiveOption;
	  const orig_loadCallback = self.loadCallback;
	  var pagination = {};
	  var dropdown_content;
	  var loading_more = false;
	  var load_more_opt;
	  var default_values = [];
	  if (!self.settings.shouldLoadMore) {
	    // return true if additional results should be loaded
	    self.settings.shouldLoadMore = () => {
	      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);
	      if (scroll_percent > 0.9) {
	        return true;
	      }
	      if (self.activeOption) {
	        var selectable = self.selectable();
	        var index = Array.from(selectable).indexOf(self.activeOption);
	        if (index >= selectable.length - 2) {
	          return true;
	        }
	      }
	      return false;
	    };
	  }
	  if (!self.settings.firstUrl) {
	    throw 'virtual_scroll plugin requires a firstUrl() method';
	  }

	  // in order for virtual scrolling to work,
	  // options need to be ordered the same way they're returned from the remote data source
	  self.settings.sortField = [{
	    field: '$order'
	  }, {
	    field: '$score'
	  }];

	  // can we load more results for given query?
	  const canLoadMore = query => {
	    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {
	      return false;
	    }
	    if (query in pagination && pagination[query]) {
	      return true;
	    }
	    return false;
	  };
	  const clearFilter = (option, value) => {
	    if (self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0) {
	      return true;
	    }
	    return false;
	  };

	  // set the next url that will be
	  self.setNextUrl = (value, next_url) => {
	    pagination[value] = next_url;
	  };

	  // getUrl() to be used in settings.load()
	  self.getUrl = query => {
	    if (query in pagination) {
	      const next_url = pagination[query];
	      pagination[query] = false;
	      return next_url;
	    }

	    // if the user goes back to a previous query
	    // we need to load the first page again
	    self.clearPagination();
	    return self.settings.firstUrl.call(self, query);
	  };

	  // clear pagination
	  self.clearPagination = () => {
	    pagination = {};
	  };

	  // don't clear the active option (and cause unwanted dropdown scroll)
	  // while loading more results
	  self.hook('instead', 'clearActiveOption', () => {
	    if (loading_more) {
	      return;
	    }
	    return orig_clearActiveOption.call(self);
	  });

	  // override the canLoad method
	  self.hook('instead', 'canLoad', query => {
	    // first time the query has been seen
	    if (!(query in pagination)) {
	      return orig_canLoad.call(self, query);
	    }
	    return canLoadMore(query);
	  });

	  // wrap the load
	  self.hook('instead', 'loadCallback', (options, optgroups) => {
	    if (!loading_more) {
	      self.clearOptions(clearFilter);
	    } else if (load_more_opt) {
	      const first_option = options[0];
	      if (first_option !== undefined) {
	        load_more_opt.dataset.value = first_option[self.settings.valueField];
	      }
	    }
	    orig_loadCallback.call(self, options, optgroups);
	    loading_more = false;
	  });

	  // add templates to dropdown
	  //	loading_more if we have another url in the queue
	  //	no_more_results if we don't have another url in the queue
	  self.hook('after', 'refreshOptions', () => {
	    const query = self.lastValue;
	    var option;
	    if (canLoadMore(query)) {
	      option = self.render('loading_more', {
	        query: query
	      });
	      if (option) {
	        option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node
	        load_more_opt = option;
	      }
	    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {
	      option = self.render('no_more_results', {
	        query: query
	      });
	    }
	    if (option) {
	      addClasses(option, self.settings.optionClass);
	      dropdown_content.append(option);
	    }
	  });

	  // add scroll listener and default templates
	  self.on('initialize', () => {
	    default_values = Object.keys(self.options);
	    dropdown_content = self.dropdown_content;

	    // default templates
	    self.settings.render = Object.assign({}, {
	      loading_more: () => {
	        return `<div class="loading-more-results">Loading more results ... </div>`;
	      },
	      no_more_results: () => {
	        return `<div class="no-more-results">No more results</div>`;
	      }
	    }, self.settings.render);

	    // watch dropdown content scroll position
	    dropdown_content.addEventListener('scroll', () => {
	      if (!self.settings.shouldLoadMore.call(self)) {
	        return;
	      }

	      // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true
	      if (!canLoadMore(self.lastValue)) {
	        return;
	      }

	      // don't call load() too much
	      if (loading_more) return;
	      loading_more = true;
	      self.load.call(self, self.lastValue);
	    });
	  });
	}

	TomSelect.define('change_listener', change_listener);
	TomSelect.define('checkbox_options', checkbox_options);
	TomSelect.define('clear_button', clear_button);
	TomSelect.define('drag_drop', drag_drop);
	TomSelect.define('dropdown_header', dropdown_header);
	TomSelect.define('caret_position', caret_position);
	TomSelect.define('dropdown_input', dropdown_input);
	TomSelect.define('input_autogrow', input_autogrow);
	TomSelect.define('no_backspace_delete', no_backspace_delete);
	TomSelect.define('no_active_items', no_active_items);
	TomSelect.define('optgroup_columns', optgroup_columns);
	TomSelect.define('remove_button', remove_button);
	TomSelect.define('restore_on_backspace', restore_on_backspace);
	TomSelect.define('virtual_scroll', virtual_scroll);

	return TomSelect;

}));
var tomSelect=function(el,opts){return new TomSelect(el,opts);} 
//# sourceMappingURL=tom-select.complete.js.map


/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DragEvent: () => (/* binding */ DragEvent),
/* harmony export */   DragMoveEvent: () => (/* binding */ DragMoveEvent),
/* harmony export */   DragOutContainerEvent: () => (/* binding */ DragOutContainerEvent),
/* harmony export */   DragOutEvent: () => (/* binding */ DragOutEvent),
/* harmony export */   DragOverContainerEvent: () => (/* binding */ DragOverContainerEvent),
/* harmony export */   DragOverEvent: () => (/* binding */ DragOverEvent),
/* harmony export */   DragPressureEvent: () => (/* binding */ DragPressureEvent),
/* harmony export */   DragStartEvent: () => (/* binding */ DragStartEvent),
/* harmony export */   DragStopEvent: () => (/* binding */ DragStopEvent),
/* harmony export */   DragStoppedEvent: () => (/* binding */ DragStoppedEvent),
/* harmony export */   isDragOverEvent: () => (/* binding */ isDragOverEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class DragEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get source() {
    return this.data.source;
  }

  get originalSource() {
    return this.data.originalSource;
  }

  get mirror() {
    return this.data.mirror;
  }

  get sourceContainer() {
    return this.data.sourceContainer;
  }

  get sensorEvent() {
    return this.data.sensorEvent;
  }

  get originalEvent() {
    if (this.sensorEvent) {
      return this.sensorEvent.originalEvent;
    }
    return null;
  }
}

DragEvent.type = 'drag';
class DragStartEvent extends DragEvent {}

DragStartEvent.type = 'drag:start';
DragStartEvent.cancelable = true;
class DragMoveEvent extends DragEvent {}

DragMoveEvent.type = 'drag:move';

class DragOverEvent extends DragEvent {

  get overContainer() {
    return this.data.overContainer;
  }

  get over() {
    return this.data.over;
  }
}
DragOverEvent.type = 'drag:over';
DragOverEvent.cancelable = true;
function isDragOverEvent(event) {
  return event.type === DragOverEvent.type;
}

class DragOutEvent extends DragEvent {

  get overContainer() {
    return this.data.overContainer;
  }

  get over() {
    return this.data.over;
  }
}

DragOutEvent.type = 'drag:out';

class DragOverContainerEvent extends DragEvent {

  get overContainer() {
    return this.data.overContainer;
  }
}

DragOverContainerEvent.type = 'drag:over:container';

class DragOutContainerEvent extends DragEvent {

  get overContainer() {
    return this.data.overContainer;
  }
}

DragOutContainerEvent.type = 'drag:out:container';

class DragPressureEvent extends DragEvent {

  get pressure() {
    return this.data.pressure;
  }
}

DragPressureEvent.type = 'drag:pressure';
class DragStopEvent extends DragEvent {}

DragStopEvent.type = 'drag:stop';
DragStopEvent.cancelable = true;
class DragStoppedEvent extends DragEvent {}
DragStoppedEvent.type = 'drag:stopped';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Draggable),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Plugins/Announcement/Announcement.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs");
/* harmony import */ var _Plugins_Focusable_Focusable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Plugins/Focusable/Focusable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Focusable/Focusable.mjs");
/* harmony import */ var _Plugins_Mirror_Mirror_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Plugins/Mirror/Mirror.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/Mirror.mjs");
/* harmony import */ var _Plugins_Scrollable_Scrollable_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Plugins/Scrollable/Scrollable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Scrollable/Scrollable.mjs");
/* harmony import */ var _Emitter_Emitter_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Emitter/Emitter.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Emitter/Emitter.mjs");
/* harmony import */ var _Sensors_MouseSensor_MouseSensor_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Sensors/MouseSensor/MouseSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/MouseSensor/MouseSensor.mjs");
/* harmony import */ var _Sensors_TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Sensors/TouchSensor/TouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs");
/* harmony import */ var _Sensors_SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Sensors/SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");
/* harmony import */ var _DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./DraggableEvent/DraggableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs");
/* harmony import */ var _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");












const onDragStart = Symbol('onDragStart');
const onDragMove = Symbol('onDragMove');
const onDragStop = Symbol('onDragStop');
const onDragPressure = Symbol('onDragPressure');
const dragStop = Symbol('dragStop');

const defaultAnnouncements = {
  'drag:start': event => `Picked up ${event.source.textContent.trim() || event.source.id || 'draggable element'}`,
  'drag:stop': event => `Released ${event.source.textContent.trim() || event.source.id || 'draggable element'}`
};
const defaultClasses = {
  'container:dragging': 'draggable-container--is-dragging',
  'source:dragging': 'draggable-source--is-dragging',
  'source:placed': 'draggable-source--placed',
  'container:placed': 'draggable-container--placed',
  'body:dragging': 'draggable--is-dragging',
  'draggable:over': 'draggable--over',
  'container:over': 'draggable-container--over',
  'source:original': 'draggable--original',
  mirror: 'draggable-mirror'
};
const defaultOptions = {
  draggable: '.draggable-source',
  handle: null,
  delay: {},
  distance: 0,
  placedTimeout: 800,
  plugins: [],
  sensors: [],
  exclude: {
    plugins: [],
    sensors: []
  }
};

class Draggable {

  constructor(containers = [document.body], options = {}) {

    if (containers instanceof NodeList || containers instanceof Array) {
      this.containers = [...containers];
    } else if (containers instanceof HTMLElement) {
      this.containers = [containers];
    } else {
      throw new Error('Draggable containers are expected to be of type `NodeList`, `HTMLElement[]` or `HTMLElement`');
    }
    this.options = {
      ...defaultOptions,
      ...options,
      classes: {
        ...defaultClasses,
        ...(options.classes || {})
      },
      announcements: {
        ...defaultAnnouncements,
        ...(options.announcements || {})
      },
      exclude: {
        plugins: options.exclude && options.exclude.plugins || [],
        sensors: options.exclude && options.exclude.sensors || []
      }
    };

    this.emitter = new _Emitter_Emitter_mjs__WEBPACK_IMPORTED_MODULE_5__["default"]();

    this.dragging = false;

    this.plugins = [];

    this.sensors = [];
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragMove] = this[onDragMove].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this[onDragPressure] = this[onDragPressure].bind(this);
    this[dragStop] = this[dragStop].bind(this);
    document.addEventListener('drag:start', this[onDragStart], true);
    document.addEventListener('drag:move', this[onDragMove], true);
    document.addEventListener('drag:stop', this[onDragStop], true);
    document.addEventListener('drag:pressure', this[onDragPressure], true);
    const defaultPlugins = Object.values(Draggable.Plugins).filter(Plugin => !this.options.exclude.plugins.includes(Plugin));
    const defaultSensors = Object.values(Draggable.Sensors).filter(sensor => !this.options.exclude.sensors.includes(sensor));
    this.addPlugin(...[...defaultPlugins, ...this.options.plugins]);
    this.addSensor(...[...defaultSensors, ...this.options.sensors]);
    const draggableInitializedEvent = new _DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_9__.DraggableInitializedEvent({
      draggable: this
    });
    this.on('mirror:created', ({
      mirror
    }) => this.mirror = mirror);
    this.on('mirror:destroy', () => this.mirror = null);
    this.trigger(draggableInitializedEvent);
  }

  destroy() {
    document.removeEventListener('drag:start', this[onDragStart], true);
    document.removeEventListener('drag:move', this[onDragMove], true);
    document.removeEventListener('drag:stop', this[onDragStop], true);
    document.removeEventListener('drag:pressure', this[onDragPressure], true);
    const draggableDestroyEvent = new _DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_9__.DraggableDestroyEvent({
      draggable: this
    });
    this.trigger(draggableDestroyEvent);
    this.removePlugin(...this.plugins.map(plugin => plugin.constructor));
    this.removeSensor(...this.sensors.map(sensor => sensor.constructor));
  }

  addPlugin(...plugins) {
    const activePlugins = plugins.map(Plugin => new Plugin(this));
    activePlugins.forEach(plugin => plugin.attach());
    this.plugins = [...this.plugins, ...activePlugins];
    return this;
  }

  removePlugin(...plugins) {
    const removedPlugins = this.plugins.filter(plugin => plugins.includes(plugin.constructor));
    removedPlugins.forEach(plugin => plugin.detach());
    this.plugins = this.plugins.filter(plugin => !plugins.includes(plugin.constructor));
    return this;
  }

  addSensor(...sensors) {
    const activeSensors = sensors.map(Sensor => new Sensor(this.containers, this.options));
    activeSensors.forEach(sensor => sensor.attach());
    this.sensors = [...this.sensors, ...activeSensors];
    return this;
  }

  removeSensor(...sensors) {
    const removedSensors = this.sensors.filter(sensor => sensors.includes(sensor.constructor));
    removedSensors.forEach(sensor => sensor.detach());
    this.sensors = this.sensors.filter(sensor => !sensors.includes(sensor.constructor));
    return this;
  }

  addContainer(...containers) {
    this.containers = [...this.containers, ...containers];
    this.sensors.forEach(sensor => sensor.addContainer(...containers));
    return this;
  }

  removeContainer(...containers) {
    this.containers = this.containers.filter(container => !containers.includes(container));
    this.sensors.forEach(sensor => sensor.removeContainer(...containers));
    return this;
  }

  on(type, ...callbacks) {
    this.emitter.on(type, ...callbacks);
    return this;
  }

  off(type, callback) {
    this.emitter.off(type, callback);
    return this;
  }

  trigger(event) {
    this.emitter.trigger(event);
    return this;
  }

  getClassNameFor(name) {
    return this.getClassNamesFor(name)[0];
  }

  getClassNamesFor(name) {
    const classNames = this.options.classes[name];
    if (classNames instanceof Array) {
      return classNames;
    } else if (typeof classNames === 'string' || classNames instanceof String) {
      return [classNames];
    } else {
      return [];
    }
  }

  isDragging() {
    return Boolean(this.dragging);
  }

  getDraggableElements() {
    return this.containers.reduce((current, container) => {
      return [...current, ...this.getDraggableElementsForContainer(container)];
    }, []);
  }

  getDraggableElementsForContainer(container) {
    const allDraggableElements = container.querySelectorAll(this.options.draggable);
    return [...allDraggableElements].filter(childElement => {
      return childElement !== this.originalSource && childElement !== this.mirror;
    });
  }

  cancel() {
    this[dragStop]();
  }

  [onDragStart](event) {
    const sensorEvent = getSensorEvent(event);
    const {
      target,
      container,
      originalSource
    } = sensorEvent;
    if (!this.containers.includes(container)) {
      return;
    }
    if (this.options.handle && target && !(0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.handle)) {
      sensorEvent.cancel();
      return;
    }
    this.originalSource = originalSource;
    this.sourceContainer = container;
    if (this.lastPlacedSource && this.lastPlacedContainer) {
      clearTimeout(this.placedTimeoutID);
      this.lastPlacedSource.classList.remove(...this.getClassNamesFor('source:placed'));
      this.lastPlacedContainer.classList.remove(...this.getClassNamesFor('container:placed'));
    }
    this.source = this.originalSource.cloneNode(true);
    this.originalSource.parentNode.insertBefore(this.source, this.originalSource);
    this.originalSource.style.display = 'none';
    const dragStartEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragStartEvent({
      source: this.source,
      originalSource: this.originalSource,
      sourceContainer: container,
      sensorEvent
    });
    this.trigger(dragStartEvent);
    this.dragging = !dragStartEvent.canceled();
    if (dragStartEvent.canceled()) {
      this.source.remove();
      this.originalSource.style.display = null;
      return;
    }
    this.originalSource.classList.add(...this.getClassNamesFor('source:original'));
    this.source.classList.add(...this.getClassNamesFor('source:dragging'));
    this.sourceContainer.classList.add(...this.getClassNamesFor('container:dragging'));
    document.body.classList.add(...this.getClassNamesFor('body:dragging'));
    applyUserSelect(document.body, 'none');
    requestAnimationFrame(() => {
      const oldSensorEvent = getSensorEvent(event);
      const newSensorEvent = oldSensorEvent.clone({
        target: this.source
      });
      this[onDragMove]({
        ...event,
        detail: newSensorEvent
      });
    });
  }

  [onDragMove](event) {
    if (!this.dragging) {
      return;
    }
    const sensorEvent = getSensorEvent(event);
    const {
      container
    } = sensorEvent;
    let target = sensorEvent.target;
    const dragMoveEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragMoveEvent({
      source: this.source,
      originalSource: this.originalSource,
      sourceContainer: container,
      sensorEvent
    });
    this.trigger(dragMoveEvent);
    if (dragMoveEvent.canceled()) {
      sensorEvent.cancel();
    }
    target = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.draggable);
    const withinCorrectContainer = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(sensorEvent.target, this.containers);
    const overContainer = sensorEvent.overContainer || withinCorrectContainer;
    const isLeavingContainer = this.currentOverContainer && overContainer !== this.currentOverContainer;
    const isLeavingDraggable = this.currentOver && target !== this.currentOver;
    const isOverContainer = overContainer && this.currentOverContainer !== overContainer;
    const isOverDraggable = withinCorrectContainer && target && this.currentOver !== target;
    if (isLeavingDraggable) {
      const dragOutEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragOutEvent({
        source: this.source,
        originalSource: this.originalSource,
        sourceContainer: container,
        sensorEvent,
        over: this.currentOver,
        overContainer: this.currentOverContainer
      });
      this.currentOver.classList.remove(...this.getClassNamesFor('draggable:over'));
      this.currentOver = null;
      this.trigger(dragOutEvent);
    }
    if (isLeavingContainer) {
      const dragOutContainerEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragOutContainerEvent({
        source: this.source,
        originalSource: this.originalSource,
        sourceContainer: container,
        sensorEvent,
        overContainer: this.currentOverContainer
      });
      this.currentOverContainer.classList.remove(...this.getClassNamesFor('container:over'));
      this.currentOverContainer = null;
      this.trigger(dragOutContainerEvent);
    }
    if (isOverContainer) {
      overContainer.classList.add(...this.getClassNamesFor('container:over'));
      const dragOverContainerEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragOverContainerEvent({
        source: this.source,
        originalSource: this.originalSource,
        sourceContainer: container,
        sensorEvent,
        overContainer
      });
      this.currentOverContainer = overContainer;
      this.trigger(dragOverContainerEvent);
    }
    if (isOverDraggable) {
      target.classList.add(...this.getClassNamesFor('draggable:over'));
      const dragOverEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragOverEvent({
        source: this.source,
        originalSource: this.originalSource,
        sourceContainer: container,
        sensorEvent,
        overContainer,
        over: target
      });
      this.currentOver = target;
      this.trigger(dragOverEvent);
    }
  }

  [dragStop](event) {
    if (!this.dragging) {
      return;
    }
    this.dragging = false;
    const dragStopEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragStopEvent({
      source: this.source,
      originalSource: this.originalSource,
      sensorEvent: event ? event.sensorEvent : null,
      sourceContainer: this.sourceContainer
    });
    this.trigger(dragStopEvent);
    if (!dragStopEvent.canceled()) this.source.parentNode.insertBefore(this.originalSource, this.source);
    this.source.remove();
    this.originalSource.style.display = '';
    this.source.classList.remove(...this.getClassNamesFor('source:dragging'));
    this.originalSource.classList.remove(...this.getClassNamesFor('source:original'));
    this.originalSource.classList.add(...this.getClassNamesFor('source:placed'));
    this.sourceContainer.classList.add(...this.getClassNamesFor('container:placed'));
    this.sourceContainer.classList.remove(...this.getClassNamesFor('container:dragging'));
    document.body.classList.remove(...this.getClassNamesFor('body:dragging'));
    applyUserSelect(document.body, '');
    if (this.currentOver) {
      this.currentOver.classList.remove(...this.getClassNamesFor('draggable:over'));
    }
    if (this.currentOverContainer) {
      this.currentOverContainer.classList.remove(...this.getClassNamesFor('container:over'));
    }
    this.lastPlacedSource = this.originalSource;
    this.lastPlacedContainer = this.sourceContainer;
    this.placedTimeoutID = setTimeout(() => {
      if (this.lastPlacedSource) {
        this.lastPlacedSource.classList.remove(...this.getClassNamesFor('source:placed'));
      }
      if (this.lastPlacedContainer) {
        this.lastPlacedContainer.classList.remove(...this.getClassNamesFor('container:placed'));
      }
      this.lastPlacedSource = null;
      this.lastPlacedContainer = null;
    }, this.options.placedTimeout);
    const dragStoppedEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragStoppedEvent({
      source: this.source,
      originalSource: this.originalSource,
      sensorEvent: event ? event.sensorEvent : null,
      sourceContainer: this.sourceContainer
    });
    this.trigger(dragStoppedEvent);
    this.source = null;
    this.originalSource = null;
    this.currentOverContainer = null;
    this.currentOver = null;
    this.sourceContainer = null;
  }

  [onDragStop](event) {
    this[dragStop](event);
  }

  [onDragPressure](event) {
    if (!this.dragging) {
      return;
    }
    const sensorEvent = getSensorEvent(event);
    const source = this.source || (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(sensorEvent.originalEvent.target, this.options.draggable);
    const dragPressureEvent = new _DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_10__.DragPressureEvent({
      sensorEvent,
      source,
      pressure: sensorEvent.pressure
    });
    this.trigger(dragPressureEvent);
  }
}

Draggable.Plugins = {
  Announcement: _Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
  Focusable: _Plugins_Focusable_Focusable_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
  Mirror: _Plugins_Mirror_Mirror_mjs__WEBPACK_IMPORTED_MODULE_3__["default"],
  Scrollable: _Plugins_Scrollable_Scrollable_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]
};

Draggable.Sensors = {
  MouseSensor: _Sensors_MouseSensor_MouseSensor_mjs__WEBPACK_IMPORTED_MODULE_6__["default"],
  TouchSensor: _Sensors_TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_7__["default"]
};
function getSensorEvent(event) {
  return event.detail;
}
function applyUserSelect(element, value) {
  element.style.webkitUserSelect = value;
  element.style.mozUserSelect = value;
  element.style.msUserSelect = value;
  element.style.oUserSelect = value;
  element.style.userSelect = value;
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DraggableDestroyEvent: () => (/* binding */ DraggableDestroyEvent),
/* harmony export */   DraggableEvent: () => (/* binding */ DraggableEvent),
/* harmony export */   DraggableInitializedEvent: () => (/* binding */ DraggableInitializedEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class DraggableEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  get draggable() {
    return this.data.draggable;
  }
}

DraggableEvent.type = 'draggable';
class DraggableInitializedEvent extends DraggableEvent {}

DraggableInitializedEvent.type = 'draggable:initialize';
class DraggableDestroyEvent extends DraggableEvent {}
DraggableDestroyEvent.type = 'draggable:destroy';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Emitter/Emitter.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Emitter/Emitter.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Emitter)
/* harmony export */ });
class Emitter {
  constructor() {
    this.callbacks = {};
  }

  on(type, ...callbacks) {
    if (!this.callbacks[type]) {
      this.callbacks[type] = [];
    }
    this.callbacks[type].push(...callbacks);
    return this;
  }

  off(type, callback) {
    if (!this.callbacks[type]) {
      return null;
    }
    const copy = this.callbacks[type].slice(0);
    for (let i = 0; i < copy.length; i++) {
      if (callback === copy[i]) {
        this.callbacks[type].splice(i, 1);
      }
    }
    return this;
  }

  trigger(event) {
    if (!this.callbacks[event.type]) {
      return null;
    }
    const callbacks = [...this.callbacks[event.type]];
    const caughtErrors = [];
    for (let i = callbacks.length - 1; i >= 0; i--) {
      const callback = callbacks[i];
      try {
        callback(event);
      } catch (error) {
        caughtErrors.push(error);
      }
    }
    if (caughtErrors.length) {

      console.error(`Draggable caught errors while triggering '${event.type}'`, caughtErrors);

    }

    return this;
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Announcement),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");


const onInitialize = Symbol('onInitialize');
const onDestroy = Symbol('onDestroy');
const announceEvent = Symbol('announceEvent');
const announceMessage = Symbol('announceMessage');
const ARIA_RELEVANT = 'aria-relevant';
const ARIA_ATOMIC = 'aria-atomic';
const ARIA_LIVE = 'aria-live';
const ROLE = 'role';

const defaultOptions = {
  expire: 7000
};

class Announcement extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };

    this.originalTriggerMethod = this.draggable.trigger;
    this[onInitialize] = this[onInitialize].bind(this);
    this[onDestroy] = this[onDestroy].bind(this);
  }

  attach() {
    this.draggable.on('draggable:initialize', this[onInitialize]);
  }

  detach() {
    this.draggable.off('draggable:destroy', this[onDestroy]);
  }

  getOptions() {
    return this.draggable.options.announcements || {};
  }

  [announceEvent](event) {
    const message = this.options[event.type];
    if (message && typeof message === 'string') {
      this[announceMessage](message);
    }
    if (message && typeof message === 'function') {
      this[announceMessage](message(event));
    }
  }

  [announceMessage](message) {
    announce(message, {
      expire: this.options.expire
    });
  }

  [onInitialize]() {

    this.draggable.trigger = event => {
      try {
        this[announceEvent](event);
      } finally {

        this.originalTriggerMethod.call(this.draggable, event);
      }
    };
  }

  [onDestroy]() {
    this.draggable.trigger = this.originalTriggerMethod;
  }
}

const liveRegion = createRegion();

function announce(message, {
  expire
}) {
  const element = document.createElement('div');
  element.textContent = message;
  liveRegion.appendChild(element);
  return setTimeout(() => {
    liveRegion.removeChild(element);
  }, expire);
}

function createRegion() {
  const element = document.createElement('div');
  element.setAttribute('id', 'draggable-live-region');
  element.setAttribute(ARIA_RELEVANT, 'additions');
  element.setAttribute(ARIA_ATOMIC, 'true');
  element.setAttribute(ARIA_LIVE, 'assertive');
  element.setAttribute(ROLE, 'log');
  element.style.position = 'fixed';
  element.style.width = '1px';
  element.style.height = '1px';
  element.style.top = '-1px';
  element.style.overflow = 'hidden';
  return element;
}

document.addEventListener('DOMContentLoaded', () => {
  document.body.appendChild(liveRegion);
});




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Focusable/Focusable.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Focusable/Focusable.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Focusable)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");


const onInitialize = Symbol('onInitialize');
const onDestroy = Symbol('onDestroy');

const defaultOptions = {};

class Focusable extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };
    this[onInitialize] = this[onInitialize].bind(this);
    this[onDestroy] = this[onDestroy].bind(this);
  }

  attach() {
    this.draggable.on('draggable:initialize', this[onInitialize]).on('draggable:destroy', this[onDestroy]);
  }

  detach() {
    this.draggable.off('draggable:initialize', this[onInitialize]).off('draggable:destroy', this[onDestroy]);

    this[onDestroy]();
  }

  getOptions() {
    return this.draggable.options.focusable || {};
  }

  getElements() {
    return [...this.draggable.containers, ...this.draggable.getDraggableElements()];
  }

  [onInitialize]() {

    requestAnimationFrame(() => {
      this.getElements().forEach(element => decorateElement(element));
    });
  }

  [onDestroy]() {

    requestAnimationFrame(() => {
      this.getElements().forEach(element => stripElement(element));
    });
  }
}

const elementsWithMissingTabIndex = [];

function decorateElement(element) {
  const hasMissingTabIndex = Boolean(!element.getAttribute('tabindex') && element.tabIndex === -1);
  if (hasMissingTabIndex) {
    elementsWithMissingTabIndex.push(element);
    element.tabIndex = 0;
  }
}

function stripElement(element) {
  const tabIndexElementPosition = elementsWithMissingTabIndex.indexOf(element);
  if (tabIndexElementPosition !== -1) {
    element.tabIndex = -1;
    elementsWithMissingTabIndex.splice(tabIndexElementPosition, 1);
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/Mirror.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/Mirror.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Mirror),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions),
/* harmony export */   getAppendableContainer: () => (/* binding */ getAppendableContainer),
/* harmony export */   onDragMove: () => (/* binding */ onDragMove),
/* harmony export */   onDragStart: () => (/* binding */ onDragStart),
/* harmony export */   onDragStop: () => (/* binding */ onDragStop),
/* harmony export */   onMirrorCreated: () => (/* binding */ onMirrorCreated),
/* harmony export */   onMirrorMove: () => (/* binding */ onMirrorMove),
/* harmony export */   onScroll: () => (/* binding */ onScroll)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MirrorEvent/MirrorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs");



const onDragStart = Symbol('onDragStart');
const onDragMove = Symbol('onDragMove');
const onDragStop = Symbol('onDragStop');
const onMirrorCreated = Symbol('onMirrorCreated');
const onMirrorMove = Symbol('onMirrorMove');
const onScroll = Symbol('onScroll');
const getAppendableContainer = Symbol('getAppendableContainer');

const defaultOptions = {
  constrainDimensions: false,
  xAxis: true,
  yAxis: true,
  cursorOffsetX: null,
  cursorOffsetY: null,
  thresholdX: null,
  thresholdY: null
};

class Mirror extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };

    this.scrollOffset = {
      x: 0,
      y: 0
    };

    this.initialScrollOffset = {
      x: window.scrollX,
      y: window.scrollY
    };
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragMove] = this[onDragMove].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this[onMirrorCreated] = this[onMirrorCreated].bind(this);
    this[onMirrorMove] = this[onMirrorMove].bind(this);
    this[onScroll] = this[onScroll].bind(this);
  }

  attach() {
    this.draggable.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]).on('mirror:created', this[onMirrorCreated]).on('mirror:move', this[onMirrorMove]);
  }

  detach() {
    this.draggable.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]).off('mirror:created', this[onMirrorCreated]).off('mirror:move', this[onMirrorMove]);
  }

  getOptions() {
    return this.draggable.options.mirror || {};
  }
  [onDragStart](dragEvent) {
    if (dragEvent.canceled()) {
      return;
    }
    if ('ontouchstart' in window) {
      document.addEventListener('scroll', this[onScroll], true);
    }
    this.initialScrollOffset = {
      x: window.scrollX,
      y: window.scrollY
    };
    const {
      source,
      originalSource,
      sourceContainer,
      sensorEvent
    } = dragEvent;

    this.lastMirrorMovedClient = {
      x: sensorEvent.clientX,
      y: sensorEvent.clientY
    };
    const mirrorCreateEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorCreateEvent({
      source,
      originalSource,
      sourceContainer,
      sensorEvent,
      dragEvent
    });
    this.draggable.trigger(mirrorCreateEvent);
    if (isNativeDragEvent(sensorEvent) || mirrorCreateEvent.canceled()) {
      return;
    }
    const appendableContainer = this[getAppendableContainer](source) || sourceContainer;
    this.mirror = source.cloneNode(true);
    const mirrorCreatedEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorCreatedEvent({
      source,
      originalSource,
      sourceContainer,
      sensorEvent,
      dragEvent,
      mirror: this.mirror
    });
    const mirrorAttachedEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorAttachedEvent({
      source,
      originalSource,
      sourceContainer,
      sensorEvent,
      dragEvent,
      mirror: this.mirror
    });
    this.draggable.trigger(mirrorCreatedEvent);
    appendableContainer.appendChild(this.mirror);
    this.draggable.trigger(mirrorAttachedEvent);
  }
  [onDragMove](dragEvent) {
    if (!this.mirror || dragEvent.canceled()) {
      return;
    }
    const {
      source,
      originalSource,
      sourceContainer,
      sensorEvent
    } = dragEvent;
    let passedThreshX = true;
    let passedThreshY = true;
    if (this.options.thresholdX || this.options.thresholdY) {
      const {
        x: lastX,
        y: lastY
      } = this.lastMirrorMovedClient;
      if (Math.abs(lastX - sensorEvent.clientX) < this.options.thresholdX) {
        passedThreshX = false;
      } else {
        this.lastMirrorMovedClient.x = sensorEvent.clientX;
      }
      if (Math.abs(lastY - sensorEvent.clientY) < this.options.thresholdY) {
        passedThreshY = false;
      } else {
        this.lastMirrorMovedClient.y = sensorEvent.clientY;
      }
      if (!passedThreshX && !passedThreshY) {
        return;
      }
    }
    const mirrorMoveEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorMoveEvent({
      source,
      originalSource,
      sourceContainer,
      sensorEvent,
      dragEvent,
      mirror: this.mirror,
      passedThreshX,
      passedThreshY
    });
    this.draggable.trigger(mirrorMoveEvent);
  }
  [onDragStop](dragEvent) {
    if ('ontouchstart' in window) {
      document.removeEventListener('scroll', this[onScroll], true);
    }
    this.initialScrollOffset = {
      x: 0,
      y: 0
    };
    this.scrollOffset = {
      x: 0,
      y: 0
    };
    if (!this.mirror) {
      return;
    }
    const {
      source,
      sourceContainer,
      sensorEvent
    } = dragEvent;
    const mirrorDestroyEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorDestroyEvent({
      source,
      mirror: this.mirror,
      sourceContainer,
      sensorEvent,
      dragEvent
    });
    this.draggable.trigger(mirrorDestroyEvent);
    if (!mirrorDestroyEvent.canceled()) {
      this.mirror.remove();
    }
  }
  [onScroll]() {
    this.scrollOffset = {
      x: window.scrollX - this.initialScrollOffset.x,
      y: window.scrollY - this.initialScrollOffset.y
    };
  }

  [onMirrorCreated]({
    mirror,
    source,
    sensorEvent
  }) {
    const mirrorClasses = this.draggable.getClassNamesFor('mirror');
    const setState = ({
      mirrorOffset,
      initialX,
      initialY,
      ...args
    }) => {
      this.mirrorOffset = mirrorOffset;
      this.initialX = initialX;
      this.initialY = initialY;
      this.lastMovedX = initialX;
      this.lastMovedY = initialY;
      return {
        mirrorOffset,
        initialX,
        initialY,
        ...args
      };
    };
    mirror.style.display = 'none';
    const initialState = {
      mirror,
      source,
      sensorEvent,
      mirrorClasses,
      scrollOffset: this.scrollOffset,
      options: this.options,
      passedThreshX: true,
      passedThreshY: true
    };
    return Promise.resolve(initialState)

    .then(computeMirrorDimensions).then(calculateMirrorOffset).then(resetMirror).then(addMirrorClasses).then(positionMirror({
      initial: true
    })).then(removeMirrorID).then(setState);
  }

  [onMirrorMove](mirrorEvent) {
    if (mirrorEvent.canceled()) {
      return null;
    }
    const setState = ({
      lastMovedX,
      lastMovedY,
      ...args
    }) => {
      this.lastMovedX = lastMovedX;
      this.lastMovedY = lastMovedY;
      return {
        lastMovedX,
        lastMovedY,
        ...args
      };
    };
    const triggerMoved = args => {
      const mirrorMovedEvent = new _MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.MirrorMovedEvent({
        source: mirrorEvent.source,
        originalSource: mirrorEvent.originalSource,
        sourceContainer: mirrorEvent.sourceContainer,
        sensorEvent: mirrorEvent.sensorEvent,
        dragEvent: mirrorEvent.dragEvent,
        mirror: this.mirror,
        passedThreshX: mirrorEvent.passedThreshX,
        passedThreshY: mirrorEvent.passedThreshY
      });
      this.draggable.trigger(mirrorMovedEvent);
      return args;
    };
    const initialState = {
      mirror: mirrorEvent.mirror,
      sensorEvent: mirrorEvent.sensorEvent,
      mirrorOffset: this.mirrorOffset,
      options: this.options,
      initialX: this.initialX,
      initialY: this.initialY,
      scrollOffset: this.scrollOffset,
      passedThreshX: mirrorEvent.passedThreshX,
      passedThreshY: mirrorEvent.passedThreshY,
      lastMovedX: this.lastMovedX,
      lastMovedY: this.lastMovedY
    };
    return Promise.resolve(initialState).then(positionMirror({
      raf: true
    })).then(setState).then(triggerMoved);
  }

  [getAppendableContainer](source) {
    const appendTo = this.options.appendTo;
    if (typeof appendTo === 'string') {
      return document.querySelector(appendTo);
    } else if (appendTo instanceof HTMLElement) {
      return appendTo;
    } else if (typeof appendTo === 'function') {
      return appendTo(source);
    } else {
      return source.parentNode;
    }
  }
}

function computeMirrorDimensions({
  source,
  ...args
}) {
  return withPromise(resolve => {
    const sourceRect = source.getBoundingClientRect();
    resolve({
      source,
      sourceRect,
      ...args
    });
  });
}

function calculateMirrorOffset({
  sensorEvent,
  sourceRect,
  options,
  ...args
}) {
  return withPromise(resolve => {
    const top = options.cursorOffsetY === null ? sensorEvent.clientY - sourceRect.top : options.cursorOffsetY;
    const left = options.cursorOffsetX === null ? sensorEvent.clientX - sourceRect.left : options.cursorOffsetX;
    const mirrorOffset = {
      top,
      left
    };
    resolve({
      sensorEvent,
      sourceRect,
      mirrorOffset,
      options,
      ...args
    });
  });
}

function resetMirror({
  mirror,
  source,
  options,
  ...args
}) {
  return withPromise(resolve => {
    let offsetHeight;
    let offsetWidth;
    if (options.constrainDimensions) {
      const computedSourceStyles = getComputedStyle(source);
      offsetHeight = computedSourceStyles.getPropertyValue('height');
      offsetWidth = computedSourceStyles.getPropertyValue('width');
    }
    mirror.style.display = null;
    mirror.style.position = 'fixed';
    mirror.style.pointerEvents = 'none';
    mirror.style.top = 0;
    mirror.style.left = 0;
    mirror.style.margin = 0;
    if (options.constrainDimensions) {
      mirror.style.height = offsetHeight;
      mirror.style.width = offsetWidth;
    }
    resolve({
      mirror,
      source,
      options,
      ...args
    });
  });
}

function addMirrorClasses({
  mirror,
  mirrorClasses,
  ...args
}) {
  return withPromise(resolve => {
    mirror.classList.add(...mirrorClasses);
    resolve({
      mirror,
      mirrorClasses,
      ...args
    });
  });
}

function removeMirrorID({
  mirror,
  ...args
}) {
  return withPromise(resolve => {
    mirror.removeAttribute('id');
    delete mirror.id;
    resolve({
      mirror,
      ...args
    });
  });
}

function positionMirror({
  withFrame = false,
  initial = false
} = {}) {
  return ({
    mirror,
    sensorEvent,
    mirrorOffset,
    initialY,
    initialX,
    scrollOffset,
    options,
    passedThreshX,
    passedThreshY,
    lastMovedX,
    lastMovedY,
    ...args
  }) => {
    return withPromise(resolve => {
      const result = {
        mirror,
        sensorEvent,
        mirrorOffset,
        options,
        ...args
      };
      if (mirrorOffset) {
        const x = passedThreshX ? Math.round((sensorEvent.clientX - mirrorOffset.left - scrollOffset.x) / (options.thresholdX || 1)) * (options.thresholdX || 1) : Math.round(lastMovedX);
        const y = passedThreshY ? Math.round((sensorEvent.clientY - mirrorOffset.top - scrollOffset.y) / (options.thresholdY || 1)) * (options.thresholdY || 1) : Math.round(lastMovedY);
        if (options.xAxis && options.yAxis || initial) {
          mirror.style.transform = `translate3d(${x}px, ${y}px, 0)`;
        } else if (options.xAxis && !options.yAxis) {
          mirror.style.transform = `translate3d(${x}px, ${initialY}px, 0)`;
        } else if (options.yAxis && !options.xAxis) {
          mirror.style.transform = `translate3d(${initialX}px, ${y}px, 0)`;
        }
        if (initial) {
          result.initialX = x;
          result.initialY = y;
        }
        result.lastMovedX = x;
        result.lastMovedY = y;
      }
      resolve(result);
    }, {
      frame: withFrame
    });
  };
}

function withPromise(callback, {
  raf = false
} = {}) {
  return new Promise((resolve, reject) => {
    if (raf) {
      requestAnimationFrame(() => {
        callback(resolve, reject);
      });
    } else {
      callback(resolve, reject);
    }
  });
}

function isNativeDragEvent(sensorEvent) {
  return /^drag/.test(sensorEvent.originalEvent.type);
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MirrorAttachedEvent: () => (/* binding */ MirrorAttachedEvent),
/* harmony export */   MirrorCreateEvent: () => (/* binding */ MirrorCreateEvent),
/* harmony export */   MirrorCreatedEvent: () => (/* binding */ MirrorCreatedEvent),
/* harmony export */   MirrorDestroyEvent: () => (/* binding */ MirrorDestroyEvent),
/* harmony export */   MirrorEvent: () => (/* binding */ MirrorEvent),
/* harmony export */   MirrorMoveEvent: () => (/* binding */ MirrorMoveEvent),
/* harmony export */   MirrorMovedEvent: () => (/* binding */ MirrorMovedEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class MirrorEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get source() {
    return this.data.source;
  }

  get originalSource() {
    return this.data.originalSource;
  }

  get sourceContainer() {
    return this.data.sourceContainer;
  }

  get sensorEvent() {
    return this.data.sensorEvent;
  }

  get dragEvent() {
    return this.data.dragEvent;
  }

  get originalEvent() {
    if (this.sensorEvent) {
      return this.sensorEvent.originalEvent;
    }
    return null;
  }
}

class MirrorCreateEvent extends MirrorEvent {}
MirrorCreateEvent.type = 'mirror:create';

class MirrorCreatedEvent extends MirrorEvent {

  get mirror() {
    return this.data.mirror;
  }
}
MirrorCreatedEvent.type = 'mirror:created';

class MirrorAttachedEvent extends MirrorEvent {

  get mirror() {
    return this.data.mirror;
  }
}
MirrorAttachedEvent.type = 'mirror:attached';

class MirrorMoveEvent extends MirrorEvent {

  get mirror() {
    return this.data.mirror;
  }

  get passedThreshX() {
    return this.data.passedThreshX;
  }

  get passedThreshY() {
    return this.data.passedThreshY;
  }
}
MirrorMoveEvent.type = 'mirror:move';
MirrorMoveEvent.cancelable = true;

class MirrorMovedEvent extends MirrorEvent {

  get mirror() {
    return this.data.mirror;
  }

  get passedThreshX() {
    return this.data.passedThreshX;
  }

  get passedThreshY() {
    return this.data.passedThreshY;
  }
}
MirrorMovedEvent.type = 'mirror:moved';

class MirrorDestroyEvent extends MirrorEvent {

  get mirror() {
    return this.data.mirror;
  }
}
MirrorDestroyEvent.type = 'mirror:destroy';
MirrorDestroyEvent.cancelable = true;




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Scrollable/Scrollable.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Scrollable/Scrollable.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Scrollable),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions),
/* harmony export */   onDragMove: () => (/* binding */ onDragMove),
/* harmony export */   onDragStart: () => (/* binding */ onDragStart),
/* harmony export */   onDragStop: () => (/* binding */ onDragStop),
/* harmony export */   scroll: () => (/* binding */ scroll)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");



const onDragStart = Symbol('onDragStart');
const onDragMove = Symbol('onDragMove');
const onDragStop = Symbol('onDragStop');
const scroll = Symbol('scroll');

const defaultOptions = {
  speed: 6,
  sensitivity: 50,
  scrollableElements: []
};

class Scrollable extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };

    this.currentMousePosition = null;

    this.scrollAnimationFrame = null;

    this.scrollableElement = null;

    this.findScrollableElementFrame = null;
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragMove] = this[onDragMove].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this[scroll] = this[scroll].bind(this);
  }

  attach() {
    this.draggable.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);
  }

  detach() {
    this.draggable.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);
  }

  getOptions() {
    return this.draggable.options.scrollable || {};
  }

  getScrollableElement(target) {
    if (this.hasDefinedScrollableElements()) {
      return (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])(target, this.options.scrollableElements) || document.documentElement;
    } else {
      return closestScrollableElement(target);
    }
  }

  hasDefinedScrollableElements() {
    return Boolean(this.options.scrollableElements.length !== 0);
  }

  [onDragStart](dragEvent) {
    this.findScrollableElementFrame = requestAnimationFrame(() => {
      this.scrollableElement = this.getScrollableElement(dragEvent.source);
    });
  }

  [onDragMove](dragEvent) {
    this.findScrollableElementFrame = requestAnimationFrame(() => {
      this.scrollableElement = this.getScrollableElement(dragEvent.sensorEvent.target);
    });
    if (!this.scrollableElement) {
      return;
    }
    const sensorEvent = dragEvent.sensorEvent;
    const scrollOffset = {
      x: 0,
      y: 0
    };
    if ('ontouchstart' in window) {
      scrollOffset.y = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
      scrollOffset.x = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
    }
    this.currentMousePosition = {
      clientX: sensorEvent.clientX - scrollOffset.x,
      clientY: sensorEvent.clientY - scrollOffset.y
    };
    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);
  }

  [onDragStop]() {
    cancelAnimationFrame(this.scrollAnimationFrame);
    cancelAnimationFrame(this.findScrollableElementFrame);
    this.scrollableElement = null;
    this.scrollAnimationFrame = null;
    this.findScrollableElementFrame = null;
    this.currentMousePosition = null;
  }

  [scroll]() {
    if (!this.scrollableElement || !this.currentMousePosition) {
      return;
    }
    cancelAnimationFrame(this.scrollAnimationFrame);
    const {
      speed,
      sensitivity
    } = this.options;
    const rect = this.scrollableElement.getBoundingClientRect();
    const bottomCutOff = rect.bottom > window.innerHeight;
    const topCutOff = rect.top < 0;
    const cutOff = topCutOff || bottomCutOff;
    const documentScrollingElement = getDocumentScrollingElement();
    const scrollableElement = this.scrollableElement;
    const clientX = this.currentMousePosition.clientX;
    const clientY = this.currentMousePosition.clientY;
    if (scrollableElement !== document.body && scrollableElement !== document.documentElement && !cutOff) {
      const {
        offsetHeight,
        offsetWidth
      } = scrollableElement;
      if (rect.top + offsetHeight - clientY < sensitivity) {
        scrollableElement.scrollTop += speed;
      } else if (clientY - rect.top < sensitivity) {
        scrollableElement.scrollTop -= speed;
      }
      if (rect.left + offsetWidth - clientX < sensitivity) {
        scrollableElement.scrollLeft += speed;
      } else if (clientX - rect.left < sensitivity) {
        scrollableElement.scrollLeft -= speed;
      }
    } else {
      const {
        innerHeight,
        innerWidth
      } = window;
      if (clientY < sensitivity) {
        documentScrollingElement.scrollTop -= speed;
      } else if (innerHeight - clientY < sensitivity) {
        documentScrollingElement.scrollTop += speed;
      }
      if (clientX < sensitivity) {
        documentScrollingElement.scrollLeft -= speed;
      } else if (innerWidth - clientX < sensitivity) {
        documentScrollingElement.scrollLeft += speed;
      }
    }
    this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);
  }
}

function hasOverflow(element) {
  const overflowRegex = /(auto|scroll)/;
  const computedStyles = getComputedStyle(element, null);
  const overflow = computedStyles.getPropertyValue('overflow') + computedStyles.getPropertyValue('overflow-y') + computedStyles.getPropertyValue('overflow-x');
  return overflowRegex.test(overflow);
}

function isStaticallyPositioned(element) {
  const position = getComputedStyle(element).getPropertyValue('position');
  return position === 'static';
}

function closestScrollableElement(element) {
  if (!element) {
    return getDocumentScrollingElement();
  }
  const position = getComputedStyle(element).getPropertyValue('position');
  const excludeStaticParents = position === 'absolute';
  const scrollableElement = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])(element, parent => {
    if (excludeStaticParents && isStaticallyPositioned(parent)) {
      return false;
    }
    return hasOverflow(parent);
  });
  if (position === 'fixed' || !scrollableElement) {
    return getDocumentScrollingElement();
  } else {
    return scrollableElement;
  }
}

function getDocumentScrollingElement() {
  return document.scrollingElement || document.documentElement;
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/DragSensor/DragSensor.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/DragSensor/DragSensor.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ DragSensor)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sensor/Sensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs");
/* harmony import */ var _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");




const onMouseDown = Symbol('onMouseDown');
const onMouseUp = Symbol('onMouseUp');
const onDragStart = Symbol('onDragStart');
const onDragOver = Symbol('onDragOver');
const onDragEnd = Symbol('onDragEnd');
const onDrop = Symbol('onDrop');
const reset = Symbol('reset');

class DragSensor extends _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, options);

    this.mouseDownTimeout = null;

    this.draggableElement = null;

    this.nativeDraggableElement = null;
    this[onMouseDown] = this[onMouseDown].bind(this);
    this[onMouseUp] = this[onMouseUp].bind(this);
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragOver] = this[onDragOver].bind(this);
    this[onDragEnd] = this[onDragEnd].bind(this);
    this[onDrop] = this[onDrop].bind(this);
  }

  attach() {
    document.addEventListener('mousedown', this[onMouseDown], true);
  }

  detach() {
    document.removeEventListener('mousedown', this[onMouseDown], true);
  }

  [onDragStart](event) {

    event.dataTransfer.setData('text', '');
    event.dataTransfer.effectAllowed = this.options.type;
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const originalSource = this.draggableElement;
    if (!originalSource) {
      return;
    }
    const dragStartEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragStartSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      originalSource,
      container: this.currentContainer,
      originalEvent: event
    });

    setTimeout(() => {
      this.trigger(this.currentContainer, dragStartEvent);
      if (dragStartEvent.canceled()) {
        this.dragging = false;
      } else {
        this.dragging = true;
      }
    }, 0);
  }

  [onDragOver](event) {
    if (!this.dragging) {
      return;
    }
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const container = this.currentContainer;
    const dragMoveEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragMoveSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container,
      originalEvent: event
    });
    this.trigger(container, dragMoveEvent);
    if (!dragMoveEvent.canceled()) {
      event.preventDefault();
      event.dataTransfer.dropEffect = this.options.type;
    }
  }

  [onDragEnd](event) {
    if (!this.dragging) {
      return;
    }
    document.removeEventListener('mouseup', this[onMouseUp], true);
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const container = this.currentContainer;
    const dragStopEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragStopSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container,
      originalEvent: event
    });
    this.trigger(container, dragStopEvent);
    this.dragging = false;
    this.startEvent = null;
    this[reset]();
  }

  [onDrop](event) {
    event.preventDefault();
  }

  [onMouseDown](event) {

    if (event.target && (event.target.form || event.target.contenteditable)) {
      return;
    }
    const target = event.target;
    this.currentContainer = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.containers);
    if (!this.currentContainer) {
      return;
    }
    if (this.options.handle && target && !(0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.handle)) {
      return;
    }
    const originalSource = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.draggable);
    if (!originalSource) {
      return;
    }
    const nativeDraggableElement = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, element => element.draggable);
    if (nativeDraggableElement) {
      nativeDraggableElement.draggable = false;
      this.nativeDraggableElement = nativeDraggableElement;
    }
    document.addEventListener('mouseup', this[onMouseUp], true);
    document.addEventListener('dragstart', this[onDragStart], false);
    document.addEventListener('dragover', this[onDragOver], false);
    document.addEventListener('dragend', this[onDragEnd], false);
    document.addEventListener('drop', this[onDrop], false);
    this.startEvent = event;
    this.mouseDownTimeout = setTimeout(() => {
      originalSource.draggable = true;
      this.draggableElement = originalSource;
    }, this.delay.drag);
  }

  [onMouseUp]() {
    this[reset]();
  }

  [reset]() {
    clearTimeout(this.mouseDownTimeout);
    document.removeEventListener('mouseup', this[onMouseUp], true);
    document.removeEventListener('dragstart', this[onDragStart], false);
    document.removeEventListener('dragover', this[onDragOver], false);
    document.removeEventListener('dragend', this[onDragEnd], false);
    document.removeEventListener('drop', this[onDrop], false);
    if (this.nativeDraggableElement) {
      this.nativeDraggableElement.draggable = true;
      this.nativeDraggableElement = null;
    }
    if (this.draggableElement) {
      this.draggableElement.draggable = false;
      this.draggableElement = null;
    }
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ForceTouchSensor)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Sensor/Sensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs");
/* harmony import */ var _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");




const onMouseForceWillBegin = Symbol('onMouseForceWillBegin');
const onMouseForceDown = Symbol('onMouseForceDown');
const onMouseDown = Symbol('onMouseDown');
const onMouseForceChange = Symbol('onMouseForceChange');
const onMouseMove = Symbol('onMouseMove');
const onMouseUp = Symbol('onMouseUp');
const onMouseForceGlobalChange = Symbol('onMouseForceGlobalChange');

class ForceTouchSensor extends _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, options);

    this.mightDrag = false;
    this[onMouseForceWillBegin] = this[onMouseForceWillBegin].bind(this);
    this[onMouseForceDown] = this[onMouseForceDown].bind(this);
    this[onMouseDown] = this[onMouseDown].bind(this);
    this[onMouseForceChange] = this[onMouseForceChange].bind(this);
    this[onMouseMove] = this[onMouseMove].bind(this);
    this[onMouseUp] = this[onMouseUp].bind(this);
  }

  attach() {
    for (const container of this.containers) {
      container.addEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);
      container.addEventListener('webkitmouseforcedown', this[onMouseForceDown], false);
      container.addEventListener('mousedown', this[onMouseDown], true);
      container.addEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);
    }
    document.addEventListener('mousemove', this[onMouseMove]);
    document.addEventListener('mouseup', this[onMouseUp]);
  }

  detach() {
    for (const container of this.containers) {
      container.removeEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);
      container.removeEventListener('webkitmouseforcedown', this[onMouseForceDown], false);
      container.removeEventListener('mousedown', this[onMouseDown], true);
      container.removeEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);
    }
    document.removeEventListener('mousemove', this[onMouseMove]);
    document.removeEventListener('mouseup', this[onMouseUp]);
  }

  [onMouseForceWillBegin](event) {
    event.preventDefault();
    this.mightDrag = true;
  }

  [onMouseForceDown](event) {
    if (this.dragging) {
      return;
    }
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const container = event.currentTarget;
    if (this.options.handle && target && !(0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.handle)) {
      return;
    }
    const originalSource = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.options.draggable);
    if (!originalSource) {
      return;
    }
    const dragStartEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragStartSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container,
      originalSource,
      originalEvent: event
    });
    this.trigger(container, dragStartEvent);
    this.currentContainer = container;
    this.dragging = !dragStartEvent.canceled();
    this.mightDrag = false;
  }

  [onMouseUp](event) {
    if (!this.dragging) {
      return;
    }
    const dragStopEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragStopSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target: null,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragStopEvent);
    this.currentContainer = null;
    this.dragging = false;
    this.mightDrag = false;
  }

  [onMouseDown](event) {
    if (!this.mightDrag) {
      return;
    }

    event.stopPropagation();
    event.stopImmediatePropagation();
    event.preventDefault();
  }

  [onMouseMove](event) {
    if (!this.dragging) {
      return;
    }
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const dragMoveEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragMoveSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragMoveEvent);
  }

  [onMouseForceChange](event) {
    if (this.dragging) {
      return;
    }
    const target = event.target;
    const container = event.currentTarget;
    const dragPressureEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragPressureSensorEvent({
      pressure: event.webkitForce,
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container,
      originalEvent: event
    });
    this.trigger(container, dragPressureEvent);
  }

  [onMouseForceGlobalChange](event) {
    if (!this.dragging) {
      return;
    }
    const target = event.target;
    const dragPressureEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.DragPressureSensorEvent({
      pressure: event.webkitForce,
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragPressureEvent);
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/MouseSensor/MouseSensor.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/MouseSensor/MouseSensor.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MouseSensor)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _shared_utils_distance_distance_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/utils/distance/distance.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/distance/distance.mjs");
/* harmony import */ var _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Sensor/Sensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs");
/* harmony import */ var _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");





const onContextMenuWhileDragging = Symbol('onContextMenuWhileDragging');
const onMouseDown = Symbol('onMouseDown');
const onMouseMove = Symbol('onMouseMove');
const onMouseUp = Symbol('onMouseUp');
const startDrag = Symbol('startDrag');
const onDistanceChange = Symbol('onDistanceChange');

class MouseSensor extends _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_2__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, options);

    this.mouseDownTimeout = null;

    this.pageX = null;

    this.pageY = null;
    this[onContextMenuWhileDragging] = this[onContextMenuWhileDragging].bind(this);
    this[onMouseDown] = this[onMouseDown].bind(this);
    this[onMouseMove] = this[onMouseMove].bind(this);
    this[onMouseUp] = this[onMouseUp].bind(this);
    this[startDrag] = this[startDrag].bind(this);
    this[onDistanceChange] = this[onDistanceChange].bind(this);
  }

  attach() {
    document.addEventListener('mousedown', this[onMouseDown], true);
  }

  detach() {
    document.removeEventListener('mousedown', this[onMouseDown], true);
  }

  [onMouseDown](event) {
    if (event.button !== 0 || event.ctrlKey || event.metaKey) {
      return;
    }
    const container = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.containers);
    if (!container) {
      return;
    }
    if (this.options.handle && event.target && !(0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.options.handle)) {
      return;
    }
    const originalSource = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.options.draggable);
    if (!originalSource) {
      return;
    }
    const {
      delay
    } = this;
    const {
      pageX,
      pageY
    } = event;
    Object.assign(this, {
      pageX,
      pageY
    });
    this.onMouseDownAt = Date.now();
    this.startEvent = event;
    this.currentContainer = container;
    this.originalSource = originalSource;
    document.addEventListener('mouseup', this[onMouseUp]);
    document.addEventListener('dragstart', preventNativeDragStart);
    document.addEventListener('mousemove', this[onDistanceChange]);
    this.mouseDownTimeout = window.setTimeout(() => {
      this[onDistanceChange]({
        pageX: this.pageX,
        pageY: this.pageY
      });
    }, delay.mouse);
  }

  [startDrag]() {
    const startEvent = this.startEvent;
    const container = this.currentContainer;
    const originalSource = this.originalSource;
    const dragStartEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_3__.DragStartSensorEvent({
      clientX: startEvent.clientX,
      clientY: startEvent.clientY,
      target: startEvent.target,
      container,
      originalSource,
      originalEvent: startEvent
    });
    this.trigger(this.currentContainer, dragStartEvent);
    this.dragging = !dragStartEvent.canceled();
    if (this.dragging) {
      document.addEventListener('contextmenu', this[onContextMenuWhileDragging], true);
      document.addEventListener('mousemove', this[onMouseMove]);
    }
  }

  [onDistanceChange](event) {
    const {
      pageX,
      pageY
    } = event;
    const {
      distance: distance$1
    } = this.options;
    const {
      startEvent,
      delay
    } = this;
    Object.assign(this, {
      pageX,
      pageY
    });
    if (!this.currentContainer) {
      return;
    }
    const timeElapsed = Date.now() - this.onMouseDownAt;
    const distanceTravelled = (0,_shared_utils_distance_distance_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])(startEvent.pageX, startEvent.pageY, pageX, pageY) || 0;
    clearTimeout(this.mouseDownTimeout);
    if (timeElapsed < delay.mouse) {

      document.removeEventListener('mousemove', this[onDistanceChange]);
    } else if (distanceTravelled >= distance$1) {
      document.removeEventListener('mousemove', this[onDistanceChange]);
      this[startDrag]();
    }
  }

  [onMouseMove](event) {
    if (!this.dragging) {
      return;
    }
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const dragMoveEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_3__.DragMoveSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragMoveEvent);
  }

  [onMouseUp](event) {
    clearTimeout(this.mouseDownTimeout);
    if (event.button !== 0) {
      return;
    }
    document.removeEventListener('mouseup', this[onMouseUp]);
    document.removeEventListener('dragstart', preventNativeDragStart);
    document.removeEventListener('mousemove', this[onDistanceChange]);
    if (!this.dragging) {
      return;
    }
    const target = document.elementFromPoint(event.clientX, event.clientY);
    const dragStopEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_3__.DragStopSensorEvent({
      clientX: event.clientX,
      clientY: event.clientY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragStopEvent);
    document.removeEventListener('contextmenu', this[onContextMenuWhileDragging], true);
    document.removeEventListener('mousemove', this[onMouseMove]);
    this.currentContainer = null;
    this.dragging = false;
    this.startEvent = null;
  }

  [onContextMenuWhileDragging](event) {
    event.preventDefault();
  }
}
function preventNativeDragStart(event) {
  event.preventDefault();
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sensor)
/* harmony export */ });
const defaultDelay = {
  mouse: 0,
  drag: 0,
  touch: 100
};

class Sensor {

  constructor(containers = [], options = {}) {

    this.containers = [...containers];

    this.options = {
      ...options
    };

    this.dragging = false;

    this.currentContainer = null;

    this.originalSource = null;

    this.startEvent = null;

    this.delay = calcDelay(options.delay);
  }

  attach() {
    return this;
  }

  detach() {
    return this;
  }

  addContainer(...containers) {
    this.containers = [...this.containers, ...containers];
  }

  removeContainer(...containers) {
    this.containers = this.containers.filter(container => !containers.includes(container));
  }

  trigger(element, sensorEvent) {
    const event = document.createEvent('Event');
    event.detail = sensorEvent;
    event.initEvent(sensorEvent.type, true, true);
    element.dispatchEvent(event);
    this.lastEvent = sensorEvent;
    return sensorEvent;
  }
}

function calcDelay(optionsDelay) {
  const delay = {};
  if (optionsDelay === undefined) {
    return {
      ...defaultDelay
    };
  }
  if (typeof optionsDelay === 'number') {
    for (const key in defaultDelay) {
      if (Object.prototype.hasOwnProperty.call(defaultDelay, key)) {
        delay[key] = optionsDelay;
      }
    }
    return delay;
  }
  for (const key in defaultDelay) {
    if (Object.prototype.hasOwnProperty.call(defaultDelay, key)) {
      if (optionsDelay[key] === undefined) {
        delay[key] = defaultDelay[key];
      } else {
        delay[key] = optionsDelay[key];
      }
    }
  }
  return delay;
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DragMoveSensorEvent: () => (/* binding */ DragMoveSensorEvent),
/* harmony export */   DragPressureSensorEvent: () => (/* binding */ DragPressureSensorEvent),
/* harmony export */   DragStartSensorEvent: () => (/* binding */ DragStartSensorEvent),
/* harmony export */   DragStopSensorEvent: () => (/* binding */ DragStopSensorEvent),
/* harmony export */   SensorEvent: () => (/* binding */ SensorEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class SensorEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  get originalEvent() {
    return this.data.originalEvent;
  }

  get clientX() {
    return this.data.clientX;
  }

  get clientY() {
    return this.data.clientY;
  }

  get target() {
    return this.data.target;
  }

  get container() {
    return this.data.container;
  }

  get originalSource() {
    return this.data.originalSource;
  }

  get pressure() {
    return this.data.pressure;
  }
}

class DragStartSensorEvent extends SensorEvent {}

DragStartSensorEvent.type = 'drag:start';
class DragMoveSensorEvent extends SensorEvent {}

DragMoveSensorEvent.type = 'drag:move';
class DragStopSensorEvent extends SensorEvent {}

DragStopSensorEvent.type = 'drag:stop';
class DragPressureSensorEvent extends SensorEvent {}
DragPressureSensorEvent.type = 'drag:pressure';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TouchSensor)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _shared_utils_distance_distance_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../shared/utils/distance/distance.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/distance/distance.mjs");
/* harmony import */ var _shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../shared/utils/touchCoords/touchCoords.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/touchCoords/touchCoords.mjs");
/* harmony import */ var _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Sensor/Sensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs");
/* harmony import */ var _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");






const onTouchStart = Symbol('onTouchStart');
const onTouchEnd = Symbol('onTouchEnd');
const onTouchMove = Symbol('onTouchMove');
const startDrag = Symbol('startDrag');
const onDistanceChange = Symbol('onDistanceChange');

let preventScrolling = false;

window.addEventListener('touchmove', event => {
  if (!preventScrolling) {
    return;
  }

  event.preventDefault();
}, {
  passive: false
});

class TouchSensor extends _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_3__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, options);

    this.currentScrollableParent = null;

    this.tapTimeout = null;

    this.touchMoved = false;

    this.pageX = null;

    this.pageY = null;
    this[onTouchStart] = this[onTouchStart].bind(this);
    this[onTouchEnd] = this[onTouchEnd].bind(this);
    this[onTouchMove] = this[onTouchMove].bind(this);
    this[startDrag] = this[startDrag].bind(this);
    this[onDistanceChange] = this[onDistanceChange].bind(this);
  }

  attach() {
    document.addEventListener('touchstart', this[onTouchStart]);
  }

  detach() {
    document.removeEventListener('touchstart', this[onTouchStart]);
  }

  [onTouchStart](event) {
    const container = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.containers);
    if (!container) {
      return;
    }
    if (this.options.handle && event.target && !(0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.options.handle)) {
      return;
    }
    const originalSource = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.target, this.options.draggable);
    if (!originalSource) {
      return;
    }
    const {
      distance = 0
    } = this.options;
    const {
      delay
    } = this;
    const {
      pageX,
      pageY
    } = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(event);
    Object.assign(this, {
      pageX,
      pageY
    });
    this.onTouchStartAt = Date.now();
    this.startEvent = event;
    this.currentContainer = container;
    this.originalSource = originalSource;
    document.addEventListener('touchend', this[onTouchEnd]);
    document.addEventListener('touchcancel', this[onTouchEnd]);
    document.addEventListener('touchmove', this[onDistanceChange]);
    container.addEventListener('contextmenu', onContextMenu);
    if (distance) {
      preventScrolling = true;
    }
    this.tapTimeout = window.setTimeout(() => {
      this[onDistanceChange]({
        touches: [{
          pageX: this.pageX,
          pageY: this.pageY
        }]
      });
    }, delay.touch);
  }

  [startDrag]() {
    const startEvent = this.startEvent;
    const container = this.currentContainer;
    const touch = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(startEvent);
    const originalSource = this.originalSource;
    const dragStartEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.DragStartSensorEvent({
      clientX: touch.pageX,
      clientY: touch.pageY,
      target: startEvent.target,
      container,
      originalSource,
      originalEvent: startEvent
    });
    this.trigger(this.currentContainer, dragStartEvent);
    this.dragging = !dragStartEvent.canceled();
    if (this.dragging) {
      document.addEventListener('touchmove', this[onTouchMove]);
    }
    preventScrolling = this.dragging;
  }

  [onDistanceChange](event) {
    const {
      distance: distance$1
    } = this.options;
    const {
      startEvent,
      delay
    } = this;
    const start = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(startEvent);
    const current = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(event);
    const timeElapsed = Date.now() - this.onTouchStartAt;
    const distanceTravelled = (0,_shared_utils_distance_distance_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])(start.pageX, start.pageY, current.pageX, current.pageY);
    Object.assign(this, current);
    clearTimeout(this.tapTimeout);
    if (timeElapsed < delay.touch) {

      document.removeEventListener('touchmove', this[onDistanceChange]);
    } else if (distanceTravelled >= distance$1) {
      document.removeEventListener('touchmove', this[onDistanceChange]);
      this[startDrag]();
    }
  }

  [onTouchMove](event) {
    if (!this.dragging) {
      return;
    }
    const {
      pageX,
      pageY
    } = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(event);
    const target = document.elementFromPoint(pageX - window.scrollX, pageY - window.scrollY);
    const dragMoveEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.DragMoveSensorEvent({
      clientX: pageX,
      clientY: pageY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragMoveEvent);
  }

  [onTouchEnd](event) {
    clearTimeout(this.tapTimeout);
    preventScrolling = false;
    document.removeEventListener('touchend', this[onTouchEnd]);
    document.removeEventListener('touchcancel', this[onTouchEnd]);
    document.removeEventListener('touchmove', this[onDistanceChange]);
    if (this.currentContainer) {
      this.currentContainer.removeEventListener('contextmenu', onContextMenu);
    }
    if (!this.dragging) {
      return;
    }
    document.removeEventListener('touchmove', this[onTouchMove]);
    const {
      pageX,
      pageY
    } = (0,_shared_utils_touchCoords_touchCoords_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])(event);
    const target = document.elementFromPoint(pageX - window.scrollX, pageY - window.scrollY);
    event.preventDefault();
    const dragStopEvent = new _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.DragStopSensorEvent({
      clientX: pageX,
      clientY: pageY,
      target,
      container: this.currentContainer,
      originalEvent: event
    });
    this.trigger(this.currentContainer, dragStopEvent);
    this.currentContainer = null;
    this.dragging = false;
    this.startEvent = null;
  }
}
function onContextMenu(event) {
  event.preventDefault();
  event.stopPropagation();
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/index.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/index.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DragMoveSensorEvent: () => (/* reexport safe */ _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.DragMoveSensorEvent),
/* harmony export */   DragPressureSensorEvent: () => (/* reexport safe */ _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.DragPressureSensorEvent),
/* harmony export */   DragSensor: () => (/* reexport safe */ _DragSensor_DragSensor_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   DragStartSensorEvent: () => (/* reexport safe */ _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.DragStartSensorEvent),
/* harmony export */   DragStopSensorEvent: () => (/* reexport safe */ _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.DragStopSensorEvent),
/* harmony export */   ForceTouchSensor: () => (/* reexport safe */ _ForceTouchSensor_ForceTouchSensor_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   MouseSensor: () => (/* reexport safe */ _MouseSensor_MouseSensor_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   Sensor: () => (/* reexport safe */ _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   SensorEvent: () => (/* reexport safe */ _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.SensorEvent),
/* harmony export */   TouchSensor: () => (/* reexport safe */ _TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_2__["default"])
/* harmony export */ });
/* harmony import */ var _Sensor_Sensor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Sensor/Sensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/Sensor/Sensor.mjs");
/* harmony import */ var _MouseSensor_MouseSensor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MouseSensor/MouseSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/MouseSensor/MouseSensor.mjs");
/* harmony import */ var _TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TouchSensor/TouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs");
/* harmony import */ var _DragSensor_DragSensor_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DragSensor/DragSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/DragSensor/DragSensor.mjs");
/* harmony import */ var _ForceTouchSensor_ForceTouchSensor_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ForceTouchSensor/ForceTouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/ForceTouchSensor/ForceTouchSensor.mjs");
/* harmony import */ var _SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");








/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Droppable/Droppable.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Droppable/Droppable.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Droppable)
/* harmony export */ });
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Draggable/Draggable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs");
/* harmony import */ var _Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Draggable/DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");
/* harmony import */ var _Draggable_DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Draggable/DraggableEvent/DraggableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs");
/* harmony import */ var _Draggable_Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Draggable/Plugins/Announcement/Announcement.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs");
/* harmony import */ var _Draggable_Plugins_Mirror_MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Draggable/Sensors/SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Draggable/Sensors/TouchSensor/TouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs");
/* harmony import */ var _DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./DroppableEvent/DroppableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Droppable/DroppableEvent/DroppableEvent.mjs");










const onDragStart = Symbol('onDragStart');
const onDragMove = Symbol('onDragMove');
const onDragStop = Symbol('onDragStop');
const dropInDropzone = Symbol('dropInDropZone');
const returnToOriginalDropzone = Symbol('returnToOriginalDropzone');
const closestDropzone = Symbol('closestDropzone');
const getDropzones = Symbol('getDropzones');

function onDroppableDroppedDefaultAnnouncement({
  dragEvent,
  dropzone
}) {
  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';
  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';
  return `Dropped ${sourceText} into ${dropzoneText}`;
}

function onDroppableReturnedDefaultAnnouncement({
  dragEvent,
  dropzone
}) {
  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';
  const dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';
  return `Returned ${sourceText} from ${dropzoneText}`;
}

const defaultAnnouncements = {
  'droppable:dropped': onDroppableDroppedDefaultAnnouncement,
  'droppable:returned': onDroppableReturnedDefaultAnnouncement
};
const defaultClasses = {
  'droppable:active': 'draggable-dropzone--active',
  'droppable:occupied': 'draggable-dropzone--occupied'
};
const defaultOptions = {
  dropzone: '.draggable-droppable'
};

class Droppable extends _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, {
      ...defaultOptions,
      ...options,
      classes: {
        ...defaultClasses,
        ...(options.classes || {})
      },
      announcements: {
        ...defaultAnnouncements,
        ...(options.announcements || {})
      }
    });

    this.dropzones = null;

    this.lastDropzone = null;

    this.initialDropzone = null;
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragMove] = this[onDragMove].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);
  }

  destroy() {
    super.destroy();
    this.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);
  }

  [onDragStart](event) {
    if (event.canceled()) {
      return;
    }
    this.dropzones = [...this[getDropzones]()];
    const dropzone = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(event.sensorEvent.target, this.options.dropzone);
    if (!dropzone) {
      event.cancel();
      return;
    }
    const droppableStartEvent = new _DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.DroppableStartEvent({
      dragEvent: event,
      dropzone
    });
    this.trigger(droppableStartEvent);
    if (droppableStartEvent.canceled()) {
      event.cancel();
      return;
    }
    this.initialDropzone = dropzone;
    for (const dropzoneElement of this.dropzones) {
      if (dropzoneElement.classList.contains(this.getClassNameFor('droppable:occupied'))) {
        continue;
      }
      dropzoneElement.classList.add(...this.getClassNamesFor('droppable:active'));
    }
  }

  [onDragMove](event) {
    if (event.canceled()) {
      return;
    }
    const dropzone = this[closestDropzone](event.sensorEvent.target);
    const overEmptyDropzone = dropzone && !dropzone.classList.contains(this.getClassNameFor('droppable:occupied'));
    if (overEmptyDropzone && this[dropInDropzone](event, dropzone)) {
      this.lastDropzone = dropzone;
    } else if ((!dropzone || dropzone === this.initialDropzone) && this.lastDropzone) {
      this[returnToOriginalDropzone](event);
      this.lastDropzone = null;
    }
  }

  [onDragStop](event) {
    const droppableStopEvent = new _DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.DroppableStopEvent({
      dragEvent: event,
      dropzone: this.lastDropzone || this.initialDropzone
    });
    this.trigger(droppableStopEvent);
    const occupiedClasses = this.getClassNamesFor('droppable:occupied');
    for (const dropzone of this.dropzones) {
      dropzone.classList.remove(...this.getClassNamesFor('droppable:active'));
    }
    if (this.lastDropzone && this.lastDropzone !== this.initialDropzone) {
      this.initialDropzone.classList.remove(...occupiedClasses);
    }
    this.dropzones = null;
    this.lastDropzone = null;
    this.initialDropzone = null;
  }

  [dropInDropzone](event, dropzone) {
    const droppableDroppedEvent = new _DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.DroppableDroppedEvent({
      dragEvent: event,
      dropzone
    });
    this.trigger(droppableDroppedEvent);
    if (droppableDroppedEvent.canceled()) {
      return false;
    }
    const occupiedClasses = this.getClassNamesFor('droppable:occupied');
    if (this.lastDropzone) {
      this.lastDropzone.classList.remove(...occupiedClasses);
    }
    dropzone.appendChild(event.source);
    dropzone.classList.add(...occupiedClasses);
    return true;
  }

  [returnToOriginalDropzone](event) {
    const droppableReturnedEvent = new _DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_8__.DroppableReturnedEvent({
      dragEvent: event,
      dropzone: this.lastDropzone
    });
    this.trigger(droppableReturnedEvent);
    if (droppableReturnedEvent.canceled()) {
      return;
    }
    this.initialDropzone.appendChild(event.source);
    this.lastDropzone.classList.remove(...this.getClassNamesFor('droppable:occupied'));
  }

  [closestDropzone](target) {
    if (!this.dropzones) {
      return null;
    }
    return (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_0__["default"])(target, this.dropzones);
  }

  [getDropzones]() {
    const dropzone = this.options.dropzone;
    if (typeof dropzone === 'string') {
      return document.querySelectorAll(dropzone);
    } else if (dropzone instanceof NodeList || dropzone instanceof Array) {
      return dropzone;
    } else if (typeof dropzone === 'function') {
      return dropzone();
    } else {
      return [];
    }
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Droppable/DroppableEvent/DroppableEvent.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Droppable/DroppableEvent/DroppableEvent.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DroppableDroppedEvent: () => (/* binding */ DroppableDroppedEvent),
/* harmony export */   DroppableEvent: () => (/* binding */ DroppableEvent),
/* harmony export */   DroppableReturnedEvent: () => (/* binding */ DroppableReturnedEvent),
/* harmony export */   DroppableStartEvent: () => (/* binding */ DroppableStartEvent),
/* harmony export */   DroppableStopEvent: () => (/* binding */ DroppableStopEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class DroppableEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get dragEvent() {
    return this.data.dragEvent;
  }
}
DroppableEvent.type = 'droppable';

class DroppableStartEvent extends DroppableEvent {

  get dropzone() {
    return this.data.dropzone;
  }
}
DroppableStartEvent.type = 'droppable:start';
DroppableStartEvent.cancelable = true;

class DroppableDroppedEvent extends DroppableEvent {

  get dropzone() {
    return this.data.dropzone;
  }
}
DroppableDroppedEvent.type = 'droppable:dropped';
DroppableDroppedEvent.cancelable = true;

class DroppableReturnedEvent extends DroppableEvent {

  get dropzone() {
    return this.data.dropzone;
  }
}
DroppableReturnedEvent.type = 'droppable:returned';
DroppableReturnedEvent.cancelable = true;

class DroppableStopEvent extends DroppableEvent {

  get dropzone() {
    return this.data.dropzone;
  }
}
DroppableStopEvent.type = 'droppable:stop';
DroppableStopEvent.cancelable = true;




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/Collidable.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/Collidable.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Collidable)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/utils/closest/closest.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs");
/* harmony import */ var _CollidableEvent_CollidableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CollidableEvent/CollidableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/CollidableEvent/CollidableEvent.mjs");




const onDragMove = Symbol('onDragMove');
const onDragStop = Symbol('onDragStop');
const onRequestAnimationFrame = Symbol('onRequestAnimationFrame');

class Collidable extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.currentlyCollidingElement = null;

    this.lastCollidingElement = null;

    this.currentAnimationFrame = null;
    this[onDragMove] = this[onDragMove].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this[onRequestAnimationFrame] = this[onRequestAnimationFrame].bind(this);
  }

  attach() {
    this.draggable.on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);
  }

  detach() {
    this.draggable.off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);
  }

  getCollidables() {
    const collidables = this.draggable.options.collidables;
    if (typeof collidables === 'string') {
      return Array.prototype.slice.call(document.querySelectorAll(collidables));
    } else if (collidables instanceof NodeList || collidables instanceof Array) {
      return Array.prototype.slice.call(collidables);
    } else if (collidables instanceof HTMLElement) {
      return [collidables];
    } else if (typeof collidables === 'function') {
      return collidables();
    } else {
      return [];
    }
  }

  [onDragMove](event) {
    const target = event.sensorEvent.target;
    this.currentAnimationFrame = requestAnimationFrame(this[onRequestAnimationFrame](target));
    if (this.currentlyCollidingElement) {
      event.cancel();
    }
    const collidableInEvent = new _CollidableEvent_CollidableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.CollidableInEvent({
      dragEvent: event,
      collidingElement: this.currentlyCollidingElement
    });
    const collidableOutEvent = new _CollidableEvent_CollidableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.CollidableOutEvent({
      dragEvent: event,
      collidingElement: this.lastCollidingElement
    });
    const enteringCollidable = Boolean(this.currentlyCollidingElement && this.lastCollidingElement !== this.currentlyCollidingElement);
    const leavingCollidable = Boolean(!this.currentlyCollidingElement && this.lastCollidingElement);
    if (enteringCollidable) {
      if (this.lastCollidingElement) {
        this.draggable.trigger(collidableOutEvent);
      }
      this.draggable.trigger(collidableInEvent);
    } else if (leavingCollidable) {
      this.draggable.trigger(collidableOutEvent);
    }
    this.lastCollidingElement = this.currentlyCollidingElement;
  }

  [onDragStop](event) {
    const lastCollidingElement = this.currentlyCollidingElement || this.lastCollidingElement;
    const collidableOutEvent = new _CollidableEvent_CollidableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__.CollidableOutEvent({
      dragEvent: event,
      collidingElement: lastCollidingElement
    });
    if (lastCollidingElement) {
      this.draggable.trigger(collidableOutEvent);
    }
    this.lastCollidingElement = null;
    this.currentlyCollidingElement = null;
  }

  [onRequestAnimationFrame](target) {
    return () => {
      const collidables = this.getCollidables();
      this.currentlyCollidingElement = (0,_shared_utils_closest_closest_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])(target, element => collidables.includes(element));
    };
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/CollidableEvent/CollidableEvent.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/CollidableEvent/CollidableEvent.mjs ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CollidableEvent: () => (/* binding */ CollidableEvent),
/* harmony export */   CollidableInEvent: () => (/* binding */ CollidableInEvent),
/* harmony export */   CollidableOutEvent: () => (/* binding */ CollidableOutEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class CollidableEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get dragEvent() {
    return this.data.dragEvent;
  }
}
CollidableEvent.type = 'collidable';

class CollidableInEvent extends CollidableEvent {

  get collidingElement() {
    return this.data.collidingElement;
  }
}
CollidableInEvent.type = 'collidable:in';

class CollidableOutEvent extends CollidableEvent {

  get collidingElement() {
    return this.data.collidingElement;
  }
}
CollidableOutEvent.type = 'collidable:out';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/ResizeMirror/ResizeMirror.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/ResizeMirror/ResizeMirror.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ResizeMirror),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)
/* harmony export */ });
/* harmony import */ var _virtual_rollupPluginBabelHelpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_virtual/_rollupPluginBabelHelpers.mjs */ "./node_modules/@shopify/draggable/build/esm/_virtual/_rollupPluginBabelHelpers.mjs");
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/utils/decorators/AutoBind.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/decorators/AutoBind.mjs");
/* harmony import */ var _shared_utils_requestNextAnimationFrame_requestNextAnimationFrame_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/utils/requestNextAnimationFrame/requestNextAnimationFrame.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/requestNextAnimationFrame/requestNextAnimationFrame.mjs");
/* harmony import */ var _Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Draggable/DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");






var _initProto, _class;

const defaultOptions = {};

class ResizeMirror extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__.AbstractPlugin {

  constructor(draggable) {
    _initProto(super(draggable));

    this.lastWidth = 0;

    this.lastHeight = 0;

    this.mirror = null;
  }

  attach() {
    this.draggable.on('mirror:created', this.onMirrorCreated).on('drag:over', this.onDragOver).on('drag:over:container', this.onDragOver);
  }

  detach() {
    this.draggable.off('mirror:created', this.onMirrorCreated).off('mirror:destroy', this.onMirrorDestroy).off('drag:over', this.onDragOver).off('drag:over:container', this.onDragOver);
  }

  getOptions() {
    return this.draggable.options.resizeMirror || {};
  }

  onMirrorCreated({
    mirror
  }) {
    this.mirror = mirror;
  }

  onMirrorDestroy() {
    this.mirror = null;
  }

  onDragOver(dragEvent) {
    this.resize(dragEvent);
  }

  resize(dragEvent) {
    requestAnimationFrame(() => {
      let over = null;
      const {
        overContainer
      } = dragEvent;
      if (this.mirror == null || this.mirror.parentNode == null) {
        return;
      }
      if (this.mirror.parentNode !== overContainer) {
        overContainer.appendChild(this.mirror);
      }
      if ((0,_Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_4__.isDragOverEvent)(dragEvent)) {
        over = dragEvent.over;
      }
      const overElement = over || this.draggable.getDraggableElementsForContainer(overContainer)[0];
      if (!overElement) {
        return;
      }
      (0,_shared_utils_requestNextAnimationFrame_requestNextAnimationFrame_mjs__WEBPACK_IMPORTED_MODULE_3__["default"])(() => {
        const overRect = overElement.getBoundingClientRect();
        if (this.mirror == null || this.lastHeight === overRect.height && this.lastWidth === overRect.width) {
          return;
        }
        this.mirror.style.width = `${overRect.width}px`;
        this.mirror.style.height = `${overRect.height}px`;
        this.lastWidth = overRect.width;
        this.lastHeight = overRect.height;
      });
    });
  }
}
_class = ResizeMirror;
[_initProto] = (0,_virtual_rollupPluginBabelHelpers_mjs__WEBPACK_IMPORTED_MODULE_0__.applyDecs2305)(_class, [[_shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__.AutoBind, 2, "onMirrorCreated"], [_shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__.AutoBind, 2, "onMirrorDestroy"], [_shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__.AutoBind, 2, "onDragOver"]], [], 0, void 0, _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__.AbstractPlugin).e;




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/Snappable.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/Snappable.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Snappable)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _SnappableEvent_SnappableEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SnappableEvent/SnappableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/SnappableEvent/SnappableEvent.mjs");



const onDragStart = Symbol('onDragStart');
const onDragStop = Symbol('onDragStop');
const onDragOver = Symbol('onDragOver');
const onDragOut = Symbol('onDragOut');
const onMirrorCreated = Symbol('onMirrorCreated');
const onMirrorDestroy = Symbol('onMirrorDestroy');

class Snappable extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.firstSource = null;

    this.mirror = null;
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this[onDragOver] = this[onDragOver].bind(this);
    this[onDragOut] = this[onDragOut].bind(this);
    this[onMirrorCreated] = this[onMirrorCreated].bind(this);
    this[onMirrorDestroy] = this[onMirrorDestroy].bind(this);
  }

  attach() {
    this.draggable.on('drag:start', this[onDragStart]).on('drag:stop', this[onDragStop]).on('drag:over', this[onDragOver]).on('drag:out', this[onDragOut]).on('droppable:over', this[onDragOver]).on('droppable:out', this[onDragOut]).on('mirror:created', this[onMirrorCreated]).on('mirror:destroy', this[onMirrorDestroy]);
  }

  detach() {
    this.draggable.off('drag:start', this[onDragStart]).off('drag:stop', this[onDragStop]).off('drag:over', this[onDragOver]).off('drag:out', this[onDragOut]).off('droppable:over', this[onDragOver]).off('droppable:out', this[onDragOut]).off('mirror:created', this[onMirrorCreated]).off('mirror:destroy', this[onMirrorDestroy]);
  }

  [onDragStart](event) {
    if (event.canceled()) {
      return;
    }
    this.firstSource = event.source;
  }

  [onDragStop]() {
    this.firstSource = null;
  }

  [onDragOver](event) {
    if (event.canceled()) {
      return;
    }
    const source = event.source || event.dragEvent.source;
    if (source === this.firstSource) {
      this.firstSource = null;
      return;
    }
    const snapInEvent = new _SnappableEvent_SnappableEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.SnapInEvent({
      dragEvent: event,
      snappable: event.over || event.droppable
    });
    this.draggable.trigger(snapInEvent);
    if (snapInEvent.canceled()) {
      return;
    }
    if (this.mirror) {
      this.mirror.style.display = 'none';
    }
    source.classList.remove(...this.draggable.getClassNamesFor('source:dragging'));
    source.classList.add(...this.draggable.getClassNamesFor('source:placed'));

    setTimeout(() => {
      source.classList.remove(...this.draggable.getClassNamesFor('source:placed'));
    }, this.draggable.options.placedTimeout);
  }

  [onDragOut](event) {
    if (event.canceled()) {
      return;
    }
    const source = event.source || event.dragEvent.source;
    const snapOutEvent = new _SnappableEvent_SnappableEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.SnapOutEvent({
      dragEvent: event,
      snappable: event.over || event.droppable
    });
    this.draggable.trigger(snapOutEvent);
    if (snapOutEvent.canceled()) {
      return;
    }
    if (this.mirror) {
      this.mirror.style.display = '';
    }
    source.classList.add(...this.draggable.getClassNamesFor('source:dragging'));
  }

  [onMirrorCreated]({
    mirror
  }) {
    this.mirror = mirror;
  }

  [onMirrorDestroy]() {
    this.mirror = null;
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/SnappableEvent/SnappableEvent.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/SnappableEvent/SnappableEvent.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SnapEvent: () => (/* binding */ SnapEvent),
/* harmony export */   SnapInEvent: () => (/* binding */ SnapInEvent),
/* harmony export */   SnapOutEvent: () => (/* binding */ SnapOutEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class SnapEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  get dragEvent() {
    return this.data.dragEvent;
  }

  get snappable() {
    return this.data.snappable;
  }
}

SnapEvent.type = 'snap';
class SnapInEvent extends SnapEvent {}

SnapInEvent.type = 'snap:in';
SnapInEvent.cancelable = true;
class SnapOutEvent extends SnapEvent {}
SnapOutEvent.type = 'snap:out';
SnapOutEvent.cancelable = true;




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/SortAnimation/SortAnimation.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/SortAnimation/SortAnimation.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SortAnimation),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)
/* harmony export */ });
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");


const onSortableSorted = Symbol('onSortableSorted');
const onSortableSort = Symbol('onSortableSort');

const defaultOptions = {
  duration: 150,
  easingFunction: 'ease-in-out'
};

class SortAnimation extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractPlugin {

  constructor(draggable) {
    super(draggable);

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };

    this.lastAnimationFrame = null;
    this.lastElements = [];
    this[onSortableSorted] = this[onSortableSorted].bind(this);
    this[onSortableSort] = this[onSortableSort].bind(this);
  }

  attach() {
    this.draggable.on('sortable:sort', this[onSortableSort]);
    this.draggable.on('sortable:sorted', this[onSortableSorted]);
  }

  detach() {
    this.draggable.off('sortable:sort', this[onSortableSort]);
    this.draggable.off('sortable:sorted', this[onSortableSorted]);
  }

  getOptions() {
    return this.draggable.options.sortAnimation || {};
  }

  [onSortableSort]({
    dragEvent
  }) {
    const {
      sourceContainer
    } = dragEvent;
    const elements = this.draggable.getDraggableElementsForContainer(sourceContainer);
    this.lastElements = Array.from(elements).map(el => {
      return {
        domEl: el,
        offsetTop: el.offsetTop,
        offsetLeft: el.offsetLeft
      };
    });
  }

  [onSortableSorted]({
    oldIndex,
    newIndex
  }) {
    if (oldIndex === newIndex) {
      return;
    }
    const effectedElements = [];
    let start;
    let end;
    let num;
    if (oldIndex > newIndex) {
      start = newIndex;
      end = oldIndex - 1;
      num = 1;
    } else {
      start = oldIndex + 1;
      end = newIndex;
      num = -1;
    }
    for (let i = start; i <= end; i++) {
      const from = this.lastElements[i];
      const to = this.lastElements[i + num];
      effectedElements.push({
        from,
        to
      });
    }
    cancelAnimationFrame(this.lastAnimationFrame);

    this.lastAnimationFrame = requestAnimationFrame(() => {
      effectedElements.forEach(element => animate(element, this.options));
    });
  }
}

function animate({
  from,
  to
}, {
  duration,
  easingFunction
}) {
  const domEl = from.domEl;
  const x = from.offsetLeft - to.offsetLeft;
  const y = from.offsetTop - to.offsetTop;
  domEl.style.pointerEvents = 'none';
  domEl.style.transform = `translate3d(${x}px, ${y}px, 0)`;
  requestAnimationFrame(() => {
    domEl.addEventListener('transitionend', resetElementOnTransitionEnd);
    domEl.style.transition = `transform ${duration}ms ${easingFunction}`;
    domEl.style.transform = '';
  });
}

function resetElementOnTransitionEnd(event) {
  event.target.style.transition = '';
  event.target.style.pointerEvents = '';
  event.target.removeEventListener('transitionend', resetElementOnTransitionEnd);
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/SwapAnimation/SwapAnimation.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/SwapAnimation/SwapAnimation.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ SwapAnimation),
/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)
/* harmony export */ });
/* harmony import */ var _virtual_rollupPluginBabelHelpers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_virtual/_rollupPluginBabelHelpers.mjs */ "./node_modules/@shopify/draggable/build/esm/_virtual/_rollupPluginBabelHelpers.mjs");
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/utils/decorators/AutoBind.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/utils/decorators/AutoBind.mjs");




var _initProto, _class;

const defaultOptions = {
  duration: 150,
  easingFunction: 'ease-in-out',
  horizontal: false
};

class SwapAnimation extends _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__.AbstractPlugin {

  constructor(draggable) {
    _initProto(super(draggable));

    this.options = {
      ...defaultOptions,
      ...this.getOptions()
    };

    this.lastAnimationFrame = null;
  }

  attach() {
    this.draggable.on('sortable:sorted', this.onSortableSorted);
  }

  detach() {
    this.draggable.off('sortable:sorted', this.onSortableSorted);
  }

  getOptions() {
    return this.draggable.options.swapAnimation || {};
  }

  onSortableSorted({
    oldIndex,
    newIndex,
    dragEvent
  }) {
    const {
      source,
      over
    } = dragEvent;
    if (this.lastAnimationFrame) {
      cancelAnimationFrame(this.lastAnimationFrame);
    }

    this.lastAnimationFrame = requestAnimationFrame(() => {
      if (oldIndex >= newIndex) {
        animate(source, over, this.options);
      } else {
        animate(over, source, this.options);
      }
    });
  }
}

_class = SwapAnimation;
[_initProto] = (0,_virtual_rollupPluginBabelHelpers_mjs__WEBPACK_IMPORTED_MODULE_0__.applyDecs2305)(_class, [[_shared_utils_decorators_AutoBind_mjs__WEBPACK_IMPORTED_MODULE_2__.AutoBind, 2, "onSortableSorted"]], [], 0, void 0, _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__.AbstractPlugin).e;
function animate(from, to, {
  duration,
  easingFunction,
  horizontal
}) {
  for (const element of [from, to]) {
    element.style.pointerEvents = 'none';
  }
  if (horizontal) {
    const width = from.offsetWidth;
    from.style.transform = `translate3d(${width}px, 0, 0)`;
    to.style.transform = `translate3d(-${width}px, 0, 0)`;
  } else {
    const height = from.offsetHeight;
    from.style.transform = `translate3d(0, ${height}px, 0)`;
    to.style.transform = `translate3d(0, -${height}px, 0)`;
  }
  requestAnimationFrame(() => {
    for (const element of [from, to]) {
      element.addEventListener('transitionend', resetElementOnTransitionEnd);
      element.style.transition = `transform ${duration}ms ${easingFunction}`;
      element.style.transform = '';
    }
  });
}

function resetElementOnTransitionEnd(event) {
  if (event.target == null || !isHTMLElement(event.target)) {
    return;
  }
  event.target.style.transition = '';
  event.target.style.pointerEvents = '';
  event.target.removeEventListener('transitionend', resetElementOnTransitionEnd);
}
function isHTMLElement(eventTarget) {
  return Boolean('style' in eventTarget);
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Plugins/index.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Plugins/index.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Collidable: () => (/* reexport safe */ _Collidable_Collidable_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   ResizeMirror: () => (/* reexport safe */ _ResizeMirror_ResizeMirror_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   Snappable: () => (/* reexport safe */ _Snappable_Snappable_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   SortAnimation: () => (/* reexport safe */ _SortAnimation_SortAnimation_mjs__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   SwapAnimation: () => (/* reexport safe */ _SwapAnimation_SwapAnimation_mjs__WEBPACK_IMPORTED_MODULE_5__["default"]),
/* harmony export */   defaultResizeMirrorOptions: () => (/* reexport safe */ _ResizeMirror_ResizeMirror_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultOptions),
/* harmony export */   defaultSortAnimationOptions: () => (/* reexport safe */ _SortAnimation_SortAnimation_mjs__WEBPACK_IMPORTED_MODULE_6__.defaultOptions),
/* harmony export */   defaultSwapAnimationOptions: () => (/* reexport safe */ _SwapAnimation_SwapAnimation_mjs__WEBPACK_IMPORTED_MODULE_5__.defaultOptions)
/* harmony export */ });
/* harmony import */ var _Collidable_Collidable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Collidable/Collidable.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/Collidable.mjs");
/* harmony import */ var _Collidable_CollidableEvent_CollidableEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Collidable/CollidableEvent/CollidableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Collidable/CollidableEvent/CollidableEvent.mjs");
/* harmony import */ var _ResizeMirror_ResizeMirror_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResizeMirror/ResizeMirror.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/ResizeMirror/ResizeMirror.mjs");
/* harmony import */ var _Snappable_Snappable_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Snappable/Snappable.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/Snappable.mjs");
/* harmony import */ var _Snappable_SnappableEvent_SnappableEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Snappable/SnappableEvent/SnappableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/Snappable/SnappableEvent/SnappableEvent.mjs");
/* harmony import */ var _SwapAnimation_SwapAnimation_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SwapAnimation/SwapAnimation.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/SwapAnimation/SwapAnimation.mjs");
/* harmony import */ var _SortAnimation_SortAnimation_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SortAnimation/SortAnimation.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/SortAnimation/SortAnimation.mjs");









/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Sortable/Sortable.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Sortable/Sortable.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sortable)
/* harmony export */ });
/* harmony import */ var _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Draggable/Draggable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs");
/* harmony import */ var _Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Draggable/DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");
/* harmony import */ var _Draggable_DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Draggable/DraggableEvent/DraggableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs");
/* harmony import */ var _Draggable_Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Draggable/Plugins/Announcement/Announcement.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs");
/* harmony import */ var _Draggable_Plugins_Mirror_MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Draggable/Sensors/SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Draggable/Sensors/TouchSensor/TouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs");
/* harmony import */ var _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SortableEvent/SortableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Sortable/SortableEvent/SortableEvent.mjs");









const onDragStart = Symbol('onDragStart');
const onDragOverContainer = Symbol('onDragOverContainer');
const onDragOver = Symbol('onDragOver');
const onDragStop = Symbol('onDragStop');

function onSortableSortedDefaultAnnouncement({
  dragEvent
}) {
  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'sortable element';
  if (dragEvent.over) {
    const overText = dragEvent.over.textContent.trim() || dragEvent.over.id || 'sortable element';
    const isFollowing = dragEvent.source.compareDocumentPosition(dragEvent.over) & Node.DOCUMENT_POSITION_FOLLOWING;
    if (isFollowing) {
      return `Placed ${sourceText} after ${overText}`;
    } else {
      return `Placed ${sourceText} before ${overText}`;
    }
  } else {

    return `Placed ${sourceText} into a different container`;
  }
}

const defaultAnnouncements = {
  'sortable:sorted': onSortableSortedDefaultAnnouncement
};

class Sortable extends _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, {
      ...options,
      announcements: {
        ...defaultAnnouncements,
        ...(options.announcements || {})
      }
    });

    this.startIndex = null;

    this.startContainer = null;
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragOverContainer] = this[onDragOverContainer].bind(this);
    this[onDragOver] = this[onDragOver].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this.on('drag:start', this[onDragStart]).on('drag:over:container', this[onDragOverContainer]).on('drag:over', this[onDragOver]).on('drag:stop', this[onDragStop]);
  }

  destroy() {
    super.destroy();
    this.off('drag:start', this[onDragStart]).off('drag:over:container', this[onDragOverContainer]).off('drag:over', this[onDragOver]).off('drag:stop', this[onDragStop]);
  }

  index(element) {
    return this.getSortableElementsForContainer(element.parentNode).indexOf(element);
  }

  getSortableElementsForContainer(container) {
    const allSortableElements = container.querySelectorAll(this.options.draggable);
    return [...allSortableElements].filter(childElement => {
      return childElement !== this.originalSource && childElement !== this.mirror && childElement.parentNode === container;
    });
  }

  [onDragStart](event) {
    this.startContainer = event.source.parentNode;
    this.startIndex = this.index(event.source);
    const sortableStartEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableStartEvent({
      dragEvent: event,
      startIndex: this.startIndex,
      startContainer: this.startContainer
    });
    this.trigger(sortableStartEvent);
    if (sortableStartEvent.canceled()) {
      event.cancel();
    }
  }

  [onDragOverContainer](event) {
    if (event.canceled()) {
      return;
    }
    const {
      source,
      over,
      overContainer
    } = event;
    const oldIndex = this.index(source);
    const sortableSortEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableSortEvent({
      dragEvent: event,
      currentIndex: oldIndex,
      source,
      over
    });
    this.trigger(sortableSortEvent);
    if (sortableSortEvent.canceled()) {
      return;
    }
    const children = this.getSortableElementsForContainer(overContainer);
    const moves = move({
      source,
      over,
      overContainer,
      children
    });
    if (!moves) {
      return;
    }
    const {
      oldContainer,
      newContainer
    } = moves;
    const newIndex = this.index(event.source);
    const sortableSortedEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableSortedEvent({
      dragEvent: event,
      oldIndex,
      newIndex,
      oldContainer,
      newContainer
    });
    this.trigger(sortableSortedEvent);
  }

  [onDragOver](event) {
    if (event.over === event.originalSource || event.over === event.source) {
      return;
    }
    const {
      source,
      over,
      overContainer
    } = event;
    const oldIndex = this.index(source);
    const sortableSortEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableSortEvent({
      dragEvent: event,
      currentIndex: oldIndex,
      source,
      over
    });
    this.trigger(sortableSortEvent);
    if (sortableSortEvent.canceled()) {
      return;
    }
    const children = this.getDraggableElementsForContainer(overContainer);
    const moves = move({
      source,
      over,
      overContainer,
      children
    });
    if (!moves) {
      return;
    }
    const {
      oldContainer,
      newContainer
    } = moves;
    const newIndex = this.index(source);
    const sortableSortedEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableSortedEvent({
      dragEvent: event,
      oldIndex,
      newIndex,
      oldContainer,
      newContainer
    });
    this.trigger(sortableSortedEvent);
  }

  [onDragStop](event) {
    const sortableStopEvent = new _SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SortableStopEvent({
      dragEvent: event,
      oldIndex: this.startIndex,
      newIndex: this.index(event.source),
      oldContainer: this.startContainer,
      newContainer: event.source.parentNode
    });
    this.trigger(sortableStopEvent);
    this.startIndex = null;
    this.startContainer = null;
  }
}
function index(element) {
  return Array.prototype.indexOf.call(element.parentNode.children, element);
}
function move({
  source,
  over,
  overContainer,
  children
}) {
  const emptyOverContainer = !children.length;
  const differentContainer = source.parentNode !== overContainer;
  const sameContainer = over && source.parentNode === over.parentNode;
  if (emptyOverContainer) {
    return moveInsideEmptyContainer(source, overContainer);
  } else if (sameContainer) {
    return moveWithinContainer(source, over);
  } else if (differentContainer) {
    return moveOutsideContainer(source, over, overContainer);
  } else {
    return null;
  }
}
function moveInsideEmptyContainer(source, overContainer) {
  const oldContainer = source.parentNode;
  overContainer.appendChild(source);
  return {
    oldContainer,
    newContainer: overContainer
  };
}
function moveWithinContainer(source, over) {
  const oldIndex = index(source);
  const newIndex = index(over);
  if (oldIndex < newIndex) {
    source.parentNode.insertBefore(source, over.nextElementSibling);
  } else {
    source.parentNode.insertBefore(source, over);
  }
  return {
    oldContainer: source.parentNode,
    newContainer: source.parentNode
  };
}
function moveOutsideContainer(source, over, overContainer) {
  const oldContainer = source.parentNode;
  if (over) {
    over.parentNode.insertBefore(source, over);
  } else {

    overContainer.appendChild(source);
  }
  return {
    oldContainer,
    newContainer: source.parentNode
  };
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Sortable/SortableEvent/SortableEvent.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Sortable/SortableEvent/SortableEvent.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SortableEvent: () => (/* binding */ SortableEvent),
/* harmony export */   SortableSortEvent: () => (/* binding */ SortableSortEvent),
/* harmony export */   SortableSortedEvent: () => (/* binding */ SortableSortedEvent),
/* harmony export */   SortableStartEvent: () => (/* binding */ SortableStartEvent),
/* harmony export */   SortableStopEvent: () => (/* binding */ SortableStopEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class SortableEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get dragEvent() {
    return this.data.dragEvent;
  }
}
SortableEvent.type = 'sortable';

class SortableStartEvent extends SortableEvent {

  get startIndex() {
    return this.data.startIndex;
  }

  get startContainer() {
    return this.data.startContainer;
  }
}
SortableStartEvent.type = 'sortable:start';
SortableStartEvent.cancelable = true;

class SortableSortEvent extends SortableEvent {

  get currentIndex() {
    return this.data.currentIndex;
  }

  get over() {
    return this.data.over;
  }

  get overContainer() {
    return this.data.dragEvent.overContainer;
  }
}
SortableSortEvent.type = 'sortable:sort';
SortableSortEvent.cancelable = true;

class SortableSortedEvent extends SortableEvent {

  get oldIndex() {
    return this.data.oldIndex;
  }

  get newIndex() {
    return this.data.newIndex;
  }

  get oldContainer() {
    return this.data.oldContainer;
  }

  get newContainer() {
    return this.data.newContainer;
  }
}
SortableSortedEvent.type = 'sortable:sorted';

class SortableStopEvent extends SortableEvent {

  get oldIndex() {
    return this.data.oldIndex;
  }

  get newIndex() {
    return this.data.newIndex;
  }

  get oldContainer() {
    return this.data.oldContainer;
  }

  get newContainer() {
    return this.data.newContainer;
  }
}
SortableStopEvent.type = 'sortable:stop';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Swappable/Swappable.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Swappable/Swappable.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Swappable)
/* harmony export */ });
/* harmony import */ var _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Draggable/Draggable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs");
/* harmony import */ var _Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Draggable/DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");
/* harmony import */ var _Draggable_DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Draggable/DraggableEvent/DraggableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs");
/* harmony import */ var _Draggable_Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Draggable/Plugins/Announcement/Announcement.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs");
/* harmony import */ var _Draggable_Plugins_Mirror_MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_SensorEvent_SensorEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Draggable/Sensors/SensorEvent/SensorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/SensorEvent/SensorEvent.mjs");
/* harmony import */ var _Draggable_Sensors_TouchSensor_TouchSensor_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Draggable/Sensors/TouchSensor/TouchSensor.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/TouchSensor/TouchSensor.mjs");
/* harmony import */ var _SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./SwappableEvent/SwappableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Swappable/SwappableEvent/SwappableEvent.mjs");









const onDragStart = Symbol('onDragStart');
const onDragOver = Symbol('onDragOver');
const onDragStop = Symbol('onDragStop');

function onSwappableSwappedDefaultAnnouncement({
  dragEvent,
  swappedElement
}) {
  const sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'swappable element';
  const overText = swappedElement.textContent.trim() || swappedElement.id || 'swappable element';
  return `Swapped ${sourceText} with ${overText}`;
}

const defaultAnnouncements = {
  'swappabled:swapped': onSwappableSwappedDefaultAnnouncement
};

class Swappable extends _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {

  constructor(containers = [], options = {}) {
    super(containers, {
      ...options,
      announcements: {
        ...defaultAnnouncements,
        ...(options.announcements || {})
      }
    });

    this.lastOver = null;
    this[onDragStart] = this[onDragStart].bind(this);
    this[onDragOver] = this[onDragOver].bind(this);
    this[onDragStop] = this[onDragStop].bind(this);
    this.on('drag:start', this[onDragStart]).on('drag:over', this[onDragOver]).on('drag:stop', this[onDragStop]);
  }

  destroy() {
    super.destroy();
    this.off('drag:start', this._onDragStart).off('drag:over', this._onDragOver).off('drag:stop', this._onDragStop);
  }

  [onDragStart](event) {
    const swappableStartEvent = new _SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SwappableStartEvent({
      dragEvent: event
    });
    this.trigger(swappableStartEvent);
    if (swappableStartEvent.canceled()) {
      event.cancel();
    }
  }

  [onDragOver](event) {
    if (event.over === event.originalSource || event.over === event.source || event.canceled()) {
      return;
    }
    const swappableSwapEvent = new _SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SwappableSwapEvent({
      dragEvent: event,
      over: event.over,
      overContainer: event.overContainer
    });
    this.trigger(swappableSwapEvent);
    if (swappableSwapEvent.canceled()) {
      return;
    }

    if (this.lastOver && this.lastOver !== event.over) {
      swap(this.lastOver, event.source);
    }
    if (this.lastOver === event.over) {
      this.lastOver = null;
    } else {
      this.lastOver = event.over;
    }
    swap(event.source, event.over);
    const swappableSwappedEvent = new _SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SwappableSwappedEvent({
      dragEvent: event,
      swappedElement: event.over
    });
    this.trigger(swappableSwappedEvent);
  }

  [onDragStop](event) {
    const swappableStopEvent = new _SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.SwappableStopEvent({
      dragEvent: event
    });
    this.trigger(swappableStopEvent);
    this.lastOver = null;
  }
}
function withTempElement(callback) {
  const tmpElement = document.createElement('div');
  callback(tmpElement);
  tmpElement.remove();
}
function swap(source, over) {
  const overParent = over.parentNode;
  const sourceParent = source.parentNode;
  withTempElement(tmpElement => {
    sourceParent.insertBefore(tmpElement, source);
    overParent.insertBefore(source, over);
    sourceParent.insertBefore(over, tmpElement);
  });
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/Swappable/SwappableEvent/SwappableEvent.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/Swappable/SwappableEvent/SwappableEvent.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SwappableEvent: () => (/* binding */ SwappableEvent),
/* harmony export */   SwappableStartEvent: () => (/* binding */ SwappableStartEvent),
/* harmony export */   SwappableStopEvent: () => (/* binding */ SwappableStopEvent),
/* harmony export */   SwappableSwapEvent: () => (/* binding */ SwappableSwapEvent),
/* harmony export */   SwappableSwappedEvent: () => (/* binding */ SwappableSwappedEvent)
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");


class SwappableEvent extends _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent {

  constructor(data) {
    super(data);
    this.data = data;
  }

  get dragEvent() {
    return this.data.dragEvent;
  }
}

SwappableEvent.type = 'swappable';
class SwappableStartEvent extends SwappableEvent {}
SwappableStartEvent.type = 'swappable:start';
SwappableStartEvent.cancelable = true;

class SwappableSwapEvent extends SwappableEvent {

  get over() {
    return this.data.over;
  }

  get overContainer() {
    return this.data.overContainer;
  }
}
SwappableSwapEvent.type = 'swappable:swap';
SwappableSwapEvent.cancelable = true;

class SwappableSwappedEvent extends SwappableEvent {

  get swappedElement() {
    return this.data.swappedElement;
  }
}

SwappableSwappedEvent.type = 'swappable:swapped';
class SwappableStopEvent extends SwappableEvent {}
SwappableStopEvent.type = 'swappable:stop';




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/_virtual/_rollupPluginBabelHelpers.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/_virtual/_rollupPluginBabelHelpers.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyDecs2305: () => (/* binding */ _applyDecs2305),
/* harmony export */   checkInRHS: () => (/* binding */ _checkInRHS)
/* harmony export */ });
function createAddInitializerMethod(e, t) {
  return function (r) {
    assertNotFinished(t, "addInitializer"), assertCallable(r, "An initializer"), e.push(r);
  };
}
function assertInstanceIfPrivate(e, t) {
  if (!e(t)) throw new TypeError("Attempted to access private element on non-instance");
}
function memberDec(e, t, r, a, n, i, s, o, c, l, u) {
  var f;
  switch (i) {
    case 1:
      f = "accessor";
      break;
    case 2:
      f = "method";
      break;
    case 3:
      f = "getter";
      break;
    case 4:
      f = "setter";
      break;
    default:
      f = "field";
  }
  var d,
    p,
    h = {
      kind: f,
      name: o ? "#" + r : r,
      static: s,
      private: o,
      metadata: u
    },
    v = {
      v: !1
    };
  if (0 !== i && (h.addInitializer = createAddInitializerMethod(n, v)), o || 0 !== i && 2 !== i) {
    if (2 === i) d = function (e) {
      return assertInstanceIfPrivate(l, e), a.value;
    };else {
      var y = 0 === i || 1 === i;
      (y || 3 === i) && (d = o ? function (e) {
        return assertInstanceIfPrivate(l, e), a.get.call(e);
      } : function (e) {
        return a.get.call(e);
      }), (y || 4 === i) && (p = o ? function (e, t) {
        assertInstanceIfPrivate(l, e), a.set.call(e, t);
      } : function (e, t) {
        a.set.call(e, t);
      });
    }
  } else d = function (e) {
    return e[r];
  }, 0 === i && (p = function (e, t) {
    e[r] = t;
  });
  var m = o ? l.bind() : function (e) {
    return r in e;
  };
  h.access = d && p ? {
    get: d,
    set: p,
    has: m
  } : d ? {
    get: d,
    has: m
  } : {
    set: p,
    has: m
  };
  try {
    return e.call(t, c, h);
  } finally {
    v.v = !0;
  }
}
function assertNotFinished(e, t) {
  if (e.v) throw new Error("attempted to call " + t + " after decoration was finished");
}
function assertCallable(e, t) {
  if ("function" != typeof e) throw new TypeError(t + " must be a function");
}
function assertValidReturnValue(e, t) {
  var r = typeof t;
  if (1 === e) {
    if ("object" !== r || null === t) throw new TypeError("accessor decorators must return an object with get, set, or init properties or void 0");
    void 0 !== t.get && assertCallable(t.get, "accessor.get"), void 0 !== t.set && assertCallable(t.set, "accessor.set"), void 0 !== t.init && assertCallable(t.init, "accessor.init");
  } else if ("function" !== r) {
    var a;
    throw a = 0 === e ? "field" : 5 === e ? "class" : "method", new TypeError(a + " decorators must return a function or void 0");
  }
}
function curryThis1(e) {
  return function () {
    return e(this);
  };
}
function curryThis2(e) {
  return function (t) {
    e(this, t);
  };
}
function applyMemberDec(e, t, r, a, n, i, s, o, c, l, u) {
  var f,
    d,
    p,
    h,
    v,
    y,
    m = r[0];
  a || Array.isArray(m) || (m = [m]), o ? f = 0 === i || 1 === i ? {
    get: curryThis1(r[3]),
    set: curryThis2(r[4])
  } : 3 === i ? {
    get: r[3]
  } : 4 === i ? {
    set: r[3]
  } : {
    value: r[3]
  } : 0 !== i && (f = Object.getOwnPropertyDescriptor(t, n)), 1 === i ? p = {
    get: f.get,
    set: f.set
  } : 2 === i ? p = f.value : 3 === i ? p = f.get : 4 === i && (p = f.set);
  for (var g = a ? 2 : 1, b = m.length - 1; b >= 0; b -= g) {
    var I;
    if (void 0 !== (h = memberDec(m[b], a ? m[b - 1] : void 0, n, f, c, i, s, o, p, l, u))) assertValidReturnValue(i, h), 0 === i ? I = h : 1 === i ? (I = h.init, v = h.get || p.get, y = h.set || p.set, p = {
      get: v,
      set: y
    }) : p = h, void 0 !== I && (void 0 === d ? d = I : "function" == typeof d ? d = [d, I] : d.push(I));
  }
  if (0 === i || 1 === i) {
    if (void 0 === d) d = function (e, t) {
      return t;
    };else if ("function" != typeof d) {
      var w = d;
      d = function (e, t) {
        for (var r = t, a = w.length - 1; a >= 0; a--) r = w[a].call(e, r);
        return r;
      };
    } else {
      var M = d;
      d = function (e, t) {
        return M.call(e, t);
      };
    }
    e.push(d);
  }
  0 !== i && (1 === i ? (f.get = p.get, f.set = p.set) : 2 === i ? f.value = p : 3 === i ? f.get = p : 4 === i && (f.set = p), o ? 1 === i ? (e.push(function (e, t) {
    return p.get.call(e, t);
  }), e.push(function (e, t) {
    return p.set.call(e, t);
  })) : 2 === i ? e.push(p) : e.push(function (e, t) {
    return p.call(e, t);
  }) : Object.defineProperty(t, n, f));
}
function applyMemberDecs(e, t, r, a) {
  for (var n, i, s, o = [], c = new Map(), l = new Map(), u = 0; u < t.length; u++) {
    var f = t[u];
    if (Array.isArray(f)) {
      var d,
        p,
        h = f[1],
        v = f[2],
        y = f.length > 3,
        m = 16 & h,
        g = !!(8 & h),
        b = r;
      if (h &= 7, g ? (d = e, 0 !== h && (p = i = i || []), y && !s && (s = function (t) {
        return _checkInRHS(t) === e;
      }), b = s) : (d = e.prototype, 0 !== h && (p = n = n || [])), 0 !== h && !y) {
        var I = g ? l : c,
          w = I.get(v) || 0;
        if (!0 === w || 3 === w && 4 !== h || 4 === w && 3 !== h) throw new Error("Attempted to decorate a public method/accessor that has the same name as a previously decorated public method/accessor. This is not currently supported by the decorators plugin. Property name was: " + v);
        I.set(v, !(!w && h > 2) || h);
      }
      applyMemberDec(o, d, f, m, v, h, g, y, p, b, a);
    }
  }
  return pushInitializers(o, n), pushInitializers(o, i), o;
}
function pushInitializers(e, t) {
  t && e.push(function (e) {
    for (var r = 0; r < t.length; r++) t[r].call(e);
    return e;
  });
}
function applyClassDecs(e, t, r, a) {
  if (t.length) {
    for (var n = [], i = e, s = e.name, o = r ? 2 : 1, c = t.length - 1; c >= 0; c -= o) {
      var l = {
        v: !1
      };
      try {
        var u = t[c].call(r ? t[c - 1] : void 0, i, {
          kind: "class",
          name: s,
          addInitializer: createAddInitializerMethod(n, l),
          metadata: a
        });
      } finally {
        l.v = !0;
      }
      void 0 !== u && (assertValidReturnValue(5, u), i = u);
    }
    return [defineMetadata(i, a), function () {
      for (var e = 0; e < n.length; e++) n[e].call(i);
    }];
  }
}
function defineMetadata(e, t) {
  return Object.defineProperty(e, Symbol.metadata || Symbol.for("Symbol.metadata"), {
    configurable: !0,
    enumerable: !0,
    value: t
  });
}
function _applyDecs2305(e, t, r, a, n, i) {
  if (arguments.length >= 6) var s = i[Symbol.metadata || Symbol.for("Symbol.metadata")];
  var o = Object.create(void 0 === s ? null : s),
    c = applyMemberDecs(e, t, n, o);
  return r.length || defineMetadata(e, o), {
    e: c,
    get c() {
      return applyClassDecs(e, r, a, o);
    }
  };
}
function _checkInRHS(e) {
  if (Object(e) !== e) throw TypeError("right-hand side of 'in' should be an object, got " + (null !== e ? typeof e : "null"));
  return e;
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BaseEvent: () => (/* reexport safe */ _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractEvent),
/* harmony export */   BasePlugin: () => (/* reexport safe */ _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__.AbstractPlugin),
/* harmony export */   Draggable: () => (/* reexport safe */ _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   Droppable: () => (/* reexport safe */ _Droppable_Droppable_mjs__WEBPACK_IMPORTED_MODULE_9__["default"]),
/* harmony export */   Plugins: () => (/* reexport module object */ _Plugins_index_mjs__WEBPACK_IMPORTED_MODULE_3__),
/* harmony export */   Sensors: () => (/* reexport module object */ _Draggable_Sensors_index_mjs__WEBPACK_IMPORTED_MODULE_2__),
/* harmony export */   Sortable: () => (/* reexport safe */ _Sortable_Sortable_mjs__WEBPACK_IMPORTED_MODULE_13__["default"]),
/* harmony export */   Swappable: () => (/* reexport safe */ _Swappable_Swappable_mjs__WEBPACK_IMPORTED_MODULE_11__["default"])
/* harmony export */ });
/* harmony import */ var _shared_AbstractEvent_AbstractEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/AbstractEvent/AbstractEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs");
/* harmony import */ var _shared_AbstractPlugin_AbstractPlugin_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/AbstractPlugin/AbstractPlugin.mjs */ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs");
/* harmony import */ var _Draggable_Sensors_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Draggable/Sensors/index.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Sensors/index.mjs");
/* harmony import */ var _Plugins_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Plugins/index.mjs */ "./node_modules/@shopify/draggable/build/esm/Plugins/index.mjs");
/* harmony import */ var _Draggable_Draggable_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Draggable/Draggable.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Draggable.mjs");
/* harmony import */ var _Draggable_DragEvent_DragEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Draggable/DragEvent/DragEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DragEvent/DragEvent.mjs");
/* harmony import */ var _Draggable_DraggableEvent_DraggableEvent_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Draggable/DraggableEvent/DraggableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/DraggableEvent/DraggableEvent.mjs");
/* harmony import */ var _Draggable_Plugins_Announcement_Announcement_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Draggable/Plugins/Announcement/Announcement.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Announcement/Announcement.mjs");
/* harmony import */ var _Draggable_Plugins_Mirror_MirrorEvent_MirrorEvent_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Draggable/Plugins/Mirror/MirrorEvent/MirrorEvent.mjs");
/* harmony import */ var _Droppable_Droppable_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Droppable/Droppable.mjs */ "./node_modules/@shopify/draggable/build/esm/Droppable/Droppable.mjs");
/* harmony import */ var _Droppable_DroppableEvent_DroppableEvent_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Droppable/DroppableEvent/DroppableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Droppable/DroppableEvent/DroppableEvent.mjs");
/* harmony import */ var _Swappable_Swappable_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Swappable/Swappable.mjs */ "./node_modules/@shopify/draggable/build/esm/Swappable/Swappable.mjs");
/* harmony import */ var _Swappable_SwappableEvent_SwappableEvent_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Swappable/SwappableEvent/SwappableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Swappable/SwappableEvent/SwappableEvent.mjs");
/* harmony import */ var _Sortable_Sortable_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Sortable/Sortable.mjs */ "./node_modules/@shopify/draggable/build/esm/Sortable/Sortable.mjs");
/* harmony import */ var _Sortable_SortableEvent_SortableEvent_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Sortable/SortableEvent/SortableEvent.mjs */ "./node_modules/@shopify/draggable/build/esm/Sortable/SortableEvent/SortableEvent.mjs");



















/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/AbstractEvent/AbstractEvent.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractEvent: () => (/* binding */ AbstractEvent)
/* harmony export */ });
class AbstractEvent {

  constructor(data) {

    this._canceled = false;
    this.data = data;
  }

  get type() {
    return this.constructor.type;
  }

  get cancelable() {
    return this.constructor.cancelable;
  }

  cancel() {
    this._canceled = true;
  }

  canceled() {
    return this._canceled;
  }

  clone(data) {
    return new this.constructor({
      ...this.data,
      ...data
    });
  }
}

AbstractEvent.type = 'event';

AbstractEvent.cancelable = false;




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/AbstractPlugin/AbstractPlugin.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AbstractPlugin: () => (/* binding */ AbstractPlugin)
/* harmony export */ });
class AbstractPlugin {

  constructor(draggable) {
    this.draggable = draggable;
  }

  attach() {
    throw new Error('Not Implemented');
  }

  detach() {
    throw new Error('Not Implemented');
  }
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/utils/closest/closest.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ closest)
/* harmony export */ });
function closest(node, value) {
  if (node == null) {
    return null;
  }
  function conditionFn(currentNode) {
    if (currentNode == null || value == null) {
      return false;
    } else if (isSelector(value)) {
      return Element.prototype.matches.call(currentNode, value);
    } else if (isNodeList(value)) {
      return [...value].includes(currentNode);
    } else if (isElement(value)) {
      return value === currentNode;
    } else if (isFunction(value)) {
      return value(currentNode);
    } else {
      return false;
    }
  }
  let current = node;
  do {
    current = current.correspondingUseElement || current.correspondingElement || current;
    if (conditionFn(current)) {
      return current;
    }
    current = current?.parentNode || null;
  } while (current != null && current !== document.body && current !== document);
  return null;
}
function isSelector(value) {
  return Boolean(typeof value === 'string');
}
function isNodeList(value) {
  return Boolean(value instanceof NodeList || value instanceof Array);
}
function isElement(value) {
  return Boolean(value instanceof Node);
}
function isFunction(value) {
  return Boolean(typeof value === 'function');
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/utils/decorators/AutoBind.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/utils/decorators/AutoBind.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AutoBind: () => (/* binding */ AutoBind)
/* harmony export */ });
function AutoBind(originalMethod, {
  name,
  addInitializer
}) {
  addInitializer(function () {

    this[name] = originalMethod.bind(this);

  });
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/utils/distance/distance.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/utils/distance/distance.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ distance)
/* harmony export */ });
function distance(x1, y1, x2, y2) {
  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/utils/requestNextAnimationFrame/requestNextAnimationFrame.mjs":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/utils/requestNextAnimationFrame/requestNextAnimationFrame.mjs ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ requestNextAnimationFrame)
/* harmony export */ });
function requestNextAnimationFrame(callback) {
  return requestAnimationFrame(() => {
    requestAnimationFrame(callback);
  });
}




/***/ }),

/***/ "./node_modules/@shopify/draggable/build/esm/shared/utils/touchCoords/touchCoords.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@shopify/draggable/build/esm/shared/utils/touchCoords/touchCoords.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ touchCoords)
/* harmony export */ });
function touchCoords(event) {
  const {
    touches,
    changedTouches
  } = event;
  return touches && touches[0] || changedTouches && changedTouches[0];
}




/***/ }),

/***/ "./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),
/* harmony export */   __assign: () => (/* binding */ __assign),
/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),
/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),
/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),
/* harmony export */   __await: () => (/* binding */ __await),
/* harmony export */   __awaiter: () => (/* binding */ __awaiter),
/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),
/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),
/* harmony export */   __createBinding: () => (/* binding */ __createBinding),
/* harmony export */   __decorate: () => (/* binding */ __decorate),
/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),
/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),
/* harmony export */   __exportStar: () => (/* binding */ __exportStar),
/* harmony export */   __extends: () => (/* binding */ __extends),
/* harmony export */   __generator: () => (/* binding */ __generator),
/* harmony export */   __importDefault: () => (/* binding */ __importDefault),
/* harmony export */   __importStar: () => (/* binding */ __importStar),
/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),
/* harmony export */   __metadata: () => (/* binding */ __metadata),
/* harmony export */   __param: () => (/* binding */ __param),
/* harmony export */   __propKey: () => (/* binding */ __propKey),
/* harmony export */   __read: () => (/* binding */ __read),
/* harmony export */   __rest: () => (/* binding */ __rest),
/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),
/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),
/* harmony export */   __spread: () => (/* binding */ __spread),
/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),
/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),
/* harmony export */   __values: () => (/* binding */ __values),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */

var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf ||
      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
  return extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() { this.constructor = d; }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
  __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
  }
  return __assign.apply(this, arguments);
}

function __rest(s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
              t[p[i]] = s[p[i]];
      }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) { decorator(target, key, paramIndex); }
}

function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
  function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
  var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
  var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
  var _, done = false;
  for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
      var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
      if (kind === "accessor") {
          if (result === void 0) continue;
          if (result === null || typeof result !== "object") throw new TypeError("Object expected");
          if (_ = accept(result.get)) descriptor.get = _;
          if (_ = accept(result.set)) descriptor.set = _;
          if (_ = accept(result.init)) initializers.unshift(_);
      }
      else if (_ = accept(result)) {
          if (kind === "field") initializers.unshift(_);
          else descriptor[key] = _;
      }
  }
  if (target) Object.defineProperty(target, contextIn.name, descriptor);
  done = true;
};

function __runInitializers(thisArg, initializers, value) {
  var useValue = arguments.length > 2;
  for (var i = 0; i < initializers.length; i++) {
      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
  }
  return useValue ? value : void 0;
};

function __propKey(x) {
  return typeof x === "symbol" ? x : "".concat(x);
};

function __setFunctionName(f, name, prefix) {
  if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
  return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
};

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
  return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
      function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
  function verb(n) { return function (v) { return step([n, v]); }; }
  function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
          if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
          if (y = 0, t) op = [op[0] & 2, t.value];
          switch (op[0]) {
              case 0: case 1: t = op; break;
              case 4: _.label++; return { value: op[1], done: false };
              case 5: _.label++; y = op[1]; op = [0]; continue;
              case 7: op = _.ops.pop(); _.trys.pop(); continue;
              default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                  if (t[2]) _.ops.pop();
                  _.trys.pop(); continue;
          }
          op = body.call(thisArg, _);
      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
  }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  var desc = Object.getOwnPropertyDescriptor(m, k);
  if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
  }
  Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

function __exportStar(m, o) {
  for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
      next: function () {
          if (o && i >= o.length) o = void 0;
          return { value: o && o[i++], done: !o };
      }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o), r, ar = [], e;
  try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  }
  catch (error) { e = { error: error }; }
  finally {
      try {
          if (r && !r.done && (m = i["return"])) m.call(i);
      }
      finally { if (e) throw e.error; }
  }
  return ar;
}

/** @deprecated */
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
      ar = ar.concat(__read(arguments[i]));
  return ar;
}

/** @deprecated */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
          r[k] = a[j];
  return r;
}

function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
      }
  }
  return to.concat(ar || Array.prototype.slice.call(from));
}

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
  function fulfill(value) { resume("next", value); }
  function reject(value) { resume("throw", value); }
  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
  return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
  Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  __setModuleDefault(result, mod);
  return result;
}

function __importDefault(mod) {
  return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}

function __classPrivateFieldIn(state, receiver) {
  if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
  return typeof state === "function" ? receiver === state : state.has(receiver);
}

function __addDisposableResource(env, value, async) {
  if (value !== null && value !== void 0) {
    if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
    var dispose;
    if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value[Symbol.asyncDispose];
    }
    if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value[Symbol.dispose];
    }
    if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
    env.stack.push({ value: value, dispose: dispose, async: async });
  }
  else if (async) {
    env.stack.push({ async: true });
  }
  return value;
}

var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

function __disposeResources(env) {
  function fail(e) {
    env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
    env.hasError = true;
  }
  function next() {
    while (env.stack.length) {
      var rec = env.stack.pop();
      try {
        var result = rec.dispose && rec.dispose.call(rec.value);
        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });
      }
      catch (e) {
          fail(e);
      }
    }
    if (env.hasError) throw env.error;
  }
  return next();
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __createBinding,
  __exportStar,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn,
  __addDisposableResource,
  __disposeResources,
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!***********************!*\
  !*** ./assets/app.js ***!
  \***********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _css_app_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/app.scss */ "./assets/css/app.scss");
/* harmony import */ var _symfony_ux_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @symfony/ux-react */ "./node_modules/@symfony/ux-react/dist/register_controller.js");
/* harmony import */ var _bootstrap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bootstrap.js */ "./assets/bootstrap.js");
/* harmony import */ var _js_components_Sidebar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/components/Sidebar.js */ "./assets/js/components/Sidebar.js");
/* harmony import */ var _js_components_FlashMessages_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/components/FlashMessages.ts */ "./assets/js/components/FlashMessages.ts");
/* harmony import */ var _canopee_app_assets_js_components_Tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @canopee_app/assets/js/components/Tooltip */ "./assets/js/components/Tooltip.ts");






window.addEventListener('DOMContentLoaded', function () {
  new _js_components_Sidebar_js__WEBPACK_IMPORTED_MODULE_3__["default"]();
  _js_components_FlashMessages_ts__WEBPACK_IMPORTED_MODULE_4__.FlashMessages.register();
  _canopee_app_assets_js_components_Tooltip__WEBPACK_IMPORTED_MODULE_5__["default"].register();
});
(0,_symfony_ux_react__WEBPACK_IMPORTED_MODULE_1__.registerReactControllerComponents)(__webpack_require__("./assets/react/controllers sync recursive \\.(j%7Ct)sx?$"));
(0,_symfony_ux_react__WEBPACK_IMPORTED_MODULE_1__.registerReactControllerComponents)();
})();

/******/ })()
;